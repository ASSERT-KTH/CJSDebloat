23
./VariantsSubtree/fastify/variant23/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=27.978ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.22ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.087ms
        
    ok 1 - default 404 # time=143.11ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=9.585ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.31ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=3.753ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.756ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.115ms
        
    ok 2 - customized 404 # time=45.673ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=10.146ms
        
    ok 3 - custom header in notFound handler # time=30.051ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.097ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=29.269ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=7.698ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=9.816ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=37.359ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=98.989ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=30.379ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.589ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.508ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.705ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.652ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.28ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.401ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.344ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.337ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.959ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.181ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.241ms
        
    ok 5 - encapsulated 404 # time=116.043ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/404s.test.js:548:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: custom 404 hook and handler context
          at:
            line: 548
            column: 1
            file: test/404s.test.js
            function: Object.<anonymous>
          source: |
          
            test('custom 404 hook and handler context', t => {
            ^
              t.plan(21)
          ...
        
        # test count(1) != plan(21)
        # failed 1 test
    not ok 6 - custom 404 hook and handler context # time=100.073ms
    
    not ok 7 - child test left in queue: t.test encapsulated custom 404 without - prefix hook and handler context
    not ok 8 - child test left in queue: t.test run hooks on default 404
    not ok 9 - child test left in queue: t.test run non-encapsulated plugin hooks on default 404
    not ok 10 - child test left in queue: t.test run non-encapsulated plugin hooks on custom 404
    not ok 11 - child test left in queue: t.test run hook with encapsulated 404
    not ok 12 - child test left in queue: t.test run hook with encapsulated 404 and framework-unsupported method
    not ok 13 - child test left in queue: t.test hooks check 404
    not ok 14 - child test left in queue: t.test setNotFoundHandler should not suppress duplicated routes checking
    not ok 15 - child test left in queue: t.test log debug for 404
    not ok 16 - child test left in queue: t.test Unknown method
    not ok 17 - child test left in queue: t.test recognizes errors from the http-errors module
    not ok 18 - child test left in queue: t.test the default 404 handler can be invoked inside a prefixed plugin
    not ok 19 - child test left in queue: t.test an inherited custom 404 handler can be invoked inside a prefixed plugin
    not ok 20 - child test left in queue: t.test encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
    not ok 21 - child test left in queue: t.test cannot set notFoundHandler after binding
    not ok 22 - child test left in queue: t.test 404 inside onSend
    not ok 23 - child test left in queue: t.test onSend hooks run when an encapsulated route invokes the notFound handler
    not ok 24 - child test left in queue: t.test preHandler option for setNotFoundHandler
    not ok 25 - child test left in queue: t.test reply.notFound invoked the notFound handler
    not ok 26 - child test left in queue: t.test The custom error handler should be invoked after the custom not found handler
    not ok 27 - child test left in queue: t.test If the custom not found handler does not use an Error, the custom error handler should not be called
    not ok 28 - child test left in queue: t.test preValidation option
    not ok 29 - child test left in queue: t.test preValidation option could accept an array of functions
    not ok 30 - child test left in queue: t.test Should fail to invoke callNotFound inside a 404 handler
    not ok 31 - child test left in queue: t.test 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
    not ok 32 - child test left in queue: t.test setNotFoundHandler should be chaining fastify instance
    not ok 33 - child test left in queue: t.test Send 404 when frameworkError calls reply.callNotFound
    1..6
    # test count(33) != plan(6)
    # failed 55 of 33 tests
    # time=550.294ms
not ok 1 - test/404s.test.js # time=550.294ms
  ---
  env: {}
  file: test/404s.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/404s.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 7
      name: "child test left in queue: t.test encapsulated custom 404 without - prefix
        hook and handler context"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a2
      id: 8
      name: "child test left in queue: t.test run hooks on default 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a3
      id: 9
      name: "child test left in queue: t.test run non-encapsulated plugin hooks on
        default 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a4
      id: 10
      name: "child test left in queue: t.test run non-encapsulated plugin hooks on
        custom 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a5
      id: 11
      name: "child test left in queue: t.test run hook with encapsulated 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a6
      id: 12
      name: "child test left in queue: t.test run hook with encapsulated 404 and
        framework-unsupported method"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a7
      id: 13
      name: "child test left in queue: t.test hooks check 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a8
      id: 14
      name: "child test left in queue: t.test setNotFoundHandler should not suppress
        duplicated routes checking"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a9
      id: 15
      name: "child test left in queue: t.test log debug for 404"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a10
      id: 16
      name: "child test left in queue: t.test Unknown method"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a11
      id: 17
      name: "child test left in queue: t.test recognizes errors from the http-errors
        module"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a12
      id: 18
      name: "child test left in queue: t.test the default 404 handler can be invoked
        inside a prefixed plugin"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a13
      id: 19
      name: "child test left in queue: t.test an inherited custom 404 handler can be
        invoked inside a prefixed plugin"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a14
      id: 20
      name: "child test left in queue: t.test encapsulated custom 404 handler without
        a prefix is the handler for the entire 404 level"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a15
      id: 21
      name: "child test left in queue: t.test cannot set notFoundHandler after binding"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a16
      id: 22
      name: "child test left in queue: t.test 404 inside onSend"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a17
      id: 23
      name: "child test left in queue: t.test onSend hooks run when an encapsulated
        route invokes the notFound handler"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a18
      id: 24
      name: "child test left in queue: t.test preHandler option for setNotFoundHandler"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a19
      id: 25
      name: "child test left in queue: t.test reply.notFound invoked the notFound
        handler"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a20
      id: 26
      name: "child test left in queue: t.test The custom error handler should be
        invoked after the custom not found handler"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a21
      id: 27
      name: "child test left in queue: t.test If the custom not found handler does not
        use an Error, the custom error handler should not be called"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a22
      id: 28
      name: "child test left in queue: t.test preValidation option"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a23
      id: 29
      name: "child test left in queue: t.test preValidation option could accept an
        array of functions"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a24
      id: 30
      name: "child test left in queue: t.test Should fail to invoke callNotFound
        inside a 404 handler"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a25
      id: 31
      name: "child test left in queue: t.test 400 in case of bad url (pre find-my-way
        v2.2.0 was a 404)"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a26
      id: 32
      name: "child test left in queue: t.test setNotFoundHandler should be chaining
        fastify instance"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - &a27
      id: 33
      name: "child test left in queue: t.test Send 404 when frameworkError calls
        reply.callNotFound"
      fullname: test/404s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 6
    - *a1
    - *a2
    - *a3
    - *a4
    - *a5
    - *a6
    - *a7
    - *a8
    - *a9
    - *a10
    - *a11
    - *a12
    - *a13
    - *a14
    - *a15
    - *a16
    - *a17
    - *a18
    - *a19
    - *a20
    - *a21
    - *a22
    - *a23
    - *a24
    - *a25
    - *a26
    - *a27
  exitCode: 1
  ...

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/500s.test.js:8:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: default 500
          at:
            line: 8
            column: 1
            file: test/500s.test.js
            function: Object.<anonymous>
          source: |
          
            test('default 500', t => {
            ^
              t.plan(4)
          ...
        
        # test count(1) != plan(4)
        # failed 1 test
    not ok 1 - default 500 # time=139.688ms
    
    not ok 2 - child test left in queue: t.test custom 500
    not ok 3 - child test left in queue: t.test encapsulated 500
    not ok 4 - child test left in queue: t.test custom 500 with hooks
    not ok 5 - child test left in queue: t.test cannot set errorHandler after binding
    1..1
    # test count(5) != plan(1)
    # failed 9 of 5 tests
    # time=148.076ms
not ok 2 - test/500s.test.js # time=148.076ms
  ---
  env: {}
  file: test/500s.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/500s.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 2
      name: "child test left in queue: t.test custom 500"
      fullname: test/500s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a2
      id: 3
      name: "child test left in queue: t.test encapsulated 500"
      fullname: test/500s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a3
      id: 4
      name: "child test left in queue: t.test custom 500 with hooks"
      fullname: test/500s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a4
      id: 5
      name: "child test left in queue: t.test cannot set errorHandler after binding"
      fullname: test/500s.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - *a1
    - *a2
    - *a3
    - *a4
  exitCode: 1
  ...

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=72.285ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=13.323ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=92.092ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=7.711ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=11.922ms
    
    1..5
    # time=239.962ms
ok 3 - test/allowUnsafeRegex.test.js # time=239.962ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=45.76ms
ok 4 - test/als.test.js # time=45.76ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=322.745ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.491ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=26.594ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/async-await.test.js:126:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: server logs an error if reply.send is called and a value is returned via
            async/await
          at:
            line: 126
            column: 1
            file: test/async-await.test.js
            function: Object.<anonymous>
          source: >
          
            test('server logs an error if reply.send is called and a value is returned via async/await', t => {
          
            ^
              const lines = ['incoming request', 'request completed', 'Reply already sent']
              t.plan(lines.length + 2)
          ...
        
        # test count(1) != plan(5)
        # failed 1 test
    not ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=120.441ms
    
    not ok 5 - child test left in queue: t.test ignore the result of the promise if reply.send is called beforehand (undefined)
    not ok 6 - child test left in queue: t.test ignore the result of the promise if reply.send is called beforehand (object)
    not ok 7 - child test left in queue: t.test await reply if we will be calling reply.send in the future
    not ok 8 - child test left in queue: t.test await reply if we will be calling reply.send in the future (error case)
    not ok 9 - child test left in queue: t.test support reply decorators with await
    not ok 10 - child test left in queue: t.test inject async await
    not ok 11 - child test left in queue: t.test inject async await - when the server equal up
    not ok 12 - child test left in queue: t.test async await plugin
    not ok 13 - child test left in queue: t.test does not call reply.send() twice if 204 response equal already sent
    not ok 14 - child test left in queue: t.test promise was fulfilled with undefined
    not ok 15 - child test left in queue: t.test error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
    not ok 16 - child test left in queue: t.test Thrown Error instance sets HTTP status code
    not ok 17 - child test left in queue: t.test customErrorHandler support
    not ok 18 - child test left in queue: t.test customErrorHandler support without throwing
    not ok 19 - child test left in queue: t.test customErrorHandler only called if reply not already sent
    not ok 20 - child test left in queue: t.test setNotFoundHandler should accept return value
    not ok 21 - child test left in queue: t.test customErrorHandler should accept return value
    not ok 22 - child test left in queue: t.test await self
    1..4
    # test count(22) != plan(4)
    # failed 37 of 22 tests
    # time=491.853ms
not ok 5 - test/async-await.test.js # time=491.853ms
  ---
  env: {}
  file: test/async-await.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/async-await.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 5
      name: "child test left in queue: t.test ignore the result of the promise if
        reply.send is called beforehand (undefined)"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a2
      id: 6
      name: "child test left in queue: t.test ignore the result of the promise if
        reply.send is called beforehand (object)"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a3
      id: 7
      name: "child test left in queue: t.test await reply if we will be calling
        reply.send in the future"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a4
      id: 8
      name: "child test left in queue: t.test await reply if we will be calling
        reply.send in the future (error case)"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a5
      id: 9
      name: "child test left in queue: t.test support reply decorators with await"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a6
      id: 10
      name: "child test left in queue: t.test inject async await"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a7
      id: 11
      name: "child test left in queue: t.test inject async await - when the server
        equal up"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a8
      id: 12
      name: "child test left in queue: t.test async await plugin"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a9
      id: 13
      name: "child test left in queue: t.test does not call reply.send() twice if 204
        response equal already sent"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a10
      id: 14
      name: "child test left in queue: t.test promise was fulfilled with undefined"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a11
      id: 15
      name: "child test left in queue: t.test error is not logged because promise was
        fulfilled with undefined but response was sent before promise resolution"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a12
      id: 16
      name: "child test left in queue: t.test Thrown Error instance sets HTTP status
        code"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a13
      id: 17
      name: "child test left in queue: t.test customErrorHandler support"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a14
      id: 18
      name: "child test left in queue: t.test customErrorHandler support without
        throwing"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a15
      id: 19
      name: "child test left in queue: t.test customErrorHandler only called if reply
        not already sent"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a16
      id: 20
      name: "child test left in queue: t.test setNotFoundHandler should accept return
        value"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a17
      id: 21
      name: "child test left in queue: t.test customErrorHandler should accept return
        value"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - &a18
      id: 22
      name: "child test left in queue: t.test await self"
      fullname: test/async-await.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 4
    - *a1
    - *a2
    - *a3
    - *a4
    - *a5
    - *a6
    - *a7
    - *a8
    - *a9
    - *a10
    - *a11
    - *a12
    - *a13
    - *a14
    - *a15
    - *a16
    - *a17
    - *a18
  exitCode: 1
  ...

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=38.664ms
    
    1..1
    # time=43.291ms
ok 6 - test/bodyLimit.test.js # time=43.291ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3867.231ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3874.878ms
ok 7 - test/build/error-serializer.test.js # time=3874.878ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.704ms
    
    1..1
    # time=16.145ms
ok 8 - test/build/version.test.js # time=16.145ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=71.341ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        not ok 2 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            Object.inject (fastify.js:481:14)
            cb (test/case-insensitive.test.js:51:13)
            onListen (lib/server.js:67:11)
            GetAddrInfoReqWrap.callback (lib/server.js:144:7)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: case insensitive inject
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(2) != plan(4)
        # failed 1 of 2 tests
    not ok 2 - case insensitive inject # time=127.44ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=13.729ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=28.021ms
    
    1..4
    # failed 1 of 4 tests
    # time=262.345ms
not ok 9 - test/case-insensitive.test.js # time=262.345ms
  ---
  env: {}
  file: test/case-insensitive.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/case-insensitive.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.093ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.548ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.537ms
    
    1..3
    # time=29.536ms
ok 10 - test/chainable.test.js # time=29.536ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=114.961ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=33.536ms
    
    1..2
    # time=199.104ms
ok 11 - test/close-pipelining.test.js # time=199.104ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=92.844ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=25.567ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=20.587ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=12.548ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=8.221ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=15.971ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/close.test.js:143:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: Should return error while closing (promise) - injection
          at:
            line: 143
            column: 1
            file: test/close.test.js
            function: Object.<anonymous>
          source: |
          
            test('Should return error while closing (promise) - injection', t => {
            ^
              t.plan(4)
              const fastify = Fastify()
          ...
        
        # test count(1) != plan(4)
        # failed 1 test
    not ok 7 - Should return error while closing (promise) - injection # time=142.166ms
    
    not ok 8 - child test left in queue: t.test Should return error while closing (callback) - injection
    not ok 9 - child test left in queue: t.test Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
    not ok 10 - child test left in queue: t.test Current opened connection should not accept new incoming connections
    not ok 11 - child test left in queue: t.test Cannot be reopened the closed server without listen callback
    not ok 12 - child test left in queue: t.test Cannot be reopened the closed server has listen callback
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    not ok 15 - child test left in queue: t.test shutsdown while keep-alive connections are active (non-async, custom)
    1..9
    # test count(15) != plan(9)
    # failed 13 of 15 tests
    # skip: 2
    # time=350.602ms
not ok 12 - test/close.test.js # time=350.602ms
  ---
  env: {}
  file: test/close.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/close.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 10
      name: "child test left in queue: t.test Current opened connection should not
        accept new incoming connections"
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - &a2
      id: 11
      name: "child test left in queue: t.test Cannot be reopened the closed server
        without listen callback"
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - &a3
      id: 12
      name: "child test left in queue: t.test Cannot be reopened the closed server has
        listen callback"
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - &a4
      id: 15
      name: "child test left in queue: t.test shutsdown while keep-alive connections
        are active (non-async, custom)"
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - *a1
    - *a2
    - *a3
    - id: 13
      skip: true
      name: shutsdown while keep-alive connections are active (non-async, native)
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - id: 14
      skip: true
      name: shutsdown while keep-alive connections are active (non-async, idle, native)
      fullname: test/close.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 9
    - *a4
  exitCode: 1
  ...

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=50.959ms
    
    1..1
    # time=57.209ms
ok 13 - test/connectionTimeout.test.js # time=57.209ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/constrained-routes.test.js:7:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: Should register a host constrained route
          at:
            line: 7
            column: 1
            file: test/constrained-routes.test.js
            function: Object.<anonymous>
          source: |
          
            test('Should register a host constrained route', t => {
            ^
              t.plan(7)
              const fastify = Fastify()
          ...
        
        # test count(1) != plan(7)
        # failed 1 test
    not ok 1 - Should register a host constrained route # time=245.429ms
    
    not ok 2 - child test left in queue: t.test Should register the same route with host constraints
    not ok 3 - child test left in queue: t.test Should allow registering custom constrained routes
    not ok 4 - child test left in queue: t.test Should allow registering custom constrained routes outside constructor
    not ok 5 - child test left in queue: t.test Add a constraint strategy after fastify instance was started
    not ok 6 - child test left in queue: t.test Add a constraint strategy should throw an error if there already exist custom strategy with the same name
    not ok 7 - child test left in queue: t.test Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
    not ok 8 - child test left in queue: t.test Add a constraint strategy should throw an error if default constraint with the same name is used
    not ok 9 - child test left in queue: t.test The hasConstraintStrategy should return false for default constraints until they are used
    not ok 10 - child test left in queue: t.test The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
    not ok 11 - child test left in queue: t.test Should allow registering an unconstrained route after a constrained route
    not ok 12 - child test left in queue: t.test Should allow registering constrained routes in a prefixed plugin
    not ok 13 - child test left in queue: t.test Should allow registering a constrained GET route after a constrained HEAD route
    not ok 14 - child test left in queue: t.test Should allow registering a constrained GET route after an unconstrained HEAD route
    not ok 15 - child test left in queue: t.test Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
    not ok 16 - child test left in queue: t.test allows separate constrained and unconstrained HEAD routes
    1..1
    # test count(16) != plan(1)
    # failed 31 of 16 tests
    # time=251.767ms
not ok 14 - test/constrained-routes.test.js # time=251.767ms
  ---
  env: {}
  file: test/constrained-routes.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/constrained-routes.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 2
      name: "child test left in queue: t.test Should register the same route with host
        constraints"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a2
      id: 3
      name: "child test left in queue: t.test Should allow registering custom
        constrained routes"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a3
      id: 4
      name: "child test left in queue: t.test Should allow registering custom
        constrained routes outside constructor"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a4
      id: 5
      name: "child test left in queue: t.test Add a constraint strategy after fastify
        instance was started"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a5
      id: 6
      name: "child test left in queue: t.test Add a constraint strategy should throw
        an error if there already exist custom strategy with the same name"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a6
      id: 7
      name: "child test left in queue: t.test Add a constraint strategy shouldn't
        throw an error if default constraint with the same name isn't used"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a7
      id: 8
      name: "child test left in queue: t.test Add a constraint strategy should throw
        an error if default constraint with the same name is used"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a8
      id: 9
      name: "child test left in queue: t.test The hasConstraintStrategy should return
        false for default constraints until they are used"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a9
      id: 10
      name: "child test left in queue: t.test The hasConstraintStrategy should return
        true if there already exist a custom constraint with the same name"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a10
      id: 11
      name: "child test left in queue: t.test Should allow registering an
        unconstrained route after a constrained route"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a11
      id: 12
      name: "child test left in queue: t.test Should allow registering constrained
        routes in a prefixed plugin"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a12
      id: 13
      name: "child test left in queue: t.test Should allow registering a constrained
        GET route after a constrained HEAD route"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a13
      id: 14
      name: "child test left in queue: t.test Should allow registering a constrained
        GET route after an unconstrained HEAD route"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a14
      id: 15
      name: "child test left in queue: t.test Will not try to re-createprefixed HEAD
        route if it already exists and exposeHeadRoutes is true for constrained
        routes"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a15
      id: 16
      name: "child test left in queue: t.test allows separate constrained and
        unconstrained HEAD routes"
      fullname: test/constrained-routes.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - *a1
    - *a2
    - *a3
    - *a4
    - *a5
    - *a6
    - *a7
    - *a8
    - *a9
    - *a10
    - *a11
    - *a12
    - *a13
    - *a14
    - *a15
  exitCode: 1
  ...

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/content-length.test.js:7:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: default 413 with bodyLimit option
          at:
            line: 7
            column: 1
            file: test/content-length.test.js
            function: Object.<anonymous>
          source: |
          
            test('default 413 with bodyLimit option', t => {
            ^
              t.plan(4)
          ...
        
        # test count(1) != plan(4)
        # failed 1 test
    not ok 1 - default 413 with bodyLimit option # time=147.178ms
    
    not ok 2 - child test left in queue: t.test default 400 with wrong content-length
    not ok 3 - child test left in queue: t.test custom 413 with bodyLimit option
    not ok 4 - child test left in queue: t.test custom 400 with wrong content-length
    not ok 5 - child test left in queue: t.test \#2214 - wrong content-length
    not ok 6 - child test left in queue: t.test \#2543 - wrong content-length with errorHandler
    1..1
    # test count(6) != plan(1)
    # failed 11 of 6 tests
    # time=153.792ms
not ok 15 - test/content-length.test.js # time=153.792ms
  ---
  env: {}
  file: test/content-length.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/content-length.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 2
      name: "child test left in queue: t.test default 400 with wrong content-length"
      fullname: test/content-length.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a2
      id: 3
      name: "child test left in queue: t.test custom 413 with bodyLimit option"
      fullname: test/content-length.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a3
      id: 4
      name: "child test left in queue: t.test custom 400 with wrong content-length"
      fullname: test/content-length.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a4
      id: 5
      name: "child test left in queue: t.test #2214 - wrong content-length"
      fullname: test/content-length.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a5
      id: 6
      name: "child test left in queue: t.test #2543 - wrong content-length with
        errorHandler"
      fullname: test/content-length.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - *a1
    - *a2
    - *a3
    - *a4
    - *a5
  exitCode: 1
  ...

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=12.358ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=37.078ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.347ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=104.568ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=14.203ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=7.392ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/content-parser.test.js:205:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: non-Error thrown from content parser is properly handled
          at:
            line: 205
            column: 1
            file: test/content-parser.test.js
            function: Object.<anonymous>
          source: |
          
            test('non-Error thrown from content parser is properly handled', t => {
            ^
              t.plan(3)
          ...
        
        # test count(1) != plan(3)
        # failed 1 test
    not ok 7 - non-Error thrown from content parser is properly handled # time=61.213ms
    
    not ok 8 - child test left in queue: t.test Error thrown 415 from content type is null and make post request to server
    not ok 9 - child test left in queue: t.test remove
    not ok 10 - child test left in queue: t.test remove all should remove all existing parsers and reset cache
    not ok 11 - child test left in queue: t.test should return matching parser
    not ok 12 - child test left in queue: t.test should return matching parser with caching
    not ok 13 - child test left in queue: t.test should prefer content type parser with string value
    not ok 14 - child test left in queue: t.test should return parser that catches all if no other is set
    not ok 15 - child test left in queue: t.test should return undefined if no matching parser exist
    not ok 16 - child test left in queue: t.test returns always false for "*"
    not ok 17 - child test left in queue: t.test let you override the default parser once
    not ok 18 - child test left in queue: t.test should only accept string and RegExp
    not ok 19 - child test left in queue: t.test should set "*" as parser that catches all
    1..7
    # test count(19) != plan(7)
    # failed 25 of 19 tests
    # time=273.46ms
not ok 16 - test/content-parser.test.js # time=273.46ms
  ---
  env: {}
  file: test/content-parser.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/content-parser.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 8
      name: "child test left in queue: t.test Error thrown 415 from content type is
        null and make post request to server"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a2
      id: 9
      name: "child test left in queue: t.test remove"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a3
      id: 10
      name: "child test left in queue: t.test remove all should remove all existing
        parsers and reset cache"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a4
      id: 11
      name: "child test left in queue: t.test should return matching parser"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a5
      id: 12
      name: "child test left in queue: t.test should return matching parser with
        caching"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a6
      id: 13
      name: "child test left in queue: t.test should prefer content type parser with
        string value"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a7
      id: 14
      name: "child test left in queue: t.test should return parser that catches all if
        no other is set"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a8
      id: 15
      name: "child test left in queue: t.test should return undefined if no matching
        parser exist"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a9
      id: 16
      name: 'child test left in queue: t.test returns always false for "*"'
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a10
      id: 17
      name: "child test left in queue: t.test let you override the default parser once"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a11
      id: 18
      name: "child test left in queue: t.test should only accept string and RegExp"
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - &a12
      id: 19
      name: 'child test left in queue: t.test should set "*" as parser that catches
        all'
      fullname: test/content-parser.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 7
    - *a1
    - *a2
    - *a3
    - *a4
    - *a5
    - *a6
    - *a7
    - *a8
    - *a9
    - *a10
    - *a11
    - *a12
  exitCode: 1
  ...

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/context-config.test.js:19:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: config
          at:
            line: 19
            column: 1
            file: test/context-config.test.js
            function: Object.<anonymous>
          source: |
          
            test('config', t => {
            ^
              t.plan(9)
              const fastify = Fastify()
          ...
        
        # test count(1) != plan(9)
        # failed 1 test
    not ok 1 - config # time=146.994ms
    
    not ok 2 - child test left in queue: t.test config with exposeHeadRoutes
    not ok 3 - child test left in queue: t.test config without exposeHeadRoutes
    1..1
    # test count(3) != plan(1)
    # failed 5 of 3 tests
    # time=151.801ms
not ok 17 - test/context-config.test.js # time=151.801ms
  ---
  env: {}
  file: test/context-config.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/context-config.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 2
      name: "child test left in queue: t.test config with exposeHeadRoutes"
      fullname: test/context-config.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a2
      id: 3
      name: "child test left in queue: t.test config without exposeHeadRoutes"
      fullname: test/context-config.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - *a1
    - *a2
  exitCode: 1
  ...

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=66.723ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.695ms
    
    1..2
    # time=78.112ms
ok 18 - test/custom-http-server.test.js # time=78.112ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=31.765ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=8.089ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=114.484ms
    
    1..1
    # time=125.808ms
ok 19 - test/custom-parser-async.test.js # time=125.808ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.495ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.71ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.211ms
        
    ok 2 - contentTypeParser should add a custom parser # time=183.513ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=23.596ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=39.857ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=11.111ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=9.409ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=32.473ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=11.651ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.669ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.903ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.565ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=13.143ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=33.84ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=15.336ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.437ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=31.476ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=9.403ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=10.174ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.228ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.513ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=9.784ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=15.682ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=7.532ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=7.883ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.574ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=7.844ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.691ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=7.929ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=25.394ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=8.471ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=25.239ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.124ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=9.202ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=7.093ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=24.854ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.54ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.075ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=21.412ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: returnedPromiseRejection
          test: contentTypeParser should add multiple custom parsers with RegExp values
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(6)
        # failed 1 test
    not ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=54.853ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=14.611ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.654ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=25.824ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=13.117ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=10.802ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.015ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.165ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.306ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.434ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.789ms
    
    1..47
    # failed 1 of 47 tests
    # time=876.991ms
not ok 20 - test/custom-parser.test.js # time=876.991ms
  ---
  env: {}
  file: test/custom-parser.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/custom-parser.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        not ok 2 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            Object.inject (fastify.js:481:14)
            cb (test/custom-querystring-parser.test.js:39:13)
            onListen (lib/server.js:67:11)
            GetAddrInfoReqWrap.callback (lib/server.js:144:7)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: Custom querystring parser
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(2) != plan(9)
        # failed 1 of 2 tests
    not ok 1 - Custom querystring parser # time=165.339ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        not ok 3 - connect ECONNRESET 127.0.0.1:43519
          ---
          origin:
            at:
              line: 1247
              column: 16
              file: node:net
              function: TCPConnectWrap.afterConnect
              method: oncomplete
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 43519
          found:
            !error
            name: Error
            message: connect ECONNRESET 127.0.0.1:43519
            stack: |-
              Error: connect ECONNRESET 127.0.0.1:43519
                  at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1247:16)
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 43519
          at:
            line: 35
            column: 9
            file: test/custom-querystring-parser.test.js
          stack: |
            test/custom-querystring-parser.test.js:35:9
            ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
            ClientRequest.f (node_modules/once/once.js:25:25)
          source: |2
                }, (err, response, body) => {
                  t.error(err)
            --------^
                  t.equal(response.statusCode, 200)
                })
          ...
        
        ok 1 - should not error
        not ok 2 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            Object.inject (fastify.js:481:14)
            cb (test/custom-querystring-parser.test.js:76:13)
            onListen (lib/server.js:67:11)
            GetAddrInfoReqWrap.callback (lib/server.js:144:7)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: Custom querystring parser should be called also if there is nothing to parse
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(2) != plan(9)
        # failed 1 of 2 tests
        # test count(3) != plan(9)
        # failed 2 of 3 tests
    not ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=28.581ms
    
    # Subtest: Querystring without value
        1..9
        not ok 3 - connect ECONNRESET 127.0.0.1:39087
          ---
          origin:
            at:
              line: 1247
              column: 16
              file: node:net
              function: TCPConnectWrap.afterConnect
              method: oncomplete
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 39087
          found:
            !error
            name: Error
            message: connect ECONNRESET 127.0.0.1:39087
            stack: |-
              Error: connect ECONNRESET 127.0.0.1:39087
                  at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1247:16)
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 39087
          at:
            line: 72
            column: 9
            file: test/custom-querystring-parser.test.js
          stack: |
            test/custom-querystring-parser.test.js:72:9
            ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
            ClientRequest.f (node_modules/once/once.js:25:25)
          source: |2
                }, (err, response, body) => {
                  t.error(err)
            --------^
                  t.equal(response.statusCode, 200)
                })
          ...
        
        ok 1 - should not error
        not ok 2 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            Object.inject (fastify.js:481:14)
            cb (test/custom-querystring-parser.test.js:113:13)
            onListen (lib/server.js:67:11)
            GetAddrInfoReqWrap.callback (lib/server.js:144:7)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: Querystring without value
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(2) != plan(9)
        # failed 1 of 2 tests
        # test count(3) != plan(9)
        # failed 2 of 3 tests
    not ok 3 - Querystring without value # time=46.822ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.143ms
    
    not ok 5 - Cannot read properties of undefined (reading 'statusCode')
      ---
      at:
        line: 36
        column: 24
        file: test/custom-querystring-parser.test.js
      stack: |
        test/custom-querystring-parser.test.js:36:24
        ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
        ClientRequest.f (node_modules/once/once.js:25:25)
      type: TypeError
      tapCaught: uncaughtException
      test: TAP
      source: |2
              t.error(err)
              t.equal(response.statusCode, 200)
        -----------------------^
            })
      ...
    
    not ok 6 - Cannot read properties of undefined (reading 'statusCode')
      ---
      at:
        line: 73
        column: 24
        file: test/custom-querystring-parser.test.js
      stack: |
        test/custom-querystring-parser.test.js:73:24
        ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
        ClientRequest.f (node_modules/once/once.js:25:25)
      type: TypeError
      tapCaught: uncaughtException
      test: TAP
      source: |2
              t.error(err)
              t.equal(response.statusCode, 200)
        -----------------------^
            })
      ...
    
    # Subtest
        not ok 3 - connect ECONNRESET 127.0.0.1:36455
          ---
          origin:
            at:
              line: 1247
              column: 16
              file: node:net
              function: TCPConnectWrap.afterConnect
              method: oncomplete
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 36455
          found:
            !error
            name: Error
            message: connect ECONNRESET 127.0.0.1:36455
            stack: |-
              Error: connect ECONNRESET 127.0.0.1:36455
                  at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1247:16)
            errno: -104
            code: ECONNRESET
            syscall: connect
            address: 127.0.0.1
            port: 36455
          at:
            line: 109
            column: 9
            file: test/custom-querystring-parser.test.js
          stack: |
            test/custom-querystring-parser.test.js:109:9
            ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
            ClientRequest.f (node_modules/once/once.js:25:25)
          source: |2
                }, (err, response, body) => {
                  t.error(err)
            --------^
                  t.equal(response.statusCode, 200)
                })
          ...
        
        # test count(1) != plan(null)
        # failed 2 test
    not ok 7 - Cannot read properties of undefined (reading 'statusCode')
      ---
      at:
        line: 110
        column: 24
        file: test/custom-querystring-parser.test.js
      stack: |
        test/custom-querystring-parser.test.js:110:24
        ClientRequest.<anonymous> (node_modules/simple-get/index.js:88:21)
        ClientRequest.f (node_modules/once/once.js:25:25)
      type: TypeError
      tapCaught: uncaughtException
      test: TAP
      source: |2
              t.error(err)
              t.equal(response.statusCode, 200)
        -----------------------^
            })
      ...
    
    1..7
    # failed 6 of 7 tests
    # time=273.419ms
not ok 21 - test/custom-querystring-parser.test.js # time=273.419ms
  ---
  env: {}
  file: test/custom-querystring-parser.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/custom-querystring-parser.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.447ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=82.176ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.843ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=23.132ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=9.884ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.135ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.007ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=42.943ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=21.747ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.964ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=18.555ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=18.313ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=35.065ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=7.244ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.497ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.974ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.921ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.978ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.894ms
        
        1..5
    ok 15 - hasRequestDecorator # time=45.732ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.005ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=11.5ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=2.362ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=15.19ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=13.07ms
        
        1..5
    ok 16 - hasReplyDecorator # time=154.691ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=8.891ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            cb (fastify.js:487:14)
            manageErr (fastify.js:540:11)
            fastify.js:520:11
            Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
            Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
            Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
            Object.push (node_modules/fastq/queue.js:110:14)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: decorateRequest should work with getter/setter
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(5)
        # failed 1 test
    not ok 18 - decorateRequest should work with getter/setter # time=79.916ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            lightMyRequest (node_modules/light-my-request/index.js:15:12)
            cb (fastify.js:487:14)
            manageErr (fastify.js:540:11)
            fastify.js:520:11
            Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
            Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
            Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
            Object.push (node_modules/fastq/queue.js:110:14)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: decorateReply should work with getter/setter
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(5)
        # failed 1 test
    not ok 19 - decorateReply should work with getter/setter # time=23.137ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=17.145ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=5.495ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.768ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
            Test.<anonymous> (test/decorator.test.js:752:6)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: testFunctionThrow
          test: after can access to a decorated instance and previous plugin decoration
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(11)
        # failed 1 test
    not ok 23 - after can access to a decorated instance and previous plugin decoration # time=12.192ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=7.445ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=22.988ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.265ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=23.556ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.862ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: returnedPromiseRejection
          test: Request/reply decorators should be able to access the server instance
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(6)
        # failed 1 test
    not ok 29 - Request/reply decorators should be able to access the server instance # time=9.257ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=4.418ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=19.147ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.957ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=8.683ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=4.244ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.849ms
    
    # Subtest: chain of decorators on Request
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: returnedPromiseRejection
          test: chain of decorators on Request
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        1..1
        # failed 1 test
    not ok 36 - chain of decorators on Request # time=16.973ms
    
    # Subtest: chain of decorators on Reply
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: returnedPromiseRejection
          test: chain of decorators on Reply
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        1..1
        # failed 1 test
    not ok 37 - chain of decorators on Reply # time=13.568ms
    
    # Subtest
        not ok 2 - fastify-plugin: Plugin did not start in time: 'bound _encapsulateThreeParam'. You may have forgotten to call 'done' function or to resolve a Promise
          ---
          origin:
            at:
              line: 533
              column: 33
              file: fastify.js
              function: manageErr
            stack: |
              manageErr (fastify.js:533:33)
              fastify.js:520:11
              Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
              Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
              Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
              Task.release (node_modules/fastq/queue.js:149:16)
              worked (node_modules/fastq/queue.js:201:10)
              Timeout._onTimeout (node_modules/avvio/boot.js:449:5)
            type: FastifyError
            code: FST_ERR_PLUGIN_TIMEOUT
            statusCode: 500
            cause:
              &a1 !error
              name: AvvioError
              message: "Plugin did not start in time: 'bound _encapsulateThreeParam'. You may
                have forgotten to call 'done' function or to resolve a Promise"
              stack: >-
                AvvioError: Plugin did not start in time: 'bound _encapsulateThreeParam'.
                You may have forgotten to call 'done' function or to resolve a Promise
                    at Timeout._onTimeout (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:446:21)
                    at listOnTimeout (node:internal/timers:559:17)
                    at processTimers (node:internal/timers:502:7)
              code: AVV_ERR_READY_TIMEOUT
              fn: !function |-
                "bound _encapsulateThreeParam"
                function () { [native code] }
            source: |2
                    err = err != null && AVVIO_ERRORS_MAP[err.code] != null
                      ? appendStackTrace(err, new AVVIO_ERRORS_MAP[err.code](err.message))
              --------------------------------^
                      : err
          found:
            !error
            name: FastifyError
            message: "fastify-plugin: Plugin did not start in time: 'bound
              _encapsulateThreeParam'. You may have forgotten to call 'done' function or
              to resolve a Promise"
            stack: >-
              FastifyError: 
                  at manageErr (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/fastify.js:533:33)
                  at /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/fastify.js:520:11
                  at Object._encapsulateThreeParam (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:557:7)
                  at Boot.timeoutCall (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:453:5)
                  at Boot.callWithCbOrNextTick (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:435:19)
                  at Task.release (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/fastq/queue.js:149:16)
                  at worked (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/fastq/queue.js:201:10)
                  at Timeout._onTimeout (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:449:5)
                  at listOnTimeout (node:internal/timers:559:17)
                  at processTimers (node:internal/timers:502:7)
            code: FST_ERR_PLUGIN_TIMEOUT
            statusCode: 500
            cause: *a1
          at:
            line: 597
            column: 9
            file: test/decorator.test.js
          stack: |
            cb (test/decorator.test.js:597:9)
            cb (fastify.js:486:18)
            manageErr (fastify.js:538:11)
            fastify.js:520:11
            Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
            Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
            Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
            Task.release (node_modules/fastq/queue.js:149:16)
            worked (node_modules/fastq/queue.js:201:10)
            Timeout._onTimeout (node_modules/avvio/boot.js:449:5)
          source: |2
                fastify.inject({ url: '/not-decorated' }, (err, res) => {
                  t.error(err)
            --------^
                  t.pass()
                })
          ...
        
        ok 3 - (unnamed test)
        not ok 2 - fastify-plugin: Plugin did not start in time: 'bound _encapsulateThreeParam'. You may have forgotten to call 'done' function or to resolve a Promise
          ---
          origin:
            at:
              line: 533
              column: 33
              file: fastify.js
              function: manageErr
            stack: |
              manageErr (fastify.js:533:33)
              fastify.js:520:11
              Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
              Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
              Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
              Task.release (node_modules/fastq/queue.js:149:16)
              worked (node_modules/fastq/queue.js:201:10)
              Timeout._onTimeout (node_modules/avvio/boot.js:449:5)
            type: FastifyError
            code: FST_ERR_PLUGIN_TIMEOUT
            statusCode: 500
            cause:
              &a1 !error
              name: AvvioError
              message: "Plugin did not start in time: 'bound _encapsulateThreeParam'. You may
                have forgotten to call 'done' function or to resolve a Promise"
              stack: >-
                AvvioError: Plugin did not start in time: 'bound _encapsulateThreeParam'.
                You may have forgotten to call 'done' function or to resolve a Promise
                    at Timeout._onTimeout (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:446:21)
                    at listOnTimeout (node:internal/timers:559:17)
                    at processTimers (node:internal/timers:502:7)
              code: AVV_ERR_READY_TIMEOUT
              fn: !function |-
                "bound _encapsulateThreeParam"
                function () { [native code] }
            source: |2
                    err = err != null && AVVIO_ERRORS_MAP[err.code] != null
                      ? appendStackTrace(err, new AVVIO_ERRORS_MAP[err.code](err.message))
              --------------------------------^
                      : err
          found:
            !error
            name: FastifyError
            message: "fastify-plugin: Plugin did not start in time: 'bound
              _encapsulateThreeParam'. You may have forgotten to call 'done' function or
              to resolve a Promise"
            stack: >-
              FastifyError: 
                  at manageErr (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/fastify.js:533:33)
                  at /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/fastify.js:520:11
                  at Object._encapsulateThreeParam (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:557:7)
                  at Boot.timeoutCall (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:453:5)
                  at Boot.callWithCbOrNextTick (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:435:19)
                  at Task.release (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/fastq/queue.js:149:16)
                  at worked (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/fastq/queue.js:201:10)
                  at Timeout._onTimeout (/data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify/node_modules/avvio/boot.js:449:5)
                  at listOnTimeout (node:internal/timers:559:17)
                  at processTimers (node:internal/timers:502:7)
            code: FST_ERR_PLUGIN_TIMEOUT
            statusCode: 500
            cause: *a1
          at:
            line: 633
            column: 9
            file: test/decorator.test.js
          stack: |
            cb (test/decorator.test.js:633:9)
            cb (fastify.js:486:18)
            manageErr (fastify.js:538:11)
            fastify.js:520:11
            Object._encapsulateThreeParam (node_modules/avvio/boot.js:557:7)
            Boot.timeoutCall (node_modules/avvio/boot.js:453:5)
            Boot.callWithCbOrNextTick (node_modules/avvio/boot.js:435:19)
            Task.release (node_modules/fastq/queue.js:149:16)
            worked (node_modules/fastq/queue.js:201:10)
            Timeout._onTimeout (node_modules/avvio/boot.js:449:5)
          source: |2
                fastify.inject({ url: '/not-decorated' }, (err, res) => {
                  t.error(err)
            --------^
                  t.pass()
                })
          ...
        
        ok 3 - (unnamed test)
    1..37
    # test count(37) != plan(null)
    # failed 7 of 37 tests
    # time=10644.982ms
        # test count(4) != plan(null)
        # failed 5 of 4 tests
not ok 22 - test/decorator.test.js # time=10644.982ms
  ---
  env: {}
  file: test/decorator.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/decorator.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - tapError: no plan
  exitCode: 1
  ...

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=15.004ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        not ok 2 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/default-route.test.js:22:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: correctly sets, returns, and calls defaultRoute
          at:
            line: 22
            column: 1
            file: test/default-route.test.js
            function: Object.<anonymous>
          source: |
          
            test('correctly sets, returns, and calls defaultRoute', t => {
            ^
              t.plan(3)
          ...
        
        # test count(2) != plan(3)
        # failed 1 of 2 tests
    not ok 2 - correctly sets, returns, and calls defaultRoute # time=116.678ms
    
    1..2
    # failed 1 of 2 tests
    # time=139.039ms
not ok 23 - test/default-route.test.js # time=139.039ms
  ---
  env: {}
  file: test/default-route.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/default-route.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=6.282ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.542ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.145ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.14ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.25ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=0.912ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/delete.test.js:301:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: shorthand - delete with application/json Content-Type header and without body
          at:
            line: 301
            column: 1
            file: test/delete.test.js
            function: Object.<anonymous>
          source: >
            // https://github.com/fastify/fastify/issues/936
          
            test('shorthand - delete with application/json Content-Type header and without body', t => {
          
            ^
              t.plan(4)
              const fastify = require('..')()
          ...
        
        # test count(1) != plan(4)
        # failed 1 test
    not ok 7 - shorthand - delete with application/json Content-Type header and without body # time=81.099ms
    
    1..7
    # failed 1 of 7 tests
    # time=108.02ms
not ok 24 - test/delete.test.js # time=108.02ms
  ---
  env: {}
  file: test/delete.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/delete.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=546.884ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=12.054ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=13.377ms
    
    1..3
    # time=581.714ms
ok 25 - test/diagnostics-channel.test.js # time=581.714ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.end (node_modules/light-my-request/index.js:137:21)
            node_modules/light-my-request/index.js:83:14
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: uncaughtException
          test: encapuslates an error handler
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(3)
        # failed 1 test
    not ok 1 - encapuslates an error handler # time=41.037ms
    
    # Subtest: onError hook nested
        1..4
        not ok 1 - lyx is not defined
          ---
          stack: |
            validate10 (node_modules/light-my-request/lib/configValidator.js:10:3)
            doInject (node_modules/light-my-request/index.js:36:27)
            Chain.<computed> [as then] (node_modules/light-my-request/index.js:150:23)
          at:
            line: 10
            column: 3
            file: node_modules/light-my-request/lib/configValidator.js
            function: validate10
          type: ReferenceError
          tapCaught: returnedPromiseRejection
          test: onError hook nested
          source: >
            function validate10(data, {instancePath="", parentData, parentDataProperty,
            rootData=data}={}){
              lyx
            --^
          
            }
          ...
        
        # test count(1) != plan(4)
        # failed 1 test
    not ok 2 - onError hook nested # time=5.663ms
    
    not ok 3 - The dispatch function has already been invoked
      ---
      stack: |
        Chain.<computed> [as then] (node_modules/light-my-request/index.js:147:15)
      at:
        line: 147
        column: 15
        file: node_modules/light-my-request/index.js
        function: Chain.<computed>
        method: then
      tapCaught: returnedPromiseRejection
      test: encapuslates an error handler
      source: |2
              if (this._hasInvoked === true) {
                throw new Error(errorMessage)
        --------------^
              }
              this._hasInvoked = true
      ...
    
    1..3
    # failed 3 of 3 tests
    # time=59.383ms
not ok 26 - test/encapsulated-error-handler.test.js # time=59.383ms
  ---
  env: {}
  file: test/encapsulated-error-handler.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/encapsulated-error-handler.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  exitCode: 1
  ...

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=22.914ms
    
    ok 2 - should be equal
    1..2
    # time=26.726ms
ok 27 - test/esm/index.test.js # time=26.726ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=9.949ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=4.453ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.194ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.15ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=0.94ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.12ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=10.633ms
    
    1..7
    # time=45.971ms
ok 28 - test/fastify-instance.test.js # time=45.971ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        not ok 1 - test unfinished
          ---
          stack: |
            Object.<anonymous> (test/fluent-schema.test.js:8:1)
            Module.replacementCompile (node_modules/append-transform/index.js:60:13)
            Object.<anonymous> (node_modules/append-transform/index.js:64:4)
          test: use fluent-json-schema object
          at:
            line: 8
            column: 1
            file: test/fluent-schema.test.js
            function: Object.<anonymous>
          source: |
          
            test('use fluent-json-schema object', t => {
            ^
              t.plan(15)
              const fastify = Fastify()
          ...
        
        # test count(1) != plan(15)
        # failed 1 test
    not ok 1 - use fluent-json-schema object # time=148.283ms
    
    not ok 2 - child test left in queue: t.test use complex fluent-json-schema object
    not ok 3 - child test left in queue: t.test use fluent schema and plain JSON schema
    not ok 4 - child test left in queue: t.test Should call valueOf internally
    1..1
    # test count(4) != plan(1)
    # failed 7 of 4 tests
    # time=152.057ms
not ok 29 - test/fluent-schema.test.js # time=152.057ms
  ---
  env: {}
  file: test/fluent-schema.test.js
  timeout: 30000
  command: /usr/local/bin/node
  args:
    - --allow-natives-syntax
    - test/fluent-schema.test.js
  stdio:
    - 0
    - pipe
    - 2
  cwd: /data/js-variants/multee/VariantsSubtree/fastify/variant23/fastify
  failures:
    - &a1
      id: 2
      name: "child test left in queue: t.test use complex fluent-json-schema object"
      fullname: test/fluent-schema.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a2
      id: 3
      name: "child test left in queue: t.test use fluent schema and plain JSON schema"
      fullname: test/fluent-schema.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - &a3
      id: 4
      name: "child test left in queue: t.test Should call valueOf internally"
      fullname: test/fluent-schema.test.js
      tapError: id greater than plan end
      plan:
        start: 1
        end: 1
    - *a1
    - *a2
    - *a3
  exitCode: 1
  ...

./VariantsSubtree/fastify/variant22/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   74.17 |    67.34 |   72.36 |   74.79 |                             
 fastify                     |   65.68 |       75 |   57.14 |   66.03 |                             
  fastify.js                 |   65.68 |       75 |   57.14 |   66.03 | ...,670-702,715-724,732-743 
 fastify/lib                 |   75.38 |    66.33 |   75.25 |   76.06 |                             
  contentTypeParser.js       |    91.2 |    94.06 |     100 |   91.17 | ...-236,244-245,264,270-271 
  context.js                 |     100 |    93.33 |     100 |     100 | 76                          
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   78.26 |    74.46 |   71.42 |   78.26 | 20,29-41,60-63,108-110,118  
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |   80.72 |       75 |   78.57 |   82.71 | 62-68,95-107                
  handleRequest.js           |   74.24 |    82.35 |     100 |   77.77 | ...,77,85-87,97,128-130,137 
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |    87.6 |    84.48 |   94.73 |   89.83 | ...-205,209,221-222,234-238 
  initialConfigValidation.js |      95 |       80 |     100 |   94.73 | 26                          
  logger.js                  |   70.17 |       50 |    62.5 |   69.09 | ...3,42,50-61,84-99,112-113 
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   90.24 |       80 |     100 |    92.5 | 55,75,77                    
  pluginUtils.js             |   90.54 |    71.05 |     100 |   93.54 | 19,30,111,118               
  reply.js                   |   60.38 |     42.2 |   59.25 |   60.95 | ...,696,710,716-721,762-780 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   39.81 |     9.37 |      30 |   40.38 | ...-176,186-187,206,211-291 
  route.js                   |   76.82 |       75 |   70.83 |   76.95 | ...,498,515-516,520-533,545 
  schema-controller.js       |   89.74 |    79.41 |   76.92 |   89.74 | 23,58,67-71                 
  schemas.js                 |   83.82 |    80.95 |   88.88 |   85.07 | ...43,55,65,116,140,146-149 
  server.js                  |    67.9 |    47.91 |   83.33 |   68.75 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |   84.05 |    72.41 |   88.88 |    87.5 | 22,38,46,53,94,109-111      
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   66.66 |       60 |     100 |   66.66 | 11,27-28,33-34              
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=31.662ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.925ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=18.69ms
        
    ok 1 - default 404 # time=208.975ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=10.106ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.776ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=3.673ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.8ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=6.036ms
        
    ok 2 - customized 404 # time=48.057ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=16.122ms
        
    ok 3 - custom header in notFound handler # time=57.265ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.915ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=40.035ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=10.339ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=30.225ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=39.871ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=133.667ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=19.367ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.566ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.417ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.812ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.654ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.314ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.694ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.353ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.067ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.61ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.113ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.027ms
        
    ok 5 - encapsulated 404 # time=136.31ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=74.12ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.104ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=21.15ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.218ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.954ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=14.081ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.355ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=28.194ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.706ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=7.891ms
        
    ok 15 - log debug for 404 # time=14.832ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=32.741ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=20.738ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.074ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.734ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.512ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.139ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.424ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.649ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=39.645ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=7.603ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.441ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.115ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.822ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.239ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.084ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.467ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.25ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.079ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=133.399ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.934ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.214ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.355ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.01ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.62ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.422ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.177ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.448ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=5.069ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=9.782ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=25.634ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=72.819ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=7.591ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=13.026ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.211ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.369ms
    
    1..33
    # time=1172.067ms
ok 1 - test/404s.test.js # time=1172.067ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=116.836ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=12.073ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=34.04ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=8.6ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=11.743ms
    
    1..5
    # time=192.682ms
ok 2 - test/500s.test.js # time=192.682ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=69.335ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.724ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=89.032ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.017ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=18.899ms
    
    1..5
    # time=234.754ms
ok 3 - test/allowUnsafeRegex.test.js # time=234.754ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=46.347ms
ok 4 - test/als.test.js # time=46.347ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=340.931ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.154ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=27.202ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=94.817ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.323ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=11.966ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=7.549ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=9.145ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=13.125ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=6.991ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=210.911ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=212.186ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=15.61ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=18.74ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=27.796ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=27.152ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.08ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=27.876ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.174ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=15.378ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.98ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.336ms
    
    1..22
    # time=1126.342ms
ok 5 - test/async-await.test.js # time=1126.342ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=39.206ms
    
    1..1
    # time=43.729ms
ok 6 - test/bodyLimit.test.js # time=43.729ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3830.861ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3837.292ms
ok 7 - test/build/error-serializer.test.js # time=3837.292ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.699ms
    
    1..1
    # time=14.515ms
ok 8 - test/build/version.test.js # time=14.515ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=68.756ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=36.712ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=12.5ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=29.875ms
    
    1..4
    # time=175.457ms
ok 9 - test/case-insensitive.test.js # time=175.457ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.163ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.567ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.518ms
    
    1..3
    # time=28.338ms
ok 10 - test/chainable.test.js # time=28.338ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=126.84ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=31.146ms
    
    1..2
    # time=205.078ms
ok 11 - test/close-pipelining.test.js # time=205.078ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=106.222ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=23.271ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=34.046ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=16.014ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.664ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=14.004ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=75.937ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=117.614ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=38.387ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=270.037ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=19.782ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=4.501ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=13.617ms
    
    1..15
    # skip: 2
    # time=748.109ms
ok 12 - test/close.test.js # time=748.109ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=39.639ms
    
    1..1
    # time=44.948ms
ok 13 - test/connectionTimeout.test.js # time=44.948ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=99.33ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.787ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=37.599ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=10.995ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=6.551ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.663ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.307ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=5.95ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.46ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.465ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.371ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=25.406ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=13.762ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=5.474ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=13.891ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.727ms
    
    1..16
    # time=277.605ms
ok 14 - test/constrained-routes.test.js # time=277.605ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=126.271ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=14.531ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=31.544ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=12.312ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=15.41ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=12.941ms
    
    1..6
    # time=221.022ms
ok 15 - test/content-length.test.js # time=221.022ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=12.097ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=35.954ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.39ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=86.063ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=13.2ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=15.678ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=50.256ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=18.321ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=17.081ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.925ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.899ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.262ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.765ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=5.406ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.837ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.207ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.645ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.895ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.783ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=2.099ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.981ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.003ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.737ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.239ms
    
    1..24
    # time=325.72ms
ok 16 - test/content-parser.test.js # time=325.72ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=76.723ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.854ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=23.483ms
    
    1..3
    # time=128.421ms
ok 17 - test/context-config.test.js # time=128.421ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=68.07ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.234ms
    
    1..2
    # time=78.379ms
ok 18 - test/custom-http-server.test.js # time=78.379ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=39.661ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.875ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=125.63ms
    
    1..1
    # time=130.865ms
ok 19 - test/custom-parser-async.test.js # time=130.865ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.493ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=28.724ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.262ms
        
    ok 2 - contentTypeParser should add a custom parser # time=180.361ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.28ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=38.728ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=10.506ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.678ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=9.9ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=30.634ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.736ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.84ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.473ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=13.488ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=27.689ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=20.491ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.51ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=34.846ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=21.861ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=14.78ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.516ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=3.244ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=29.226ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=9.467ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=8.002ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=12.386ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=10.835ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=11.226ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=9.2ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=9.02ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=13.195ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=8.427ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=11.468ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.066ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=22.31ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=7.443ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=7.779ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.371ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.171ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=20.306ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=33.935ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=16.498ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=10.323ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=12.119ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=23.39ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=14.817ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.368ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.327ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.844ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=7.116ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=8.587ms
    
    1..47
    # time=842.152ms
ok 20 - test/custom-parser.test.js # time=842.152ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=96.274ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=13.746ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=37.216ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.004ms
    
    1..4
    # time=158.704ms
ok 21 - test/custom-querystring-parser.test.js # time=158.704ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.131ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=75.589ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.678ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=8.337ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=9.178ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=11.643ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=7.169ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=45.069ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=39.007ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=26.388ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=19.957ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=78.587ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=23.195ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.502ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.285ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.001ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.741ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=19.483ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=12.253ms
        
        1..5
    ok 15 - hasRequestDecorator # time=62.07ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.436ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.877ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.69ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.922ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.657ms
        
        1..5
    ok 16 - hasReplyDecorator # time=115.73ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=14.833ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=60.953ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=15.641ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.76ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=5.019ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.689ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.621ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=8.55ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=30.188ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=25.771ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=34.436ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=24.892ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.419ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.555ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=8.335ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=8.273ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=8.798ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=2.011ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.766ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=16.421ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.892ms
    
    1..37
    # time=900.751ms
ok 22 - test/decorator.test.js # time=900.751ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=16.422ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=35.682ms
    
    1..2
    # time=61.347ms
ok 23 - test/default-route.test.js # time=61.347ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.089ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.013ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.538ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.434ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.393ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.134ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=41.993ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=37.778ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.119ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=5.787ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.567ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.497ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=14.708ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.336ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.729ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.5ms
    
    1..17
    # time=301.03ms
ok 24 - test/delete.test.js # time=301.03ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=963.841ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=19.749ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.289ms
    
    1..3
    # time=1013.587ms
ok 25 - test/diagnostics-channel.test.js # time=1013.587ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=66.74ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=19.876ms
    
    1..2
    # time=93.054ms
ok 26 - test/encapsulated-error-handler.test.js # time=93.054ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=34.617ms
    
    ok 2 - should be equal
    1..2
    # time=39.756ms
ok 27 - test/esm/index.test.js # time=39.756ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=14.726ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.281ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=4.221ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.462ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.098ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.598ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.151ms
    
    1..7
    # time=65.816ms
ok 28 - test/fastify-instance.test.js # time=65.816ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=188.323ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=42.71ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=62.534ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=63.355ms
    
    1..4
    # time=371.581ms
ok 29 - test/fluent-schema.test.js # time=371.581ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=66.512ms
    
    1..1
    # time=72.781ms
ok 30 - test/genReqId.test.js # time=72.781ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.864ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.549ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.702ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.279ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.202ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.472ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.975ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.328ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.468ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=42.472ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.206ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.814ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.351ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=27.52ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.666ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.896ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.865ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.618ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=5.009ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.423ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.179ms
    
    1..22
    # time=328.992ms
ok 31 - test/get.test.js # time=328.992ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=55.474ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=22.626ms
    
    1..2
    # time=85.181ms
ok 32 - test/handler-context.test.js # time=85.181ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=9.59ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.57ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.838ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.748ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=45.055ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.346ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.505ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.289ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.076ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=13.227ms
    
    1..11
    # time=239.498ms
ok 33 - test/head.test.js # time=239.498ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equivalent
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - expect truthy value
    ok 1 - async hooks # time=124.596ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=48.758ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=13.304ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=9.743ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.56ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=7.131ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=13.014ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=83.663ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=7.103ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.329ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=19.41ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=16.437ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=20.928ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=14.001ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=10.774ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=8.968ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.76ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.099ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=14.742ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=18.076ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.492ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=12.882ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=17.718ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=34.536ms
    
    1..20
    # time=514.415ms
ok 34 - test/hooks-async.test.js # time=514.415ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=72.165ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=12.034ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=17.665ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=35.428ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=17.874ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=16.106ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=38.576ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=8.856ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.069ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.011ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.887ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=516.251ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=12.469ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=18.827ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=5.593ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.182ms
    
    1..16
    # time=821.786ms
ok 35 - test/hooks.on-ready.test.js # time=821.786ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=160.353ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=23.098ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.49ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=19.26ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=13.02ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=4.009ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.542ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.49ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=6.077ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.843ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.445ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.233ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=6.041ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.347ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.371ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=12.453ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.291ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.286ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.954ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=10.024ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=2.921ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.263ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=2.655ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=81.68ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=14.58ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=4.133ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=18.466ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.99ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=16.409ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.849ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.292ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.101ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=27.199ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=22.863ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=14.011ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=4.873ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=6.367ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=5.389ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.871ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=76.831ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.25ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.775ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.615ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.444ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.3ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=7.937ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=6.341ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=8.499ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=8.015ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=8.491ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=9.99ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=28.972ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=8.013ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=8.125ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.816ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=4.009ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.037ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=13.169ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=17.802ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=3.84ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=27.87ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.416ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=5.124ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.73ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=10.671ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=12.391ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=7.503ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=96.832ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=11.764ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.64ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=21.676ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=19.68ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.404ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=7.102ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=9.223ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.575ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.183ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.626ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.572ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.142ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.469ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=12.996ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=14.636ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.589ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.293ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=509.141ms
    
    1..85
    # time=2223.529ms
ok 36 - test/hooks.test.js # time=2223.529ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=12.189ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=60.137ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=12.284ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=22.349ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=113.711ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=20.331ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=110.421ms
    
    1..5
    # time=355.691ms
ok 37 - test/http2/closing.test.js # time=355.691ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=39.743ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.081ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.481ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=195.615ms
    
    1..1
    # time=233.095ms
ok 38 - test/http2/constraint.test.js # time=233.095ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=77.592ms
    
    1..3
    # time=170.565ms
ok 39 - test/http2/head.test.js # time=170.565ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.445ms
    
    1..1
    # time=17.17ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.17ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=37.229ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.659ms
    
    1..4
    # time=130.536ms
ok 41 - test/http2/plain.test.js # time=130.536ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=45.954ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.4ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.388ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.484ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.992ms
        
    ok 1 - secure with fallback # time=192.639ms
    
    1..1
    # time=222.75ms
ok 42 - test/http2/secure-with-fallback.test.js # time=222.75ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=38.421ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.166ms
        
    ok 1 - secure # time=159.456ms
    
    1..1
    # time=188.93ms
ok 43 - test/http2/secure.test.js # time=188.93ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=34.249ms
    
    1..2
    # time=96.935ms
ok 44 - test/http2/unknown-http-method.test.js # time=96.935ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=92.865ms
    
    1..1
    # time=124.651ms
ok 45 - test/https/custom-https-server.test.js # time=124.651ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=40.034ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.669ms
        
    ok 1 - https # time=140.064ms
    
    1..1
    # time=170.037ms
ok 46 - test/https/https.test.js # time=170.037ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=786.014ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.856ms
    
    1..2
    # time=799.559ms
ok 47 - test/imports.test.js # time=799.559ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=23.203ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=600.807ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=8.484ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=10.299ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.736ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.763ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=6.231ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.553ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=6.68ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=15.777ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=10.096ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.881ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=6.388ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.185ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=19.654ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=504.947ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=19.311ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=34.446ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.37ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=15.657ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=4.353ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.122ms
    
    1..22
    # time=1361.393ms
ok 48 - test/inject.test.js # time=1361.393ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=80.604ms
    
    1..1
    # time=85.64ms
ok 49 - test/internals/all.test.js # time=85.64ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=24.127ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.869ms
    
    1..2
    # time=47.507ms
ok 50 - test/internals/contentTypeParser.test.js # time=47.507ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=3.984ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.446ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=0.935ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.008ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.933ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.412ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.828ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.558ms
    
    1..8
    # time=51.155ms
ok 51 - test/internals/decorator.test.js # time=51.155ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=6.245ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.702ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=77.313ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=3.33ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.958ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=316.68ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=12.224ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=13.066ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=55.764ms
    
    1..9
    # time=509.739ms
ok 52 - test/internals/handleRequest.test.js # time=509.739ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=9.395ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.8ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.204ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=27.751ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=2.587ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.318ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=1.581ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.326ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.342ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=2.513ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.063ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=2.616ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.067ms
    
    1..13
    # time=115.984ms
ok 53 - test/internals/hookRunner.test.js # time=115.984ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.106ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=6.587ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.337ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.546ms
    
    1..4
    # time=35.72ms
ok 54 - test/internals/hooks.test.js # time=35.72ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.977ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.57ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=12.491ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.865ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=16.425ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.861ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=56.189ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.757ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.917ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=41.351ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.656ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.839ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.905ms
    
    1..13
    # time=244.852ms
ok 55 - test/internals/initialConfig.test.js # time=244.852ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.831ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=97.835ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=13.541ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.935ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.397ms
    
    1..5
    # time=134.529ms
ok 56 - test/internals/logger.test.js # time=134.529ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=12.209ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.016ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.871ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.822ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=3.836ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.975ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.17ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.385ms
    
    1..8
    # time=112.755ms
ok 57 - test/internals/plugin.test.js # time=112.755ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=84.213ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=17.081ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=30.841ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=16.658ms
        
    ok 1 - Reply\#compileSerializationSchema # time=168.182ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=27.769ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.153ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=18.303ms
        
    ok 2 - Reply\#getSerializationFunction # time=64.785ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=25.914ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=30.815ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=26.124ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=7.659ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=17.971ms
        
    ok 3 - Reply\#serializeInput # time=128.291ms
    
    1..3
    # time=382.698ms
ok 58 - test/internals/reply-serialize.test.js # time=382.698ms

./VariantsSubtree/fastify/variant21/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant20/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   85.84 |    81.44 |   83.19 |   86.06 |                             
 fastify                     |   78.22 |    83.75 |   66.07 |   78.11 |                             
  fastify.js                 |   78.22 |    83.75 |   66.07 |   78.11 | ...,670-702,715-724,732-743 
 fastify/lib                 |   86.92 |    81.14 |   86.44 |   87.21 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   89.85 |    89.36 |   85.71 |   89.85 | 20,33-37,108-110,118        
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   96.96 |    98.03 |     100 |   96.82 | 77,97                       
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   81.42 |    73.39 |   79.62 |    82.3 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   59.25 |    26.56 |      50 |   60.57 | ...-176,206,211-220,264-291 
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |   89.74 |    79.41 |   76.92 |   89.74 | 23,58,67-71                 
  schemas.js                 |   88.23 |    88.88 |   88.88 |   89.55 | 28,32,43,55,65,116,147      
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |   89.85 |    77.58 |     100 |   92.18 | 22,46,109-111               
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=30.681ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=8.286ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=7.427ms
        
    ok 1 - default 404 # time=152.634ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=15.474ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.721ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.739ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.065ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.828ms
        
    ok 2 - customized 404 # time=58.419ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=11.741ms
        
    ok 3 - custom header in notFound handler # time=21.633ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=11.008ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=50.004ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=7.279ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=28.188ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=44.149ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=150.322ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=21.931ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=7.899ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.526ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.739ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.544ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.282ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.515ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=16.462ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.351ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.747ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.12ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=3.918ms
        
    ok 5 - encapsulated 404 # time=127.355ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=43.719ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.149ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=21.702ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=14.161ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.518ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=13.543ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=12.749ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.304ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.474ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=7.919ms
        
    ok 15 - log debug for 404 # time=14.591ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=23.627ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=25.091ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=11.458ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.094ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=12.416ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.14ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=7.122ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.874ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=33.761ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=6.268ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=11.018ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=11.679ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=9.961ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=4.376ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=4.077ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=3.685ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=7.486ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.743ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=106.527ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.715ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.021ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.117ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.646ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.798ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.478ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.516ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.612ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=9.412ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=5.593ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=12.828ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=60.654ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=17.296ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=22.883ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=23.979ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=30.028ms
    
    1..33
    # time=1051.109ms
ok 1 - test/404s.test.js # time=1051.109ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=106.652ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=9.355ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=30.185ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=11.301ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=38.883ms
    
    1..5
    # time=204.565ms
ok 2 - test/500s.test.js # time=204.565ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=68.857ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.733ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=83.102ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=2.858ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=10.215ms
    
    1..5
    # time=214.436ms
ok 3 - test/allowUnsafeRegex.test.js # time=214.436ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=43.549ms
ok 4 - test/als.test.js # time=43.549ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=318.61ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=21.581ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=13.382ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=100.934ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.209ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=29.291ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.552ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=9.978ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=25.066ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.73ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=211.161ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=216.345ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=5.399ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=25.754ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.529ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=7.441ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.345ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=4.814ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.376ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=7.381ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=6.665ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.67ms
    
    1..22
    # time=1080.506ms
ok 5 - test/async-await.test.js # time=1080.506ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=62.456ms
    
    1..1
    # time=68.651ms
ok 6 - test/bodyLimit.test.js # time=68.651ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3815.289ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3822.02ms
ok 7 - test/build/error-serializer.test.js # time=3822.02ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.296ms
    
    1..1
    # time=11.864ms
ok 8 - test/build/version.test.js # time=11.864ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=67.878ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=42.883ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=10.77ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=15.587ms
    
    1..4
    # time=162.709ms
ok 9 - test/case-insensitive.test.js # time=162.709ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.898ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.563ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.647ms
    
    1..3
    # time=30.067ms
ok 10 - test/chainable.test.js # time=30.067ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=107.98ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=22.725ms
    
    1..2
    # time=169.741ms
ok 11 - test/close-pipelining.test.js # time=169.741ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=97.792ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=19.404ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=35.047ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=15.167ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.412ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=21.383ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=54.34ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=117.804ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=36.882ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=275.483ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=8.507ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=4.547ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=9.081ms
    
    1..15
    # skip: 2
    # time=718.069ms
ok 12 - test/close.test.js # time=718.069ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=46.018ms
    
    1..1
    # time=54.216ms
ok 13 - test/connectionTimeout.test.js # time=54.216ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=97.498ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.428ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=27.684ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=15.498ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=18.253ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.506ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.254ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.212ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.303ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.365ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.535ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=18.727ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=13.634ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=13.472ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=10.368ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.073ms
    
    1..16
    # time=263.727ms
ok 14 - test/constrained-routes.test.js # time=263.727ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=71.309ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=11.326ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=17.171ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=6.875ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=10.029ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=5.935ms
    
    1..6
    # time=137.909ms
ok 15 - test/content-length.test.js # time=137.909ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=19.19ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=53.848ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.218ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=91.026ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=13.802ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=17.69ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=34.575ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=16.692ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=28.896ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.081ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.24ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.319ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.268ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=2.973ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.156ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.515ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.852ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.164ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.243ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.428ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.443ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.664ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.342ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.38ms
    
    1..24
    # time=332.091ms
ok 16 - test/content-parser.test.js # time=332.091ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=76.158ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.682ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=13.897ms
    
    1..3
    # time=123.58ms
ok 17 - test/context-config.test.js # time=123.58ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=65.274ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=4.067ms
    
    1..2
    # time=77.9ms
ok 18 - test/custom-http-server.test.js # time=77.9ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=30.877ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.994ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=108.282ms
    
    1..1
    # time=113.621ms
ok 19 - test/custom-parser-async.test.js # time=113.621ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.379ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=26.79ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.406ms
        
    ok 2 - contentTypeParser should add a custom parser # time=185.255ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=14.546ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=29.559ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=10.569ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=9.352ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=30.233ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=13.26ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.537ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=4.336ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=3.152ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=31.459ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=15.587ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.879ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.413ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=11.171ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=8.606ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=8.978ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.541ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.849ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=10.202ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=13.692ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=5.917ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=17.852ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=6.523ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=27.131ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=7.775ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=7.878ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=18.247ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=11.173ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=5.821ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.362ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=7.666ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=5.934ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.417ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.192ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.577ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=13.804ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=45.395ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=17.027ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=10.774ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=10.95ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=10.073ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=13.725ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.885ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.037ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.104ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.057ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.691ms
    
    1..47
    # time=756.382ms
ok 20 - test/custom-parser.test.js # time=756.382ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=108.348ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=13.237ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=35.691ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.01ms
    
    1..4
    # time=167.271ms
ok 21 - test/custom-querystring-parser.test.js # time=167.271ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=16.009ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=77.562ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.926ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=14.175ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=15.745ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.063ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.664ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=43.559ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=21.86ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.427ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=19.609ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=17.795ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=18.562ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.135ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.225ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.734ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=4.783ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.704ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.896ms
        
        1..5
    ok 15 - hasRequestDecorator # time=47.979ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.811ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=2.072ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.844ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.485ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.78ms
        
        1..5
    ok 16 - hasReplyDecorator # time=129.451ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=16.824ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=51.051ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=14.628ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.204ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.027ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.108ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.873ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=7.674ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.194ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.912ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.688ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=22.273ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.244ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.481ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=17.406ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.203ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.483ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=8.398ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.282ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=23.177ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=13.688ms
    
    1..37
    # time=808.188ms
ok 22 - test/decorator.test.js # time=808.188ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=19.174ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=37.939ms
    
    1..2
    # time=65.689ms
ok 23 - test/default-route.test.js # time=65.689ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.434ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.503ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.931ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.824ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.788ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.45ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=46.209ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=30.613ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.396ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.992ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.905ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=5.492ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=13.164ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=5.048ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=5.55ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.311ms
    
    1..17
    # time=316.993ms
ok 24 - test/delete.test.js # time=316.993ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=911.655ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=18.104ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=15.203ms
    
    1..3
    # time=960.815ms
ok 25 - test/diagnostics-channel.test.js # time=960.815ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=67.081ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.464ms
    
    1..2
    # time=85.363ms
ok 26 - test/encapsulated-error-handler.test.js # time=85.363ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=35.707ms
    
    ok 2 - should be equal
    1..2
    # time=40.728ms
ok 27 - test/esm/index.test.js # time=40.728ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.132ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.374ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.999ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.492ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.124ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.657ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.81ms
    
    1..7
    # time=68.462ms
ok 28 - test/fastify-instance.test.js # time=68.462ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=203.083ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=38.349ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=58.57ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=85.057ms
    
    1..4
    # time=394.801ms
ok 29 - test/fluent-schema.test.js # time=394.801ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=64.058ms
    
    1..1
    # time=70.119ms
ok 30 - test/genReqId.test.js # time=70.119ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.491ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.139ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.369ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=1.916ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.824ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.522ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.945ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.378ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.408ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.031ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.296ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.248ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=4.603ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=4.622ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=4.64ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.119ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=3.971ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=4.761ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=5.506ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=11.215ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.717ms
    
    1..22
    # time=300.29ms
ok 31 - test/get.test.js # time=300.29ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=51.66ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=16.301ms
    
    1..2
    # time=75.978ms
ok 32 - test/handler-context.test.js # time=75.978ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.123ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.206ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.499ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.397ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=40.701ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.826ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=6.308ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=11.715ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.931ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=16.155ms
    
    1..11
    # time=258.331ms
ok 33 - test/head.test.js # time=258.331ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=132.294ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=32.098ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=31.721ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=14.62ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=5.935ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=5.997ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=35.409ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=90.255ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=10.254ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.555ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=7.92ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=7.891ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=8.933ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=7.013ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.729ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=31.224ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.918ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.081ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=14.817ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=19.451ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=20.908ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.174ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=5.651ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=23.089ms
    
    1..20
    # time=547.195ms
ok 34 - test/hooks-async.test.js # time=547.195ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=62.522ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=9.77ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=6.951ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=23.777ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=10.601ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.867ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=33.624ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=6.89ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.643ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.873ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=2.248ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=507.822ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.947ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=45.419ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=10.045ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=10.405ms
    
    1..16
    # time=771.128ms
ok 35 - test/hooks.on-ready.test.js # time=771.128ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=219.3ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=35.551ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=9.225ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=22.646ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=23.902ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=5.324ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=17.834ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=18.651ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=8.489ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=10.793ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.9ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=6.18ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=7.919ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=8.207ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=6.889ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=19.626ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=17.066ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=16.307ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.734ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=10.857ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.83ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=8.143ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=4.565ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=70.112ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=17.452ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=12.278ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=26.738ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=4.214ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=32.217ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=33.273ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=18.558ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=5.455ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=31.461ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=24.418ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=13.376ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=6.781ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.688ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=5.099ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=5.122ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=75.859ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.658ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=5.224ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=5.072ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.823ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.706ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=10.317ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=6.743ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=7.735ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=7.152ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.526ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=9.549ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=31.207ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=8.404ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=8.554ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.781ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=4.464ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.407ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=21.237ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=28.54ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=4.367ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=31.282ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.594ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=5.092ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.352ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=10.537ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=10.705ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=7.69ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.794ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=5.8ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.875ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=66.11ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=40.308ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=11.867ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.35ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=8.269ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.769ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.374ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=6.027ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=6.007ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.587ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=6.229ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=15.677ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=16.881ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.27ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=511.036ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=516.876ms
    
    1..85
    # time=2456.821ms
ok 36 - test/hooks.test.js # time=2456.821ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.716ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=56.979ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.695ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.374ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=110.471ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=12.79ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=107.4ms
    
    1..5
    # time=330.282ms
ok 37 - test/http2/closing.test.js # time=330.282ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=41.997ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=14.061ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.658ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=151.497ms
    
    1..1
    # time=181.549ms
ok 38 - test/http2/constraint.test.js # time=181.549ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=56.389ms
    
    1..3
    # time=134.258ms
ok 39 - test/http2/head.test.js # time=134.258ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.679ms
    
    1..1
    # time=17.965ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.965ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=34.898ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.667ms
    
    1..4
    # time=125.736ms
ok 41 - test/http2/plain.test.js # time=125.736ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=41.34ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=20.58ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=12.549ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=24.545ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=8.454ms
        
    ok 1 - secure with fallback # time=199.902ms
    
    1..1
    # time=229.458ms
ok 42 - test/http2/secure-with-fallback.test.js # time=229.458ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=38.4ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.151ms
        
    ok 1 - secure # time=147.718ms
    
    1..1
    # time=177.349ms
ok 43 - test/http2/secure.test.js # time=177.349ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=33.762ms
    
    1..2
    # time=94.771ms
ok 44 - test/http2/unknown-http-method.test.js # time=94.771ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=80.478ms
    
    1..1
    # time=112.905ms
ok 45 - test/https/custom-https-server.test.js # time=112.905ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=37.103ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.448ms
        
    ok 1 - https # time=136.23ms
    
    1..1
    # time=166.626ms
ok 46 - test/https/https.test.js # time=166.626ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=781.419ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=12.475ms
    
    1..2
    # time=806.767ms
ok 47 - test/imports.test.js # time=806.767ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=41.708ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=599.2ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.762ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=10.196ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.579ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=14.61ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=6.351ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.509ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=27.914ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=12.546ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=13.615ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=9.188ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=19.602ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=14.218ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=22.684ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=508.248ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=14.562ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=18.595ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=3.974ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=14.296ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=11.729ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=5.022ms
    
    1..22
    # time=1407.482ms
ok 48 - test/inject.test.js # time=1407.482ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=118.585ms
    
    1..1
    # time=123.858ms
ok 49 - test/internals/all.test.js # time=123.858ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=27.731ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.781ms
    
    1..2
    # time=44.406ms
ok 50 - test/internals/contentTypeParser.test.js # time=44.406ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=4.121ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=3.097ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=0.949ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=0.878ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.811ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.209ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.775ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.542ms
    
    1..8
    # time=56.663ms
ok 51 - test/internals/decorator.test.js # time=56.663ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=8ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.589ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=85.778ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=3.221ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.959ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=319.123ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.247ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=12.763ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=45.795ms
    
    1..9
    # time=510.744ms
ok 52 - test/internals/handleRequest.test.js # time=510.744ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.773ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.478ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.138ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=25.914ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=2.56ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.267ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=1.59ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=8.581ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=3.93ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=2.558ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.014ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=2.725ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.081ms
    
    1..13
    # time=107.695ms
ok 53 - test/internals/hookRunner.test.js # time=107.695ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=7.519ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.159ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.987ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.536ms
    
    1..4
    # time=28.208ms
ok 54 - test/internals/hooks.test.js # time=28.208ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=14.363ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.682ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.647ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=2.979ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.529ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.271ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=51.316ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.767ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=5.633ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=41.502ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.654ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.639ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.825ms
    
    1..13
    # time=226.122ms
ok 55 - test/internals/initialConfig.test.js # time=226.122ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.456ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=111.415ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=9.111ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.772ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.891ms
    
    1..5
    # time=141.901ms
ok 56 - test/internals/logger.test.js # time=141.901ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.208ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.715ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.59ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.479ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.018ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.666ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.917ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.215ms
    
    1..8
    # time=97.903ms
ok 57 - test/internals/plugin.test.js # time=97.903ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=81.957ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=17.979ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=33.321ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=14.166ms
        
    ok 1 - Reply\#compileSerializationSchema # time=170.972ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=23.258ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.698ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=21.667ms
        
    ok 2 - Reply\#getSerializationFunction # time=67.412ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=29.796ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=31.598ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=14.639ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=9.22ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=11.454ms
        
    ok 3 - Reply\#serializeInput # time=121.768ms
    
    1..3
    # time=385.713ms
ok 58 - test/internals/reply-serialize.test.js # time=385.713ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=13.367ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=22.868ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=2.151ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=2.302ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.359ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=789.195ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.913ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.732ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.87ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=20.742ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=31.855ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=5.856ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.752ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.319ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.773ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.435ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.411ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.344ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.469ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.588ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.749ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.892ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.091ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=2.936ms
        
        1..15
    ok 11 - within an instance # time=161.426ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=15.067ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=9.362ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=18.433ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=77.959ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=17.293ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=10.611ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=7.543ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=7.239ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.193ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=20.827ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=25.372ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=30.682ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=22.272ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.615ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=25.969ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=15.341ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=16.166ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=15.057ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.836ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.178ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.607ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=10.455ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=5.965ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=5.344ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.677ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=16.243ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.127ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.56ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=6.14ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.805ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=5.68ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=4.012ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.661ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.962ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.806ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.215ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.732ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.818ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=5.407ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=10.392ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.873ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=18.727ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=9.451ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=6.582ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.429ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.155ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.644ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.197ms
        
    ok 56 - reply.then # time=19.717ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.467ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.86ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=7.142ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.339ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.83ms
    
    1..61
    # time=1673.728ms
ok 59 - test/internals/reply.test.js # time=1673.728ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=155.026ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=49.842ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=70.443ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=13.347ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=38.585ms
        
    ok 1 - \#compileValidationSchema # time=350.825ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=59.799ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.864ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=64.722ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=21.677ms
        
    ok 2 - \#getValidationFunction # time=162.78ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=62.282ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=9.394ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=77.66ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=12.189ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=14.209ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=10.594ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=25.982ms
        
    ok 3 - \#validate # time=230.977ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=88.06ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=80.115ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=40.279ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.572ms
                
            ok 1 - \#compileValidationSchema # time=227.428ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=55.399ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.622ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=39.674ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.1ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.679ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.412ms
                
            ok 2 - \#getValidationFunction # time=136.798ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=88.479ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.641ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=86.956ms
                
            ok 3 - \#validate # time=190.136ms
            
        ok 1 - Level_1 # time=560.737ms
        
    ok 4 - Nested Context # time=565.939ms
    
    1..4
    # time=1332.865ms
ok 60 - test/internals/request-validate.test.js # time=1332.865ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=14.338ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=4.556ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=2.767ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.217ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.058ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.887ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=5.088ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=0.97ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.579ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.487ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=5.626ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.99ms
    
    1..12
    # time=122.671ms
ok 61 - test/internals/request.test.js # time=122.671ms

./VariantsSubtree/fastify/variant19/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   88.78 |    86.41 |   88.03 |   89.06 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   89.97 |    86.76 |   91.52 |   90.31 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |    89.7 |    90.47 |   88.88 |   91.04 | 28,32,43,55,65,147          
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |   89.85 |    77.58 |     100 |   92.18 | 22,46,109-111               
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=32.308ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.274ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.228ms
        
    ok 1 - default 404 # time=147.302ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=12.695ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=17.537ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=8.819ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.853ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=6.12ms
        
    ok 2 - customized 404 # time=70.975ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=24.895ms
        
    ok 3 - custom header in notFound handler # time=41.437ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.268ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=20.983ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=14.984ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=23.865ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=52.534ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=123.709ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=32.889ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=3.65ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=3.642ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=3.975ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=3.789ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=3.41ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=3.512ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=3.373ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=3.292ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=3.751ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=3.109ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=3.193ms
        
    ok 5 - encapsulated 404 # time=129.678ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=51.677ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.461ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=11.334ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.505ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=15.641ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=26.428ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.465ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=16.364ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.695ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.289ms
        
    ok 15 - log debug for 404 # time=15.502ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=15.424ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=10.927ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.557ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.605ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.883ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.294ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=7.13ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.014ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=35.244ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=16.939ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.552ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.093ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=9.999ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.468ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.169ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.562ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.279ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.056ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=113.607ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=5.055ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.418ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.294ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.128ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.044ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.335ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=24.626ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.48ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=5.099ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=23.815ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.625ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=79.733ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=27.688ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=33.128ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.251ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.616ms
    
    1..33
    # time=1061.602ms
ok 1 - test/404s.test.js # time=1061.602ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=160.392ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=10.132ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=27.414ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=9.789ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=13.949ms
    
    1..5
    # time=231.891ms
ok 2 - test/500s.test.js # time=231.891ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=77.517ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.595ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=89.303ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.106ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=10.081ms
    
    1..5
    # time=230.038ms
ok 3 - test/allowUnsafeRegex.test.js # time=230.038ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=65.84ms
ok 4 - test/als.test.js # time=65.84ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=317.875ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.441ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=31.982ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=88.058ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.155ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=16.768ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=11.764ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=8.971ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=7.178ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=16.316ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=211.081ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=208.658ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=15.553ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=9.413ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.698ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=8.436ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=8.974ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=4.868ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.638ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.586ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=6.518ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.751ms
    
    1..22
    # time=1037.91ms
ok 5 - test/async-await.test.js # time=1037.91ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=63.962ms
    
    1..1
    # time=73.151ms
ok 6 - test/bodyLimit.test.js # time=73.151ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3829.616ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3837.269ms
ok 7 - test/build/error-serializer.test.js # time=3837.269ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.099ms
    
    1..1
    # time=13.417ms
ok 8 - test/build/version.test.js # time=13.417ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=65.188ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=47.168ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=10.805ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=13.338ms
    
    1..4
    # time=161.783ms
ok 9 - test/case-insensitive.test.js # time=161.783ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.48ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=1.932ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.125ms
    
    1..3
    # time=26.963ms
ok 10 - test/chainable.test.js # time=26.963ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=143.425ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=63.016ms
    
    1..2
    # time=248.312ms
ok 11 - test/close-pipelining.test.js # time=248.312ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=108.426ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=18.401ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=25.227ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=20.532ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=6.551ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=10.906ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=93.432ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=118.98ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=24.202ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=270.433ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=9.066ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.09ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=10.139ms
    
    1..15
    # skip: 2
    # time=755.883ms
ok 12 - test/close.test.js # time=755.883ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=43.063ms
    
    1..1
    # time=50.874ms
ok 13 - test/connectionTimeout.test.js # time=50.874ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=97.667ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.612ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=29.353ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=18.592ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=23.209ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.582ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.809ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.518ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.656ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.375ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.871ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=31.627ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=12.754ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=5.194ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=8.516ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=13.322ms
    
    1..16
    # time=292.184ms
ok 14 - test/constrained-routes.test.js # time=292.184ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.849ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=15.631ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=27.511ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=7.851ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=8.787ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=8.449ms
    
    1..6
    # time=151.723ms
ok 15 - test/content-length.test.js # time=151.723ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=12.083ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.966ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=9.233ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=95.366ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=12.483ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=8.811ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=47.88ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=10.878ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=17.051ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.309ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.36ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.575ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.314ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=2.916ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.217ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.546ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.852ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.244ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.213ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.448ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.375ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.649ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.389ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.868ms
    
    1..24
    # time=307.608ms
ok 16 - test/content-parser.test.js # time=307.608ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=76.049ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.572ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=20.172ms
    
    1..3
    # time=131.815ms
ok 17 - test/context-config.test.js # time=131.815ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=64.518ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.931ms
    
    1..2
    # time=76.838ms
ok 18 - test/custom-http-server.test.js # time=76.838ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=44.327ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=8.065ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=129.632ms
    
    1..1
    # time=135.667ms
ok 19 - test/custom-parser-async.test.js # time=135.667ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.714ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=28.191ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.105ms
        
    ok 2 - contentTypeParser should add a custom parser # time=175.056ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=22.513ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=35.34ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=11.463ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.112ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=9.539ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=25.624ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=8.72ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.834ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.415ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=12.995ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=34.09ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.417ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.093ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=24.476ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=15.785ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.689ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.16ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.482ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=9.365ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=15.068ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=7.125ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=7.597ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.385ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=10.194ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.717ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=8.071ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=25.337ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=20.683ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=7.612ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.911ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=9.013ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=27.774ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=9.802ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.318ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.124ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=16.908ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=33.429ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=16.463ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=10.002ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=23.559ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=10.247ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=14.147ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.253ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.202ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.897ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.55ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=7.72ms
    
    1..47
    # time=812.509ms
ok 20 - test/custom-parser.test.js # time=812.509ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=92.772ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=14.354ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=28.208ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.052ms
    
    1..4
    # time=152.023ms
ok 21 - test/custom-querystring-parser.test.js # time=152.023ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.147ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=72.859ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.704ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=8.789ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=8.544ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.093ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=13.012ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=43.076ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=20.922ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=15.91ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=16.781ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=15.722ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=18.348ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.289ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.38ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.905ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.771ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.97ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=15.702ms
        
        1..5
    ok 15 - hasRequestDecorator # time=51.419ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.388ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=10.824ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=2.124ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=13.079ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.801ms
        
        1..5
    ok 16 - hasReplyDecorator # time=154.444ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=7.623ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=32.306ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=9.903ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.507ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.812ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.428ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.173ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=37.63ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=28.075ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=47.38ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.928ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=22.049ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=7.46ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.685ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=8.489ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.361ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.377ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.444ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.123ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.398ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=13.898ms
    
    1..37
    # time=820.386ms
ok 22 - test/decorator.test.js # time=820.386ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=27.864ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=70.213ms
    
    1..2
    # time=113.58ms
ok 23 - test/default-route.test.js # time=113.58ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=8.791ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.977ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.496ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.47ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.396ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.114ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=42.91ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=30.554ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.432ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=7.094ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.46ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=15.721ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=7.532ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=5.171ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=5.443ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.252ms
    
    1..17
    # time=310.069ms
ok 24 - test/delete.test.js # time=310.069ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=916.259ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=17.809ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.391ms
    
    1..3
    # time=965.624ms
ok 25 - test/diagnostics-channel.test.js # time=965.624ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=132.16ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=12.57ms
    
    1..2
    # time=152.268ms
ok 26 - test/encapsulated-error-handler.test.js # time=152.268ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=33.877ms
    
    ok 2 - should be equal
    1..2
    # time=39.318ms
ok 27 - test/esm/index.test.js # time=39.318ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.412ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.545ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.374ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.828ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.425ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=3.202ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.884ms
    
    1..7
    # time=73.416ms
ok 28 - test/fastify-instance.test.js # time=73.416ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=198.368ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=40.643ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=61.305ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=68.707ms
    
    1..4
    # time=376.64ms
ok 29 - test/fluent-schema.test.js # time=376.64ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=77.358ms
    
    1..1
    # time=84.415ms
ok 30 - test/genReqId.test.js # time=84.415ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.412ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.66ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.762ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.335ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.281ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=2.236ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=2.011ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.337ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.482ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.747ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.249ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.935ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.379ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=8.895ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.683ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.986ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.814ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.778ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.591ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.302ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.218ms
    
    1..22
    # time=356.797ms
ok 31 - test/get.test.js # time=356.797ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=48.862ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=16.084ms
    
    1..2
    # time=71.724ms
ok 32 - test/handler-context.test.js # time=71.724ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=9.704ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=3.322ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.882ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.973ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=41.881ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=7.206ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=16.521ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=5.018ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.679ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=8.797ms
    
    1..11
    # time=264.132ms
ok 33 - test/head.test.js # time=264.132ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=113.177ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=36.948ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=10.836ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=19.035ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.163ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.177ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=6.008ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=81.813ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=25.484ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=17.136ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=7.466ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=32.178ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=20.716ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=20.812ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=16.848ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=19.303ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.853ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.07ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=16.772ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=6.184ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=13.364ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=15.046ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=5.789ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=25.194ms
    
    1..20
    # time=515.392ms
ok 34 - test/hooks-async.test.js # time=515.392ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=68.758ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.501ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=12.84ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=22.039ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=8.8ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=4.928ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=33.481ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=6.032ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.47ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.718ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=2.121ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=507.727ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=12.052ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=37.241ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=8.835ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.269ms
    
    1..16
    # time=791.26ms
ok 35 - test/hooks.on-ready.test.js # time=791.26ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=157.425ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.508ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.284ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.738ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.966ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.832ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.33ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.354ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.942ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.82ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.33ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.212ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.819ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.113ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.873ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=11.366ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.265ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=3.796ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.433ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=10.72ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=2.937ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.547ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.251ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=68.961ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=20.099ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=12.105ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=22.838ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.523ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=13.167ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=20.416ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.043ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=3.939ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=38.677ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=16.375ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=14.213ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=15.556ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.848ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=14.543ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.435ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=75.003ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.86ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.257ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=3.881ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.025ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.102ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=7.394ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=5.811ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=8.046ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=7.248ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.423ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=8.593ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=28.439ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=13.201ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=9.089ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=5.003ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=4.406ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.324ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=14.513ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=23.327ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=4.326ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=30.47ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.399ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.942ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.771ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=11.098ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=10.677ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=8.163ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.916ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=6.922ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=4.347ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=67.11ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=37.942ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.765ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.935ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=9.918ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=12.498ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.406ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.902ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=6.051ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.533ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=6.177ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=7.746ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=15.704ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.803ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=508.25ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=507.431ms
    
    1..85
    # time=2225.945ms
ok 36 - test/hooks.test.js # time=2225.945ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.606ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=57.793ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.657ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.063ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=109.347ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=17.885ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=110.304ms
    
    1..5
    # time=336.6ms
ok 37 - test/http2/closing.test.js # time=336.6ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=39.413ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=12.802ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.753ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=148.163ms
    
    1..1
    # time=177.705ms
ok 38 - test/http2/constraint.test.js # time=177.705ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=107.501ms
    
    1..3
    # time=185.731ms
ok 39 - test/http2/head.test.js # time=185.731ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=10.982ms
    
    1..1
    # time=16.372ms
ok 40 - test/http2/missing-http2-module.test.js # time=16.372ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=34.96ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.295ms
    
    1..4
    # time=128.611ms
ok 41 - test/http2/plain.test.js # time=128.611ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=41.38ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=20.002ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.978ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=20.657ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=8.536ms
        
    ok 1 - secure with fallback # time=188.61ms
    
    1..1
    # time=218.676ms
ok 42 - test/http2/secure-with-fallback.test.js # time=218.676ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=37.744ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.378ms
        
    ok 1 - secure # time=145.15ms
    
    1..1
    # time=175.154ms
ok 43 - test/http2/secure.test.js # time=175.154ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=34.561ms
    
    1..2
    # time=96.23ms
ok 44 - test/http2/unknown-http-method.test.js # time=96.23ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=85.947ms
    
    1..1
    # time=118.348ms
ok 45 - test/https/custom-https-server.test.js # time=118.348ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.344ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.046ms
        
    ok 1 - https # time=138.224ms
    
    1..1
    # time=167.779ms
ok 46 - test/https/https.test.js # time=167.779ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=733.954ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.461ms
    
    1..2
    # time=746.38ms
ok 47 - test/imports.test.js # time=746.38ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.663ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=598.955ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.745ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=17.439ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=8.474ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=5.918ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.489ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=5.728ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=15.334ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=19.692ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.01ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.466ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=5.957ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=9.18ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=28.258ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=504.864ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=16.228ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=16.304ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.886ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=15.232ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=7.634ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.576ms
    
    1..22
    # time=1368.237ms
ok 48 - test/inject.test.js # time=1368.237ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=79.248ms
    
    1..1
    # time=85.132ms
ok 49 - test/internals/all.test.js # time=85.132ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=33.556ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=16.848ms
    
    1..2
    # time=59.955ms
ok 50 - test/internals/contentTypeParser.test.js # time=59.955ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=6.37ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=5.594ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.564ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.366ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.23ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=2.097ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=1.305ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=2.362ms
    
    1..8
    # time=71.386ms
ok 51 - test/internals/decorator.test.js # time=71.386ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=21.989ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.424ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=72.147ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.654ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.727ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=355.571ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=16.772ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=31.156ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=41.376ms
    
    1..9
    # time=565.462ms
ok 52 - test/internals/handleRequest.test.js # time=565.462ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=8.9ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.63ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.136ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=26.806ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.298ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.765ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.151ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.893ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.228ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=2.449ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=2.893ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=2.695ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.041ms
    
    1..13
    # time=112.569ms
ok 53 - test/internals/hookRunner.test.js # time=112.569ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=8.044ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.236ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.995ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.435ms
    
    1..4
    # time=56.713ms
ok 54 - test/internals/hooks.test.js # time=56.713ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=14.705ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.743ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.567ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.081ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.327ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.315ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=55.716ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.695ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.702ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=47.64ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.526ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.537ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.611ms
    
    1..13
    # time=239.849ms
ok 55 - test/internals/initialConfig.test.js # time=239.849ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.303ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=114.07ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=9.061ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.678ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.01ms
    
    1..5
    # time=151.914ms
ok 56 - test/internals/logger.test.js # time=151.914ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.579ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.101ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.879ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.805ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.1ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.684ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.885ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=15.734ms
    
    1..8
    # time=85.799ms
ok 57 - test/internals/plugin.test.js # time=85.799ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=92.381ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=19.349ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=52.033ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=14.69ms
        
    ok 1 - Reply\#compileSerializationSchema # time=200.846ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=23.487ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=16.591ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.759ms
        
    ok 2 - Reply\#getSerializationFunction # time=62.949ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=21.891ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=18.869ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=7.773ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=19.73ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=14.936ms
        
    ok 3 - Reply\#serializeInput # time=91.049ms
    
    1..3
    # time=369.32ms
ok 58 - test/internals/reply-serialize.test.js # time=369.32ms

./VariantsSubtree/fastify/variant18/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   85.79 |     81.3 |   83.19 |   86.01 |                             
 fastify                     |   78.22 |    83.75 |   66.07 |   78.11 |                             
  fastify.js                 |   78.22 |    83.75 |   66.07 |   78.11 | ...,670-702,715-724,732-743 
 fastify/lib                 |   86.87 |    80.97 |   86.44 |   87.15 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   89.85 |    89.36 |   85.71 |   89.85 | 20,33-37,108-110,118        
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   96.96 |    98.03 |     100 |   96.82 | 77,97                       
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   81.14 |    72.47 |   79.62 |   82.02 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   59.25 |    26.56 |      50 |   60.57 | ...-176,206,211-220,264-291 
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |   89.74 |    79.41 |   76.92 |   89.74 | 23,58,67-71                 
  schemas.js                 |   88.23 |    88.88 |   88.88 |   89.55 | 28,32,43,55,65,116,147      
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |   89.85 |    77.58 |     100 |   92.18 | 22,46,109-111               
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=32.374ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=19.908ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=14.406ms
        
    ok 1 - default 404 # time=191.229ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=22.504ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.304ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.784ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.17ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.977ms
        
    ok 2 - customized 404 # time=63.886ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=5.642ms
        
    ok 3 - custom header in notFound handler # time=33.612ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.052ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=20.811ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.561ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=10.778ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=19.423ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=68.881ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=33.602ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.685ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.699ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=5.133ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=12.459ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=7.212ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=7.281ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=8.874ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.555ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=5.104ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.499ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.458ms
        
    ok 5 - encapsulated 404 # time=154.734ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=69.506ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=12.066ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=31.835ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=17.361ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=12.864ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=19.895ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=12.696ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.761ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.759ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.249ms
        
    ok 15 - log debug for 404 # time=15.145ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=11.991ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=35.362ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=13.974ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.923ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.846ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.487ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.861ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.234ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=51.839ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=6.49ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.373ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=4.969ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=9.797ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.31ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=4.993ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.524ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.166ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.849ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=118.519ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.821ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.047ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.368ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.895ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.967ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.737ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.164ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.633ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=5.208ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=36.425ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.397ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=80.379ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=7.489ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=12.888ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=9.198ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=23.867ms
    
    1..33
    # time=1117.108ms
ok 1 - test/404s.test.js # time=1117.108ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=125.492ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.171ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=36.465ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=12.92ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=14.23ms
    
    1..5
    # time=210.42ms
ok 2 - test/500s.test.js # time=210.42ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=69.737ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=12.141ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=86.788ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=11.762ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=26.264ms
    
    1..5
    # time=234.141ms
ok 3 - test/allowUnsafeRegex.test.js # time=234.141ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=73.03ms
ok 4 - test/als.test.js # time=73.03ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=320.732ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.067ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=13.547ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=90.391ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.414ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=28.953ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.061ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=25.134ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=16.172ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.297ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=223.073ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=219.888ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=5.192ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=9.568ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=8.36ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.185ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.95ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=4.952ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.816ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.467ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.753ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.358ms
    
    1..22
    # time=1065.921ms
ok 5 - test/async-await.test.js # time=1065.921ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=70.441ms
    
    1..1
    # time=77.803ms
ok 6 - test/bodyLimit.test.js # time=77.803ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3849.388ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3864.983ms
ok 7 - test/build/error-serializer.test.js # time=3864.983ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.034ms
    
    1..1
    # time=11.424ms
ok 8 - test/build/version.test.js # time=11.424ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=68.371ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=33.232ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=11.85ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=13.713ms
    
    1..4
    # time=155.298ms
ok 9 - test/case-insensitive.test.js # time=155.298ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.442ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.118ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.169ms
    
    1..3
    # time=27.216ms
ok 10 - test/chainable.test.js # time=27.216ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=171.027ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=31.058ms
    
    1..2
    # time=224.985ms
ok 11 - test/close-pipelining.test.js # time=224.985ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=92.938ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=27.89ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=33.491ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=15.308ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=8.983ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=13.039ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=45.176ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=120.326ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=36.762ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=271.956ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=14.77ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=23.037ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=9.108ms
    
    1..15
    # skip: 2
    # time=737.698ms
ok 12 - test/close.test.js # time=737.698ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=40.667ms
    
    1..1
    # time=48.83ms
ok 13 - test/connectionTimeout.test.js # time=48.83ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=97.206ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.76ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=44.93ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=16.836ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=12.629ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.673ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.367ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.403ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.421ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.438ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.654ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=25.108ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=13.814ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=12.632ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=19.051ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.133ms
    
    1..16
    # time=306.311ms
ok 14 - test/constrained-routes.test.js # time=306.311ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.695ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=11.631ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=24.738ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=6.803ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=8.399ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.285ms
    
    1..6
    # time=143.29ms
ok 15 - test/content-length.test.js # time=143.29ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=12.188ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=42.739ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.634ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=112.234ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=16.326ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=9.696ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=45.77ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=26.796ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=17.997ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.856ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.952ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.359ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.924ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.634ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.686ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.043ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.282ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=4.208ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.614ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.997ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.967ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.107ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.768ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.223ms
    
    1..24
    # time=359.718ms
ok 16 - test/content-parser.test.js # time=359.718ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=81.589ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=14.964ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=14.425ms
    
    1..3
    # time=134.74ms
ok 17 - test/context-config.test.js # time=134.74ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=69.791ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.711ms
    
    1..2
    # time=81.539ms
ok 18 - test/custom-http-server.test.js # time=81.539ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=30.862ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.271ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=110.571ms
    
    1..1
    # time=115.655ms
ok 19 - test/custom-parser-async.test.js # time=115.655ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=13.987ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.516ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.308ms
        
    ok 2 - contentTypeParser should add a custom parser # time=181.799ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.443ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=20.053ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.739ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=7.867ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=9.635ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=8.484ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.11ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.278ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.904ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=46.523ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=31.198ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=14.545ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=18.482ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=11.587ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=13.687ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=27.84ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.751ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=6.922ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.503ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=7.813ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=6.683ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=19.527ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.02ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=21.08ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.712ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=7.88ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=35.074ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=9.059ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=5.887ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.466ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=8.004ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=5.607ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=5.975ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.581ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.344ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=13.602ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=50.219ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=12.524ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.845ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=10.433ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=10.191ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=14.554ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.001ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.045ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.088ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.043ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=13.252ms
    
    1..47
    # time=796.932ms
ok 20 - test/custom-parser.test.js # time=796.932ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=150.82ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=36.766ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=18.615ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.502ms
    
    1..4
    # time=226.746ms
ok 21 - test/custom-querystring-parser.test.js # time=226.746ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.607ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=78.054ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.546ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=15.305ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=17.145ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.734ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.931ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=54.304ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=33.085ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=19.949ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=17.968ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=16.435ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=39.041ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=9.382ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.368ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.087ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.82ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.862ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=23.985ms
        
        1..5
    ok 15 - hasRequestDecorator # time=78.599ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.856ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=3.018ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=5.372ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=27.605ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=12.666ms
        
        1..5
    ok 16 - hasReplyDecorator # time=186.759ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=24.802ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=39.237ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=17.039ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=4.104ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=5.424ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=5.289ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=10.248ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=26.118ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=29.254ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=24.118ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=23.474ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.701ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=9.303ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.9ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=8.71ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=8.438ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=20.864ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=2.381ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.844ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=19.639ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=15.321ms
    
    1..37
    # time=974.987ms
ok 22 - test/decorator.test.js # time=974.987ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=21.955ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=43.04ms
    
    1..2
    # time=74.847ms
ok 23 - test/default-route.test.js # time=74.847ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.001ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.014ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.501ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.487ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.43ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.1ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=45.964ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=33.89ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=8.123ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.559ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.13ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.941ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=4.705ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.361ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.821ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.156ms
    
    1..17
    # time=286.957ms
ok 24 - test/delete.test.js # time=286.957ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=987.739ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=19.507ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.593ms
    
    1..3
    # time=1037.464ms
ok 25 - test/diagnostics-channel.test.js # time=1037.464ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=74.924ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=12.613ms
    
    1..2
    # time=94.409ms
ok 26 - test/encapsulated-error-handler.test.js # time=94.409ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=35.407ms
    
    ok 2 - should be equal
    1..2
    # time=41.215ms
ok 27 - test/esm/index.test.js # time=41.215ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=14.766ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.317ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.963ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.388ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.084ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.478ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=14.959ms
    
    1..7
    # time=64.037ms
ok 28 - test/fastify-instance.test.js # time=64.037ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=182.382ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=47.627ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=50.528ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=59.555ms
    
    1..4
    # time=347.882ms
ok 29 - test/fluent-schema.test.js # time=347.882ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=85.781ms
    
    1..1
    # time=92.43ms
ok 30 - test/genReqId.test.js # time=92.43ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.891ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.064ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.319ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=1.996ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.925ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.52ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.938ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.289ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.428ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=47.981ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.13ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.661ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.271ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=21.616ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=8.127ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.558ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.235ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=4.933ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=3.879ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=3.78ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.699ms
    
    1..22
    # time=320.921ms
ok 31 - test/get.test.js # time=320.921ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=53.747ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=15.802ms
    
    1..2
    # time=85.304ms
ok 32 - test/handler-context.test.js # time=85.304ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.962ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.275ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.498ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.432ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=38.269ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.334ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.487ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.293ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=3.959ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.549ms
    
    1..11
    # time=222.068ms
ok 33 - test/head.test.js # time=222.068ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=119.441ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=35.61ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=22.38ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=13.652ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.056ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.065ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=15.688ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=101.418ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=7.071ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.469ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=19.852ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=15.955ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=17.461ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=14.17ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=14.257ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=15.075ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.859ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.079ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=14.678ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=5.478ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.424ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.588ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=5.677ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=23.652ms
    
    1..20
    # time=513.477ms
ok 34 - test/hooks-async.test.js # time=513.477ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=67.318ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.17ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=19.442ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=21.663ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.031ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.075ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=38.005ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=9.219ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.043ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.095ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.898ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=522.94ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.758ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=44.711ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=13.816ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=8.915ms
    
    1..16
    # time=803.912ms
ok 35 - test/hooks.on-ready.test.js # time=803.912ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=155.42ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.747ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.409ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.971ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.964ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=4.031ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.64ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=17.746ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=6.122ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.838ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.502ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.367ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.809ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.315ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=5.846ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=29.009ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=9.52ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.885ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=37.926ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=15.827ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=4.186ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=8.311ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.994ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=78.876ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=6.733ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=3.532ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=17.295ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.566ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=13.701ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=21.589ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.72ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.494ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=31.523ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=10.797ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=19.293ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=19.835ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=5.513ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.573ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.512ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=91.082ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.912ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.198ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.214ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=3.973ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.049ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.841ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=6.14ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=7.048ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.277ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.929ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.937ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=25.989ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.547ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.513ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.323ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.605ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.665ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.183ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=5.68ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=14.09ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=38.186ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=4.704ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=9.806ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.595ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.344ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=9.545ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=6.929ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=10.785ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=5.482ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.148ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=43.065ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=38.411ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.038ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.179ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=13.067ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.022ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=3.656ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.132ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.312ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.181ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=5.486ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=15.648ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=17.099ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.084ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=507.869ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=506.882ms
    
    1..85
    # time=2237.938ms
ok 36 - test/hooks.test.js # time=2237.938ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=16.898ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=79.8ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=7.423ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=20.89ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=116.567ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=20.629ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=110.745ms
    
    1..5
    # time=408.453ms
ok 37 - test/http2/closing.test.js # time=408.453ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=50.565ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.799ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.339ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=199.092ms
    
    1..1
    # time=230.823ms
ok 38 - test/http2/constraint.test.js # time=230.823ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=64.409ms
    
    1..3
    # time=146.37ms
ok 39 - test/http2/head.test.js # time=146.37ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.187ms
    
    1..1
    # time=16.574ms
ok 40 - test/http2/missing-http2-module.test.js # time=16.574ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.452ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.665ms
    
    1..4
    # time=128.092ms
ok 41 - test/http2/plain.test.js # time=128.092ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=52.97ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.484ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.372ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=24.862ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.446ms
        
    ok 1 - secure with fallback # time=196.627ms
    
    1..1
    # time=223.427ms
ok 42 - test/http2/secure-with-fallback.test.js # time=223.427ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=44.581ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=23.283ms
        
    ok 1 - secure # time=154.919ms
    
    1..1
    # time=183.377ms
ok 43 - test/http2/secure.test.js # time=183.377ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=34.682ms
    
    1..2
    # time=95.317ms
ok 44 - test/http2/unknown-http-method.test.js # time=95.317ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=82.13ms
    
    1..1
    # time=115.029ms
ok 45 - test/https/custom-https-server.test.js # time=115.029ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=40.618ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.193ms
        
    ok 1 - https # time=140.692ms
    
    1..1
    # time=170.02ms
ok 46 - test/https/https.test.js # time=170.02ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=728.503ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.344ms
    
    1..2
    # time=739.829ms
ok 47 - test/imports.test.js # time=739.829ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.726ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=593.1ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=8.024ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=23.796ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=10.171ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=7.97ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.753ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.012ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=9.84ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=19.422ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=16.5ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=9.273ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=27.328ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.536ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=23.836ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=508.216ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=13.98ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=9.004ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.342ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=6.633ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.814ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.325ms
    
    1..22
    # time=1367.304ms
ok 48 - test/inject.test.js # time=1367.304ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=55.045ms
    
    1..1
    # time=59.588ms
ok 49 - test/internals/all.test.js # time=59.588ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=28.239ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=10.093ms
    
    1..2
    # time=45.21ms
ok 50 - test/internals/contentTypeParser.test.js # time=45.21ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.587ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.742ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.211ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=0.966ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.971ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.515ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.818ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.53ms
    
    1..8
    # time=61.556ms
ok 51 - test/internals/decorator.test.js # time=61.556ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.783ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.307ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=70.165ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.69ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.745ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=305.077ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.351ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=24.827ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=48.131ms
    
    1..9
    # time=491.079ms
ok 52 - test/internals/handleRequest.test.js # time=491.079ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.041ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=4.907ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.853ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=28.007ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.19ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.829ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.112ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.78ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.472ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.225ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.646ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.393ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.365ms
    
    1..13
    # time=113.465ms
ok 53 - test/internals/hookRunner.test.js # time=113.465ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.168ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=6.406ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.252ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.236ms
    
    1..4
    # time=34.1ms
ok 54 - test/internals/hooks.test.js # time=34.1ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.079ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.985ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.877ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.064ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.663ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.298ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=59.953ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.748ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.938ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=46.381ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.642ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.684ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=3.299ms
    
    1..13
    # time=247.626ms
ok 55 - test/internals/initialConfig.test.js # time=247.626ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.64ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=87.035ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=9.452ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.649ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.709ms
    
    1..5
    # time=119.84ms
ok 56 - test/internals/logger.test.js # time=119.84ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=5.965ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.82ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.584ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.77ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.091ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.697ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.892ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=24.561ms
    
    1..8
    # time=108.516ms
ok 57 - test/internals/plugin.test.js # time=108.516ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=79.61ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=19.615ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=14.999ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.191ms
        
    ok 1 - Reply\#compileSerializationSchema # time=139.987ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=21.99ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.38ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=18.886ms
        
    ok 2 - Reply\#getSerializationFunction # time=58.727ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=42.757ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=11.312ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=13.881ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=9.204ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.531ms
        
    ok 3 - Reply\#serializeInput # time=92.66ms
    
    1..3
    # time=306.476ms
ok 58 - test/internals/reply-serialize.test.js # time=306.476ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=24.562ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=5.1ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.656ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.629ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.422ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=755.14ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.982ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.83ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.933ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=21.129ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=47.05ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=5.882ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.643ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=9.782ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.627ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.319ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.152ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=6.608ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.422ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.385ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=13.798ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.256ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.373ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=2.993ms
        
        1..15
    ok 11 - within an instance # time=209.822ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=34.979ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=14.506ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=21.144ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=85.22ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=26.557ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=7.491ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=7.837ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=7.463ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.885ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=21.313ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=22.411ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=13.732ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=27.083ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=11.356ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.127ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.02ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.373ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.324ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.598ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=14.469ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.73ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.691ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=10.046ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=5.409ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.232ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=14.939ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=3.902ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.252ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=4.235ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.375ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=3.657ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.018ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=3.039ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=3.712ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=4.812ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.033ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.498ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.611ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.634ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.953ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.771ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.915ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=20.054ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=8.167ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.895ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.427ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.905ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.436ms
        
    ok 56 - reply.then # time=21.843ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.649ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=15.218ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=8.264ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=7.377ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=7.741ms
    
    1..61
    # time=1682.71ms
ok 59 - test/internals/reply.test.js # time=1682.71ms

./VariantsSubtree/fastify/variant17/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   88.78 |    86.41 |   88.03 |   89.06 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   89.97 |    86.76 |   91.52 |   90.31 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |    89.7 |    90.47 |   88.88 |   91.04 | 28,32,43,55,65,147          
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |   89.85 |    77.58 |     100 |   92.18 | 22,46,109-111               
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=62.139ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=9.461ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=6.295ms
        
    ok 1 - default 404 # time=206.913ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=10.586ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.319ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.893ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.737ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.964ms
        
    ok 2 - customized 404 # time=53.345ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=5.947ms
        
    ok 3 - custom header in notFound handler # time=16.323ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.82ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=27.749ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=20.038ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=30.439ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=57.874ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=148.611ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=18.474ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.509ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.632ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.903ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.648ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.248ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.693ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.378ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.144ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.578ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=3.973ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=3.899ms
        
    ok 5 - encapsulated 404 # time=120.31ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=85.528ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.011ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=10.516ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.137ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.691ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=13.779ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=16.219ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=27.365ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=9.129ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=9.401ms
        
    ok 15 - log debug for 404 # time=16.41ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=12.019ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=40.717ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=8.29ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.206ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=11.147ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.36ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.712ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.125ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=52.36ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=7.046ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.361ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.023ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=9.786ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.383ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.156ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.369ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.205ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.823ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=119.601ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.943ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.178ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.574ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.844ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.027ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.793ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.322ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.787ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=25.246ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=26.937ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.294ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=97.962ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=7.627ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=13.073ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.235ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.797ms
    
    1..33
    # time=1159.789ms
ok 1 - test/404s.test.js # time=1159.789ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=88.221ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=12.151ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=55.75ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=8.767ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=11.963ms
    
    1..5
    # time=191.167ms
ok 2 - test/500s.test.js # time=191.167ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=69.779ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.759ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=90.117ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.088ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=19.946ms
    
    1..5
    # time=238.824ms
ok 3 - test/allowUnsafeRegex.test.js # time=238.824ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=44.149ms
ok 4 - test/als.test.js # time=44.149ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=316.521ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.141ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=16.211ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=104.589ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.104ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=19.715ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.493ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=10.362ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=9.03ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=20.502ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=216.808ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=214.055ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=11.319ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=18.032ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=27.118ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.317ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=8.468ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=32.05ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.981ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.593ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.525ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=9.59ms
    
    1..22
    # time=1117.185ms
ok 5 - test/async-await.test.js # time=1117.185ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=37.538ms
    
    1..1
    # time=42.031ms
ok 6 - test/bodyLimit.test.js # time=42.031ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3764.951ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3772.903ms
ok 7 - test/build/error-serializer.test.js # time=3772.903ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.736ms
    
    1..1
    # time=13.042ms
ok 8 - test/build/version.test.js # time=13.042ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=67.713ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=30.598ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=11.569ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=39.87ms
    
    1..4
    # time=159.718ms
ok 9 - test/case-insensitive.test.js # time=159.718ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.545ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.048ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.102ms
    
    1..3
    # time=25.095ms
ok 10 - test/chainable.test.js # time=25.095ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=110.588ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=14.246ms
    
    1..2
    # time=170.37ms
ok 11 - test/close-pipelining.test.js # time=170.37ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=121.305ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=19.227ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=30.55ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=23.962ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.577ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=13.58ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=62.34ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=129.089ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=29.7ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=271.323ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=9.01ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=4.926ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=9.729ms
    
    1..15
    # skip: 2
    # time=751.858ms
ok 12 - test/close.test.js # time=751.858ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=40.914ms
    
    1..1
    # time=53.136ms
ok 13 - test/connectionTimeout.test.js # time=53.136ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=101.287ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=13.314ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=42.503ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=18.29ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=6.884ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.974ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.645ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.744ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.278ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.873ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=9.562ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=34.401ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=6.249ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=12.368ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.958ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.39ms
    
    1..16
    # time=305.589ms
ok 14 - test/constrained-routes.test.js # time=305.589ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.501ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=11.013ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=23.171ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=6.189ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=10.853ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=5.799ms
    
    1..6
    # time=137.55ms
ok 15 - test/content-length.test.js # time=137.55ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=17.322ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=76.104ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.34ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=102.596ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=14.052ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=8.884ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=44.785ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=17.381ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=26.993ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.164ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.297ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.363ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.378ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=2.967ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.218ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.596ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.853ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.245ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.251ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.458ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.407ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.71ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.347ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.834ms
    
    1..24
    # time=364.552ms
ok 16 - test/content-parser.test.js # time=364.552ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=72.555ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.856ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=22.571ms
    
    1..3
    # time=124.947ms
ok 17 - test/context-config.test.js # time=124.947ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=66.199ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.689ms
    
    1..2
    # time=77.427ms
ok 18 - test/custom-http-server.test.js # time=77.427ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=37.106ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.14ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=108.601ms
    
    1..1
    # time=113.908ms
ok 19 - test/custom-parser-async.test.js # time=113.908ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.01ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.431ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.814ms
        
    ok 2 - contentTypeParser should add a custom parser # time=184.778ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=24.275ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=31.902ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=12.098ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.976ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=10.562ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=35.129ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.093ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.209ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.91ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=16.468ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=13.934ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=19.671ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=8.46ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=7.498ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=27.206ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.066ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.666ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.892ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.038ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=12.593ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=6.291ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=6.829ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=6.489ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=6.656ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.218ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.953ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=11.469ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=7.236ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=17.182ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.496ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=8.543ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=6.585ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=20.418ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.864ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.553ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=22.479ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=32.62ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=15.081ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.217ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=10.156ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=23.235ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=13.661ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.675ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.789ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.844ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.876ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.857ms
    
    1..47
    # time=756.862ms
ok 20 - test/custom-parser.test.js # time=756.862ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=98.885ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=13.43ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=32.525ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.406ms
    
    1..4
    # time=169.926ms
ok 21 - test/custom-querystring-parser.test.js # time=169.926ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.781ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=84.86ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=6.25ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=8.37ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=8.281ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=5.666ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.548ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=42.741ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=17.529ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=41.363ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=18.808ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=17.824ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=19.159ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.267ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.231ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.665ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.684ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.261ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=21.945ms
        
        1..5
    ok 15 - hasRequestDecorator # time=56.337ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.279ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.511ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.405ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.89ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.316ms
        
        1..5
    ok 16 - hasReplyDecorator # time=127.625ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=15.146ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=72.06ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=15.626ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.743ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=16.596ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=12.969ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=10.148ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=7.287ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.389ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.806ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.555ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.262ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.581ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.677ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=27.137ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=8.461ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=8.289ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.6ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.311ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.465ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.004ms
    
    1..37
    # time=848.059ms
ok 22 - test/decorator.test.js # time=848.059ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=20.415ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=45.838ms
    
    1..2
    # time=76.11ms
ok 23 - test/default-route.test.js # time=76.11ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.678ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.96ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.498ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.443ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.401ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.112ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=50.968ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=29.307ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.651ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.574ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.008ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.894ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=5.245ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.247ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.619ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.397ms
    
    1..17
    # time=292.453ms
ok 24 - test/delete.test.js # time=292.453ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=936.866ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=19.13ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=24.708ms
    
    1..3
    # time=996.262ms
ok 25 - test/diagnostics-channel.test.js # time=996.262ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=65.235ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.059ms
    
    1..2
    # time=83.416ms
ok 26 - test/encapsulated-error-handler.test.js # time=83.416ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=47.109ms
    
    ok 2 - should be equal
    1..2
    # time=60.749ms
ok 27 - test/esm/index.test.js # time=60.749ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=14.015ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=5.63ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.92ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.446ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.079ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.51ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.019ms
    
    1..7
    # time=64.264ms
ok 28 - test/fastify-instance.test.js # time=64.264ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=182.976ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=41.312ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=44.67ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=70.676ms
    
    1..4
    # time=346.894ms
ok 29 - test/fluent-schema.test.js # time=346.894ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=82.457ms
    
    1..1
    # time=89.105ms
ok 30 - test/genReqId.test.js # time=89.105ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=39.699ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.077ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.308ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=1.942ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.867ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.477ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.942ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.353ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.326ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.463ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.151ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.722ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.188ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=8.6ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.521ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.963ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.75ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.74ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.609ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.285ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=14.22ms
    
    1..22
    # time=337.754ms
ok 31 - test/get.test.js # time=337.754ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=50.331ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=15.382ms
    
    1..2
    # time=72.566ms
ok 32 - test/handler-context.test.js # time=72.566ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.804ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.187ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.456ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.418ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=32.494ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.368ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.362ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.092ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=3.971ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.536ms
    
    1..11
    # time=210.433ms
ok 33 - test/head.test.js # time=210.433ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=157.181ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=38.304ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=10.606ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=27.761ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.538ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.928ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=21.989ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=85.377ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=7.293ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.624ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=41.588ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=6.711ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=10.279ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=6.077ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=14.065ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=24.884ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.882ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=8.387ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=21.569ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=5.971ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.828ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=12.217ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.12ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=23.323ms
    
    1..20
    # time=591.116ms
ok 34 - test/hooks-async.test.js # time=591.116ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=69.088ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=11.413ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=23.235ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=18.675ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=10.116ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=13.986ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=19.976ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=6.231ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.55ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=27.673ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=6.686ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=505.263ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=20.382ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=33.226ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=16.643ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=10.878ms
    
    1..16
    # time=817.097ms
ok 35 - test/hooks.on-ready.test.js # time=817.097ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - expect truthy value
        ok 24 - expect truthy value
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - should be equal
        ok 33 - should be equal
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=165.781ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.923ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.241ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=19.204ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.496ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.807ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.249ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=17.209ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.865ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.614ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.385ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.228ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.711ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=5.925ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.192ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=12.298ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=20.058ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.083ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=10.774ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=14.623ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=8.026ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=14.561ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.809ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=106.39ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=25.922ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=4.256ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=22.434ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=4.148ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=15.209ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=26.368ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=7.85ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=5.296ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=35.708ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=24.534ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=12.31ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=4.698ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.667ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=5.409ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=5.274ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=76.287ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.537ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=6.898ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.797ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.569ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.539ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=10.205ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=7.918ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=11.588ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=7.436ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.888ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=9.052ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=27.971ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=8.818ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=8.543ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.863ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=4.402ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.221ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=14.294ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=32.078ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=4.156ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=23.41ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.423ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.867ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.624ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.457ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=7.714ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=10.428ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.398ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=6.516ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=4.259ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=61.889ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=16.603ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.478ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.823ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=13.951ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.085ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.115ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.876ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.659ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.44ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=5.763ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=16.926ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=8.246ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.199ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=508.133ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=509.403ms
    
    1..85
    # time=2287.012ms
ok 36 - test/hooks.test.js # time=2287.012ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.496ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=57.539ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.687ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.446ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=111.199ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=16.58ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=106.928ms
    
    1..5
    # time=332.692ms
ok 37 - test/http2/closing.test.js # time=332.692ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=40.448ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.279ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.431ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=150.428ms
    
    1..1
    # time=180.173ms
ok 38 - test/http2/constraint.test.js # time=180.173ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=58.102ms
    
    1..3
    # time=136.841ms
ok 39 - test/http2/head.test.js # time=136.841ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=12.202ms
    
    1..1
    # time=17.616ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.616ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.959ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.114ms
    
    1..4
    # time=131.656ms
ok 41 - test/http2/plain.test.js # time=131.656ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=40.461ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.088ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=12.615ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=17.544ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.927ms
        
    ok 1 - secure with fallback # time=184.537ms
    
    1..1
    # time=214.431ms
ok 42 - test/http2/secure-with-fallback.test.js # time=214.431ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=40.113ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=23.396ms
        
    ok 1 - secure # time=146.164ms
    
    1..1
    # time=176.315ms
ok 43 - test/http2/secure.test.js # time=176.315ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=41.271ms
    
    1..2
    # time=111.903ms
ok 44 - test/http2/unknown-http-method.test.js # time=111.903ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=91.868ms
    
    1..1
    # time=123.214ms
ok 45 - test/https/custom-https-server.test.js # time=123.214ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=39.734ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.531ms
        
    ok 1 - https # time=138.037ms
    
    1..1
    # time=167.963ms
ok 46 - test/https/https.test.js # time=167.963ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=747.006ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.531ms
    
    1..2
    # time=759.957ms
ok 47 - test/imports.test.js # time=759.957ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.359ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=605.269ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=8.467ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=18.652ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.289ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=5.258ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.76ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=5.957ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=16.684ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=19.149ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=10.518ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=9.049ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=9.997ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.01ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=16.966ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=506.292ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=20.892ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=11.192ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.264ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=6.613ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.618ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.338ms
    
    1..22
    # time=1367.86ms
ok 48 - test/inject.test.js # time=1367.86ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=49.862ms
    
    1..1
    # time=53.47ms
ok 49 - test/internals/all.test.js # time=53.47ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=27.915ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=15.132ms
    
    1..2
    # time=51.814ms
ok 50 - test/internals/contentTypeParser.test.js # time=51.814ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.949ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.79ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=3.931ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.128ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.994ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.566ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.956ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.804ms
    
    1..8
    # time=71.261ms
ok 51 - test/internals/decorator.test.js # time=71.261ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.759ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.347ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=75.887ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=3.294ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.981ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=347.525ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=15.51ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=27.383ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=49.058ms
    
    1..9
    # time=549.635ms
ok 52 - test/internals/handleRequest.test.js # time=549.635ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.089ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.537ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.904ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=24.13ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.339ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.774ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.207ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.822ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.568ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.293ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.814ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.55ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.371ms
    
    1..13
    # time=118.256ms
ok 53 - test/internals/hookRunner.test.js # time=118.256ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=10.075ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=5.521ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.789ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.43ms
    
    1..4
    # time=31.932ms
ok 54 - test/internals/hooks.test.js # time=31.932ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=16.77ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.992ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.909ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=9.625ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=18.91ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.321ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=61.448ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.66ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.789ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=45.27ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.641ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.594ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.793ms
    
    1..13
    # time=254.192ms
ok 55 - test/internals/initialConfig.test.js # time=254.192ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.675ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=84.496ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=17.37ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.788ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.71ms
    
    1..5
    # time=125.647ms
ok 56 - test/internals/logger.test.js # time=125.647ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.743ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.154ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.848ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.878ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.396ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.992ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.202ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=15.956ms
    
    1..8
    # time=83.75ms
ok 57 - test/internals/plugin.test.js # time=83.75ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=76.392ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=15.088ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=38.99ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.334ms
        
    ok 1 - Reply\#compileSerializationSchema # time=156.031ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=21.929ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=10.933ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=9.593ms
        
    ok 2 - Reply\#getSerializationFunction # time=56.705ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=23.068ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=12.968ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=9.762ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=9.582ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=10.603ms
        
    ok 3 - Reply\#serializeInput # time=76.198ms
    
    1..3
    # time=311.446ms
ok 58 - test/internals/reply-serialize.test.js # time=311.446ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.774ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=24.457ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.495ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.499ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.024ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=748.509ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.909ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.805ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.936ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=19.163ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=51.936ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.689ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.372ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.993ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=4.154ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.613ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=18.437ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=8.027ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.857ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=13.741ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=14.997ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.259ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=5.931ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=4.677ms
        
        1..15
    ok 11 - within an instance # time=220.558ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=50.441ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=14.839ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=31.665ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=92.411ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=50.001ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=7.667ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=24.646ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=13.23ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=11.164ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=20.235ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=26.614ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=19.259ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=16.517ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.094ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=11.254ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.609ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=14.048ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=8.321ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=5.076ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.664ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.639ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.935ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.687ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=18.239ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.744ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=15.253ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.108ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.359ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=4.282ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.664ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.185ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.617ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=3.422ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.527ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.588ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=3.867ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.23ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.412ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.169ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.451ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.117ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.624ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=4.783ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=6.497ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.034ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.275ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.619ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.124ms
        
    ok 56 - reply.then # time=19.067ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.487ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=28.287ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.524ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=5.567ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.024ms
    
    1..61
    # time=1750.637ms
ok 59 - test/internals/reply.test.js # time=1750.637ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=181.376ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=46.972ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=56.311ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=12.907ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=37.816ms
        
    ok 1 - \#compileValidationSchema # time=354.935ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=61.877ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.778ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=64.516ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=19.648ms
        
    ok 2 - \#getValidationFunction # time=164.012ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=59.674ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.235ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=75.148ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=13.111ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=21.441ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=17.553ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=37.552ms
        
    ok 3 - \#validate # time=258.432ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=89.151ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=52.948ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=43.135ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.181ms
                
            ok 1 - \#compileValidationSchema # time=203.481ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=53.864ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.303ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=43.755ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.808ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.461ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.255ms
                
            ok 2 - \#getValidationFunction # time=139.083ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=59.222ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=10.673ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=119.091ms
                
            ok 3 - \#validate # time=196.365ms
            
        ok 1 - Level_1 # time=545.87ms
        
    ok 4 - Nested Context # time=550.726ms
    
    1..4
    # time=1354.213ms
ok 60 - test/internals/request-validate.test.js # time=1354.213ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=18.971ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.346ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=0.869ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=9.412ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=0.986ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.821ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=0.8ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=0.926ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.106ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=0.918ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=3.654ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.758ms
    
    1..12
    # time=102.083ms
ok 61 - test/internals/request.test.js # time=102.083ms

./VariantsSubtree/fastify/variant16/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   88.87 |     86.7 |   88.03 |   89.15 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   90.07 |    87.09 |   91.52 |   90.42 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=34.401ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.797ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.692ms
        
    ok 1 - default 404 # time=176.206ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=20.433ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.868ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.448ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.311ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.098ms
        
    ok 2 - customized 404 # time=58.273ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=14.978ms
        
    ok 3 - custom header in notFound handler # time=50.918ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=5.092ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=21.545ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.936ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=11.406ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=13.752ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=68.697ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=32.314ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.476ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.596ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.939ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.529ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.341ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.519ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.153ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.194ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.635ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.051ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.007ms
        
    ok 5 - encapsulated 404 # time=112.606ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=46.958ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.204ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=10.895ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=11.08ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=27.996ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=37.393ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.207ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=26.941ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.548ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=7.853ms
        
    ok 15 - log debug for 404 # time=14.522ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=31.19ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=17.081ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.172ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.712ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.53ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.169ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.413ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.734ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=39.992ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=21.114ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=12.591ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=8.771ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=25.078ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=12.94ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.311ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=5.313ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=11.664ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.497ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=169.126ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=5.575ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=13.6ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.814ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.302ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.31ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.792ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.607ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.76ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=10.294ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=5.884ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=5.858ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=55.062ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=23.352ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=28.804ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.772ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=12.139ms
    
    1..33
    # time=1098.172ms
ok 1 - test/404s.test.js # time=1098.172ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=89.445ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=10.914ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=44.457ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=8.29ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=11.226ms
    
    1..5
    # time=174.945ms
ok 2 - test/500s.test.js # time=174.945ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=67.645ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.478ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=88.618ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=16.862ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=28.664ms
    
    1..5
    # time=232.988ms
ok 3 - test/allowUnsafeRegex.test.js # time=232.988ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=46.399ms
ok 4 - test/als.test.js # time=46.399ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=318.402ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=13.107ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=18.556ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=85.63ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.283ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=8.341ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=22.421ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=14.171ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=20.709ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=15.298ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=208.514ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=209.067ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=8.269ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=8.201ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.131ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=14.409ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.417ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=22.255ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=9.996ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=7.67ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=6.061ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.241ms
    
    1..22
    # time=1056.425ms
ok 5 - test/async-await.test.js # time=1056.425ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=61.527ms
    
    1..1
    # time=68.506ms
ok 6 - test/bodyLimit.test.js # time=68.506ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3713.098ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3720.121ms
ok 7 - test/build/error-serializer.test.js # time=3720.121ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.739ms
    
    1..1
    # time=13.115ms
ok 8 - test/build/version.test.js # time=13.115ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=90.083ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=30.851ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=19.024ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=27.552ms
    
    1..4
    # time=194.04ms
ok 9 - test/case-insensitive.test.js # time=194.04ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.116ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.592ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.536ms
    
    1..3
    # time=35.238ms
ok 10 - test/chainable.test.js # time=35.238ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=126.786ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=41.987ms
    
    1..2
    # time=190.152ms
ok 11 - test/close-pipelining.test.js # time=190.152ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=111.363ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=23.91ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=21.83ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=15.467ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=15.798ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=15.251ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=61.799ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=110.456ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=28.907ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=271.392ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=13.538ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.675ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=11.128ms
    
    1..15
    # skip: 2
    # time=725.862ms
ok 12 - test/close.test.js # time=725.862ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=41.433ms
    
    1..1
    # time=49.699ms
ok 13 - test/connectionTimeout.test.js # time=49.699ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=103.756ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=13.606ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=17.751ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=16.787ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=17.939ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.637ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.3ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.266ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.359ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.65ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.597ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=21.178ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=6.083ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=6.799ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=12.722ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=10.747ms
    
    1..16
    # time=270.304ms
ok 14 - test/constrained-routes.test.js # time=270.304ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.199ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=11.061ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=20.488ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=8.516ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=12.655ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.029ms
    
    1..6
    # time=139.085ms
ok 15 - test/content-length.test.js # time=139.085ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.864ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.359ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.617ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=93.939ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=15.577ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=9.221ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=45.698ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=27.189ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=18.143ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.832ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.913ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.215ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.777ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.537ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.654ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.01ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.506ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.982ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.601ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=5.061ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.859ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.098ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.768ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.229ms
    
    1..24
    # time=336.597ms
ok 16 - test/content-parser.test.js # time=336.597ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=76.973ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=15.668ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=15.73ms
    
    1..3
    # time=124.703ms
ok 17 - test/context-config.test.js # time=124.703ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=64.042ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=4.044ms
    
    1..2
    # time=76.291ms
ok 18 - test/custom-http-server.test.js # time=76.291ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=30.198ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.934ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=108.092ms
    
    1..1
    # time=113.265ms
ok 19 - test/custom-parser-async.test.js # time=113.265ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.637ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=26.926ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.124ms
        
    ok 2 - contentTypeParser should add a custom parser # time=177.92ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=21.553ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=48.124ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=10.36ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.299ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=29.307ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=12.396ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=3.949ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.426ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.973ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=11.967ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=36.301ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=13.62ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=4.829ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=27.591ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=11.229ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.051ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.713ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.955ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.51ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=14.373ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=6.322ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=6.699ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.437ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=6.366ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=7.402ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.576ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=23.228ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=7.297ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=19.885ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.498ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=8.698ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=6.654ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=28.81ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.57ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.504ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=15.334ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=32.778ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=14.393ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.526ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=9.74ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=20.753ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=11.635ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.266ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.186ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.747ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.571ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.989ms
    
    1..47
    # time=782.88ms
ok 20 - test/custom-parser.test.js # time=782.88ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=123.28ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=17.608ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=41.188ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=4.678ms
    
    1..4
    # time=198.968ms
ok 21 - test/custom-querystring-parser.test.js # time=198.968ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=16.263ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=74.581ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.587ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=16.244ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=15.634ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=5.826ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.527ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=48.299ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=22.752ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.167ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=16.884ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=16.086ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=28.883ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.129ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.429ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.576ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.594ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=9.497ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=18.776ms
        
        1..5
    ok 15 - hasRequestDecorator # time=51.844ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.402ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.885ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.623ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=30.186ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.748ms
        
        1..5
    ok 16 - hasReplyDecorator # time=147.349ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=7.798ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=44.387ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=10.848ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.852ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=5.327ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.713ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.912ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=18.973ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.696ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.796ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.464ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=22.783ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.067ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.423ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=7.659ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=6.764ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.192ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.351ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.148ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=19.044ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.912ms
    
    1..37
    # time=814.841ms
ok 22 - test/decorator.test.js # time=814.841ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=21.021ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=51.345ms
    
    1..2
    # time=94.314ms
ok 23 - test/default-route.test.js # time=94.314ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.036ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.992ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.69ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.467ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.413ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.305ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=43.57ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=29.945ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.053ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=10.883ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.909ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.792ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=4.687ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.201ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.716ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.386ms
    
    1..17
    # time=289.641ms
ok 24 - test/delete.test.js # time=289.641ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=923.233ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=18.897ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=32.136ms
    
    1..3
    # time=986.38ms
ok 25 - test/diagnostics-channel.test.js # time=986.38ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=67.089ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.249ms
    
    1..2
    # time=85.401ms
ok 26 - test/encapsulated-error-handler.test.js # time=85.401ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=34.276ms
    
    ok 2 - should be equal
    1..2
    # time=39.313ms
ok 27 - test/esm/index.test.js # time=39.313ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.414ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.278ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.202ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.743ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.425ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.98ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.05ms
    
    1..7
    # time=70.236ms
ok 28 - test/fastify-instance.test.js # time=70.236ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=200.145ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=53.519ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=48.159ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=69.153ms
    
    1..4
    # time=387.052ms
ok 29 - test/fluent-schema.test.js # time=387.052ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=67.245ms
    
    1..1
    # time=74.185ms
ok 30 - test/genReqId.test.js # time=74.185ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.885ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.455ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.662ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.203ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.817ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.452ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.93ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.382ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.392ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=61.072ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.671ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.309ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=8.277ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=9.282ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.847ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=5.003ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.893ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.66ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.726ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.309ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.317ms
    
    1..22
    # time=369.795ms
ok 31 - test/get.test.js # time=369.795ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=83.398ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=15.56ms
    
    1..2
    # time=105.958ms
ok 32 - test/handler-context.test.js # time=105.958ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.346ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.239ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.434ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.414ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=39.285ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.299ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.282ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.107ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.005ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.49ms
    
    1..11
    # time=219.371ms
ok 33 - test/head.test.js # time=219.371ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=153.424ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=57.195ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=10.392ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=8.128ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=5.681ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=5.799ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=8.105ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=81.051ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=9.637ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=6.857ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=6.9ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=5.5ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=6.321ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=5.708ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.656ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=9.951ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.955ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.194ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=15.213ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=9.712ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=13.379ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=14.82ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.793ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=26.465ms
    
    1..20
    # time=496.934ms
ok 34 - test/hooks-async.test.js # time=496.934ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=77.062ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=11.517ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=15.971ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=25.897ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.171ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=18.109ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=25.18ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=5.558ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.044ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=19.182ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=10.187ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=504.948ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.745ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=30.966ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=5.835ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.035ms
    
    1..16
    # time=793.126ms
ok 35 - test/hooks.on-ready.test.js # time=793.126ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equivalent
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - should be equal
        ok 33 - should be equal
        ok 34 - should be equal
        ok 35 - should be equal
        ok 36 - expect truthy value
        ok 37 - expect truthy value
        ok 38 - expect truthy value
        ok 39 - expect truthy value
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=177.908ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=35.976ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=9.195ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=21.529ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=18.978ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=6.161ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=12.016ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=17.777ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=12.003ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=23.599ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.91ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=11.25ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=16.736ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.718ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=8.369ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=25.216ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=4.825ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=16.196ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=13.97ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=13.615ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.362ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=7.558ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.924ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=72.456ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=18.815ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=12.263ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=35.894ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=4.308ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=14.459ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.375ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.12ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.349ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=29.133ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=10.429ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=19.342ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=12.976ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=11.514ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=5.102ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.638ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=74.423ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=6.615ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=5.103ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.881ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.606ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.219ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.89ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=22.392ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=7.534ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.511ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.106ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=8.191ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=8.01ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.859ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.87ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.626ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.94ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.953ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.889ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=6.33ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=19.805ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=35.665ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.433ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.852ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.923ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.701ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=45.08ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=35.374ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=12.892ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=7.196ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.648ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=12.153ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=14.229ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=9.202ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=20.593ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=13.75ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.351ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=3.814ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=4.695ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.165ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.095ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.768ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=14.201ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=17.284ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.1ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=514.354ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=522.134ms
    
    1..85
    # time=2388.33ms
ok 36 - test/hooks.test.js # time=2388.33ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.317ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=55.715ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.555ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=12.589ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=109.046ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=13.053ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=107.506ms
    
    1..5
    # time=324.111ms
ok 37 - test/http2/closing.test.js # time=324.111ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=63.936ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=14.616ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=11.097ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=187.786ms
    
    1..1
    # time=217.427ms
ok 38 - test/http2/constraint.test.js # time=217.427ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=76.341ms
    
    1..3
    # time=161.309ms
ok 39 - test/http2/head.test.js # time=161.309ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.081ms
    
    1..1
    # time=16.523ms
ok 40 - test/http2/missing-http2-module.test.js # time=16.523ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.929ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=8.145ms
    
    1..4
    # time=128.102ms
ok 41 - test/http2/plain.test.js # time=128.102ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=58.361ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=21.262ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.398ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.277ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.99ms
        
    ok 1 - secure with fallback # time=204.305ms
    
    1..1
    # time=240.969ms
ok 42 - test/http2/secure-with-fallback.test.js # time=240.969ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=43.126ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=24.801ms
        
    ok 1 - secure # time=164.262ms
    
    1..1
    # time=194.313ms
ok 43 - test/http2/secure.test.js # time=194.313ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=29.704ms
    
    1..2
    # time=88.894ms
ok 44 - test/http2/unknown-http-method.test.js # time=88.894ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=81.295ms
    
    1..1
    # time=113.489ms
ok 45 - test/https/custom-https-server.test.js # time=113.489ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=39.018ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.374ms
        
    ok 1 - https # time=134.248ms
    
    1..1
    # time=164.018ms
ok 46 - test/https/https.test.js # time=164.018ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=774.233ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.919ms
    
    1..2
    # time=787.708ms
ok 47 - test/imports.test.js # time=787.708ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=16.496ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=629.528ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.567ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=19.308ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=13.498ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.341ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.849ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.169ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=17.209ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=29.147ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.835ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.315ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=20.185ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=11.936ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=22.26ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.445ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=8.669ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=11.221ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.176ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=6.539ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.679ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.164ms
    
    1..22
    # time=1395.412ms
ok 48 - test/inject.test.js # time=1395.412ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=63.666ms
    
    1..1
    # time=68.217ms
ok 49 - test/internals/all.test.js # time=68.217ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=20.159ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=16.153ms
    
    1..2
    # time=44.775ms
ok 50 - test/internals/contentTypeParser.test.js # time=44.775ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.708ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=2.051ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.212ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.079ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.845ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.581ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.926ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=2.663ms
    
    1..8
    # time=60.68ms
ok 51 - test/internals/decorator.test.js # time=60.68ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.851ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.664ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=70.679ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=3.282ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=1.021ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=318.894ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.732ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=31.14ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=35.468ms
    
    1..9
    # time=503.301ms
ok 52 - test/internals/handleRequest.test.js # time=503.301ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.133ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.429ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.891ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=44.981ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=7.102ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=3.672ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=4.619ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=22.764ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.401ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.804ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=10.077ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.444ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.398ms
    
    1..13
    # time=171.459ms
ok 53 - test/internals/hookRunner.test.js # time=171.459ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=7.602ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.306ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.966ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.525ms
    
    1..4
    # time=54.064ms
ok 54 - test/internals/hooks.test.js # time=54.064ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.208ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.449ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=10.02ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.026ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.211ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.295ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=57.427ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.687ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.588ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=45.794ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.499ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.483ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.681ms
    
    1..13
    # time=238.891ms
ok 55 - test/internals/initialConfig.test.js # time=238.891ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.698ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=82.263ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=9.593ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.919ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.285ms
    
    1..5
    # time=116.632ms
ok 56 - test/internals/logger.test.js # time=116.632ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.519ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.073ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.934ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.89ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=5.383ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.978ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.203ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=19.157ms
    
    1..8
    # time=116.199ms
ok 57 - test/internals/plugin.test.js # time=116.199ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=73.794ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=17.169ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=35.802ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=9.048ms
        
    ok 1 - Reply\#compileSerializationSchema # time=154.055ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=30.08ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=9.652ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=18.237ms
        
    ok 2 - Reply\#getSerializationFunction # time=77.802ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=35.891ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=26.273ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=19.261ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=9.471ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.733ms
        
    ok 3 - Reply\#serializeInput # time=106.7ms
    
    1..3
    # time=346.552ms
ok 58 - test/internals/reply-serialize.test.js # time=346.552ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=27.59ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=12.012ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.422ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.321ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.054ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=715.513ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=1.329ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=1.308ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=1.28ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=21.642ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=47.454ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.345ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.362ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.793ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=4.199ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.743ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=8.064ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=8.279ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.886ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=7.165ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=7.372ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.19ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.336ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.426ms
        
        1..15
    ok 11 - within an instance # time=187.086ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=15.879ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=10.167ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=18.746ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=83.855ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=27.993ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=23.484ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=8.79ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=7.705ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=28.895ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=23.968ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=12.373ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=17.571ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=27.798ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=7.452ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.282ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.254ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.181ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.733ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.87ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.637ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.631ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.849ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.48ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=5.909ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.517ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=15.396ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.187ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.347ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=5.816ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.664ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=3.962ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.647ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=5.087ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=7.189ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.625ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.68ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.444ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.515ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=4.977ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.376ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=8.869ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.589ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=25.198ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=7.962ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.408ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.411ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.91ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.426ms
        
    ok 56 - reply.then # time=21.21ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.639ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.203ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.786ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.09ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.637ms
    
    1..61
    # time=1626.844ms
ok 59 - test/internals/reply.test.js # time=1626.844ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=144.624ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=97.93ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=79.564ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=12.035ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=37.18ms
        
    ok 1 - \#compileValidationSchema # time=391.65ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=66.131ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.636ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=78.554ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=17.703ms
        
    ok 2 - \#getValidationFunction # time=177.927ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=68.882ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.523ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=109.894ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=16.358ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=21.068ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=18.57ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=34.265ms
        
    ok 3 - \#validate # time=295.635ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=107.099ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=85.212ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=36.502ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.479ms
                
            ok 1 - \#compileValidationSchema # time=248.035ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=55.582ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.964ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=43.76ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=7.456ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.652ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.188ms
                
            ok 2 - \#getValidationFunction # time=136.791ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=69.952ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.182ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=72.932ms
                
            ok 3 - \#validate # time=156.993ms
            
        ok 1 - Level_1 # time=548.4ms
        
    ok 4 - Nested Context # time=553.151ms
    
    1..4
    # time=1437.164ms
ok 60 - test/internals/request-validate.test.js # time=1437.164ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=14.996ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.816ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.266ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.987ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.402ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.202ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.138ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.338ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.421ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.275ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=5.151ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=1.024ms
    
    1..12
    # time=113.085ms
ok 61 - test/internals/request.test.js # time=113.085ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=40.156ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=16.64ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=18.459ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=17.704ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=14.445ms
    
    1..5
    # time=114.703ms
ok 62 - test/internals/server.test.js # time=114.703ms

./VariantsSubtree/fastify/variant15/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |    89.7 |    87.28 |   88.88 |   89.96 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   91.02 |    87.75 |   92.54 |   91.34 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   81.48 |    63.54 |   93.33 |   81.87 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=29.102ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.998ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.906ms
        
    ok 1 - default 404 # time=136.262ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=15.535ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.964ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.567ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.217ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.87ms
        
    ok 2 - customized 404 # time=80.248ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=4.691ms
        
    ok 3 - custom header in notFound handler # time=17.871ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.05ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=18.988ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=5.569ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=25.5ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=18.871ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=78.908ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=25.263ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.376ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.509ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.953ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.401ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.287ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=5.03ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.234ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.206ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.742ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.037ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.096ms
        
    ok 5 - encapsulated 404 # time=143.029ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=99.844ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.466ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=32.463ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=11.62ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.731ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=13.934ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.075ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.936ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.582ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=7.888ms
        
    ok 15 - log debug for 404 # time=14.645ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=12.011ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=39.722ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=8.749ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.725ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=7.871ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=3.825ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.397ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=11.34ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=57.874ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=7.02ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.379ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.247ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=9.945ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.423ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=4.644ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=6.813ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=8.237ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.034ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=124.622ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.049ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=5.491ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=3.704ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.044ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=16.09ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.606ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=18.569ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.382ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=16.012ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=5.701ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=5.927ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=59.22ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=14.16ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=19.469ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.701ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.93ms
    
    1..33
    # time=1065.795ms
ok 1 - test/404s.test.js # time=1065.795ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=123.895ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=12.984ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=34.332ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=10.588ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=15.722ms
    
    1..5
    # time=211.075ms
ok 2 - test/500s.test.js # time=211.075ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=73.002ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.979ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=91.604ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=7.673ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=28.931ms
    
    1..5
    # time=239.426ms
ok 3 - test/allowUnsafeRegex.test.js # time=239.426ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=43.531ms
ok 4 - test/als.test.js # time=43.531ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=313.707ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=11.983ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=12.961ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=93.727ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.109ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=9.261ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=25.063ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=14.014ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=9.032ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.063ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=211.723ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=209.298ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=18.96ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=13.678ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=10.593ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=14.836ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=44.71ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=6.001ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.072ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.897ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=6.044ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.477ms
    
    1..22
    # time=1079.807ms
ok 5 - test/async-await.test.js # time=1079.807ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=37.871ms
    
    1..1
    # time=42.519ms
ok 6 - test/bodyLimit.test.js # time=42.519ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3899.987ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3906.476ms
ok 7 - test/build/error-serializer.test.js # time=3906.476ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=5.994ms
    
    1..1
    # time=11.394ms
ok 8 - test/build/version.test.js # time=11.394ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=66.876ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=32.938ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=10.406ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=22.331ms
    
    1..4
    # time=154.917ms
ok 9 - test/case-insensitive.test.js # time=154.917ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.387ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.067ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.095ms
    
    1..3
    # time=25.268ms
ok 10 - test/chainable.test.js # time=25.268ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=113.825ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=28.776ms
    
    1..2
    # time=181.603ms
ok 11 - test/close-pipelining.test.js # time=181.603ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=103.925ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=20.931ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=21.652ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=26.821ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.804ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=25.975ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=35.748ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=107.459ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=25.261ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=276.684ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=6.455ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=9.434ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=10.958ms
    
    1..15
    # skip: 2
    # time=696.94ms
ok 12 - test/close.test.js # time=696.94ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=43.179ms
    
    1..1
    # time=51.445ms
ok 13 - test/connectionTimeout.test.js # time=51.445ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=98.351ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.596ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=24.368ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=26.16ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=8.862ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.616ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.32ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.323ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.339ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.436ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.7ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=19.866ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=20.397ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=11.501ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.12ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.083ms
    
    1..16
    # time=273.738ms
ok 14 - test/constrained-routes.test.js # time=273.738ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=126.197ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=20.756ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=11.013ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=6.595ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=8.094ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=13.909ms
    
    1..6
    # time=204.985ms
ok 15 - test/content-length.test.js # time=204.985ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.919ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.495ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.342ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=92.623ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=14.521ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=18.412ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=34.524ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=20.72ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=24.025ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=4.871ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.195ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.233ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.284ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.037ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.159ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.58ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.754ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.17ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.222ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.445ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=3.771ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.765ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.427ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.876ms
    
    1..24
    # time=315.484ms
ok 16 - test/content-parser.test.js # time=315.484ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=80.86ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=16.446ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=33.436ms
    
    1..3
    # time=145.299ms
ok 17 - test/context-config.test.js # time=145.299ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=60.813ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.619ms
    
    1..2
    # time=71.638ms
ok 18 - test/custom-http-server.test.js # time=71.638ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=32.86ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.062ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=122.694ms
    
    1..1
    # time=127.998ms
ok 19 - test/custom-parser-async.test.js # time=127.998ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.484ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=25.971ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.084ms
        
    ok 2 - contentTypeParser should add a custom parser # time=178.903ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.389ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=16.767ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.573ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.076ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=13.358ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=8.837ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.04ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.413ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.964ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=28.408ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=18.123ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.106ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=18.624ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=16.329ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=17.525ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.733ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.099ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.481ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=30.244ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=18.354ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=6.645ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=7.553ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.409ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=7.78ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=9.155ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=8.634ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=13.794ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=14.724ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=9.647ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.132ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=8.386ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=6.816ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.865ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.645ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.362ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=14.181ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=42.655ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=10.661ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.866ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=10.737ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=10.322ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=11.43ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.09ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.954ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.663ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.558ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.926ms
    
    1..47
    # time=744.358ms
ok 20 - test/custom-parser.test.js # time=744.358ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=94.224ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=14.295ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=26.358ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.068ms
    
    1..4
    # time=164.074ms
ok 21 - test/custom-querystring-parser.test.js # time=164.074ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.744ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=77.146ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=8.77ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=11.552ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=17.603ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.3ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=15.043ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=53.263ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=18.112ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=19.732ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=17.722ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=16.536ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=14.928ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.247ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.292ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.785ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.748ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=13.654ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.381ms
        
        1..5
    ok 15 - hasRequestDecorator # time=43.715ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=3.002ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=12.266ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.996ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.839ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.554ms
        
        1..5
    ok 16 - hasReplyDecorator # time=130.937ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=25.896ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=33.902ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=15.65ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.688ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.932ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.527ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.495ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=22.855ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.503ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.841ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.153ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=20.727ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=19.869ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=14.03ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=8.849ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=9.725ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=8.118ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.584ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.3ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=14.683ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.018ms
    
    1..37
    # time=821.337ms
ok 22 - test/decorator.test.js # time=821.337ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=19.006ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=60.715ms
    
    1..2
    # time=88.986ms
ok 23 - test/default-route.test.js # time=88.986ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=8.915ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.963ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.486ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.424ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.356ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=6.482ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=41.972ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=35.825ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.484ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=7.308ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=6.007ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=5.003ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=14.667ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=5.389ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.973ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.767ms
    
    1..17
    # time=321.023ms
ok 24 - test/delete.test.js # time=321.023ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=912.346ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=19.949ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.877ms
    
    1..3
    # time=962.8ms
ok 25 - test/diagnostics-channel.test.js # time=962.8ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=65.31ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=10.651ms
    
    1..2
    # time=82.079ms
ok 26 - test/encapsulated-error-handler.test.js # time=82.079ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=31.724ms
    
    ok 2 - should be equal
    1..2
    # time=36.77ms
ok 27 - test/esm/index.test.js # time=36.77ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.132ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=17.329ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=7.803ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.49ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.114ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.662ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=14.187ms
    
    1..7
    # time=80.418ms
ok 28 - test/fastify-instance.test.js # time=80.418ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=185.786ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=55.162ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=73.213ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=63.76ms
    
    1..4
    # time=385.013ms
ok 29 - test/fluent-schema.test.js # time=385.013ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=98.176ms
    
    1..1
    # time=104.488ms
ok 30 - test/genReqId.test.js # time=104.488ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=10.057ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.497ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.671ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.301ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.211ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.488ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.934ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.353ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.734ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.788ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.475ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.555ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=4.691ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=4.711ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=4.784ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.249ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.175ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=4.977ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=12.303ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.129ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=9.087ms
    
    1..22
    # time=306.279ms
ok 31 - test/get.test.js # time=306.279ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=51.922ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=18.557ms
    
    1..2
    # time=87.286ms
ok 32 - test/handler-context.test.js # time=87.286ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.893ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.199ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.489ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.455ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=39.131ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.475ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.369ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.244ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.069ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=10.54ms
    
    1..11
    # time=228.041ms
ok 33 - test/head.test.js # time=228.041ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=135.269ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=33.9ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=29.37ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=18.424ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.759ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=12.541ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=16.016ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=78.445ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=28.58ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=9.464ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=8.474ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=28.169ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=8.029ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=6.912ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.733ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=16.142ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=2.943ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.574ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=17.065ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=5.884ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.784ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=14.113ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.288ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=25.365ms
    
    1..20
    # time=541.153ms
ok 34 - test/hooks-async.test.js # time=541.153ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=67.443ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=9.941ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=19.338ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=26.919ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=8.952ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=5.886ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=29.118ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=10.525ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.02ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.073ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.877ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=514.355ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=4.679ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=65.441ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=15.349ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=12.004ms
    
    1..16
    # time=844.092ms
ok 35 - test/hooks.on-ready.test.js # time=844.092ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=156.211ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.78ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.17ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.559ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.27ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.833ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.416ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=17.144ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.849ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.703ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.236ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.103ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.735ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.095ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.195ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=11.527ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.345ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=3.839ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.521ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.209ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=5.953ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=8.015ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=11.546ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=94.513ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=18.142ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=3.617ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=17.32ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=11.628ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=22.229ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.218ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.197ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.56ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=21.577ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=8.823ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=16.283ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=12.537ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=13.03ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=6.246ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.393ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=76.748ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.811ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.689ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.133ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.043ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.056ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=7.317ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=21.589ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=7.248ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.053ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.495ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.762ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=7.837ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.623ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.799ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.491ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.787ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.868ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.425ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=6.384ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=7.524ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=15.161ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.196ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.955ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=6.199ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=20.342ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=35.385ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=14.47ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=24.841ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=8.552ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=4.388ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=14.968ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=15.926ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=11.925ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=7.354ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=9.416ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=13.333ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=5.424ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.054ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=6.156ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.604ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.648ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=10.871ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=15.533ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.69ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.041ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=511.283ms
    
    1..85
    # time=2176.728ms
ok 36 - test/hooks.test.js # time=2176.728ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=12.973ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=59.53ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=7.376ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=20.56ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=123.484ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=21.643ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=116.118ms
    
    1..5
    # time=371.929ms
ok 37 - test/http2/closing.test.js # time=371.929ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=40.672ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.484ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.173ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=148.982ms
    
    1..1
    # time=177.364ms
ok 38 - test/http2/constraint.test.js # time=177.364ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=59.814ms
    
    1..3
    # time=145.478ms
ok 39 - test/http2/head.test.js # time=145.478ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=10.758ms
    
    1..1
    # time=16.362ms
ok 40 - test/http2/missing-http2-module.test.js # time=16.362ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=34.248ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.371ms
    
    1..4
    # time=126.676ms
ok 41 - test/http2/plain.test.js # time=126.676ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=45.22ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.495ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.369ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.293ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.715ms
        
    ok 1 - secure with fallback # time=189.551ms
    
    1..1
    # time=221.682ms
ok 42 - test/http2/secure-with-fallback.test.js # time=221.682ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=41.762ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.709ms
        
    ok 1 - secure # time=154.184ms
    
    1..1
    # time=185.867ms
ok 43 - test/http2/secure.test.js # time=185.867ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=33.931ms
    
    1..2
    # time=91.657ms
ok 44 - test/http2/unknown-http-method.test.js # time=91.657ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=92.999ms
    
    1..1
    # time=125.219ms
ok 45 - test/https/custom-https-server.test.js # time=125.219ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=37.639ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.274ms
        
    ok 1 - https # time=136.639ms
    
    1..1
    # time=166.625ms
ok 46 - test/https/https.test.js # time=166.625ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=734.847ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.447ms
    
    1..2
    # time=747.354ms
ok 47 - test/imports.test.js # time=747.354ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.128ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=592.068ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=8.458ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=10.42ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.578ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.664ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=6.043ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=8.987ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=6.254ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=24.952ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=13.998ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.61ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=22.423ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=14.21ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=16.893ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=504.993ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=8.499ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=10.479ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.618ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=7.268ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=6.292ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.796ms
    
    1..22
    # time=1349.42ms
ok 48 - test/inject.test.js # time=1349.42ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=84.276ms
    
    1..1
    # time=89.896ms
ok 49 - test/internals/all.test.js # time=89.896ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=21.405ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=11.53ms
    
    1..2
    # time=46.256ms
ok 50 - test/internals/contentTypeParser.test.js # time=46.256ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=7.021ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.945ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.249ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.138ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.027ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.404ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.854ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.928ms
    
    1..8
    # time=72.114ms
ok 51 - test/internals/decorator.test.js # time=72.114ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=17.227ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.808ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=83.667ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=9.397ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.767ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=335.641ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=23.404ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=41.557ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=58.118ms
    
    1..9
    # time=609.052ms
ok 52 - test/internals/handleRequest.test.js # time=609.052ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=9.97ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.521ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.997ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=27.553ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.206ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.732ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.126ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.771ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.521ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.068ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.766ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.386ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.395ms
    
    1..13
    # time=125.089ms
ok 53 - test/internals/hookRunner.test.js # time=125.089ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.642ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=5.652ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.318ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.063ms
    
    1..4
    # time=46.251ms
ok 54 - test/internals/hooks.test.js # time=46.251ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.396ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.092ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=10.213ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.097ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.477ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.365ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=60.193ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=3.544ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=9.808ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=47.127ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=2.101ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.794ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=3.11ms
    
    1..13
    # time=254.603ms
ok 55 - test/internals/initialConfig.test.js # time=254.603ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.816ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=77.305ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=8.977ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.884ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.246ms
    
    1..5
    # time=108.92ms
ok 56 - test/internals/logger.test.js # time=108.92ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.445ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.054ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.815ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.829ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.355ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.966ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.154ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.938ms
    
    1..8
    # time=99.759ms
ok 57 - test/internals/plugin.test.js # time=99.759ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=89.015ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=15.215ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=26.049ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=16.775ms
        
    ok 1 - Reply\#compileSerializationSchema # time=164.25ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=28.911ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.455ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.727ms
        
    ok 2 - Reply\#getSerializationFunction # time=55.647ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=21.758ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=14.44ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=15.567ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=7.924ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=20.088ms
        
    ok 3 - Reply\#serializeInput # time=87.597ms
    
    1..3
    # time=324.648ms
ok 58 - test/internals/reply-serialize.test.js # time=324.648ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=35.352ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=4.621ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.2ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.337ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=2.222ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=754.74ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=1.268ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=1.187ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=1.276ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=27.773ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=64.701ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.124ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.707ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.485ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.743ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.295ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=14.751ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=11.527ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=6.903ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.56ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.894ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.914ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.075ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.196ms
        
        1..15
    ok 11 - within an instance # time=229.493ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=16.911ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=18.047ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=18.67ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=88.059ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=35.881ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=9.312ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=28.414ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=10.676ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.988ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=21.848ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=10.621ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=14.006ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=27.748ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=7.315ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=11.2ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=10.015ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=14.156ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=8.228ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=5.13ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=15.489ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=4.778ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=5.445ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=7.039ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.173ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.85ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=16.36ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.289ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.659ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=4.813ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=9.17ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=5.378ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=4.037ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.781ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=7.065ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.896ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.067ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.499ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.607ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.652ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.83ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.807ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.902ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=19.476ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=7.91ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.589ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.39ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.899ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.413ms
        
    ok 56 - reply.then # time=21.287ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.727ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.245ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=7.492ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.741ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=7.367ms
    
    1..61
    # time=1730.016ms
ok 59 - test/internals/reply.test.js # time=1730.016ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=150.833ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=45.732ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=76.575ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=11.713ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=36.401ms
        
    ok 1 - \#compileValidationSchema # time=339.363ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=84.948ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.543ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=77.679ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=17.888ms
        
    ok 2 - \#getValidationFunction # time=195.644ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=71.589ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.629ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=111.381ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=10.882ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=20.144ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=26.529ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=33.673ms
        
    ok 3 - \#validate # time=292.737ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=89.44ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=77.897ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=50.765ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.582ms
                
            ok 1 - \#compileValidationSchema # time=236.877ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=57.986ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.769ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=44.592ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.253ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.75ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.488ms
                
            ok 2 - \#getValidationFunction # time=144.966ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=72.354ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.436ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=101.158ms
                
            ok 3 - \#validate # time=187.923ms
            
        ok 1 - Level_1 # time=576.428ms
        
    ok 4 - Nested Context # time=581.151ms
    
    1..4
    # time=1422.195ms
ok 60 - test/internals/request-validate.test.js # time=1422.195ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=15.263ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.68ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.45ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.497ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.395ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.204ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.159ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.453ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.665ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.27ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=5.1ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=1.044ms
    
    1..12
    # time=109.851ms
ok 61 - test/internals/request.test.js # time=109.851ms

./VariantsSubtree/fastify/variant14/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   88.87 |     86.7 |   88.03 |   89.15 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   90.07 |    87.09 |   91.52 |   90.42 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=29.344ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.278ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.078ms
        
    ok 1 - default 404 # time=177.586ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=9.944ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.773ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.298ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.95ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=6.631ms
        
    ok 2 - customized 404 # time=49.924ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=14.628ms
        
    ok 3 - custom header in notFound handler # time=35.352ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.993ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=28.621ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=7.037ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=17.097ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=26.331ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=98.412ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=18.653ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.681ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.56ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=5.136ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.615ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.317ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.748ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.389ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.221ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.677ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.031ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.214ms
        
    ok 5 - encapsulated 404 # time=110.753ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=74.628ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=12.063ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=18.73ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=23.423ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.65ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=13.848ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=26.447ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=28ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.763ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.616ms
        
    ok 15 - log debug for 404 # time=15.58ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=12.191ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=15.104ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=13.878ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.153ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=13.39ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=7.507ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.851ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.354ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=59.211ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=6.606ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.571ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.241ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.124ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.75ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.355ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.714ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.333ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.003ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=128.223ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=5.11ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.371ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.34ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.998ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.028ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.477ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=41.552ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.03ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=4.336ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=15.797ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=14.58ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=87.219ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=7.3ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=20.882ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.357ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=12.007ms
    
    1..33
    # time=1092.045ms
ok 1 - test/404s.test.js # time=1092.045ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=84.502ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.954ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=47.387ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=12.133ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=29.816ms
    
    1..5
    # time=197.371ms
ok 2 - test/500s.test.js # time=197.371ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=68.929ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=13.166ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=85.591ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=2.947ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=10.153ms
    
    1..5
    # time=218.076ms
ok 3 - test/allowUnsafeRegex.test.js # time=218.076ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=45.241ms
ok 4 - test/als.test.js # time=45.241ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=314.686ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=43.94ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=40.866ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=91.408ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.469ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=26.388ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=13.443ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=22.548ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=16.617ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.526ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=212.445ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=208.224ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=4.987ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=8.748ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.231ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=7.079ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.521ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=5.573ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.217ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=7.105ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=6.499ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.619ms
    
    1..22
    # time=1095.502ms
ok 5 - test/async-await.test.js # time=1095.502ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=80.512ms
    
    1..1
    # time=89.045ms
ok 6 - test/bodyLimit.test.js # time=89.045ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3919.889ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3927.424ms
ok 7 - test/build/error-serializer.test.js # time=3927.424ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.786ms
    
    1..1
    # time=13.488ms
ok 8 - test/build/version.test.js # time=13.488ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=66.085ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=34.839ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=11.013ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=26.341ms
    
    1..4
    # time=157.851ms
ok 9 - test/case-insensitive.test.js # time=157.851ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.221ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.552ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.932ms
    
    1..3
    # time=27.981ms
ok 10 - test/chainable.test.js # time=27.981ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=120.26ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=35.444ms
    
    1..2
    # time=171.059ms
ok 11 - test/close-pipelining.test.js # time=171.059ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=85.533ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=19.946ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=37.412ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=19.969ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=11.964ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=10.073ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=58.451ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=114.844ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=23.809ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=287.609ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=5.506ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=8.011ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=9.296ms
    
    1..15
    # skip: 2
    # time=716.343ms
ok 12 - test/close.test.js # time=716.343ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=40.762ms
    
    1..1
    # time=56.504ms
ok 13 - test/connectionTimeout.test.js # time=56.504ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=104.233ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=13.29ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=22.583ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=12.281ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=7.314ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=2.235ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.875ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=4.243ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.538ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.957ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=9.969ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=32.247ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=13.635ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=6.28ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.472ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.573ms
    
    1..16
    # time=284.957ms
ok 14 - test/constrained-routes.test.js # time=284.957ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.163ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=11.4ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=16.983ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=15.049ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=10.914ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.297ms
    
    1..6
    # time=141.123ms
ok 15 - test/content-length.test.js # time=141.123ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.478ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=37.438ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.644ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=92.327ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=16.17ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=15.076ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=35.004ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=11.77ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=18.433ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=6.015ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=3.012ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.566ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=3.038ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.639ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.875ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.111ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.508ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=5.599ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.698ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.994ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.963ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.142ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=5.079ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.381ms
    
    1..24
    # time=316.096ms
ok 16 - test/content-parser.test.js # time=316.096ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=79.055ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.811ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=20.652ms
    
    1..3
    # time=135.205ms
ok 17 - test/context-config.test.js # time=135.205ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=62.065ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.537ms
    
    1..2
    # time=72.858ms
ok 18 - test/custom-http-server.test.js # time=72.858ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=33.278ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.233ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=103.187ms
    
    1..1
    # time=108.327ms
ok 19 - test/custom-parser-async.test.js # time=108.327ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.858ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.047ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.494ms
        
    ok 2 - contentTypeParser should add a custom parser # time=192.118ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=25.256ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=38.87ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.856ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.722ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=31.402ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=11.384ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.303ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.146ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.849ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=15.555ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=21.69ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=22.684ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=6.554ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=8.059ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=13.685ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.54ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.727ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.946ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.804ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=8.425ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=15.659ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=6.969ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=6.878ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=7.038ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=7.366ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.705ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=11.386ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=7.022ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=22.976ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.075ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=9.518ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=22.823ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.609ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.673ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.491ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=14.039ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=32.667ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=14.878ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.274ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=11.337ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=22.796ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=19.521ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.688ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.038ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.74ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.764ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=7.055ms
    
    1..47
    # time=790.531ms
ok 20 - test/custom-parser.test.js # time=790.531ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=90.659ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=12.775ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=31.294ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.009ms
    
    1..4
    # time=146.921ms
ok 21 - test/custom-querystring-parser.test.js # time=146.921ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=43.587ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=81.486ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.339ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=17.396ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=11.417ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.41ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=10.221ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=44.929ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=18.665ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=19.427ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=24.297ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=17.017ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=30.125ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.281ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.273ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.813ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.708ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.304ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.496ms
        
        1..5
    ok 15 - hasRequestDecorator # time=44.199ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.285ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.518ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.437ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.969ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.412ms
        
        1..5
    ok 16 - hasReplyDecorator # time=122.291ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=7.365ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=47.603ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=10.756ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=6.741ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=5.053ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=5.309ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.375ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=8.253ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.662ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=21.987ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.825ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.005ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.424ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.562ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=18.42ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.68ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.603ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.519ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.364ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.886ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.385ms
    
    1..37
    # time=822.507ms
ok 22 - test/decorator.test.js # time=822.507ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=21.471ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=75.647ms
    
    1..2
    # time=106.439ms
ok 23 - test/default-route.test.js # time=106.439ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.162ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.004ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.408ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.87ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.453ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.117ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=42.093ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=36.266ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.53ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.323ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.865ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.696ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=4.378ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=3.961ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.546ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.39ms
    
    1..17
    # time=301.137ms
ok 24 - test/delete.test.js # time=301.137ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=918.042ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=17.547ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.406ms
    
    1..3
    # time=967.385ms
ok 25 - test/diagnostics-channel.test.js # time=967.385ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=67.01ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.406ms
    
    1..2
    # time=85.09ms
ok 26 - test/encapsulated-error-handler.test.js # time=85.09ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=36.552ms
    
    ok 2 - should be equal
    1..2
    # time=42.563ms
ok 27 - test/esm/index.test.js # time=42.563ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.094ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.197ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.918ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.438ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.092ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.545ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=14.954ms
    
    1..7
    # time=64.448ms
ok 28 - test/fastify-instance.test.js # time=64.448ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=213.375ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=45.227ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=67.225ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=73.258ms
    
    1..4
    # time=410.934ms
ok 29 - test/fluent-schema.test.js # time=410.934ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=67.135ms
    
    1..1
    # time=74.203ms
ok 30 - test/genReqId.test.js # time=74.203ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=11.611ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=3.537ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=3.65ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=3.172ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=3.246ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=4.861ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=8.936ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.341ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.368ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=38.94ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.555ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.328ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=4.765ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=11.491ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=11.389ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.384ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=5.816ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.043ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=3.985ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.193ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.609ms
    
    1..22
    # time=338.698ms
ok 31 - test/get.test.js # time=338.698ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=51.999ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=15.775ms
    
    1..2
    # time=75.741ms
ok 32 - test/handler-context.test.js # time=75.741ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=9.403ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.507ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.794ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.804ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=38.991ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.929ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=14.41ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=5.284ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.428ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.764ms
    
    1..11
    # time=245.002ms
ok 33 - test/head.test.js # time=245.002ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=168.343ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=41.879ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=10.564ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=16.023ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.375ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=12.476ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=15.029ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=73.465ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=6.438ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=6.989ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=10.477ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=5.956ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=6.374ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=5.682ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=10.788ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=9.246ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.75ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=1.968ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=14.338ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=22.603ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=13.532ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.843ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.239ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=24.058ms
    
    1..20
    # time=493.935ms
ok 34 - test/hooks-async.test.js # time=493.935ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=65.853ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=9.919ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=17.346ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=22.584ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=8.826ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=5.808ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=32.584ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=12.798ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=4.81ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=8.902ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.856ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=516.836ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=4.56ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=40.12ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=4.582ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.01ms
    
    1..16
    # time=785.85ms
ok 35 - test/hooks.on-ready.test.js # time=785.85ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=191.002ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=36.318ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=15.691ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=28.285ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=24.834ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=5.653ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=9.262ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.871ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=14.632ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.615ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.685ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=8.6ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.979ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=7.084ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=5.819ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=23.434ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=4.993ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=3.871ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=8.468ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=8.863ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.672ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=7.703ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.712ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=65.724ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=14.014ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=9.573ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=55.236ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=14.116ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=55.009ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=33.745ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=8.045ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=5.424ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=47.465ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=6.737ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=45.586ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=4.526ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.157ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.86ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.842ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=74.355ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.343ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.75ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.49ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=5.07ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.351ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.986ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=18.672ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=9.077ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=5.137ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.674ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.668ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=7.558ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.478ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.552ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.303ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.666ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.628ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.11ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=20.729ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=11.894ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=27.219ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=4.653ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.384ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.155ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.863ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=45.375ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=27.846ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.321ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=6.468ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.291ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=12.125ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=13.837ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=9.265ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.214ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=17.149ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=14.896ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.232ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.794ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.852ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=8.49ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=5.383ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=7.34ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=15.067ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.514ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=508.462ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=516.959ms
    
    1..85
    # time=2414.759ms
ok 36 - test/hooks.test.js # time=2414.759ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.766ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=57.082ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.76ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.273ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=109.576ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=13.143ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=107.62ms
    
    1..5
    # time=327ms
ok 37 - test/http2/closing.test.js # time=327ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=41.266ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.661ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.581ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=146.469ms
    
    1..1
    # time=175.386ms
ok 38 - test/http2/constraint.test.js # time=175.386ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=59.581ms
    
    1..3
    # time=138.657ms
ok 39 - test/http2/head.test.js # time=138.657ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.345ms
    
    1..1
    # time=17.123ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.123ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.51ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.03ms
    
    1..4
    # time=127.821ms
ok 41 - test/http2/plain.test.js # time=127.821ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=38.696ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.518ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.362ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.982ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=8.154ms
        
    ok 1 - secure with fallback # time=177.434ms
    
    1..1
    # time=211.045ms
ok 42 - test/http2/secure-with-fallback.test.js # time=211.045ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=39.475ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.753ms
        
    ok 1 - secure # time=141.973ms
    
    1..1
    # time=171.664ms
ok 43 - test/http2/secure.test.js # time=171.664ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=35.926ms
    
    1..2
    # time=95.334ms
ok 44 - test/http2/unknown-http-method.test.js # time=95.334ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=82.569ms
    
    1..1
    # time=116.389ms
ok 45 - test/https/custom-https-server.test.js # time=116.389ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.434ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=15.465ms
        
    ok 1 - https # time=136.29ms
    
    1..1
    # time=165.904ms
ok 46 - test/https/https.test.js # time=165.904ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=702.485ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=3.345ms
    
    1..2
    # time=717.449ms
ok 47 - test/imports.test.js # time=717.449ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.159ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=600.228ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=8.08ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=20.864ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=10.487ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.999ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=6.126ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.519ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=10.398ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=12.034ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=12.321ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.845ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=16.851ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=15.303ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=15.342ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.673ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=12.398ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=5.712ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.556ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=7.128ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.944ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.619ms
    
    1..22
    # time=1352.808ms
ok 48 - test/inject.test.js # time=1352.808ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=76.613ms
    
    1..1
    # time=81.621ms
ok 49 - test/internals/all.test.js # time=81.621ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=17.396ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.563ms
    
    1..2
    # time=43.828ms
ok 50 - test/internals/contentTypeParser.test.js # time=43.828ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=6.235ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=2.104ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.54ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.381ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.998ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.392ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.852ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=2.551ms
    
    1..8
    # time=72.337ms
ok 51 - test/internals/decorator.test.js # time=72.337ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=6.16ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.621ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=70.738ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=3.226ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.961ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=310.899ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.169ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=19.764ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=41.88ms
    
    1..9
    # time=488.556ms
ok 52 - test/internals/handleRequest.test.js # time=488.556ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=8.785ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.766ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.105ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=23.546ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.315ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.777ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.213ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.126ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=3.693ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=2.612ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=2.944ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=2.722ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.039ms
    
    1..13
    # time=103.455ms
ok 53 - test/internals/hookRunner.test.js # time=103.455ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.589ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.252ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.019ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.52ms
    
    1..4
    # time=39.03ms
ok 54 - test/internals/hooks.test.js # time=39.03ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=16.052ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.585ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=12.509ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.638ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=16.072ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.744ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=53.498ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=3.22ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=5.094ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=50.807ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=2.332ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.925ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=3.168ms
    
    1..13
    # time=257.224ms
ok 55 - test/internals/initialConfig.test.js # time=257.224ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.712ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=77.957ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=8.587ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.67ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.555ms
    
    1..5
    # time=107.856ms
ok 56 - test/internals/logger.test.js # time=107.856ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=5.964ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.719ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.565ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.53ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.048ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.695ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.828ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.24ms
    
    1..8
    # time=94.858ms
ok 57 - test/internals/plugin.test.js # time=94.858ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=78.715ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=20.709ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=15.05ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.27ms
        
    ok 1 - Reply\#compileSerializationSchema # time=140.6ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=28.514ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.977ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.805ms
        
    ok 2 - Reply\#getSerializationFunction # time=56.138ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=34.966ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=12.026ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=7.811ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=28.178ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.346ms
        
    ok 3 - Reply\#serializeInput # time=107.137ms
    
    1..3
    # time=311.009ms
ok 58 - test/internals/reply-serialize.test.js # time=311.009ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=13.264ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=26.156ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.604ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.509ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.028ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=765.231ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.915ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.819ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.927ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=20.279ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=34.307ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.098ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.837ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.282ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.75ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.394ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=16.704ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.104ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.24ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=15.172ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=8.742ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.789ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=2.881ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=2.967ms
        
        1..15
    ok 11 - within an instance # time=186.827ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=31.575ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=18.181ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=24.267ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=139.916ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=49.777ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=7.824ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=25.249ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=13.256ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.875ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=21.352ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=29.975ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=19.722ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=16.362ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=7.657ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=7.995ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.191ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.571ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.773ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.884ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=14.964ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.766ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=5.152ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.843ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=17.94ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.854ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=15.472ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.252ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.434ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=5.866ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.659ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.433ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.652ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=3.405ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.76ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.585ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=3.876ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.404ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.565ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=4.756ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=8.957ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=8.174ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.22ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=10.612ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=6.711ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.493ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.141ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.637ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.18ms
        
    ok 56 - reply.then # time=19.832ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.45ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=29.04ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.951ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.369ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.776ms
    
    1..61
    # time=1776.313ms
ok 59 - test/internals/reply.test.js # time=1776.313ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=202.385ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=41.871ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=60.387ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=13.491ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=36.632ms
        
    ok 1 - \#compileValidationSchema # time=372.997ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=49.424ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.472ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=72.586ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=9.249ms
        
    ok 2 - \#getValidationFunction # time=146.438ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=48.969ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=9.379ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=118.259ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=9.569ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=13.118ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=9.635ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=44.838ms
        
    ok 3 - \#validate # time=263.638ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=76.166ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=44.833ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=43.724ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=9.731ms
                
            ok 1 - \#compileValidationSchema # time=186.966ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=55.49ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.723ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=42.83ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.61ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=11.384ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.759ms
                
            ok 2 - \#getValidationFunction # time=146.049ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=60.858ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=20.112ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=119.501ms
                
            ok 3 - \#validate # time=209.052ms
            
        ok 1 - Level_1 # time=550.151ms
        
    ok 4 - Nested Context # time=556.264ms
    
    1..4
    # time=1349.186ms
ok 60 - test/internals/request-validate.test.js # time=1349.186ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=16.414ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.67ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=0.793ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=12.144ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.015ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.808ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=0.822ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=6.071ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.506ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.25ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=5.193ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.941ms
    
    1..12
    # time=125.064ms
ok 61 - test/internals/request.test.js # time=125.064ms

./VariantsSubtree/fastify/variant13/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant12/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   88.87 |     86.7 |   88.03 |   89.15 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   90.07 |    87.09 |   91.52 |   90.42 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   70.37 |     55.2 |   83.33 |   71.25 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=27.973ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.924ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.868ms
        
    ok 1 - default 404 # time=168.395ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=9.378ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.464ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.195ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.665ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=4.72ms
        
    ok 2 - customized 404 # time=45.405ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=5.366ms
        
    ok 3 - custom header in notFound handler # time=16.552ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.699ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=21.795ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.612ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=23.619ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=25.739ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=89.849ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=16.831ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.097ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.035ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=36.987ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=13.587ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.531ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.685ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.3ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.08ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.639ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.075ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.187ms
        
    ok 5 - encapsulated 404 # time=145.568ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=65.449ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.606ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=11.595ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.507ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=12.357ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=14.542ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.428ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.978ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.612ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.06ms
        
    ok 15 - log debug for 404 # time=14.895ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=15.422ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=14.568ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.598ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.207ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.76ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.3ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.497ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.921ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=81.036ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=7.519ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=15.078ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=8.383ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.512ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.752ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.973ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=6.757ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.222ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=9.388ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=171.025ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=6.365ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.373ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.286ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.902ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.212ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=7.089ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.564ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=24.408ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=19.631ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=14.015ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=5.681ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=90.813ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=13.878ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=18.782ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=5.86ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=10.974ms
    
    1..33
    # time=1076.989ms
ok 1 - test/404s.test.js # time=1076.989ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=88.032ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.575ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=44.887ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=11.515ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=27.581ms
    
    1..5
    # time=194.693ms
ok 2 - test/500s.test.js # time=194.693ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=70.804ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.633ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=88.709ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=2.724ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=23.98ms
    
    1..5
    # time=233.338ms
ok 3 - test/allowUnsafeRegex.test.js # time=233.338ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=44.719ms
ok 4 - test/als.test.js # time=44.719ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=320.222ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=13.473ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=38.156ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=91.247ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=9.338ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=11.348ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.694ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=9.908ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=8.296ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.938ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=207.972ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=224.599ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=5.808ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=22.538ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=11.333ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=9.983ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=5.295ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=4.964ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.529ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.393ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=4.984ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.149ms
    
    1..22
    # time=1049.342ms
ok 5 - test/async-await.test.js # time=1049.342ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=84.355ms
    
    1..1
    # time=89.941ms
ok 6 - test/bodyLimit.test.js # time=89.941ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3790.833ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3797.365ms
ok 7 - test/build/error-serializer.test.js # time=3797.365ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.825ms
    
    1..1
    # time=13.382ms
ok 8 - test/build/version.test.js # time=13.382ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=68.754ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=38.658ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=26.809ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=54.784ms
    
    1..4
    # time=206.622ms
ok 9 - test/case-insensitive.test.js # time=206.622ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.843ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.101ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.174ms
    
    1..3
    # time=28.168ms
ok 10 - test/chainable.test.js # time=28.168ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=142.833ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=23.999ms
    
    1..2
    # time=177.159ms
ok 11 - test/close-pipelining.test.js # time=177.159ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=103.496ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=23.733ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=35.625ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=19.534ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=10.629ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=12.718ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=67.364ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=126.905ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=27.099ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=272.151ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=21.606ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=13.921ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=11.489ms
    
    1..15
    # skip: 2
    # time=765.857ms
ok 12 - test/close.test.js # time=765.857ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=42.483ms
    
    1..1
    # time=48.768ms
ok 13 - test/connectionTimeout.test.js # time=48.768ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=100.334ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=12.109ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=26.074ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=27.899ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=6.507ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.658ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.362ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.313ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.288ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.353ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.55ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=21.793ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=17.513ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=19.295ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.62ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.498ms
    
    1..16
    # time=278.404ms
ok 14 - test/constrained-routes.test.js # time=278.404ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.589ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=12.239ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=9.611ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=14.551ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=7.55ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.01ms
    
    1..6
    # time=139.815ms
ok 15 - test/content-length.test.js # time=139.815ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=12.177ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.564ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.676ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=92.755ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=16.038ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=20.351ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=36.803ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=25.049ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=22.586ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.916ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.97ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.38ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.918ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.644ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.781ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.124ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.388ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=4.023ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.613ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.992ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.954ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.167ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.774ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.378ms
    
    1..24
    # time=340.436ms
ok 16 - test/content-parser.test.js # time=340.436ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=77.554ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=23.732ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=14.1ms
    
    1..3
    # time=145.458ms
ok 17 - test/context-config.test.js # time=145.458ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=63.562ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.672ms
    
    1..2
    # time=74.75ms
ok 18 - test/custom-http-server.test.js # time=74.75ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=32.688ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=8.515ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=108.247ms
    
    1..1
    # time=114.442ms
ok 19 - test/custom-parser-async.test.js # time=114.442ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.828ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.614ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.839ms
        
    ok 2 - contentTypeParser should add a custom parser # time=177.211ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=14.48ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=34.577ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=16.084ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=8.977ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=13.141ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=9.274ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.669ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.764ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.517ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=13.001ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=20.646ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=13.304ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=7.371ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=11.082ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=12.449ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=19.912ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=5.681ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=5.829ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=23.792ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=17.841ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=14.868ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=25.931ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=8.004ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=15.553ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=7.597ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.614ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=33.787ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=8.446ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=7.462ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.169ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=9.058ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=7.81ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.75ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.398ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.694ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=19.601ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=49.932ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=16.129ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.187ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=9.743ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=8.883ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=13.495ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.818ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.807ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.873ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.968ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=7.169ms
    
    1..47
    # time=803.665ms
ok 20 - test/custom-parser.test.js # time=803.665ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=117.749ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=14.193ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=33.743ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.067ms
    
    1..4
    # time=181.837ms
ok 21 - test/custom-querystring-parser.test.js # time=181.837ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.592ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=79.888ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.459ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=8.133ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=7.975ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=5.557ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.469ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=48.558ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=21.796ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.16ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=18.58ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=18.607ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=19.926ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.585ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.819ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.403ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=2.35ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.91ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=9.967ms
        
        1..5
    ok 15 - hasRequestDecorator # time=48.919ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.323ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.696ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.737ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=26.368ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.955ms
        
        1..5
    ok 16 - hasReplyDecorator # time=148.529ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=14.033ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=61.852ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=14.815ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.498ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.439ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.763ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=8.542ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=22.383ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.3ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=23.682ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=23.047ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=24.309ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=22.557ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.738ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=7.957ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.485ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.6ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.565ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.287ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.341ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=13.911ms
    
    1..37
    # time=828.601ms
ok 22 - test/decorator.test.js # time=828.601ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=18.704ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=37.134ms
    
    1..2
    # time=64.84ms
ok 23 - test/default-route.test.js # time=64.84ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=8.34ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.912ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.474ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.456ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.408ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.134ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=46.623ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=36.827ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.783ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.442ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.248ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=6.972ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=6.641ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.864ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=6.305ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.397ms
    
    1..17
    # time=309.971ms
ok 24 - test/delete.test.js # time=309.971ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=926.418ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=21.944ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=24.888ms
    
    1..3
    # time=988.463ms
ok 25 - test/diagnostics-channel.test.js # time=988.463ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=83.535ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=12.99ms
    
    1..2
    # time=103.723ms
ok 26 - test/encapsulated-error-handler.test.js # time=103.723ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=39.766ms
    
    ok 2 - should be equal
    1..2
    # time=44.848ms
ok 27 - test/esm/index.test.js # time=44.848ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.367ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.246ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.128ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=2.774ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.44ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=3.075ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.981ms
    
    1..7
    # time=71.554ms
ok 28 - test/fastify-instance.test.js # time=71.554ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=197.516ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=40.968ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=49.589ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=67.96ms
    
    1..4
    # time=364.87ms
ok 29 - test/fluent-schema.test.js # time=364.87ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=67.001ms
    
    1..1
    # time=73.642ms
ok 30 - test/genReqId.test.js # time=73.642ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.256ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.303ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.62ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.253ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.11ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.823ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=2.275ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.957ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.783ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=47.482ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.371ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.999ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.661ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=24.776ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=6.055ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.997ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.971ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.658ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.918ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.541ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.558ms
    
    1..22
    # time=335.123ms
ok 31 - test/get.test.js # time=335.123ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=50.589ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=16.371ms
    
    1..2
    # time=73.909ms
ok 32 - test/handler-context.test.js # time=73.909ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=20.148ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.802ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.477ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=7.069ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=40.472ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=6.081ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.96ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.751ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=7.419ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=4.035ms
    
    1..11
    # time=254.636ms
ok 33 - test/head.test.js # time=254.636ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equivalent
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - expect truthy value
    ok 1 - async hooks # time=124.868ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=30.883ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=28.101ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=16.716ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=12.532ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=29.901ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=14.364ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=80.685ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=24.104ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=14.132ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=8.441ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=28.24ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=7.983ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=6.811ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.241ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=16.035ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=2.179ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.589ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=16.24ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=6.009ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=13.097ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.815ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.04ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=24.828ms
    
    1..20
    # time=544.661ms
ok 34 - test/hooks-async.test.js # time=544.661ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=66.751ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.909ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=5.913ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=30.289ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=8.377ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=5.983ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=23.639ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=5.222ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=4.899ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.126ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.833ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=505.608ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=5.349ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=50.426ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=7.73ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=10.312ms
    
    1..16
    # time=767.035ms
ok 35 - test/hooks.on-ready.test.js # time=767.035ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=187.018ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.527ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.3ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=28.007ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=22.498ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=6.816ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=29.86ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=28.384ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=20.237ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=19.591ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.753ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=15.283ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=6.172ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=9.199ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=19.049ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=10.502ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=4.906ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=7.268ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.477ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.114ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=4.225ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=7.584ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=3.779ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=68.287ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=7.112ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=3.908ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=36.167ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.684ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=13.925ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.76ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.791ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.333ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=35.67ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=9.78ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=5.883ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=5.352ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.666ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.691ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.805ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=75.639ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=5.676ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=5.165ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.895ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.725ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.514ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=8.033ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=23.753ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=6.703ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.251ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.683ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.585ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=7.393ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.333ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.258ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.136ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.653ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.599ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.141ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=5.711ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=15.305ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=30.334ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=4.713ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.633ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.681ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.51ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=46.235ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=21.345ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=10.76ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=6.57ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=3.714ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=11.972ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=13.88ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=9.594ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.244ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=13.636ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.84ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.034ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.677ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.614ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.393ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.444ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=15.811ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=18.663ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.369ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.293ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=507.608ms
    
    1..85
    # time=2271.187ms
ok 36 - test/hooks.test.js # time=2271.187ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=12.093ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=56.819ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.761ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.409ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=110.214ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=33.028ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=112.592ms
    
    1..5
    # time=352.759ms
ok 37 - test/http2/closing.test.js # time=352.759ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=49.339ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=18.217ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=14.53ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=170.333ms
    
    1..1
    # time=202.751ms
ok 38 - test/http2/constraint.test.js # time=202.751ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=88.743ms
    
    1..3
    # time=207.192ms
ok 39 - test/http2/head.test.js # time=207.192ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.908ms
    
    1..1
    # time=17.933ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.933ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=35.16ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.279ms
    
    1..4
    # time=123.089ms
ok 41 - test/http2/plain.test.js # time=123.089ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=41.714ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=23.475ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.292ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.028ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.856ms
        
    ok 1 - secure with fallback # time=192.696ms
    
    1..1
    # time=223.351ms
ok 42 - test/http2/secure-with-fallback.test.js # time=223.351ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=40.839ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=23.306ms
        
    ok 1 - secure # time=155.595ms
    
    1..1
    # time=186.568ms
ok 43 - test/http2/secure.test.js # time=186.568ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=30.286ms
    
    1..2
    # time=92.527ms
ok 44 - test/http2/unknown-http-method.test.js # time=92.527ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=113.51ms
    
    1..1
    # time=145.65ms
ok 45 - test/https/custom-https-server.test.js # time=145.65ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.953ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.048ms
        
    ok 1 - https # time=179.678ms
    
    1..1
    # time=220.945ms
ok 46 - test/https/https.test.js # time=220.945ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=784.752ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.803ms
    
    1..2
    # time=798.731ms
ok 47 - test/imports.test.js # time=798.731ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.175ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=617.919ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.576ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=21.646ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=12.01ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.874ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=7.122ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=7.139ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=10.847ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=20.458ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=17.686ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=9.357ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=10.234ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.107ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=15.752ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.358ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=8.056ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=8.977ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.226ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=6.58ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.565ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.558ms
    
    1..22
    # time=1358.621ms
ok 48 - test/inject.test.js # time=1358.621ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=68.716ms
    
    1..1
    # time=74.216ms
ok 49 - test/internals/all.test.js # time=74.216ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=12.373ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=24.676ms
    
    1..2
    # time=44.291ms
ok 50 - test/internals/contentTypeParser.test.js # time=44.291ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=13.813ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=2.359ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.089ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.038ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.992ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.588ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.873ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.828ms
    
    1..8
    # time=77.598ms
ok 51 - test/internals/decorator.test.js # time=77.598ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.769ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.365ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=87.026ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.77ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=2.125ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=337.229ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=14.737ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=28.118ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=35.621ms
    
    1..9
    # time=536.786ms
ok 52 - test/internals/handleRequest.test.js # time=536.786ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.099ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.579ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.955ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=27.567ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.076ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.712ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.14ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.734ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.485ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.063ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.65ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.405ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.395ms
    
    1..13
    # time=119.16ms
ok 53 - test/internals/hookRunner.test.js # time=119.16ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.159ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=5.931ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.348ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.031ms
    
    1..4
    # time=33.33ms
ok 54 - test/internals/hooks.test.js # time=33.33ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.38ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.36ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=10.148ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.184ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.564ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.369ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=55.016ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.692ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.83ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=44.092ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.481ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.538ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.662ms
    
    1..13
    # time=237.314ms
ok 55 - test/internals/initialConfig.test.js # time=237.314ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=5.795ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=81.701ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=15.557ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.964ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.028ms
    
    1..5
    # time=119.913ms
ok 56 - test/internals/logger.test.js # time=119.913ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=5.973ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.686ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.575ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.54ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.055ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.668ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.893ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=15.595ms
    
    1..8
    # time=81.25ms
ok 57 - test/internals/plugin.test.js # time=81.25ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=83.313ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=20.733ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=21.246ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.369ms
        
    ok 1 - Reply\#compileSerializationSchema # time=152.591ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=23.052ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.363ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=21.316ms
        
    ok 2 - Reply\#getSerializationFunction # time=77.814ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=29.08ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=16.408ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=9ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=10.404ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.591ms
        
    ok 3 - Reply\#serializeInput # time=80.542ms
    
    1..3
    # time=319.366ms
ok 58 - test/internals/reply-serialize.test.js # time=319.366ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.471ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=5.531ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.671ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.603ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.395ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=777.718ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.962ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.883ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.81ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=47.376ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=32.231ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=5.997ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.663ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.62ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.88ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.35ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.258ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.526ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.444ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.522ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.911ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.881ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.037ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.108ms
        
        1..15
    ok 11 - within an instance # time=172.602ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=33.794ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=12.264ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=19.182ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=87.967ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=47.163ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=7.777ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=25.667ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=11.222ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.776ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=20.202ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=36.741ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=13.589ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=15.311ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=7.317ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=9.38ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=7.823ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=11.969ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=9.028ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.856ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.42ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.96ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=5.133ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.865ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.048ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.396ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=15.201ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=3.924ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.324ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=5.625ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.552ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=3.91ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.568ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=3.454ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.554ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.605ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.453ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.532ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.611ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.423ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.548ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.128ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=4.574ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=13.666ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=7.73ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.841ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.384ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.971ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.412ms
        
    ok 56 - reply.then # time=21.428ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.671ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.068ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.961ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.367ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.838ms
    
    1..61
    # time=1706.365ms
ok 59 - test/internals/reply.test.js # time=1706.365ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=148.927ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=46.386ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=57.444ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=13.714ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=40.393ms
        
    ok 1 - \#compileValidationSchema # time=325.264ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=45.734ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.695ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=62.05ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=11.422ms
        
    ok 2 - \#getValidationFunction # time=152.404ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=49.91ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=9.521ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=94.809ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=10.798ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=19.176ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=22.001ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=31.15ms
        
    ok 3 - \#validate # time=247.712ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=82.935ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=46.444ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=35.066ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=9.692ms
                
            ok 1 - \#compileValidationSchema # time=184.776ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=56ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.557ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=41.864ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.072ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=26.534ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=15.784ms
                
            ok 2 - \#getValidationFunction # time=166.731ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=65.168ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.511ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=134.429ms
                
            ok 3 - \#validate # time=213.925ms
            
        ok 1 - Level_1 # time=572.23ms
        
    ok 4 - Nested Context # time=576.961ms
    
    1..4
    # time=1323.377ms
ok 60 - test/internals/request-validate.test.js # time=1323.377ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=14.36ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.636ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.776ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.207ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=0.929ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.703ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=0.816ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.005ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.135ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=0.88ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=3.666ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=6.713ms
    
    1..12
    # time=131.424ms
ok 61 - test/internals/request.test.js # time=131.424ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=45.398ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=15.582ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=16.996ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=15.537ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=13.603ms
    
    1..5
    # time=117.089ms
ok 62 - test/internals/server.test.js # time=117.089ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=7.074ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=1.859ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=0.902ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.292ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.603ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=64.629ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=1.876ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=1.568ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=26.816ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=2.477ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=2.194ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.035ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.226ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=1.815ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=1.942ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=0.788ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.649ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.63ms
    
    1..18
    # time=177.201ms
ok 63 - test/internals/validation.test.js # time=177.201ms

./VariantsSubtree/fastify/variant11/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant10/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |    89.7 |    87.28 |   88.88 |   89.96 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   91.02 |    87.75 |   92.54 |   91.34 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   81.48 |    63.54 |   93.33 |   81.87 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant9/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=42.664ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.35ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=16.816ms
        
    ok 1 - default 404 # time=205.741ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=10.149ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.133ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=6.241ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.626ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=6.243ms
        
    ok 2 - customized 404 # time=64.201ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=5.225ms
        
    ok 3 - custom header in notFound handler # time=38.958ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.189ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=49.521ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.728ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=10.637ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=19.407ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=96.867ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=18.497ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.496ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.499ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.902ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.71ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.451ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=17.328ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.487ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.465ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.902ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=3.944ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.106ms
        
    ok 5 - encapsulated 404 # time=109.639ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=47.441ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.618ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=11.198ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.519ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=34.916ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=16.109ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=29.161ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=16.165ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.707ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.259ms
        
    ok 15 - log debug for 404 # time=15.295ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=21.087ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=10.975ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=43.412ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=14.38ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.848ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.408ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.577ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.179ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=35.004ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=23.438ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=11.331ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.395ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.003ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.258ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.092ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.528ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.176ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.936ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=125.044ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.832ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.225ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.29ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.831ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.946ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.637ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.48ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=6.68ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=22.613ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=15.247ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.952ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=78.82ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=6.912ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=33.743ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.17ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.573ms
    
    1..33
    # time=1141.299ms
ok 1 - test/404s.test.js # time=1141.299ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=151.501ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=16.531ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=38.961ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=11.617ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=13.907ms
    
    1..5
    # time=243.507ms
ok 2 - test/500s.test.js # time=243.507ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=69.704ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=12.654ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=85.213ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.39ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=25.585ms
    
    1..5
    # time=220.923ms
ok 3 - test/allowUnsafeRegex.test.js # time=220.923ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=42.371ms
ok 4 - test/als.test.js # time=42.371ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=317.919ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.032ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=36.516ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=91.146ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.818ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=12.521ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.452ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=10.072ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=9.349ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.427ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=212.176ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=210.087ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=8.287ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=8.46ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.526ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=7.188ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.205ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=5.157ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.31ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.731ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=8.96ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.612ms
    
    1..22
    # time=1055.589ms
ok 5 - test/async-await.test.js # time=1055.589ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=78.422ms
    
    1..1
    # time=86.504ms
ok 6 - test/bodyLimit.test.js # time=86.504ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3759.068ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3765.731ms
ok 7 - test/build/error-serializer.test.js # time=3765.731ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=5.86ms
    
    1..1
    # time=11.259ms
ok 8 - test/build/version.test.js # time=11.259ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=67.56ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=35.937ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=10.295ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=26.269ms
    
    1..4
    # time=158.223ms
ok 9 - test/case-insensitive.test.js # time=158.223ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.018ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.465ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.527ms
    
    1..3
    # time=30.069ms
ok 10 - test/chainable.test.js # time=30.069ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=112.965ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=37.666ms
    
    1..2
    # time=243.055ms
ok 11 - test/close-pipelining.test.js # time=243.055ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=102.412ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=20.286ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=25.484ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=15.283ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.806ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=23.341ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=88.52ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=110.775ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=26.702ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=275.358ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=13.186ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.315ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=10.439ms
    
    1..15
    # skip: 2
    # time=751.602ms
ok 12 - test/close.test.js # time=751.602ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=41.154ms
    
    1..1
    # time=46.676ms
ok 13 - test/connectionTimeout.test.js # time=46.676ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=123.441ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=21.688ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=20.329ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=12.078ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=9.521ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=2.649ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=2.411ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.719ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.379ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.931ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=18.692ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=13.512ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=6.064ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=7.803ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.285ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.486ms
    
    1..16
    # time=289.509ms
ok 14 - test/constrained-routes.test.js # time=289.509ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=73.165ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=19.385ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=25.234ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=9.36ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=7.925ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.336ms
    
    1..6
    # time=148.521ms
ok 15 - test/content-length.test.js # time=148.521ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=10.014ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=41.169ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.287ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=91.443ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=13.492ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=13.692ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=48.895ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=23.342ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=20.093ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=4.907ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.129ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.196ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.222ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=2.846ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.111ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.508ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.702ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.373ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.189ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.404ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.504ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.678ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.383ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.876ms
    
    1..24
    # time=317.644ms
ok 16 - test/content-parser.test.js # time=317.644ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=75.637ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.077ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=19.651ms
    
    1..3
    # time=128.85ms
ok 17 - test/context-config.test.js # time=128.85ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=69.953ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.792ms
    
    1..2
    # time=80.793ms
ok 18 - test/custom-http-server.test.js # time=80.793ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=39.649ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.415ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=115.773ms
    
    1..1
    # time=120.953ms
ok 19 - test/custom-parser-async.test.js # time=120.953ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.895ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.938ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.166ms
        
    ok 2 - contentTypeParser should add a custom parser # time=191.093ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.116ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=27.463ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.769ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=7.887ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=28.006ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=15.558ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.63ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.979ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.569ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=27.186ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=13.843ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.573ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=23.791ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=7.747ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=8.105ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.013ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.167ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.464ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=15.245ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=11.393ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=21.312ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=7.425ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=6.998ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=8.551ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=6.667ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=14.737ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=17.213ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=12.222ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=5.87ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.372ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=7.897ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=5.972ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.212ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.644ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.409ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=14.035ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=45.029ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=11.433ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.351ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=9.356ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=9.23ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=9.699ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.507ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.691ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.473ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.295ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.606ms
    
    1..47
    # time=740.233ms
ok 20 - test/custom-parser.test.js # time=740.233ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=115.712ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=13.3ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=21.032ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.055ms
    
    1..4
    # time=167.603ms
ok 21 - test/custom-querystring-parser.test.js # time=167.603ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.388ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=78.594ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=8.873ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=15.539ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=9.602ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=7.211ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=7.746ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=55.627ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=22.086ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.92ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=17.373ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=17.278ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=18.962ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.298ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.508ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.966ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.816ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.48ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.483ms
        
        1..5
    ok 15 - hasRequestDecorator # time=54.319ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.465ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.744ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.812ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=9.901ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=4.753ms
        
        1..5
    ok 16 - hasReplyDecorator # time=124.462ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=3.35ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=30.651ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=9.903ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=4.889ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.191ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.317ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.876ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=25.724ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=28.449ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=23.697ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=23.656ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.252ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.402ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.635ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=8.009ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.226ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.921ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.476ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.211ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.53ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=21.975ms
    
    1..37
    # time=780.168ms
ok 22 - test/decorator.test.js # time=780.168ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=18.854ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=36.781ms
    
    1..2
    # time=63.79ms
ok 23 - test/default-route.test.js # time=63.79ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=8.89ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.977ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.486ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.436ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.367ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.099ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=42.191ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=39.485ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.147ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.876ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.474ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.981ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=5.35ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.314ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.685ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.461ms
    
    1..17
    # time=330.481ms
ok 24 - test/delete.test.js # time=330.481ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=1030.875ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=15.695ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.212ms
    
    1..3
    # time=1078.143ms
ok 25 - test/diagnostics-channel.test.js # time=1078.143ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=67.266ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.704ms
    
    1..2
    # time=86.239ms
ok 26 - test/encapsulated-error-handler.test.js # time=86.239ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=34.997ms
    
    ok 2 - should be equal
    1..2
    # time=40.611ms
ok 27 - test/esm/index.test.js # time=40.611ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.906ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.496ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.408ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.815ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.475ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=3.241ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=16.272ms
    
    1..7
    # time=74.316ms
ok 28 - test/fastify-instance.test.js # time=74.316ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=191.93ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=40.938ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=45.577ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=56.414ms
    
    1..4
    # time=342.87ms
ok 29 - test/fluent-schema.test.js # time=342.87ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=82.63ms
    
    1..1
    # time=89.51ms
ok 30 - test/genReqId.test.js # time=89.51ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=10.057ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.453ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.665ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=13.412ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.238ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.787ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=2.335ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.821ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.739ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=48.034ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.683ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=7.363ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.868ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=9.57ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=6.026ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=5.244ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=5.531ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.981ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=5.023ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.61ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.537ms
    
    1..22
    # time=340.813ms
ok 31 - test/get.test.js # time=340.813ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=54.061ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=16.196ms
    
    1..2
    # time=77.364ms
ok 32 - test/handler-context.test.js # time=77.364ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=10.692ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.683ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.897ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.854ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=37.267ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=6.551ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=7.685ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.614ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.103ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.745ms
    
    1..11
    # time=224.806ms
ok 33 - test/head.test.js # time=224.806ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=144.995ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=36.692ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=12.225ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=12.845ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=5.851ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.05ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=6.353ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=109.465ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=6.817ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.237ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=20.045ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=13.892ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=7.571ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=5.87ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=10.799ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=33.436ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.894ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.133ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=19.883ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=6.141ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=32.16ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.653ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=5.85ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=26.471ms
    
    1..20
    # time=550.806ms
ok 34 - test/hooks-async.test.js # time=550.806ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=68.758ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.743ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=16.366ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=18.476ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=10.271ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.327ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=31.716ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=22.893ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.388ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=10.156ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=2.213ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=504.385ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=6.606ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=13.839ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=6.047ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=13.864ms
    
    1..16
    # time=763.475ms
ok 35 - test/hooks.on-ready.test.js # time=763.475ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=156.098ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.245ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.3ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.711ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.396ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.848ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.326ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.49ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.996ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.725ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.377ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.338ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.935ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.047ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.359ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=13.145ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=8.518ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.568ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=6.239ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.605ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=2.816ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.606ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=2.69ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=89.694ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=14.132ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=4.049ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=17.794ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=4.011ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=14.386ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=21.872ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=8.183ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.507ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=25.343ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=16.496ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=5.867ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=4.466ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=5.131ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.767ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.723ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=76.18ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.922ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.254ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.266ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.017ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.201ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=19.674ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=12.225ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=13.228ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.839ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.007ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=8.354ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=8.528ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=8.084ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=8.399ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.733ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=6.844ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.028ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=12.813ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=6.094ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=15.287ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=38.023ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.64ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.402ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.782ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.488ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=47.292ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=19.761ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.616ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=6.621ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.439ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=12.445ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=15.039ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.256ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.846ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=16.262ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=12.107ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=5.122ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.248ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.362ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.314ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.988ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=12.424ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=14.728ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.31ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.359ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=508.391ms
    
    1..85
    # time=2154.275ms
ok 36 - test/hooks.test.js # time=2154.275ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=17.355ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=89.746ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=7.151ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=19.443ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=123.331ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=21.803ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=110.225ms
    
    1..5
    # time=405.536ms
ok 37 - test/http2/closing.test.js # time=405.536ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=42.168ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.775ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.802ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=154.975ms
    
    1..1
    # time=188.202ms
ok 38 - test/http2/constraint.test.js # time=188.202ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=67.169ms
    
    1..3
    # time=149.093ms
ok 39 - test/http2/head.test.js # time=149.093ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.583ms
    
    1..1
    # time=17.51ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.51ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.992ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=6.813ms
    
    1..4
    # time=135.58ms
ok 41 - test/http2/plain.test.js # time=135.58ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=40.061ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=19.774ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.683ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.795ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=8.141ms
        
    ok 1 - secure with fallback # time=188.693ms
    
    1..1
    # time=221.089ms
ok 42 - test/http2/secure-with-fallback.test.js # time=221.089ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=48.818ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=21.282ms
        
    ok 1 - secure # time=184.359ms
    
    1..1
    # time=213.525ms
ok 43 - test/http2/secure.test.js # time=213.525ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=35.285ms
    
    1..2
    # time=91.593ms
ok 44 - test/http2/unknown-http-method.test.js # time=91.593ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=82.006ms
    
    1..1
    # time=114.548ms
ok 45 - test/https/custom-https-server.test.js # time=114.548ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.82ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=15.477ms
        
    ok 1 - https # time=136.698ms
    
    1..1
    # time=166.379ms
ok 46 - test/https/https.test.js # time=166.379ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=770.464ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=3.046ms
    
    1..2
    # time=784.509ms
ok 47 - test/imports.test.js # time=784.509ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=22.759ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=606.238ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=6.781ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=9.94ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.357ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=12.302ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.97ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.263ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=9.765ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=11.205ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.283ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=15.178ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=22.393ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=13.555ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=16.665ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.343ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=15.019ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=8.491ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=3.805ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=5.982ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=5.092ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=3.792ms
    
    1..22
    # time=1368.589ms
ok 48 - test/inject.test.js # time=1368.589ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=101.133ms
    
    1..1
    # time=111.672ms
ok 49 - test/internals/all.test.js # time=111.672ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=26.85ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.578ms
    
    1..2
    # time=43.161ms
ok 50 - test/internals/contentTypeParser.test.js # time=43.161ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.133ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.677ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.487ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=13.876ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.276ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.527ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.89ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.527ms
    
    1..8
    # time=77.536ms
ok 51 - test/internals/decorator.test.js # time=77.536ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=7.735ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.302ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=65.779ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.75ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.748ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=301.046ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=9.85ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=27.556ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=37.848ms
    
    1..9
    # time=481.691ms
ok 52 - test/internals/handleRequest.test.js # time=481.691ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.15ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.54ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=3.008ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=28.268ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.26ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.78ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.143ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.699ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.488ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.172ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.527ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.38ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.37ms
    
    1..13
    # time=121.057ms
ok 53 - test/internals/hookRunner.test.js # time=121.057ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=10.926ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=6.106ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.398ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.151ms
    
    1..4
    # time=66.731ms
ok 54 - test/internals/hooks.test.js # time=66.731ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.451ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.078ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=11.793ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.463ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=25.705ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.353ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=66.941ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.7ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.74ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=42.167ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=2.208ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.873ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=3.198ms
    
    1..13
    # time=264.194ms
ok 55 - test/internals/initialConfig.test.js # time=264.194ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.531ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=106.698ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=8.62ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.685ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.684ms
    
    1..5
    # time=145.756ms
ok 56 - test/internals/logger.test.js # time=145.756ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.176ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.773ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.497ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.525ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.107ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.671ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.85ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.574ms
    
    1..8
    # time=96.64ms
ok 57 - test/internals/plugin.test.js # time=96.64ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=100.746ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=22.516ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=67.717ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=11.303ms
        
    ok 1 - Reply\#compileSerializationSchema # time=223.52ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=39.762ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.321ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.672ms
        
    ok 2 - Reply\#getSerializationFunction # time=74.542ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=22.01ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=11.593ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=18.102ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=7.947ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=9.841ms
        
    ok 3 - Reply\#serializeInput # time=80.515ms
    
    1..3
    # time=402.189ms
ok 58 - test/internals/reply-serialize.test.js # time=402.189ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=12.955ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=4.732ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.351ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.292ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=0.987ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=745.094ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.932ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.831ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.966ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=20.224ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=41.276ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=7.36ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.952ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.363ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.827ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.467ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.391ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.495ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=4.124ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.567ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.949ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.05ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.153ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.211ms
        
        1..15
    ok 11 - within an instance # time=189.051ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=35.411ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=10.284ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=42.468ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=86.46ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=25.14ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=23.72ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=14.611ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=19.339ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=8.191ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=31.074ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=11.708ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=13.578ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=15.425ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=7.522ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.012ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=8.996ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.116ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.575ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.771ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.294ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.625ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.79ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.315ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=8.01ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.254ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=14.985ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=3.978ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.316ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=5.561ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.353ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.071ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.476ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=3.396ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.767ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.652ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.585ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.469ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.649ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=5.948ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=8.521ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=23.782ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.659ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=11.126ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=6.632ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.291ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.107ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.678ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.167ms
        
    ok 56 - reply.then # time=19.348ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.462ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=12.686ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.52ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=5.941ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.186ms
    
    1..61
    # time=1662.069ms
ok 59 - test/internals/reply.test.js # time=1662.069ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=150.347ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=54.143ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=68.186ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=21.522ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=32.059ms
        
    ok 1 - \#compileValidationSchema # time=344.439ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=44.812ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.73ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=74.208ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=8.754ms
        
    ok 2 - \#getValidationFunction # time=142.906ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=92.378ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.342ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=72.781ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=10.289ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=22.146ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=18.103ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=33.172ms
        
    ok 3 - \#validate # time=281.276ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=90.952ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=54.82ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=34.803ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=9.792ms
                
            ok 1 - \#compileValidationSchema # time=201.164ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=58.411ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.945ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=41.544ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=11.773ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.421ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.106ms
                
            ok 2 - \#getValidationFunction # time=141.738ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=47.131ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.999ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=95.442ms
                
            ok 3 - \#validate # time=157.689ms
            
        ok 1 - Level_1 # time=507.501ms
        
    ok 4 - Nested Context # time=512.155ms
    
    1..4
    # time=1290.322ms
ok 60 - test/internals/request-validate.test.js # time=1290.322ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=17.954ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.672ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.428ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.87ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.465ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.891ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.185ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.27ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.538ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.184ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=14.647ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=8.739ms
    
    1..12
    # time=136.031ms
ok 61 - test/internals/request.test.js # time=136.031ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=38.553ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=16.948ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=30.76ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=21.134ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=14.005ms
    
    1..5
    # time=128.838ms
ok 62 - test/internals/server.test.js # time=128.838ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=7.775ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=2.112ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=1.152ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.66ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.819ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=64.593ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=2.093ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=2.019ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=2.766ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=11.573ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=2.534ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.269ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.588ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=2.089ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=2.374ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=0.993ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.945ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.89ms
    
    1..18
    # time=187.713ms
ok 63 - test/internals/validation.test.js # time=187.713ms

./VariantsSubtree/fastify/variant8/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant7/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   90.34 |    88.16 |   89.17 |   90.63 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   91.75 |    88.75 |   92.88 |   92.11 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   90.12 |    76.04 |   96.66 |   90.62 | ...,199-200,294,306,317-318 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=29.323ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=8.746ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=7.857ms
        
    ok 1 - default 404 # time=166.598ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=15.628ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.084ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.645ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=10.101ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.533ms
        
    ok 2 - customized 404 # time=68.335ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=21.235ms
        
    ok 3 - custom header in notFound handler # time=35.584ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.07ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=33.338ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.186ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=16.025ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=15.279ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=80.366ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=24.846ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.483ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.439ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.759ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.472ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.582ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.648ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.259ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=13.536ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.948ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=6.589ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.134ms
        
    ok 5 - encapsulated 404 # time=113.207ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=74.241ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.723ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=27.981ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=15.857ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.944ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=29.618ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=14.649ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=28.309ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.56ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=13.559ms
        
    ok 15 - log debug for 404 # time=20.349ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=38.896ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=14.512ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=14.381ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.448ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=12.127ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.651ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.81ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=6.381ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=46.731ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=15.498ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=4.007ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.056ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.615ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.756ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.41ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.678ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.773ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.37ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=123.54ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=11.797ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.831ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.716ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.118ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.432ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=8.36ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=17.324ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.464ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=5.301ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=10.334ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.01ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=51.605ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=27.037ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=32.447ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.492ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.75ms
    
    1..33
    # time=1097.576ms
ok 1 - test/404s.test.js # time=1097.576ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=86.204ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=8.878ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=37.382ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=8.615ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=23.551ms
    
    1..5
    # time=173.475ms
ok 2 - test/500s.test.js # time=173.475ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=69.743ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=11.673ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=88.199ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=8.739ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=19.387ms
    
    1..5
    # time=234.314ms
ok 3 - test/allowUnsafeRegex.test.js # time=234.314ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=57.32ms
ok 4 - test/als.test.js # time=57.32ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=315.114ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.499ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=21.51ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=156.749ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=19.095ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=11.272ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.247ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=9.008ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=9.881ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=6.557ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=210.18ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=210.936ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=16.176ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=16.498ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=14.906ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.829ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=22.338ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=12.7ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.811ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.372ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.309ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.15ms
    
    1..22
    # time=1124.581ms
ok 5 - test/async-await.test.js # time=1124.581ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=69.139ms
    
    1..1
    # time=87.373ms
ok 6 - test/bodyLimit.test.js # time=87.373ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3767.05ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3773.68ms
ok 7 - test/build/error-serializer.test.js # time=3773.68ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.008ms
    
    1..1
    # time=13.112ms
ok 8 - test/build/version.test.js # time=13.112ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=69.53ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=31.882ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=17.631ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=13.908ms
    
    1..4
    # time=158.31ms
ok 9 - test/case-insensitive.test.js # time=158.31ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.231ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.523ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.427ms
    
    1..3
    # time=30.133ms
ok 10 - test/chainable.test.js # time=30.133ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=118.052ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=34.66ms
    
    1..2
    # time=188.417ms
ok 11 - test/close-pipelining.test.js # time=188.417ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=91.391ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=25.105ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=47.172ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=8.444ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=13.976ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=18.917ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=67.425ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=114.191ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=23.517ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=270.711ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=20ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=10.267ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=16.121ms
    
    1..15
    # skip: 2
    # time=742.457ms
ok 12 - test/close.test.js # time=742.457ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=43.092ms
    
    1..1
    # time=52.226ms
ok 13 - test/connectionTimeout.test.js # time=52.226ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=99.442ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.388ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=21.843ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=26.936ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=9.019ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.581ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.303ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.304ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.328ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.387ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=8.535ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=26.764ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=13.035ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=8.903ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=14.163ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=4.872ms
    
    1..16
    # time=268.736ms
ok 14 - test/constrained-routes.test.js # time=268.736ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=79.946ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=22.837ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=14.051ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=16.16ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=8.389ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.789ms
    
    1..6
    # time=158.186ms
ok 15 - test/content-length.test.js # time=158.186ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.73ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=42.785ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.365ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=100.758ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=23.138ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=10.819ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=44.878ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=10.967ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=16.346ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.765ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.764ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.105ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.671ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.421ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.597ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.123ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.187ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.811ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.564ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.819ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.908ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.749ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.777ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.207ms
    
    1..24
    # time=331.4ms
ok 16 - test/content-parser.test.js # time=331.4ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=96.517ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=15.053ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=15.087ms
    
    1..3
    # time=153.915ms
ok 17 - test/context-config.test.js # time=153.915ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=62.842ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.641ms
    
    1..2
    # time=73.87ms
ok 18 - test/custom-http-server.test.js # time=73.87ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=31.545ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.664ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=111.106ms
    
    1..1
    # time=117.022ms
ok 19 - test/custom-parser-async.test.js # time=117.022ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.989ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=26.522ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.19ms
        
    ok 2 - contentTypeParser should add a custom parser # time=173.394ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.579ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=31.542ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=13.306ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=9.024ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=10.232ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=11.855ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.046ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.383ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.918ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=11.547ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=16.532ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.349ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.03ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=11.232ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=8.856ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.252ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=7.409ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.019ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=9.02ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=8.305ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=10.04ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=21.285ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=13.511ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=6.367ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=6.837ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.042ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=18.644ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=13.188ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=7.283ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.869ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=26.636ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=11.593ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=7.518ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.471ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.251ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=16.79ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=41.279ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=12.526ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.378ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=10.85ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=10.473ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=14.401ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=4.123ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.162ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=6.318ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=6.525ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.932ms
    
    1..47
    # time=719.99ms
ok 20 - test/custom-parser.test.js # time=719.99ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=94.928ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=12.659ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=45.072ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.33ms
    
    1..4
    # time=162.839ms
ok 21 - test/custom-querystring-parser.test.js # time=162.839ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.208ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=70.678ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.282ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=9.073ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=8.622ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=5.787ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=12.042ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=41.392ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=37.864ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=16.036ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=18.804ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=37.552ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=14.785ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.159ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.296ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.81ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.529ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=23.538ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=13.531ms
        
        1..5
    ok 15 - hasRequestDecorator # time=62.526ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=6.684ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=4.232ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.647ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.326ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.133ms
        
        1..5
    ok 16 - hasReplyDecorator # time=150.167ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=18.399ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=38.81ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=14.547ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.147ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.01ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=3.99ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.402ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=22.033ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.127ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.703ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.941ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.008ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.312ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.516ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=7.633ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.527ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.342ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.479ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.268ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.355ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=13.856ms
    
    1..37
    # time=825.228ms
ok 22 - test/decorator.test.js # time=825.228ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=17.24ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=40.298ms
    
    1..2
    # time=66.453ms
ok 23 - test/default-route.test.js # time=66.453ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.458ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.334ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.831ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.793ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.822ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.45ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=42.464ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=35.127ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=7.285ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=7.093ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.64ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=14.688ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=8.278ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.824ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=5.397ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.004ms
    
    1..17
    # time=319.124ms
ok 24 - test/delete.test.js # time=319.124ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=996.146ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=17.023ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.958ms
    
    1..3
    # time=1045.32ms
ok 25 - test/diagnostics-channel.test.js # time=1045.32ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=75.826ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=16.135ms
    
    1..2
    # time=98.341ms
ok 26 - test/encapsulated-error-handler.test.js # time=98.341ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=35.934ms
    
    ok 2 - should be equal
    1..2
    # time=41.624ms
ok 27 - test/esm/index.test.js # time=41.624ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=16.048ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.658ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.302ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.833ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.491ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=3.047ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=16.721ms
    
    1..7
    # time=74.348ms
ok 28 - test/fastify-instance.test.js # time=74.348ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=225.912ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=58.49ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=64.58ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=55.857ms
    
    1..4
    # time=412.414ms
ok 29 - test/fluent-schema.test.js # time=412.414ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=65.937ms
    
    1..1
    # time=72.145ms
ok 30 - test/genReqId.test.js # time=72.145ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.821ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.568ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.641ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.294ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.223ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.471ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.976ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.436ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.369ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.879ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.7ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.591ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=4.586ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=18.167ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.277ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=12.816ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.293ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.039ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.158ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=3.91ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.641ms
    
    1..22
    # time=316.321ms
ok 31 - test/get.test.js # time=316.321ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=55.714ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=15.406ms
    
    1..2
    # time=79.094ms
ok 32 - test/handler-context.test.js # time=79.094ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=9.539ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.663ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.911ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.824ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=35.128ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.922ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=6.102ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.805ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=12.742ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=11.628ms
    
    1..11
    # time=246.662ms
ok 33 - test/head.test.js # time=246.662ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=115.687ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=37.344ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=17.866ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=7.704ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=5.643ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=5.754ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=5.6ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=80.278ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=7.209ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.42ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=22.939ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=10.612ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=6.772ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=9.27ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.114ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=10.172ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.837ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=1.945ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=16.668ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=6.019ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=32.436ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=14.114ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.09ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=26.743ms
    
    1..20
    # time=457.463ms
ok 34 - test/hooks-async.test.js # time=457.463ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=71.233ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.704ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=14.973ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=24.645ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.681ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.187ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=21.963ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=5.4ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.237ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=12.019ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.797ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=507.427ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.77ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=14.571ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=5.661ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.58ms
    
    1..16
    # time=749.95ms
ok 35 - test/hooks.on-ready.test.js # time=749.95ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=153.866ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.034ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.417ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.49ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.165ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.756ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.166ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.785ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.688ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.504ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.262ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.13ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.761ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=5.81ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.162ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=11.804ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.189ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.19ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=6.083ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=10.804ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.303ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.269ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=2.638ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=55.776ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=9.444ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=4.879ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=36.738ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=4.212ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=18.797ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=25.894ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=8.893ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=5.035ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=24.373ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=9.74ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=5.718ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=4.688ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=9.779ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.557ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.144ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=74.272ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.867ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.027ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.04ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.01ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.018ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=7.531ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=5.674ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=7.069ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=6.134ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.388ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.909ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=17.337ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.373ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.145ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=3.928ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.52ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.378ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=13.132ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=9.408ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=3.479ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=20.998ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=8.763ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=10.643ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=7.088ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=15.515ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=8.096ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=6.942ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=10.137ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=5.358ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=3.582ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=46.062ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=30.009ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.704ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=7.039ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=8.465ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.931ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.339ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=28.877ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=7.242ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.538ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=5.112ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=22.846ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=20.275ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.147ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.122ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=508.473ms
    
    1..85
    # time=2133.276ms
ok 36 - test/hooks.test.js # time=2133.276ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.505ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=57.409ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.554ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=15.618ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=110.152ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=19.29ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=109.139ms
    
    1..5
    # time=338.831ms
ok 37 - test/http2/closing.test.js # time=338.831ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=39.547ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=12.213ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=9.863ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=143.159ms
    
    1..1
    # time=173.414ms
ok 38 - test/http2/constraint.test.js # time=173.414ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=72.234ms
    
    1..3
    # time=157.268ms
ok 39 - test/http2/head.test.js # time=157.268ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.063ms
    
    1..1
    # time=17.038ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.038ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.341ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.16ms
    
    1..4
    # time=129.409ms
ok 41 - test/http2/plain.test.js # time=129.409ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=38.56ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=18.203ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.054ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=19.361ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.742ms
        
    ok 1 - secure with fallback # time=183.021ms
    
    1..1
    # time=212.697ms
ok 42 - test/http2/secure-with-fallback.test.js # time=212.697ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=39.265ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.469ms
        
    ok 1 - secure # time=144.577ms
    
    1..1
    # time=174.294ms
ok 43 - test/http2/secure.test.js # time=174.294ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=37.534ms
    
    1..2
    # time=97.765ms
ok 44 - test/http2/unknown-http-method.test.js # time=97.765ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=99.249ms
    
    1..1
    # time=130.841ms
ok 45 - test/https/custom-https-server.test.js # time=130.841ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=39.039ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.167ms
        
    ok 1 - https # time=140.877ms
    
    1..1
    # time=170.451ms
ok 46 - test/https/https.test.js # time=170.451ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=794.33ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.383ms
    
    1..2
    # time=807.207ms
ok 47 - test/imports.test.js # time=807.207ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.726ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=589.464ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.597ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=9.652ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.091ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.223ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=13.948ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.217ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=9.382ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=10.888ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=8.82ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.037ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=9.016ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=5.816ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=33.776ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=504.558ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=7.999ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=8.858ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.206ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=6.507ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=6.493ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=4.897ms
    
    1..22
    # time=1311.846ms
ok 48 - test/inject.test.js # time=1311.846ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=66.612ms
    
    1..1
    # time=71.334ms
ok 49 - test/internals/all.test.js # time=71.334ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=33.287ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.659ms
    
    1..2
    # time=50.459ms
ok 50 - test/internals/contentTypeParser.test.js # time=50.459ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.201ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.958ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.201ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.095ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.227ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.858ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=1.212ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.555ms
    
    1..8
    # time=84.932ms
ok 51 - test/internals/decorator.test.js # time=84.932ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.639ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.204ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=66.169ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.752ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.732ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=323.937ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=13.689ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=16.277ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=41.236ms
    
    1..9
    # time=496.351ms
ok 52 - test/internals/handleRequest.test.js # time=496.351ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=11.915ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.54ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=3.021ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=33.611ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.164ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.739ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=1.98ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.426ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.355ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.161ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.633ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.392ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.363ms
    
    1..13
    # time=135.314ms
ok 53 - test/internals/hookRunner.test.js # time=135.314ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=7.983ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.2ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.981ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.607ms
    
    1..4
    # time=42.478ms
ok 54 - test/internals/hooks.test.js # time=42.478ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=31.849ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.07ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.821ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.015ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.532ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.285ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=59.499ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.686ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.693ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=40.391ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.576ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.587ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.76ms
    
    1..13
    # time=256.209ms
ok 55 - test/internals/initialConfig.test.js # time=256.209ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.828ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=86.509ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=14.081ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=2.022ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.253ms
    
    1..5
    # time=125.582ms
ok 56 - test/internals/logger.test.js # time=125.582ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.053ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.714ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.488ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.531ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.044ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.592ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.791ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=20.129ms
    
    1..8
    # time=89.842ms
ok 57 - test/internals/plugin.test.js # time=89.842ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=78.202ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=16.422ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=15.7ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=9.31ms
        
    ok 1 - Reply\#compileSerializationSchema # time=137.537ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=27.385ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.333ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.763ms
        
    ok 2 - Reply\#getSerializationFunction # time=54.481ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=21.681ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=20.345ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=8.471ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=8.145ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=9.959ms
        
    ok 3 - Reply\#serializeInput # time=76.298ms
    
    1..3
    # time=292.985ms
ok 58 - test/internals/reply-serialize.test.js # time=292.985ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.42ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=24.81ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.442ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.449ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=0.985ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=801.369ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=1.243ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=1.166ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=1.336ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=20.304ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=51.338ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.616ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.447ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.864ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=4.165ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.733ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=19.173ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.888ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.746ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.859ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=7.202ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.129ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.216ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=4.141ms
        
        1..15
    ok 11 - within an instance # time=199.914ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=34.291ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=9.434ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=40.917ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=78.319ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=35.643ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=25.102ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=13.826ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=8.135ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=8.787ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=22.986ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=25.943ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=19.442ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=17.181ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.001ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.397ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.913ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.648ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.699ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.99ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.643ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.917ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.971ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.654ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=9.763ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=17.739ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=15.928ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.221ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.626ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=6.065ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.98ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.156ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.623ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.328ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.74ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.771ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=3.993ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.527ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.658ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.349ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.785ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.328ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.921ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=11.296ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=7.125ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.464ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.339ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.925ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.423ms
        
    ok 56 - reply.then # time=21.015ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.734ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=27.759ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.745ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.2ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.693ms
    
    1..61
    # time=1770.32ms
ok 59 - test/internals/reply.test.js # time=1770.32ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=165.605ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=61.009ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=78.528ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=11.956ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=31.889ms
        
    ok 1 - \#compileValidationSchema # time=367.541ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=86.211ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=6.179ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=75.725ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=25.931ms
        
    ok 2 - \#getValidationFunction # time=204.475ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=80.411ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.744ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=64.409ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=16.294ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=9.075ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=9.666ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=60.163ms
        
    ok 3 - \#validate # time=258.444ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=86.154ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=70.356ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=46.248ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.513ms
                
            ok 1 - \#compileValidationSchema # time=221.125ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=55.214ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.932ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=52.275ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=17.39ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.947ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.98ms
                
            ok 2 - \#getValidationFunction # time=156.571ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=72.122ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.257ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=92.803ms
                
            ok 3 - \#validate # time=178.975ms
            
        ok 1 - Level_1 # time=562.816ms
        
    ok 4 - Nested Context # time=567.397ms
    
    1..4
    # time=1408.388ms
ok 60 - test/internals/request-validate.test.js # time=1408.388ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=44.685ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.674ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.209ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.186ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.375ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.242ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.193ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.314ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.605ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.2ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=5.566ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.969ms
    
    1..12
    # time=142.525ms
ok 61 - test/internals/request.test.js # time=142.525ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=42.036ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=19.829ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=29.373ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=23.73ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=14.824ms
    
    1..5
    # time=139.416ms
ok 62 - test/internals/server.test.js # time=139.416ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=6.883ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=1.831ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=0.953ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.331ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.566ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=62.163ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=1.822ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=1.655ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=2.241ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=7.002ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=2.541ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.349ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.2ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=1.795ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=1.926ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=0.764ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.567ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.642ms
    
    1..18
    # time=175.42ms
ok 63 - test/internals/validation.test.js # time=175.42ms

# Subtest: test/keepAliveTimeout.test.js
    # Subtest: keepAliveTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 1 - keepAliveTimeout # time=39.792ms
    
    1..1
    # time=45.687ms
ok 64 - test/keepAliveTimeout.test.js # time=45.687ms

# Subtest: test/listen.deprecated.test.js
    # Subtest: listen accepts a port and a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 1 - listen accepts a port and a callback # time=29.212ms
    
    # Subtest: listen accepts a port and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 2 - listen accepts a port and a callback with (err, address) # time=5.345ms
    
    # Subtest: listen accepts a port, address, and callback
        1..1
        ok 1 - should not error
    ok 3 - listen accepts a port, address, and callback # time=6.966ms
    
    # Subtest: listen accepts options, backlog and a callback
        1..1
        ok 1 - should not error
    ok 4 - listen accepts options, backlog and a callback # time=11.771ms
    
    # Subtest: listen accepts options (no port), backlog and a callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts options (no port), backlog and a callback # time=4.009ms
    
    # Subtest: listen accepts options (no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 6 - listen accepts options (no host), backlog and a callback # time=3.787ms
    
    # Subtest: listen accepts options (no port, no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 7 - listen accepts options (no port, no host), backlog and a callback # time=12.266ms
    
    # Subtest: listen accepts a port, address and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 8 - listen accepts a port, address and a callback with (err, address) # time=6.825ms
    
    # Subtest: listen accepts a port, address, backlog and callback
        1..1
        ok 1 - should not error
    ok 9 - listen accepts a port, address, backlog and callback # time=7.316ms
    
    # Subtest: listen accepts a port, address, backlog and callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 10 - listen accepts a port, address, backlog and callback with (err, address) # time=4.314ms
    
    # Subtest: listen without callback (port zero)
        1..1
        ok 1 - should be equal
    ok 11 - listen without callback (port zero) # time=4.862ms
    
    # Subtest: listen without callback (port not given)
        1..1
        ok 1 - should be equal
    ok 12 - listen without callback (port not given) # time=3.633ms
    
    # Subtest: listen null without callback with (address)
        1..1
        ok 1 - should be equal
    ok 13 - listen null without callback with (address) # time=3.632ms
    
    # Subtest: listen without port without callback with (address)
        1..1
        ok 1 - should be equal
    ok 14 - listen without port without callback with (address) # time=3.191ms
    
    # Subtest: listen with undefined without callback with (address)
        1..1
        ok 1 - should be equal
    ok 15 - listen with undefined without callback with (address) # time=15.945ms
    
    # Subtest: listen when firstArg is string(pipe) and without backlog
        1..1
        ok 1 - should be equal
    ok 16 - listen when firstArg is string(pipe) and without backlog # time=18.208ms
    
    # Subtest: listen when firstArg is string(pipe) and with backlog
        1..1
        ok 1 - should be equal
    ok 17 - listen when firstArg is string(pipe) and with backlog # time=3.176ms
    
    # Subtest: listen when firstArg is { path: string(pipe) } and with backlog and callback
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 18 - listen when firstArg is { path: string(pipe) } and with backlog and callback # time=17.085ms
    
    1..18
    # time=265.145ms
ok 65 - test/listen.deprecated.test.js # time=265.145ms

./VariantsSubtree/fastify/variant6/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   90.76 |    89.55 |   89.17 |   91.06 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   92.23 |    90.32 |   92.88 |    92.6 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   95.67 |    95.83 |   96.66 |   96.25 | 167-168,192,199-200,294     
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=28.919ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=6.071ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.199ms
        
    ok 1 - default 404 # time=165.82ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=9.431ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.008ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=6.031ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=15.051ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.399ms
        
    ok 2 - customized 404 # time=55.015ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=6.107ms
        
    ok 3 - custom header in notFound handler # time=43.34ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=2.666ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=27.208ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=7.976ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=11.049ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=16.051ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=74.051ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=24.996ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.296ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.329ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.629ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.494ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.14ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.411ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.116ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.09ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.55ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=3.937ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.013ms
        
    ok 5 - encapsulated 404 # time=99.892ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=66.374ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.368ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=14.371ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=10.813ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=12.318ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=40.375ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=17.669ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.812ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.585ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.123ms
        
    ok 15 - log debug for 404 # time=15.016ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=15.645ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=14.37ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=7.397ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.23ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=10.499ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.414ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.302ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.759ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=36.878ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=20.186ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=8.819ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.164ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=8.568ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=5.276ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.585ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.598ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.921ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.744ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=119.593ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.845ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=5.989ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.163ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.249ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.018ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=5.392ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=22.731ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.092ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=4.743ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=23.223ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=14.963ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=78.04ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=31.104ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=36.449ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=5.929ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.194ms
    
    1..33
    # time=1019.299ms
ok 1 - test/404s.test.js # time=1019.299ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=103.172ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.546ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=46.39ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=10.772ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=13.493ms
    
    1..5
    # time=195.518ms
ok 2 - test/500s.test.js # time=195.518ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=68.969ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=12.902ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=81.186ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.397ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=29.662ms
    
    1..5
    # time=221.703ms
ok 3 - test/allowUnsafeRegex.test.js # time=221.703ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=46.735ms
ok 4 - test/als.test.js # time=46.735ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=318.142ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=29.878ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=15.094ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=85.956ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=8.995ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=24.742ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=8.334ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=29.092ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=13.64ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.946ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=207.588ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=211.605ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=5.687ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=12.233ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.324ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.435ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.645ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=4.562ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.263ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.656ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.991ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.467ms
    
    1..22
    # time=1063.978ms
ok 5 - test/async-await.test.js # time=1063.978ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=54.092ms
    
    1..1
    # time=59.301ms
ok 6 - test/bodyLimit.test.js # time=59.301ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3867.266ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3881.87ms
ok 7 - test/build/error-serializer.test.js # time=3881.87ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.517ms
    
    1..1
    # time=18.777ms
ok 8 - test/build/version.test.js # time=18.777ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=67.916ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=34.669ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=11.893ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=37.991ms
    
    1..4
    # time=180.123ms
ok 9 - test/case-insensitive.test.js # time=180.123ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.96ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.457ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.497ms
    
    1..3
    # time=31.316ms
ok 10 - test/chainable.test.js # time=31.316ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=84.388ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=22.597ms
    
    1..2
    # time=164.73ms
ok 11 - test/close-pipelining.test.js # time=164.73ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=94.343ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=26.042ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=25.438ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=7.225ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.512ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=14.228ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=60.921ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=122.802ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=29.072ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=271.85ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=9.69ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.41ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=11.197ms
    
    1..15
    # skip: 2
    # time=699.412ms
ok 12 - test/close.test.js # time=699.412ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=48.35ms
    
    1..1
    # time=57.992ms
ok 13 - test/connectionTimeout.test.js # time=57.992ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=96.552ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=14ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=23.197ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=10.539ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=11.929ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.517ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.261ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.287ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.556ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.336ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=10.727ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=19.905ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=19.971ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=6.063ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=16.153ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.112ms
    
    1..16
    # time=270.015ms
ok 14 - test/constrained-routes.test.js # time=270.015ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=75.292ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=28.7ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=25.692ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=12.669ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=12.362ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=8.486ms
    
    1..6
    # time=171.732ms
ok 15 - test/content-length.test.js # time=171.732ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=29.832ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=44.769ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.659ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=92.079ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=15.509ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=19.098ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=36.088ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=26.669ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=19.584ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=5.835ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.872ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.385ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.818ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.526ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.725ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.096ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.309ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.994ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.602ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=2.098ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.915ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.145ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.797ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.284ms
    
    1..24
    # time=362.361ms
ok 16 - test/content-parser.test.js # time=362.361ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=76.685ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=14.033ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=20.949ms
    
    1..3
    # time=132.67ms
ok 17 - test/context-config.test.js # time=132.67ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=62.919ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.898ms
    
    1..2
    # time=75.04ms
ok 18 - test/custom-http-server.test.js # time=75.04ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=35.007ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.831ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=103.585ms
    
    1..1
    # time=108.771ms
ok 19 - test/custom-parser-async.test.js # time=108.771ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.079ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=26.855ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.075ms
        
    ok 2 - contentTypeParser should add a custom parser # time=181.759ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=13.158ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=35.794ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=11.087ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=7.677ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=8.642ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=11.059ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=1.95ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.259ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.916ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=11.394ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=16.892ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=11.945ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=4.835ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=27.104ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=9.966ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=9.523ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.562ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.86ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.371ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=14.088ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=9.416ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=25.787ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.627ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=7.4ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=25.01ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=11.696ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=27.269ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=9.686ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=7.649ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=2.127ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=9.063ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=10.012ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=9.106ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.851ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.436ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=17.607ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=43.782ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=10.555ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=8.527ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=9.336ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=8.756ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=10.156ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.518ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.693ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.865ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.898ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.586ms
    
    1..47
    # time=744.305ms
ok 20 - test/custom-parser.test.js # time=744.305ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=117.746ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=14.482ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=37.88ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.043ms
    
    1..4
    # time=187.035ms
ok 21 - test/custom-querystring-parser.test.js # time=187.035ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=15.931ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=80.168ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=8.111ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=22.572ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=11.81ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.613ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=7.429ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=46.9ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=44.958ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=18.429ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=19.288ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=18.827ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=15.751ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.25ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.349ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.841ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.88ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.528ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=57.301ms
        
        1..5
    ok 15 - hasRequestDecorator # time=99.214ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.446ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.603ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.479ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.466ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.544ms
        
        1..5
    ok 16 - hasReplyDecorator # time=179.536ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=8.929ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=64.374ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=9.222ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.156ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=3.964ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.135ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.42ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=7.681ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.322ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.987ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=22.345ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=29.094ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.292ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.58ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=20.269ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=7.398ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=7.537ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=7.642ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.319ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=24.155ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=14.068ms
    
    1..37
    # time=938.075ms
ok 22 - test/decorator.test.js # time=938.075ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=19.021ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=38.572ms
    
    1..2
    # time=66.773ms
ok 23 - test/default-route.test.js # time=66.773ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.019ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.055ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.476ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.412ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.386ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.111ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=53.531ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=29.914ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.919ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=13.448ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.929ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.839ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=4.867ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.285ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.584ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.5ms
    
    1..17
    # time=314.476ms
ok 24 - test/delete.test.js # time=314.476ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=903.403ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=32.144ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.716ms
    
    1..3
    # time=965.981ms
ok 25 - test/diagnostics-channel.test.js # time=965.981ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=65.352ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.764ms
    
    1..2
    # time=83.897ms
ok 26 - test/encapsulated-error-handler.test.js # time=83.897ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=37.714ms
    
    ok 2 - should be equal
    1..2
    # time=43.028ms
ok 27 - test/esm/index.test.js # time=43.028ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.279ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.778ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.297ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.439ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.089ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.545ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.389ms
    
    1..7
    # time=70.746ms
ok 28 - test/fastify-instance.test.js # time=70.746ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=233.684ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=40.69ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=40.368ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=70.189ms
    
    1..4
    # time=391.596ms
ok 29 - test/fluent-schema.test.js # time=391.596ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=79.29ms
    
    1..1
    # time=85.705ms
ok 30 - test/genReqId.test.js # time=85.705ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.296ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.084ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.274ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=1.883ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.847ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.418ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.903ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.332ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.327ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=39.053ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.392ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.148ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=4.647ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=12.104ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=4.997ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.247ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.149ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=4.692ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=3.966ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=3.744ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.541ms
    
    1..22
    # time=299.441ms
ok 31 - test/get.test.js # time=299.441ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=80.382ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=33.355ms
    
    1..2
    # time=124.483ms
ok 32 - test/handler-context.test.js # time=124.483ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.904ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.198ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.445ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.444ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=39.879ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.477ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.426ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.006ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.086ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.418ms
    
    1..11
    # time=221.391ms
ok 33 - test/head.test.js # time=221.391ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=119.523ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=38.119ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=27.707ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=8.995ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.521ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=26.183ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=9.253ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=85.524ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=26.839ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=10.232ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=7.871ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=23.108ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=9.811ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=8.599ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=10.152ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=8.517ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.732ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=3.341ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=18.217ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=5.223ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.422ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=13.551ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=5.839ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=24.179ms
    
    1..20
    # time=503.104ms
ok 34 - test/hooks-async.test.js # time=503.104ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=61.653ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.178ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=14.945ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=29.516ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.061ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.133ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=11.229ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=5.216ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.055ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.267ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.917ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=504.5ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.722ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=14.537ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=5.829ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=9.463ms
    
    1..16
    # time=724.525ms
ok 35 - test/hooks.on-ready.test.js # time=724.525ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=163.934ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=22.849ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.303ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=47.118ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=25.159ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=6.376ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=10.148ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=20.621ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=12.726ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=11.23ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.543ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.666ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.543ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.137ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=19.071ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=11.726ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=6.243ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.007ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=19.097ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=19.384ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.911ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=21.646ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=11.921ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=93.334ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=7.041ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=4.375ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=22.808ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.641ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=13.835ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=23.061ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.422ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.114ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=29.701ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=10.652ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=18.735ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=33.841ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=8.468ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.576ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=4.418ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=74.827ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.785ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.135ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.784ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=4.1ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.055ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.34ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=6.778ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=8.049ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=11.362ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=8.165ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=9.341ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=21.021ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.824ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.496ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.462ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.82ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.202ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=13.316ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=13.424ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=4.031ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=17.219ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.73ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=5.425ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=5.955ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=11.161ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=10.136ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=7.789ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.176ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=5.568ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=5.261ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=60.339ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=63.07ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=18.14ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.377ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=8.059ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=11.059ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=3.85ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=4.701ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.335ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.246ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=4.698ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=6.827ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=6.025ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=3.87ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=508.373ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=508.501ms
    
    1..85
    # time=2340.94ms
ok 36 - test/hooks.test.js # time=2340.94ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.59ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=56.661ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.709ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=13.021ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=114.558ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=12.433ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=107.108ms
    
    1..5
    # time=332.456ms
ok 37 - test/http2/closing.test.js # time=332.456ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=42.3ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.461ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.362ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=152.335ms
    
    1..1
    # time=182.657ms
ok 38 - test/http2/constraint.test.js # time=182.657ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=57.72ms
    
    1..3
    # time=139.764ms
ok 39 - test/http2/head.test.js # time=139.764ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.76ms
    
    1..1
    # time=17.821ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.821ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=33.634ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=6.89ms
    
    1..4
    # time=126.677ms
ok 41 - test/http2/plain.test.js # time=126.677ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=40.591ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=20.777ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=11.595ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=20.075ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=15.044ms
        
    ok 1 - secure with fallback # time=195.502ms
    
    1..1
    # time=225.624ms
ok 42 - test/http2/secure-with-fallback.test.js # time=225.624ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=39.21ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.171ms
        
    ok 1 - secure # time=144.34ms
    
    1..1
    # time=189.574ms
ok 43 - test/http2/secure.test.js # time=189.574ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=33.594ms
    
    1..2
    # time=95.231ms
ok 44 - test/http2/unknown-http-method.test.js # time=95.231ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=82.624ms
    
    1..1
    # time=112.8ms
ok 45 - test/https/custom-https-server.test.js # time=112.8ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=37.704ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.677ms
        
    ok 1 - https # time=137.778ms
    
    1..1
    # time=167.605ms
ok 46 - test/https/https.test.js # time=167.605ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=734.119ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.5ms
    
    1..2
    # time=746.374ms
ok 47 - test/imports.test.js # time=746.374ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=16.113ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=614.038ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.98ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=17.105ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=9.272ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=5.931ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=6.101ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.265ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=23.256ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=15.992ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.649ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=27.678ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=11.173ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=6.112ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=21.766ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.393ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=11.184ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=15.892ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.305ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=11.963ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=41.124ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=21.463ms
    
    1..22
    # time=1428.357ms
ok 48 - test/inject.test.js # time=1428.357ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=50.203ms
    
    1..1
    # time=53.893ms
ok 49 - test/internals/all.test.js # time=53.893ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=20.471ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=17.306ms
    
    1..2
    # time=46.372ms
ok 50 - test/internals/contentTypeParser.test.js # time=46.372ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=6.109ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=2.368ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.639ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.4ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.315ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.965ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=1.387ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=2.511ms
    
    1..8
    # time=66.453ms
ok 51 - test/internals/decorator.test.js # time=66.453ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.75ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.32ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=66.824ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.753ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.658ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=350.662ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=12.636ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=15.547ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=35.708ms
    
    1..9
    # time=517.166ms
ok 52 - test/internals/handleRequest.test.js # time=517.166ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=10.054ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.531ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.921ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=27.901ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.219ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.815ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.157ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.855ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.522ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.219ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.755ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.36ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.472ms
    
    1..13
    # time=121.27ms
ok 53 - test/internals/hookRunner.test.js # time=121.27ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=7.927ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=3.916ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.963ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.052ms
    
    1..4
    # time=49.993ms
ok 54 - test/internals/hooks.test.js # time=49.993ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=15.455ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.286ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=11.651ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.574ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.987ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.547ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=56.812ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.738ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.81ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=46.415ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.268ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.412ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.61ms
    
    1..13
    # time=248.767ms
ok 55 - test/internals/initialConfig.test.js # time=248.767ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.205ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=83.31ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=12.023ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.377ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.378ms
    
    1..5
    # time=116.504ms
ok 56 - test/internals/logger.test.js # time=116.504ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.547ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.092ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=5.037ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.537ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.339ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.713ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.961ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=16.016ms
    
    1..8
    # time=108.594ms
ok 57 - test/internals/plugin.test.js # time=108.594ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=80.503ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=22.157ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=28.59ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.651ms
        
    ok 1 - Reply\#compileSerializationSchema # time=164.24ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=25.379ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=9.397ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=27.367ms
        
    ok 2 - Reply\#getSerializationFunction # time=71.412ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=41.218ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=35.768ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=9.269ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=14.147ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.268ms
        
    ok 3 - Reply\#serializeInput # time=115.391ms
    
    1..3
    # time=357.044ms
ok 58 - test/internals/reply-serialize.test.js # time=357.044ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.672ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=27.69ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=2.169ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.822ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.409ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=730.276ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.943ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.795ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.915ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=20.105ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=43.754ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.087ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=4.544ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.263ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.734ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.949ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=16.912ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.055ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.176ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.063ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.57ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.92ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=2.93ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=2.901ms
        
        1..15
    ok 11 - within an instance # time=187.464ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=31.658ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=16.58ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=17.032ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=69.566ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=51.707ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=8.171ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=11.245ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=7.711ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.762ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=22.75ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=7.923ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=11.11ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=17.661ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.855ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=8.334ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=10.801ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=13.625ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=7.885ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=4.961ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.486ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.918ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=5.074ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.769ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=12.525ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.82ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=16.429ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.179ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.586ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=4.78ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.815ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.401ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=3.956ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.751ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=6.951ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.834ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.031ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.379ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.602ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=5.92ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=9.472ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=8.644ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.616ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=6.48ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=10.709ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.538ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.338ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.871ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.455ms
        
    ok 56 - reply.then # time=21.131ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.688ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=19.834ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=6.372ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.206ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.951ms
    
    1..61
    # time=1603.403ms
ok 59 - test/internals/reply.test.js # time=1603.403ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=214.32ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=47.006ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=73.773ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=11.72ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=35.928ms
        
    ok 1 - \#compileValidationSchema # time=401.041ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=66.325ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.704ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=74.547ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=20.617ms
        
    ok 2 - \#getValidationFunction # time=176.644ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=65.039ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.264ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=107.914ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=13.671ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=20.249ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=25.51ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=25.977ms
        
    ok 3 - \#validate # time=276.134ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=88.549ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=77.983ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=38.864ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=9.725ms
                
            ok 1 - \#compileValidationSchema # time=225.831ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=54.759ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.739ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=47.319ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=18.262ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=7.487ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.184ms
                
            ok 2 - \#getValidationFunction # time=151.918ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=78.636ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.294ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=96.495ms
                
            ok 3 - \#validate # time=189.343ms
            
        ok 1 - Level_1 # time=573.917ms
        
    ok 4 - Nested Context # time=578.546ms
    
    1..4
    # time=1442.02ms
ok 60 - test/internals/request-validate.test.js # time=1442.02ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=14.002ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.7ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.186ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=11.354ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.42ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.256ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=1.126ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.263ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.543ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.311ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=7.48ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.985ms
    
    1..12
    # time=110.103ms
ok 61 - test/internals/request.test.js # time=110.103ms

./VariantsSubtree/fastify/variant5/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant4/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |    89.7 |    87.28 |   88.88 |   89.96 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   91.02 |    87.75 |   92.54 |   91.34 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   81.48 |    63.54 |   93.33 |   81.87 | ...,192,199-200,294,305-329 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=29.144ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=19.208ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=16.46ms
        
    ok 1 - default 404 # time=186.866ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=26.362ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.182ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.389ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.918ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.69ms
        
    ok 2 - customized 404 # time=70.146ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=4.9ms
        
    ok 3 - custom header in notFound handler # time=16.715ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=1.95ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=21.601ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.867ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=10.985ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=16.375ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=72.396ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=18.134ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=4.809ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.375ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.741ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.622ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.145ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.573ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=4.229ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.201ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.579ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.07ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.093ms
        
    ok 5 - encapsulated 404 # time=111.084ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=47.269ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.441ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=20.447ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=9.879ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=11.879ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=13.679ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=12.341ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.108ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.417ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.325ms
        
    ok 15 - log debug for 404 # time=14.927ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=14.727ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=10.113ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=6.837ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.891ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=16.279ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=4.108ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=6.258ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=5.67ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=48.592ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=6.653ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.285ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=5.05ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=10.285ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=33.304ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=5.806ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=5.013ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.585ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=5.119ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=145.968ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=5.186ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.423ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.558ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.186ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=5.178ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=7.041ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.4ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.62ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=6.275ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=42.523ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=11.447ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=92.938ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=7.268ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=17.251ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.077ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.331ms
    
    1..33
    # time=1021.792ms
ok 1 - test/404s.test.js # time=1021.792ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=87.995ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=9.471ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=66.598ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=12.973ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=15.837ms
    
    1..5
    # time=200.871ms
ok 2 - test/500s.test.js # time=200.871ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=70.946ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=13.269ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=88.484ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=11.464ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=23.584ms
    
    1..5
    # time=239.623ms
ok 3 - test/allowUnsafeRegex.test.js # time=239.623ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=45.933ms
ok 4 - test/als.test.js # time=45.933ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=316.047ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=11.694ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=20.311ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=90.728ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.217ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=22.07ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=7.895ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=8.955ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=24.695ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=10.858ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=208.094ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=212.473ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=5.029ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=30.415ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=10.031ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.653ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.355ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=5.43ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=5.016ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.948ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.944ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.445ms
    
    1..22
    # time=1059.004ms
ok 5 - test/async-await.test.js # time=1059.004ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=70.566ms
    
    1..1
    # time=77.541ms
ok 6 - test/bodyLimit.test.js # time=77.541ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3756.448ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3763.217ms
ok 7 - test/build/error-serializer.test.js # time=3763.217ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.519ms
    
    1..1
    # time=12.67ms
ok 8 - test/build/version.test.js # time=12.67ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=68.71ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=31.454ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=15.125ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=32.348ms
    
    1..4
    # time=162.815ms
ok 9 - test/case-insensitive.test.js # time=162.815ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.517ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.003ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.001ms
    
    1..3
    # time=27.01ms
ok 10 - test/chainable.test.js # time=27.01ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=144.5ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=32.849ms
    
    1..2
    # time=228.568ms
ok 11 - test/close-pipelining.test.js # time=228.568ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=84.285ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=19.534ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=27.811ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=11.514ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=6.829ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=14.741ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=74.308ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=118.709ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=25.759ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=274.465ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=18.426ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.491ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=9.264ms
    
    1..15
    # skip: 2
    # time=714.714ms
ok 12 - test/close.test.js # time=714.714ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=42.461ms
    
    1..1
    # time=51.073ms
ok 13 - test/connectionTimeout.test.js # time=51.073ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=96.789ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=13.083ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=32.065ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=22.129ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=7.523ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=2.098ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.765ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.933ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.721ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=3.152ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=10.231ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=30.379ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=15.184ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=9.015ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=6.624ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.72ms
    
    1..16
    # time=290.044ms
ok 14 - test/constrained-routes.test.js # time=290.044ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=81.343ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=10.864ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=10.398ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=15.919ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=8.013ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=5.913ms
    
    1..6
    # time=144.284ms
ok 15 - test/content-length.test.js # time=144.284ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.534ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.038ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.418ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=89.508ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=15.492ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=17.22ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=37.455ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=11.744ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=18.705ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=6.179ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.996ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=3.344ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.855ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=4.745ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.74ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=2.267ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.879ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.238ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.228ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.46ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.379ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.676ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.281ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.852ms
    
    1..24
    # time=317.439ms
ok 16 - test/content-parser.test.js # time=317.439ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=75.836ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=13.771ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=21.341ms
    
    1..3
    # time=130.809ms
ok 17 - test/context-config.test.js # time=130.809ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=99.756ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.983ms
    
    1..2
    # time=111.988ms
ok 18 - test/custom-http-server.test.js # time=111.988ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=32.738ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.995ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=115.786ms
    
    1..1
    # time=120.806ms
ok 19 - test/custom-parser-async.test.js # time=120.806ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.523ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.67ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.922ms
        
    ok 2 - contentTypeParser should add a custom parser # time=167.719ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=23.469ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=33.921ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=12.966ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=9.034ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=10.08ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=12.439ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=2.559ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=2.799ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.532ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=12.321ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=11.843ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.238ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=5.168ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=11.956ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=9.397ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=16.138ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=2.264ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.625ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=10.147ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=9.176ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=10.474ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=20.573ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=11.958ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=8.007ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.658ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=10.189ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=18.983ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=8.131ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=7.865ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.979ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=13.335ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=7.649ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=10.934ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=5.357ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=4.169ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=16.555ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=35.84ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=18.101ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=11.394ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=26.534ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=12.408ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=19.468ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=8.795ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=3.861ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=11.625ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=10.915ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=7.167ms
    
    1..47
    # time=761.658ms
ok 20 - test/custom-parser.test.js # time=761.658ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=139.104ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=13.78ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=29.434ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.018ms
    
    1..4
    # time=198.802ms
ok 21 - test/custom-querystring-parser.test.js # time=198.802ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=33.81ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=81.58ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=9.198ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=9.815ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=9.549ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=7.05ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=7.302ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=42.41ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=23.26ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=17.753ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=19.511ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=17.437ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=39.737ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.314ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.378ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.892ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.807ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.383ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=8.716ms
        
        1..5
    ok 15 - hasRequestDecorator # time=45.411ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.326ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.619ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.391ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.278ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=5.467ms
        
        1..5
    ok 16 - hasReplyDecorator # time=121.699ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=17.804ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=60.177ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=14.277ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=4.563ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.035ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.011ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.625ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=7.104ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=27.254ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=22.955ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=35.616ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.067ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=8.325ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=10.02ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=25.094ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=24.504ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=24.474ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=1.952ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.336ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=15.698ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=21.353ms
    
    1..37
    # time=900.064ms
ok 22 - test/decorator.test.js # time=900.064ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=22.155ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=44.41ms
    
    1..2
    # time=76.489ms
ok 23 - test/default-route.test.js # time=76.489ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=9.162ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.987ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.48ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.417ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.338ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.091ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=42.022ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=35.518ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=13.709ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=6.625ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=5.894ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=16.447ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=6.676ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=5.202ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=5.476ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=8.296ms
    
    1..17
    # time=329.672ms
ok 24 - test/delete.test.js # time=329.672ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=904.411ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=17.016ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=18.631ms
    
    1..3
    # time=952.88ms
ok 25 - test/diagnostics-channel.test.js # time=952.88ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=69.865ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.138ms
    
    1..2
    # time=87.898ms
ok 26 - test/encapsulated-error-handler.test.js # time=87.898ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=83.733ms
    
    ok 2 - should be equal
    1..2
    # time=89.327ms
ok 27 - test/esm/index.test.js # time=89.327ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=14.104ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.16ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=3.014ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.455ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.095ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.69ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=15.846ms
    
    1..7
    # time=64.808ms
ok 28 - test/fastify-instance.test.js # time=64.808ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=204.123ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=43.138ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=59.515ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=65.665ms
    
    1..4
    # time=388.001ms
ok 29 - test/fluent-schema.test.js # time=388.001ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=86.886ms
    
    1..1
    # time=93.386ms
ok 30 - test/genReqId.test.js # time=93.386ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=22.17ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=8.753ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=11.799ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.708ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.974ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.482ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.955ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.361ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.337ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=41.427ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.276ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=7.113ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.492ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=9.173ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.946ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=5.237ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=5.135ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.97ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=5.954ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=13.893ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=3.983ms
    
    1..22
    # time=347.142ms
ok 31 - test/get.test.js # time=347.142ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=52.438ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=17.127ms
    
    1..2
    # time=77.926ms
ok 32 - test/handler-context.test.js # time=77.926ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.949ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.15ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.462ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.416ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=40.334ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=5.608ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=5.581ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.381ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.316ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.757ms
    
    1..11
    # time=226.01ms
ok 33 - test/head.test.js # time=226.01ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=118.979ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=38.111ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=24.11ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=17.194ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=9.242ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.485ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=36.59ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=125.469ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=7.043ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.314ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=10.7ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=5.947ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=6.38ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=7.318ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=11.961ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=22.173ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=2.547ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.95ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=17.518ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=7.007ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=17.555ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=15.673ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=7.298ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=28.16ms
    
    1..20
    # time=542.782ms
ok 34 - test/hooks-async.test.js # time=542.782ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=67.759ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.501ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=20.932ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=19.444ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.039ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.059ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=39.267ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=5.61ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.41ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.23ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=1.931ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=515.634ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=4.539ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=21.735ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=6.484ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=10.116ms
    
    1..16
    # time=780.517ms
ok 35 - test/hooks.on-ready.test.js # time=780.517ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=156.8ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=29.199ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.643ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=19.108ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=13.059ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=4.044ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.694ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.954ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=6.187ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=8.026ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.568ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.49ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=6.084ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.16ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=11.173ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=8.148ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=4.56ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.404ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.779ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.525ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=3.901ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=16.375ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=11.037ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=84.987ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=6.928ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=3.683ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=17.715ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.888ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=15.872ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.075ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.211ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.5ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=39.596ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=17.999ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=20.636ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=6.156ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=10.933ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=13.065ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=7.528ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=81.777ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.873ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.881ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.376ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=14.416ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=4.486ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=22.907ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=7.413ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=8.351ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=7.587ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=7.79ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=11.228ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=9.235ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=8.897ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=8.741ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.907ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=8.689ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=4.471ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=14.577ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=6.846ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=8.023ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=23.625ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=5.74ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=5.534ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=6.482ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=11.752ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=61.736ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=27.169ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=13.069ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=7.414ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=6.062ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=14.583ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=15.588ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=10.881ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=7.341ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=15.048ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=12.893ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.398ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=5.99ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=6.034ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.64ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=5.612ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=16.034ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=19.342ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.808ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=508.905ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=507.116ms
    
    1..85
    # time=2279.467ms
ok 36 - test/hooks.test.js # time=2279.467ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.621ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=59.008ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.628ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=12.922ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=109.353ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=20.563ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=111.805ms
    
    1..5
    # time=340.157ms
ok 37 - test/http2/closing.test.js # time=340.157ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=41.325ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.348ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.114ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=159.964ms
    
    1..1
    # time=189.545ms
ok 38 - test/http2/constraint.test.js # time=189.545ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=58.419ms
    
    1..3
    # time=132.462ms
ok 39 - test/http2/head.test.js # time=132.462ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.04ms
    
    1..1
    # time=18.628ms
ok 40 - test/http2/missing-http2-module.test.js # time=18.628ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=40.371ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.515ms
    
    1..4
    # time=155.401ms
ok 41 - test/http2/plain.test.js # time=155.401ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=40.724ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=28.997ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=12.179ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=20.236ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=12.779ms
        
    ok 1 - secure with fallback # time=199.891ms
    
    1..1
    # time=229.999ms
ok 42 - test/http2/secure-with-fallback.test.js # time=229.999ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=38.122ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=21.467ms
        
    ok 1 - secure # time=142.536ms
    
    1..1
    # time=172.337ms
ok 43 - test/http2/secure.test.js # time=172.337ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=33.817ms
    
    1..2
    # time=90.677ms
ok 44 - test/http2/unknown-http-method.test.js # time=90.677ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=79.929ms
    
    1..1
    # time=111.512ms
ok 45 - test/https/custom-https-server.test.js # time=111.512ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.844ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=15.68ms
        
    ok 1 - https # time=137.173ms
    
    1..1
    # time=168.05ms
ok 46 - test/https/https.test.js # time=168.05ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=726.436ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.375ms
    
    1..2
    # time=736.849ms
ok 47 - test/imports.test.js # time=736.849ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=25.13ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=596.48ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.775ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=18.786ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.194ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=14.039ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.147ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=5.672ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=16.996ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=19.774ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=18.759ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.4ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=22.768ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=9.773ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=15.157ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=505.839ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=14.626ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=22.044ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=15.331ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=5.846ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=4.838ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=3.644ms
    
    1..22
    # time=1393.391ms
ok 48 - test/inject.test.js # time=1393.391ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=49.932ms
    
    1..1
    # time=53.628ms
ok 49 - test/internals/all.test.js # time=53.628ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=26.591ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.476ms
    
    1..2
    # time=43.66ms
ok 50 - test/internals/contentTypeParser.test.js # time=43.66ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=5.621ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.693ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=1.199ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.112ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.928ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.4ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.932ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.787ms
    
    1..8
    # time=68.712ms
ok 51 - test/internals/decorator.test.js # time=68.712ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=6.273ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.603ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=64.582ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.795ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.742ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=308.825ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=12.947ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=32.891ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=45.44ms
    
    1..9
    # time=498.653ms
ok 52 - test/internals/handleRequest.test.js # time=498.653ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=8.765ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.601ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.096ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=26.536ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=2.437ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.236ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=1.516ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=8.26ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=3.559ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=2.449ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=2.896ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=2.682ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.042ms
    
    1..13
    # time=108.347ms
ok 53 - test/internals/hookRunner.test.js # time=108.347ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=7.886ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=3.716ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=0.961ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.548ms
    
    1..4
    # time=27.743ms
ok 54 - test/internals/hooks.test.js # time=27.743ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=19.067ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.594ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=12.791ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=3.446ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=17.536ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.571ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=58.625ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.506ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.612ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=40.273ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.691ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.602ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.918ms
    
    1..13
    # time=246.438ms
ok 55 - test/internals/initialConfig.test.js # time=246.438ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.552ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=86.483ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=9.267ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.527ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=5.03ms
    
    1..5
    # time=118.905ms
ok 56 - test/internals/logger.test.js # time=118.905ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=5.898ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.683ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=4.504ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.577ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.069ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.682ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=0.953ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=22.807ms
    
    1..8
    # time=94.033ms
ok 57 - test/internals/plugin.test.js # time=94.033ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=86.531ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=20.701ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=36.231ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=9.927ms
        
    ok 1 - Reply\#compileSerializationSchema # time=179.391ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=23.555ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=9.257ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=11.323ms
        
    ok 2 - Reply\#getSerializationFunction # time=60.767ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=50.168ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=25.659ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=8.086ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=7.863ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.194ms
        
    ok 3 - Reply\#serializeInput # time=106.143ms
    
    1..3
    # time=359.133ms
ok 58 - test/internals/reply-serialize.test.js # time=359.133ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=13.073ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=4.901ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.438ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.325ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.007ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=743.55ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=1.232ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=1.233ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=1.258ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=22.692ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=47.887ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.672ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.341ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.913ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=4.279ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.747ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=8.132ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=8.697ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=4.576ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=7.082ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=7.535ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.896ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.469ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.481ms
        
        1..15
    ok 11 - within an instance # time=198.881ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=35.796ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=10.309ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=42.295ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=90.35ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=23.351ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=25.344ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=13.284ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=25.562ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=13.303ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=22.511ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=13.418ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=14.387ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=17.024ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=15.165ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=23.254ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=15.06ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=36.102ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=15.941ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=6.062ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=26.278ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=4.613ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=7.191ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=7.17ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.214ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=6.622ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=16.51ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.409ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.621ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=6.154ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=9.369ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.756ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=4.226ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.436ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=7.208ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.821ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.369ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.624ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.646ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=7.133ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=10.097ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=9.892ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.932ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=26.009ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=8.072ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.643ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.82ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.995ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.502ms
        
    ok 56 - reply.then # time=22.314ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.726ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.875ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=7.366ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.784ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=7.197ms
    
    1..61
    # time=1807.857ms
ok 59 - test/internals/reply.test.js # time=1807.857ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=146.405ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=49.354ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=63.405ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=11.934ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=34.822ms
        
    ok 1 - \#compileValidationSchema # time=323.956ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=66.831ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.467ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=78.498ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=17.959ms
        
    ok 2 - \#getValidationFunction # time=178.597ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=69.271ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.408ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=119.036ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=11.281ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=22.533ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=17.691ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=33.288ms
        
    ok 3 - \#validate # time=297.98ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=113.782ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=37.673ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=56.005ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.682ms
                
            ok 1 - \#compileValidationSchema # time=226.414ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=54.746ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.304ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=40.048ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=7.397ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=11.091ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.177ms
                
            ok 2 - \#getValidationFunction # time=134.55ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=43.18ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.396ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=72.931ms
                
            ok 3 - \#validate # time=130.49ms
            
        ok 1 - Level_1 # time=498.34ms
        
    ok 4 - Nested Context # time=503.032ms
    
    1..4
    # time=1320.89ms
ok 60 - test/internals/request-validate.test.js # time=1320.89ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=14.202ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.771ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=1.281ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=37ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=1.495ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=1.159ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=2.332ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=0.953ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=6.324ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=1.787ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=4.886ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.99ms
    
    1..12
    # time=147.537ms
ok 61 - test/internals/request.test.js # time=147.537ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=40.558ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=17.123ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=27.687ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=22.202ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=14.093ms
    
    1..5
    # time=129.007ms
ok 62 - test/internals/server.test.js # time=129.007ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=7.243ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=1.873ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=0.917ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.275ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.577ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=63.164ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=1.93ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=3.893ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=3.1ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=2.775ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=2.318ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.417ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.497ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=2.049ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=2.187ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=1.043ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.857ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.909ms
    
    1..18
    # time=172.79ms
ok 63 - test/internals/validation.test.js # time=172.79ms

./VariantsSubtree/fastify/variant3/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant2/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   90.34 |    88.16 |   89.17 |   90.63 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   91.75 |    88.75 |   92.88 |   92.11 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |   90.12 |    76.04 |   96.66 |   90.62 | ...,199-200,294,306,317-318 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------

> fastify@4.3.0 lint:standard
> standard | snazzy

./VariantsSubtree/fastify/variant1/fastify

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=29.08ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=16.613ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=10.603ms
        
    ok 1 - default 404 # time=172.911ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=11.932ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=5.312ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.815ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=18.399ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.133ms
        
    ok 2 - customized 404 # time=60.196ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=12.861ms
        
    ok 3 - custom header in notFound handler # time=30.178ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=4.6ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=21.184ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.183ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=9.79ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=16.398ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=67.743ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=58.67ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=11.178ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=20.949ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=13.592ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=9.987ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=4.397ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=5.105ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=6.288ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=4.355ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=5.236ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=4.13ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=4.756ms
        
    ok 5 - encapsulated 404 # time=183.132ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=75.804ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=11.842ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=31.618ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=12.201ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=12.376ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=24.943ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=13.48ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=15.882ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=3.66ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=8.381ms
        
    ok 15 - log debug for 404 # time=15.264ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=16.838ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=29.551ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=25.53ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=7.917ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=23.45ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=9.191ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=7.012ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=12.034ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=37.999ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=14.918ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=4.911ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=4.486ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=8.952ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=4.797ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=4.378ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=3.976ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=8.182ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=3.838ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=104.929ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=4.425ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.173ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.325ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=5.038ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.998ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.695ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=19.404ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=5.616ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=5.114ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=10.286ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=6.895ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=54.939ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=26.185ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=31.657ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=6.038ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=11.352ms
    
    1..33
    # time=1133.16ms
ok 1 - test/404s.test.js # time=1133.16ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=109.105ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=11.492ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=23.311ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=18.368ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=13.132ms
    
    1..5
    # time=185.524ms
ok 2 - test/500s.test.js # time=185.524ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=71.447ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=13.012ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=93.155ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=10.359ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=26.623ms
    
    1..5
    # time=240.6ms
ok 3 - test/allowUnsafeRegex.test.js # time=240.6ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=73.114ms
ok 4 - test/als.test.js # time=73.114ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=314.324ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.665ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=17.599ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=98.349ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=10.808ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=37.989ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=14.121ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=11.005ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=20.489ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=10.242ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=208.168ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=228.478ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=4.609ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=8.86ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=9.632ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=7.255ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.302ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=5.166ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.49ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.514ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.344ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.035ms
    
    1..22
    # time=1077.514ms
ok 5 - test/async-await.test.js # time=1077.514ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=63.557ms
    
    1..1
    # time=68.797ms
ok 6 - test/bodyLimit.test.js # time=68.797ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3748.364ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3756.153ms
ok 7 - test/build/error-serializer.test.js # time=3756.153ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.69ms
    
    1..1
    # time=14.54ms
ok 8 - test/build/version.test.js # time=14.54ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=68.696ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=34.656ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=11.875ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=17.606ms
    
    1..4
    # time=154.783ms
ok 9 - test/case-insensitive.test.js # time=154.783ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=10.016ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.6ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.605ms
    
    1..3
    # time=28.471ms
ok 10 - test/chainable.test.js # time=28.471ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=109.877ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=24.299ms
    
    1..2
    # time=152.513ms
ok 11 - test/close-pipelining.test.js # time=152.513ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=123.966ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=22.809ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=34.621ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=15.364ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=3.572ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=17.107ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=40.484ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=110.237ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=34.371ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=274.594ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=26.158ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=5.182ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=11.215ms
    
    1..15
    # skip: 2
    # time=740.029ms
ok 12 - test/close.test.js # time=740.029ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=40.496ms
    
    1..1
    # time=45.914ms
ok 13 - test/connectionTimeout.test.js # time=45.914ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=103.867ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=12.934ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=28.799ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=15.009ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=6.705ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.961ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.642ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=2.636ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=5.376ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.872ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=9.35ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=27.651ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=17.481ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=5.868ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=15.849ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=5.41ms
    
    1..16
    # time=288.011ms
ok 14 - test/constrained-routes.test.js # time=288.011ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=72.47ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=14.586ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=22.774ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=10.662ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=7.762ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=5.919ms
    
    1..6
    # time=141.245ms
ok 15 - test/content-length.test.js # time=141.245ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.245ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=40.161ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=4.319ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=90.632ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=14.148ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=9.007ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=44.683ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=19.084ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=23.918ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=4.945ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=2.198ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.169ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.295ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=2.849ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.135ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.507ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=4.678ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.133ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.185ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.398ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.373ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=1.693ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.347ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=1.88ms
    
    1..24
    # time=307.681ms
ok 16 - test/content-parser.test.js # time=307.681ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=82.606ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=14.6ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=21.832ms
    
    1..3
    # time=140.092ms
ok 17 - test/context-config.test.js # time=140.092ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=65.581ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=3.995ms
    
    1..2
    # time=77.926ms
ok 18 - test/custom-http-server.test.js # time=77.926ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=53.986ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.292ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=140.004ms
    
    1..1
    # time=145.114ms
ok 19 - test/custom-parser-async.test.js # time=145.114ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=14.602ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=27.465ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.723ms
        
    ok 2 - contentTypeParser should add a custom parser # time=176.099ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=14.249ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=46.326ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.611ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=7.578ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=15.259ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=16.143ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=1.946ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=6.642ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=2.19ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=13.753ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=13.923ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=12.118ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=4.59ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=7.986ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=8.089ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=16.773ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.484ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=2.401ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=17.274ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=7.99ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=9.894ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=7.24ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=7.084ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=7.217ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=8.234ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=6.74ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=10.952ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=6.821ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=16.348ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.901ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=8.7ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=15.073ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=15.234ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.633ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.349ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=17.809ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=31.891ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=14.934ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=9.216ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=22.932ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=9.49ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=12.977ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.578ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.697ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.623ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.528ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.786ms
    
    1..47
    # time=713.058ms
ok 20 - test/custom-parser.test.js # time=713.058ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=111.502ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=16.079ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=26.807ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.02ms
    
    1..4
    # time=173.115ms
ok 21 - test/custom-querystring-parser.test.js # time=173.115ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=16.638ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=74.45ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=8.336ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=18.532ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=10.024ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.895ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=27.464ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=53.401ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=24.447ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=18.088ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=23.429ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=18.141ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=47.232ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=5.661ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.119ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.505ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=2.369ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=10.03ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=17.258ms
        
        1..5
    ok 15 - hasRequestDecorator # time=64.536ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=2.018ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=2.126ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=2.385ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=11.631ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.491ms
        
        1..5
    ok 16 - hasReplyDecorator # time=169.479ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=4.045ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=34.246ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=15.173ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.59ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=4.866ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.627ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=9.448ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=23.206ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=28.64ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=23.87ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=23.388ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=23.705ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=9.431ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.939ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=11.598ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=8.615ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=19.81ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=7.355ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.898ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=16.728ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=15.51ms
    
    1..37
    # time=937.423ms
ok 22 - test/decorator.test.js # time=937.423ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=15.001ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=37.154ms
    
    1..2
    # time=60.487ms
ok 23 - test/default-route.test.js # time=60.487ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=8.851ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.971ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.449ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.409ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.332ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.095ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=44.139ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=29.314ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=6.515ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=13.212ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.877ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.771ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=5.299ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.103ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.524ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.279ms
    
    1..17
    # time=293.948ms
ok 24 - test/delete.test.js # time=293.948ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=911.954ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=18.577ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.359ms
    
    1..3
    # time=966.104ms
ok 25 - test/diagnostics-channel.test.js # time=966.104ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=66.54ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=22.692ms
    
    1..2
    # time=96.291ms
ok 26 - test/encapsulated-error-handler.test.js # time=96.291ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=35.748ms
    
    ok 2 - should be equal
    1..2
    # time=41.246ms
ok 27 - test/esm/index.test.js # time=41.246ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=15.703ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.346ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.893ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.752ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=4.178ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=3.688ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=17.84ms
    
    1..7
    # time=75.832ms
ok 28 - test/fastify-instance.test.js # time=75.832ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=190.758ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=42.277ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=67.678ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=56.554ms
    
    1..4
    # time=365.395ms
ok 29 - test/fluent-schema.test.js # time=365.395ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=67.837ms
    
    1..1
    # time=77.182ms
ok 30 - test/genReqId.test.js # time=77.182ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=9.48ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.041ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.595ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=1.919ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.868ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.517ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=1.946ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.39ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.364ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=40.003ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=6.663ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.843ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.209ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=23.443ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=6.899ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=5.011ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=4.848ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.45ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.504ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.35ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.284ms
    
    1..22
    # time=313.619ms
ok 31 - test/get.test.js # time=313.619ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=52.261ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=14.976ms
    
    1..2
    # time=74.281ms
ok 32 - test/handler-context.test.js # time=74.281ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.946ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.339ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.57ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.478ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=96.581ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=7.909ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=6.176ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=4.874ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.717ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=6.147ms
    
    1..11
    # time=293.456ms
ok 33 - test/head.test.js # time=293.456ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=126.562ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=51.929ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=20.694ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=11.47ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.194ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.665ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=8.315ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=102.405ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=28.52ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=7.704ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=8.739ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=5.774ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=12.222ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=5.144ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=13.851ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=18.823ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=2.014ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=2.545ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=15.599ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=19.061ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=23.703ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=14.245ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=6.352ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=25.665ms
    
    1..20
    # time=534.465ms
ok 34 - test/hooks-async.test.js # time=534.465ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=68.847ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.89ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=15.807ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=20.202ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.942ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.497ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=34.141ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=6.856ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.453ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.768ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=2.206ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=522.392ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.641ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=45.612ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=11.113ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=10.42ms
    
    1..16
    # time=799.011ms
ok 35 - test/hooks.on-ready.test.js # time=799.011ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=159.17ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=26.759ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=6.243ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=18.644ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=12.664ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.793ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=7.304ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=16.998ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.938ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.651ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=4.338ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=5.139ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=6.483ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=6.899ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.242ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=12.132ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.315ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=4.309ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=6.021ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.844ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=2.848ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.086ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=2.59ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=55.563ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=6.104ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=3.166ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=16.338ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=3.193ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=13.346ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=22.64ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=6.583ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=4.474ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=27.016ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=11.286ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=13.671ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=17.287ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=15.133ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=4.457ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=16.015ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=74.146ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=4.681ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=4.169ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=4.052ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=3.939ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=3.993ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=7.405ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=18.211ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=6.758ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=5.948ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=6.423ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=7.848ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=7.42ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=7.171ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=7.191ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.177ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.639ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.901ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=13.335ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=9.273ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=3.418ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=22.936ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=13.039ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=6.29ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.705ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=9.427ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=43.994ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=26.325ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=11.606ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=7.112ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=4.328ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=14.56ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=15.55ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=11.214ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=7.63ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=9.613ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=13.324ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=4.644ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=6.183ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=6.141ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.721ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=8.086ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=8.109ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=15.958ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=5.02ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=509.14ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=515.069ms
    
    1..85
    # time=2132.746ms
ok 36 - test/hooks.test.js # time=2132.746ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=15.851ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=83.771ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=7.97ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=20.618ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=131.899ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=20.874ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=110.604ms
    
    1..5
    # time=406.71ms
ok 37 - test/http2/closing.test.js # time=406.71ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=42.174ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.929ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=11.133ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=151.268ms
    
    1..1
    # time=181.396ms
ok 38 - test/http2/constraint.test.js # time=181.396ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=63.619ms
    
    1..3
    # time=145.873ms
ok 39 - test/http2/head.test.js # time=145.873ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.362ms
    
    1..1
    # time=16.917ms
ok 40 - test/http2/missing-http2-module.test.js # time=16.917ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=34.034ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=7.863ms
    
    1..4
    # time=124.496ms
ok 41 - test/http2/plain.test.js # time=124.496ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=41.524ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=20.611ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=15.906ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=24.977ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=8.263ms
        
    ok 1 - secure with fallback # time=213.012ms
    
    1..1
    # time=242.694ms
ok 42 - test/http2/secure-with-fallback.test.js # time=242.694ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=38.157ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=22.642ms
        
    ok 1 - secure # time=143.723ms
    
    1..1
    # time=179.778ms
ok 43 - test/http2/secure.test.js # time=179.778ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=34.82ms
    
    1..2
    # time=101.457ms
ok 44 - test/http2/unknown-http-method.test.js # time=101.457ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=109.691ms
    
    1..1
    # time=143.482ms
ok 45 - test/https/custom-https-server.test.js # time=143.482ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=38.43ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=16.189ms
        
    ok 1 - https # time=135.353ms
    
    1..1
    # time=164.76ms
ok 46 - test/https/https.test.js # time=164.76ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=708.343ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.921ms
    
    1..2
    # time=721.749ms
ok 47 - test/imports.test.js # time=721.749ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.627ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=593.229ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=6.974ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=9.703ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=6.344ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.557ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.74ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=6.13ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=6.328ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=30.536ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.937ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=9.129ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=6.305ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=25.232ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=23.129ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=509.964ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=6.323ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=8.795ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=10.515ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=23.192ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=6.23ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=3.947ms
    
    1..22
    # time=1352.288ms
ok 48 - test/inject.test.js # time=1352.288ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=66.055ms
    
    1..1
    # time=71.156ms
ok 49 - test/internals/all.test.js # time=71.156ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=29.33ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.639ms
    
    1..2
    # time=46.619ms
ok 50 - test/internals/contentTypeParser.test.js # time=46.619ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=4.024ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.422ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=0.94ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=0.86ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.818ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.208ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.772ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.579ms
    
    1..8
    # time=61.2ms
ok 51 - test/internals/decorator.test.js # time=61.2ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.727ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.321ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=71.512ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.767ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.749ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=317.799ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.773ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=30.587ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=34.696ms
    
    1..9
    # time=501.643ms
ok 52 - test/internals/handleRequest.test.js # time=501.643ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=9.944ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=3.429ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.91ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=28.249ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.318ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.876ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.156ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=10.056ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.548ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=3.284ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.8ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=3.536ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=1.489ms
    
    1..13
    # time=125.546ms
ok 53 - test/internals/hookRunner.test.js # time=125.546ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.082ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=6.365ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.306ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.035ms
    
    1..4
    # time=33.762ms
ok 54 - test/internals/hooks.test.js # time=33.762ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=14.986ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=8.432ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=10.087ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=2.999ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=15.482ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.392ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=56.192ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.658ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.743ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=43.838ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=2.355ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=10.134ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=4.505ms
    
    1..13
    # time=259.679ms
ok 55 - test/internals/initialConfig.test.js # time=259.679ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.758ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=79.09ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=11.617ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.623ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.626ms
    
    1..5
    # time=114.075ms
ok 56 - test/internals/logger.test.js # time=114.075ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=7.236ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=1.71ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=5.625ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.598ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.063ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=1.1ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.196ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=16.264ms
    
    1..8
    # time=85.749ms
ok 57 - test/internals/plugin.test.js # time=85.749ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=84.792ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=22.707ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=15.197ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.341ms
        
    ok 1 - Reply\#compileSerializationSchema # time=149.822ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=23.269ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.545ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=8.834ms
        
    ok 2 - Reply\#getSerializationFunction # time=60.995ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=47.256ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=38.12ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=11.944ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=9.819ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=17.34ms
        
    ok 3 - Reply\#serializeInput # time=133.283ms
    
    1..3
    # time=362.785ms
ok 58 - test/internals/reply-serialize.test.js # time=362.785ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=13.144ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=4.802ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.363ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.302ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.001ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=867.902ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.863ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.697ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.93ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=23.703ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=46.947ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=6.472ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.008ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=4.7ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.981ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.596ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.704ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=8.318ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.768ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=7.034ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=7.586ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=3.773ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.666ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.35ms
        
        1..15
    ok 11 - within an instance # time=186.599ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=35.885ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=14.367ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=18.753ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=116.935ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=62.191ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=17.046ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=13.432ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=16.393ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=8.056ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=44.712ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=22.95ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=8.763ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=29.661ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.362ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.906ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=10.248ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=15.19ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=8.321ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=5.477ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=8.071ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.974ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=5.332ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.943ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.326ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.884ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=16.745ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=4.747ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=3.903ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=5.07ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=9.35ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=4.859ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=4.319ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.404ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=7.341ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.882ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.387ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.505ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=4.121ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=5.211ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=10.014ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=10.026ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=4.119ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=20.062ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=8.026ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=10.737ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=1.385ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.967ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.45ms
        
    ok 56 - reply.then # time=21.683ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.711ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=13.62ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=7.26ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=6.724ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=7.076ms
    
    1..61
    # time=1885.213ms
ok 59 - test/internals/reply.test.js # time=1885.213ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=153.929ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=47.955ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=76.92ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=13.011ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=36.23ms
        
    ok 1 - \#compileValidationSchema # time=347.737ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=66.159ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.892ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=79.683ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=25.645ms
        
    ok 2 - \#getValidationFunction # time=188.083ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=59.633ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=9.119ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=115.2ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=14.717ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=37.631ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=21.565ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=31.703ms
        
    ok 3 - \#validate # time=310.339ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=84.413ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=56.482ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=28.907ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=10.758ms
                
            ok 1 - \#compileValidationSchema # time=191.46ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=57.484ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=5.497ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=46.362ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.95ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=27.095ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=16.637ms
                
            ok 2 - \#getValidationFunction # time=177.622ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=44.561ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=8.508ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=102.504ms
                
            ok 3 - \#validate # time=163.394ms
            
        ok 1 - Level_1 # time=541.022ms
        
    ok 4 - Nested Context # time=545.869ms
    
    1..4
    # time=1400.371ms
ok 60 - test/internals/request-validate.test.js # time=1400.371ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=12.407ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.326ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=0.871ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=9.57ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=0.971ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.84ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=0.829ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=1.073ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.183ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=0.971ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=3.729ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.725ms
    
    1..12
    # time=99.445ms
ok 61 - test/internals/request.test.js # time=99.445ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=39.463ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=16.814ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=17.199ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=15.793ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=14.556ms
    
    1..5
    # time=111.717ms
ok 62 - test/internals/server.test.js # time=111.717ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=7.868ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=2.195ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=1.231ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.601ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.832ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=79.371ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=1.861ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=1.587ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=14.604ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=2.919ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=1.958ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.035ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.184ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=2.017ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=1.896ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=0.765ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.749ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.555ms
    
    1..18
    # time=182.653ms
ok 63 - test/internals/validation.test.js # time=182.653ms

# Subtest: test/keepAliveTimeout.test.js
    # Subtest: keepAliveTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 1 - keepAliveTimeout # time=39.482ms
    
    1..1
    # time=47.291ms
ok 64 - test/keepAliveTimeout.test.js # time=47.291ms

-----------------------------|---------|----------|---------|---------|-----------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
-----------------------------|---------|----------|---------|---------|-----------------------------
All files                    |   90.57 |    89.11 |   89.17 |   90.87 |                             
 fastify                     |   80.44 |    83.75 |   69.64 |   80.37 |                             
  fastify.js                 |   80.44 |    83.75 |   69.64 |   80.37 | ...,676-695,715-724,732-743 
 fastify/lib                 |   92.02 |    89.82 |   92.88 |   92.38 |                             
  contentTypeParser.js       |   93.95 |     98.3 |     100 |   93.52 | 213-217,233-236,270-271     
  context.js                 |     100 |      100 |     100 |     100 |                             
  decorate.js                |   96.42 |    96.07 |     100 |   96.15 | 23,41                       
  error-handler.js           |   92.75 |    93.61 |   85.71 |   92.75 | 20,108-110,118              
  errors.js                  |     100 |      100 |     100 |     100 |                             
  fourOhFour.js              |     100 |      100 |     100 |     100 |                             
  handleRequest.js           |   98.48 |    98.03 |     100 |   98.41 | 97                          
  headRoute.js               |      20 |     12.5 |   33.33 |   14.28 | 4-21,26                     
  hooks.js                   |     100 |      100 |     100 |     100 |                             
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                             
  logger.js                  |   96.49 |    93.33 |     100 |   96.36 | 22-23                       
  noop-set.js                |     100 |      100 |      60 |     100 |                             
  pluginOverride.js          |   95.12 |       85 |     100 |      95 | 55,75                       
  pluginUtils.js             |   94.59 |    84.21 |     100 |   95.16 | 19,111,118                  
  reply.js                   |   87.43 |     84.4 |   88.88 |   88.48 | ...,622-627,648-654,659,710 
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                             
  request.js                 |   87.96 |    90.62 |      80 |   89.42 | 45-54,157-167,206,211       
  route.js                   |   88.41 |    86.95 |     100 |   88.26 | ...-362,396-397,411,461,465 
  schema-controller.js       |    92.3 |    79.41 |   84.61 |    92.3 | 23,58,71                    
  schemas.js                 |   91.17 |    92.06 |   88.88 |   92.53 | 28,32,43,65,147             
  server.js                  |    93.2 |    89.58 |   96.66 |   93.75 | ...,192,199-200,294,317-318 
  symbols.js                 |     100 |      100 |     100 |     100 |                             
  validation.js              |    91.3 |    82.75 |     100 |   93.75 | 22,109-111                  
  warnings.js                |     100 |      100 |     100 |     100 |                             
  wrapThenable.js            |   93.33 |       90 |     100 |   93.33 | 11                          
-----------------------------|---------|----------|---------|---------|-----------------------------
