44
./VariantsSubtree/yeoman-generator/variant44/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (40ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (110ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (286ms)
      ✔ should accept semver version
      ✔ should accept github repository (1131ms)
      ✔ should accept github repository version (1068ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (64ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (75ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (153ms)
        ✔ cache the value (157ms)
        ✔ cache is linked to the CWD (310ms)
      .email()
        ✔ is the email used by git (151ms)
        ✔ handle cache (151ms)
        ✔ cache is linked to the CWD (309ms)
    .github
      .username()
        ✔ is the username used by GitHub (199ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant43/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (120ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (109ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (94ms)
      ✔ should accept semver version (48ms)
      ✔ should accept github repository (849ms)
      ✔ should accept github repository version (636ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (70ms)
      ✔ should accept arrays (219ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (51ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (47ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (156ms)
        ✔ cache the value (155ms)
        ✔ cache is linked to the CWD (326ms)
      .email()
        ✔ is the email used by git (152ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (315ms)
    .github
      .username()
        ✔ is the username used by GitHub (185ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant42/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (119ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (111ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (263ms)
      ✔ should accept semver version (39ms)
      ✔ should accept github repository (961ms)
      ✔ should accept github repository version (639ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (52ms)
      ✔ should accept arrays (45ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (53ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (152ms)
        ✔ cache the value (154ms)
        ✔ cache is linked to the CWD (322ms)
      .email()
        ✔ is the email used by git (155ms)
        ✔ handle cache (155ms)
        ✔ cache is linked to the CWD (341ms)
    .github
      .username()
        ✔ is the username used by GitHub (178ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant41/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (85ms)
      ✔ should accept semver version (39ms)
      ✔ should accept github repository (906ms)
      ✔ should accept github repository version (660ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (57ms)
      ✔ should accept arrays (57ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (46ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (51ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (160ms)
        ✔ cache the value (159ms)
        ✔ cache is linked to the CWD (320ms)
      .email()
        ✔ is the email used by git (158ms)
        ✔ handle cache (158ms)
        ✔ cache is linked to the CWD (311ms)
    .github
      .username()
        ✔ is the username used by GitHub (178ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant40/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (121ms)
      ✔ runs multiple composed generators (reverse) (110ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (84ms)
      ✔ should accept semver version (38ms)
      ✔ should accept github repository (904ms)
      ✔ should accept github repository version (860ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (52ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (159ms)
        ✔ cache is linked to the CWD (312ms)
      .email()
        ✔ is the email used by git (151ms)
        ✔ handle cache (162ms)
        ✔ cache is linked to the CWD (313ms)
    .github
      .username()
        ✔ is the username used by GitHub (172ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant39/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (106ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (114ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (189ms)
      ✔ should accept semver version
      ✔ should accept github repository (957ms)
      ✔ should accept github repository version (629ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (63ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (157ms)
        ✔ cache is linked to the CWD (342ms)
      .email()
        ✔ is the email used by git (156ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (316ms)
    .github
      .username()
        ✔ is the username used by GitHub (176ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant38/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (106ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (115ms)
      ✔ runs multiple composed generators (reverse) (106ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (83ms)
      ✔ should accept semver version (54ms)
      ✔ should accept github repository (888ms)
      ✔ should accept github repository version (654ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (220ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (47ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (40ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (157ms)
        ✔ cache is linked to the CWD (316ms)
      .email()
        ✔ is the email used by git (162ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (319ms)
    .github
      .username()
        ✔ is the username used by GitHub (206ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant37/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (111ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (742ms)
      ✔ should accept semver version
      ✔ should accept github repository (1060ms)
      ✔ should accept github repository version (667ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (50ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (159ms)
        ✔ cache the value (155ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (160ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (315ms)
    .github
      .username()
        ✔ is the username used by GitHub (205ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant36/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (106ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (99ms)
      ✔ should accept semver version (38ms)
      ✔ should accept github repository (933ms)
      ✔ should accept github repository version (646ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (49ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (157ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (310ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (153ms)
        ✔ cache is linked to the CWD (306ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant35/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (108ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (110ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (99ms)
      ✔ should accept semver version (39ms)
      ✔ should accept github repository (900ms)
      ✔ should accept github repository version (710ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (48ms)
      ✔ should accept arrays (58ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (56ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (41ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (318ms)
      .email()
        ✔ is the email used by git (156ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (311ms)
    .github
      .username()
        ✔ is the username used by GitHub (172ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant34/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (108ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (104ms)
      ✔ should accept semver version
      ✔ should accept github repository (921ms)
      ✔ should accept github repository version (726ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (48ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (162ms)
        ✔ cache the value (161ms)
        ✔ cache is linked to the CWD (348ms)
      .email()
        ✔ is the email used by git (162ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (323ms)
    .github
      .username()
        ✔ is the username used by GitHub (170ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant33/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (116ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (85ms)
      ✔ should accept semver version (42ms)
      ✔ should accept github repository (872ms)
      ✔ should accept github repository version (711ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (66ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (38ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (155ms)
        ✔ cache the value (155ms)
        ✔ cache is linked to the CWD (315ms)
      .email()
        ✔ is the email used by git (159ms)
        ✔ handle cache (157ms)
        ✔ cache is linked to the CWD (307ms)
    .github
      .username()
        ✔ is the username used by GitHub (189ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant32/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (39ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (114ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (84ms)
      ✔ should accept semver version
      ✔ should accept github repository (923ms)
      ✔ should accept github repository version (757ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (62ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (155ms)
        ✔ cache the value (156ms)
        ✔ cache is linked to the CWD (313ms)
      .email()
        ✔ is the email used by git (159ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (318ms)
    .github
      .username()
        ✔ is the username used by GitHub (175ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant31/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (111ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (109ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (110ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (86ms)
      ✔ should accept semver version (67ms)
      ✔ should accept github repository (917ms)
      ✔ should accept github repository version (651ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (56ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (52ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (60ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (156ms)
        ✔ cache the value (186ms)
        ✔ cache is linked to the CWD (315ms)
      .email()
        ✔ is the email used by git (159ms)
        ✔ handle cache (162ms)
        ✔ cache is linked to the CWD (316ms)
    .github
      .username()
        ✔ is the username used by GitHub (174ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant30/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (113ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (726ms)
      ✔ should accept semver version (59ms)
      ✔ should accept github repository (963ms)
      ✔ should accept github repository version (640ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (45ms)
      ✔ should accept arrays (698ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (666ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (161ms)
        ✔ cache the value (156ms)
        ✔ cache is linked to the CWD (359ms)
      .email()
        ✔ is the email used by git (164ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (310ms)
    .github
      .username()
        ✔ is the username used by GitHub (170ms)


  354 passing (11s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant29/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (100ms)
      ✔ should accept semver version (40ms)
      ✔ should accept github repository (904ms)
      ✔ should accept github repository version (648ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (43ms)
      ✔ should accept arrays (68ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (40ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (162ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (324ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (157ms)
        ✔ cache is linked to the CWD (311ms)
    .github
      .username()
        ✔ is the username used by GitHub (200ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant28/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (111ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (85ms)
      ✔ should accept semver version (42ms)
      ✔ should accept github repository (1163ms)
      ✔ should accept github repository version (737ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (38ms)
      ✔ should accept arrays (222ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (46ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (155ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (162ms)
        ✔ handle cache (159ms)
        ✔ cache is linked to the CWD (319ms)
    .github
      .username()
        ✔ is the username used by GitHub (178ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant27/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (111ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (91ms)
      ✔ should accept semver version (42ms)
      ✔ should accept github repository (932ms)
      ✔ should accept github repository version (636ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (44ms)
      ✔ should accept arrays (53ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (155ms)
        ✔ cache the value (168ms)
        ✔ cache is linked to the CWD (316ms)
      .email()
        ✔ is the email used by git (188ms)
        ✔ handle cache (155ms)
        ✔ cache is linked to the CWD (316ms)
    .github
      .username()
        ✔ is the username used by GitHub (172ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant26/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (106ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (106ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (111ms)
      ✔ runs multiple composed generators inside a running generator (115ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (265ms)
      ✔ should accept semver version (44ms)
      ✔ should accept github repository (893ms)
      ✔ should accept github repository version (799ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (40ms)
      ✔ should accept arrays (60ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (156ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (161ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (316ms)
    .github
      .username()
        ✔ is the username used by GitHub (195ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant25/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (111ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (111ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (81ms)
      ✔ should accept semver version (41ms)
      ✔ should accept github repository (918ms)
      ✔ should accept github repository version (656ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (49ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (190ms)
        ✔ cache the value (164ms)
        ✔ cache is linked to the CWD (322ms)
      .email()
        ✔ is the email used by git (158ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (318ms)
    .github
      .username()
        ✔ is the username used by GitHub (183ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant24/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (106ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (117ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (85ms)
      ✔ should accept semver version
      ✔ should accept github repository (860ms)
      ✔ should accept github repository version (662ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (213ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (43ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (157ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (317ms)
      .email()
        ✔ is the email used by git (160ms)
        ✔ handle cache (173ms)
        ✔ cache is linked to the CWD (317ms)
    .github
      .username()
        ✔ is the username used by GitHub (170ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant23/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (41ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (85ms)
      ✔ should accept semver version (46ms)
      ✔ should accept github repository (922ms)
      ✔ should accept github repository version (870ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (50ms)
      ✔ should accept arrays (65ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (48ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (54ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (155ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (153ms)
        ✔ handle cache (188ms)
        ✔ cache is linked to the CWD (313ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant22/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (43ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (117ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (110ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (109ms)
      ✔ should accept semver version (41ms)
      ✔ should accept github repository (1066ms)
      ✔ should accept github repository version (642ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (48ms)
      ✔ should accept arrays (702ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (71ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (41ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (318ms)
      .email()
        ✔ is the email used by git (167ms)
        ✔ handle cache (162ms)
        ✔ cache is linked to the CWD (320ms)
    .github
      .username()
        ✔ is the username used by GitHub (191ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant21/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (110ms)
      ✔ runs 3 composed generators (113ms)
      ✔ runs multiple composed generators inside a running generator (112ms)
      ✔ runs multiple composed generators inside a running generator (115ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (79ms)
      ✔ should accept semver version (56ms)
      ✔ should accept github repository (896ms)
      ✔ should accept github repository version (647ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (56ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (193ms)
        ✔ cache the value (156ms)
        ✔ cache is linked to the CWD (318ms)
      .email()
        ✔ is the email used by git (158ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (320ms)
    .github
      .username()
        ✔ is the username used by GitHub (184ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant20/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (115ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (265ms)
      ✔ should accept semver version (49ms)
      ✔ should accept github repository (917ms)
      ✔ should accept github repository version (640ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (60ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (56ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (168ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (311ms)
      .email()
        ✔ is the email used by git (163ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (315ms)
    .github
      .username()
        ✔ is the username used by GitHub (171ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant19/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (106ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (112ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (104ms)
      ✔ should accept semver version (41ms)
      ✔ should accept github repository (889ms)
      ✔ should accept github repository version (688ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (42ms)
      ✔ should accept arrays (53ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (43ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (159ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (160ms)
        ✔ handle cache (159ms)
        ✔ cache is linked to the CWD (325ms)
    .github
      .username()
        ✔ is the username used by GitHub (177ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant18/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (111ms)
      ✔ runs multiple composed generators (reverse) (106ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (94ms)
      ✔ should accept semver version
      ✔ should accept github repository (888ms)
      ✔ should accept github repository version (666ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (44ms)
      ✔ should accept arrays (72ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (55ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (51ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (154ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (164ms)
        ✔ handle cache (167ms)
        ✔ cache is linked to the CWD (319ms)
    .github
      .username()
        ✔ is the username used by GitHub (171ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant17/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (113ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (110ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (79ms)
      ✔ should accept semver version
      ✔ should accept github repository (916ms)
      ✔ should accept github repository version (815ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (70ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (50ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (164ms)
        ✔ cache the value (157ms)
        ✔ cache is linked to the CWD (316ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (190ms)
        ✔ cache is linked to the CWD (321ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant16/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (107ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (124ms)
      ✔ should accept semver version (39ms)
      ✔ should accept github repository (918ms)
      ✔ should accept github repository version (687ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (57ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (38ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (189ms)
        ✔ cache is linked to the CWD (322ms)
      .email()
        ✔ is the email used by git (160ms)
        ✔ handle cache (158ms)
        ✔ cache is linked to the CWD (321ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant15/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (111ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (111ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (77ms)
      ✔ should accept semver version
      ✔ should accept github repository (902ms)
      ✔ should accept github repository version (839ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (716ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (210ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (175ms)
        ✔ cache the value (155ms)
        ✔ cache is linked to the CWD (310ms)
      .email()
        ✔ is the email used by git (154ms)
        ✔ handle cache (153ms)
        ✔ cache is linked to the CWD (316ms)
    .github
      .username()
        ✔ is the username used by GitHub (177ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant14/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (74ms)
      ✔ should accept semver version
      ✔ should accept github repository (931ms)
      ✔ should accept github repository version (646ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (45ms)
      ✔ should accept arrays (89ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (311ms)
    .github
      .username()
        ✔ is the username used by GitHub (177ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant13/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (116ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (80ms)
      ✔ should accept semver version
      ✔ should accept github repository (1129ms)
      ✔ should accept github repository version (663ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (69ms)
      ✔ should accept arrays (233ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (59ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (192ms)
        ✔ cache the value (162ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (159ms)
        ✔ handle cache (156ms)
        ✔ cache is linked to the CWD (320ms)
    .github
      .username()
        ✔ is the username used by GitHub (204ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant12/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (115ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (78ms)
      ✔ should accept semver version
      ✔ should accept github repository (910ms)
      ✔ should accept github repository version (686ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (45ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (45ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (159ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (323ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (157ms)
        ✔ cache is linked to the CWD (312ms)
    .github
      .username()
        ✔ is the username used by GitHub (182ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant11/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (114ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (82ms)
      ✔ should accept semver version
      ✔ should accept github repository (884ms)
      ✔ should accept github repository version (649ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (41ms)
      ✔ should accept arrays (52ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (157ms)
        ✔ cache the value (185ms)
        ✔ cache is linked to the CWD (319ms)
      .email()
        ✔ is the email used by git (160ms)
        ✔ handle cache (172ms)
        ✔ cache is linked to the CWD (320ms)
    .github
      .username()
        ✔ is the username used by GitHub (171ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant10/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (110ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (83ms)
      ✔ should accept semver version
      ✔ should accept github repository (867ms)
      ✔ should accept github repository version (727ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (57ms)
      ✔ should accept arrays (68ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (49ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (41ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (164ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (321ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (161ms)
        ✔ cache is linked to the CWD (323ms)
    .github
      .username()
        ✔ is the username used by GitHub (174ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant9/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (109ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (74ms)
      ✔ should accept semver version
      ✔ should accept github repository (905ms)
      ✔ should accept github repository version (629ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (51ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (57ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (159ms)
        ✔ cache the value (177ms)
        ✔ cache is linked to the CWD (315ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (185ms)
        ✔ cache is linked to the CWD (314ms)
    .github
      .username()
        ✔ is the username used by GitHub (174ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant8/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (108ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (110ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (87ms)
      ✔ should accept semver version
      ✔ should accept github repository (1045ms)
      ✔ should accept github repository version (658ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (54ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (60ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (165ms)
        ✔ cache is linked to the CWD (321ms)
      .email()
        ✔ is the email used by git (172ms)
        ✔ handle cache (165ms)
        ✔ cache is linked to the CWD (318ms)
    .github
      .username()
        ✔ is the username used by GitHub (175ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant7/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (111ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (81ms)
      ✔ should accept semver version (55ms)
      ✔ should accept github repository (1017ms)
      ✔ should accept github repository version (688ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (220ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (164ms)
        ✔ cache the value (157ms)
        ✔ cache is linked to the CWD (322ms)
      .email()
        ✔ is the email used by git (159ms)
        ✔ handle cache (160ms)
        ✔ cache is linked to the CWD (317ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant6/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (42ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (108ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (279ms)
      ✔ should accept semver version (42ms)
      ✔ should accept github repository (873ms)
      ✔ should accept github repository version (654ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (39ms)
      ✔ should accept arrays (57ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (48ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (39ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (161ms)
        ✔ cache is linked to the CWD (320ms)
      .email()
        ✔ is the email used by git (157ms)
        ✔ handle cache (155ms)
        ✔ cache is linked to the CWD (322ms)
    .github
      .username()
        ✔ is the username used by GitHub (176ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant5/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (115ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (75ms)
      ✔ should accept semver version (57ms)
      ✔ should accept github repository (855ms)
      ✔ should accept github repository version (937ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (752ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (222ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (40ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (156ms)
        ✔ cache is linked to the CWD (344ms)
      .email()
        ✔ is the email used by git (154ms)
        ✔ handle cache (154ms)
        ✔ cache is linked to the CWD (310ms)
    .github
      .username()
        ✔ is the username used by GitHub (169ms)


  354 passing (11s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant4/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (108ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (112ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (113ms)
      ✔ should accept semver version (44ms)
      ✔ should accept github repository (886ms)
      ✔ should accept github repository version (668ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (110ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (63ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (161ms)
        ✔ cache the value (160ms)
        ✔ cache is linked to the CWD (359ms)
      .email()
        ✔ is the email used by git (158ms)
        ✔ handle cache (163ms)
        ✔ cache is linked to the CWD (350ms)
    .github
      .username()
        ✔ is the username used by GitHub (173ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant3/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options (39ms)
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (114ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (109ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (110ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (80ms)
      ✔ should accept semver version (39ms)
      ✔ should accept github repository (873ms)
      ✔ should accept github repository version (636ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (42ms)
      ✔ should accept arrays (58ms)
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (156ms)
        ✔ cache the value (155ms)
        ✔ cache is linked to the CWD (351ms)
      .email()
        ✔ is the email used by git (152ms)
        ✔ handle cache (153ms)
        ✔ cache is linked to the CWD (349ms)
    .github
      .username()
        ✔ is the username used by GitHub (177ms)


  354 passing (9s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant2/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (110ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (116ms)
      ✔ runs 3 composed generators (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (109ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (75ms)
      ✔ should accept semver version
      ✔ should accept github repository (893ms)
      ✔ should accept github repository version (643ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (49ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (51ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (156ms)
        ✔ cache the value (159ms)
        ✔ cache is linked to the CWD (360ms)
      .email()
        ✔ is the email used by git (158ms)
        ✔ handle cache (157ms)
        ✔ cache is linked to the CWD (349ms)
    .github
      .username()
        ✔ is the username used by GitHub (172ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
./VariantsSubtree/yeoman-generator/variant1/yeoman-generator

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (107ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (105ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (110ms)
      ✔ runs multiple composed generators (reverse) (108ms)
      ✔ runs 3 composed generators (114ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (108ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (278ms)
      ✔ should accept semver version (38ms)
      ✔ should accept github repository (873ms)
      ✔ should accept github repository version (642ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve (60ms)
      ✔ should accept arrays (47ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (213ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (42ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (158ms)
        ✔ cache the value (158ms)
        ✔ cache is linked to the CWD (315ms)
      .email()
        ✔ is the email used by git (154ms)
        ✔ handle cache (159ms)
        ✔ cache is linked to the CWD (313ms)
    .github
      .username()
        ✔ is the username used by GitHub (182ms)


  354 passing (10s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
