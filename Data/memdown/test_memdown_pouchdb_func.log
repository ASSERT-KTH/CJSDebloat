/data/js-variants/multee
4
pouchdb is testing ./Variants/memdown/variant4/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 3 packages, and audited 1029 packages in 6s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 102ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-changes-filter...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
Building pouchdb-browser...
Building pouchdb-for-coverage...
Building pouchdb-md5...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660232915513


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (153ms)
    ✓ Testing allDocs opts.keys (84ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (46ms)
    ✓ Testing updating in changes (44ms)
    ✓ Testing include docs
    ✓ Testing conflicts (59ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (142ms)
    ✓ test total_rows with both skip and limit (46ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option (45ms)
    ✓ test inclusive_end=false (58ms)
    ✓ test descending with startkey/endkey (40ms)
    ✓ #3082 test wrong num results returned (313ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs (54ms)
    ✓ Testing allDocs opts.keys (45ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases (54ms)
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (194ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (42ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content (41ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (97ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (41ms)
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4 (40ms)
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (47ms)
    ✓ #3074 live changes() (43ms)
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (44ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (47ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (38ms)
    ✓ Test get() with binary:true and stubs (47ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text (55ms)
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior (41ms)
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (42ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (49ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (42ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs (38ms)
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (62ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction) (44ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (127ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (121ms)
    ✓ Replicate same doc, same atts (111ms)
    ✓ Replicate same doc, same atts 2 (110ms)
    ✓ Attachments replicate (59ms)
    ✓ Attachment types replicate (54ms)
    ✓ Many many attachments replicate (189ms)
    ✓ Many many png attachments replicate (202ms)
    ✓ Multiple attachments replicate (78ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (76ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (75ms)
    ✓ #3932 attachments with tricky revpos (141ms)
    ✓ replication with changing attachments (98ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (127ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (155ms)
    ✓ Replicate same doc, same atts (176ms)
    ✓ Replicate same doc, same atts 2 (174ms)
    ✓ Attachments replicate (86ms)
    ✓ Attachment types replicate (86ms)
    ✓ Many many attachments replicate (336ms)
    ✓ Many many png attachments replicate (289ms)
    ✓ Multiple attachments replicate (125ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (121ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (170ms)
    ✓ #3932 attachments with tricky revpos (221ms)
    ✓ replication with changing attachments (156ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (163ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (106ms)
    ✓ Replicate same doc, same atts (96ms)
    ✓ Replicate same doc, same atts 2 (95ms)
    ✓ Attachments replicate (53ms)
    ✓ Attachment types replicate (51ms)
    ✓ Many many attachments replicate (143ms)
    ✓ Many many png attachments replicate (153ms)
    ✓ Multiple attachments replicate (86ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (68ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (85ms)
    ✓ #3932 attachments with tricky revpos (151ms)
    ✓ replication with changing attachments (137ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (142ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise (46ms)
    ✓ Basic checks (39ms)
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (44ms)
    ✓ Fail to fetch a doc after db was deleted (53ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (273ms)
    ✓ 2839 implement revs_limit (174ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete (47ms)
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc (60ms)
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (294ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (38ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (63ms)
    ✓ Changes with style = all_docs and a callback for complete (58ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (323ms)
    ✓ #3579 changes firing 1 too many times (78ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (134ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (40ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1023ms)
    ✓ supports return_docs=false
    ✓ should respects limit (72ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (192ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (317ms)
    ✓ #3579 changes firing 1 too many times (71ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'}) (46ms)
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1018ms)
    ✓ supports return_docs=false
    ✓ should respects limit (66ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (76ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (778ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (117ms)
    ✓ Compact two times more complicated tree (97ms)
    ✓ Compact database with at least two documents (160ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (41ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (39ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1461ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1357ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (259ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree (77ms)
    ✓ Compact database with at least two documents (47ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (313ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (259ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level (45ms)
    ✓ force put ok on 2nd level (41ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (579ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (702ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (59ms)
    ✓ Indexing event
    ✓ Concurrent queries (44ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (42ms)
    ✓ Indexing event (47ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc (62ms)
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc (42ms)
    ✓ Testing get with rev (69ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (40ms)
    ✓ Test opts.revs=true return only winning branch (47ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (43ms)
    ✓ #2951 Parallelized gets with 409s/404s (67ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (67ms)
    ✓ Test get with conflicts (45ms)
    ✓ Retrieve old revision (40ms)
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs() (39ms)
    ✓ 4358 db.info rejects when server is down (254ms)
    ✓ 4358 db.destroy rejects when server is down (224ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (500ms)
    ✓ Initial replication is ok if target returns HTTP 404 (502ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (83ms)
    ✓ Testing issue #221 again (76ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (84ms)
    ✓ Testing issue #221 again (113ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (52ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (44ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (233ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (317ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (422ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (265ms)
    ✓ #3179 conflicts synced, non-live sync (254ms)
    ✓ #3179 conflicts synced, live sync (326ms)
    ✓ #3179 conflicts synced, live repl (286ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (148ms)
    ✓ #3179 conflicts synced, non-live sync (271ms)
    ✓ #3179 conflicts synced, live sync (190ms)
    ✓ #3179 conflicts synced, live repl (175ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (149ms)
    ✓ #3179 conflicts synced, non-live sync (134ms)
    ✓ #3179 conflicts synced, live sync (158ms)
    ✓ #3179 conflicts synced, live repl (157ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (46ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (38ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (54ms)
    ✓ Test basic pull replication plain api (66ms)
    ✓ Test basic pull replication plain api 2 (56ms)
    ✓ Test pull replication with many changes (280ms)
    ✓ Test basic pull replication with funny ids (51ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (554ms)
    ✓ Test correct # docs replicated with staggered revs (89ms)
    ✓ Local DB contains documents (62ms)
    ✓ Test basic push replication (77ms)
    ✓ Test basic push replication take 2 (51ms)
    ✓ Test basic push replication sequence tracking (93ms)
    ✓ Test checkpoint (64ms)
    ✓ Test live pull checkpoint (66ms)
    ✓ Test type of progress values (43ms)
    ✓ Test live push checkpoint (64ms)
    ✓ Test checkpoint 2 (89ms)
    ✓ Test checkpoint 3 :) (65ms)
    ✓ Test disable checkpoints on both source and target (46ms)
    ✓ Test write checkpoints on source only (46ms)
    ✓ Test write checkpoints on target only (57ms)
    ✓ Test replication resumes when checkpointing is enabled (63ms)
    ✓ Test replication resumes when checkpointing is disabled (49ms)
    ✓ Test replication resumes when checkpointing on source only (48ms)
    ✓ Test replication resumes when checkpointing on target only (60ms)
    ✓ #3136 open revs returned correctly 1 (109ms)
    ✓ #3136 open revs returned correctly 2 (179ms)
    ✓ #3136 winningRev has a lower seq (141ms)
    ✓ #3136 same changes with style=all_docs (126ms)
    ✓ #3136 style=all_docs with conflicts (125ms)
    ✓ #3136 style=all_docs with conflicts reversed (102ms)
    ✓ Test checkpoint read only 3 :) (61ms)
    ✓ Testing allDocs with some conflicts (issue #468) (101ms)
    ✓ Test basic conflict (58ms)
    ✓ Test _conflicts key (79ms)
    ✓ Test basic live pull replication (57ms)
    ✓ Test basic live push replication (83ms)
    ✓ test-cancel-pull-replication (171ms)
    ✓ Test basic events (59ms)
    ✓ Replication filter (50ms)
    ✓ Replication with different filters (67ms)
    ✓ Replication doc ids (41ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (81ms)
    ✓ Replication with same filters (62ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (79ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (50ms)
    ✓ Replication with deleted doc (61ms)
    ✓ 5904 - replication with deleted doc and value (77ms)
    ✓ Replication notifications (38ms)
    ✓ Replication with remote conflict (85ms)
    ✓ Replicate and modify three times (84ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (45ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (73ms)
    ✓ Replicates deleted docs w/ compaction (113ms)
    ✓ Replicates modified docs (issue #2636) (42ms)
    ✓ Replication of multiple remote conflicts (#789) (56ms)
    ✓ Replicate large number of docs (56ms)
    ✓ Ensure checkpoint after deletion (79ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (60ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (108ms)
    ✓ #3999-1 should not start over if last_seq mismatches (102ms)
    ✓ #3999-2 should start over if no common session is found (100ms)
    ✓ #3999-3 should not start over if common session is found (84ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (89ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (73ms)
    ✓ Report write failures if whole saving fails (#942) (70ms)
    ✓ Test consecutive replications with different query_params (71ms)
    ✓ Test consecutive replications with different query_params and promises (73ms)
    ✓ Test consecutive replications with different doc_ids (94ms)
    ✓ #3962 - Test many attachments (178ms)
    ✓ doc count after multiple replications (119ms)
    ✓ issue #300 rev id unique per doc (62ms)
    ✓ issue #585 Store checkpoint on target db. (123ms)
    ✓ should work with a read only source (61ms)
    ✓ issue #2342 update_seq after replication (74ms)
    ✓ should cancel for live replication (551ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (61ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (43ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (45ms)
    ✓ #3606 - live repl with doc_ids (46ms)
    ✓ #3606 - live repl with view (43ms)
    ✓ #3569 - 409 during replication (108ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (48ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (81ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (89ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (40ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (43ms)
    ✓ #4293 Triggers extra replication events (153ms)
    ✓ Heartbeat gets passed (65ms)
    ✓ Timeout gets passed (50ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (114ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (190ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (117ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (73ms)
    ✓ Test basic pull replication plain api (76ms)
    ✓ Test basic pull replication plain api 2 (76ms)
    ✓ Test pull replication with many changes (209ms)
    ✓ Test basic pull replication with funny ids (77ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (573ms)
    ✓ Test correct # docs replicated with staggered revs (123ms)
    ✓ Local DB contains documents (79ms)
    ✓ Test basic push replication (74ms)
    ✓ Test basic push replication take 2 (76ms)
    ✓ Test basic push replication sequence tracking (107ms)
    ✓ Test checkpoint (101ms)
    ✓ Test live pull checkpoint (133ms)
    ✓ Test type of progress values (122ms)
    ✓ Test live push checkpoint (115ms)
    ✓ Test checkpoint 2 (118ms)
    ✓ Test checkpoint 3 :) (112ms)
    ✓ Test disable checkpoints on both source and target (66ms)
    ✓ Test write checkpoints on source only (76ms)
    ✓ Test write checkpoints on target only (78ms)
    ✓ Test replication resumes when checkpointing is enabled (108ms)
    ✓ Test replication resumes when checkpointing is disabled (80ms)
    ✓ Test replication resumes when checkpointing on source only (101ms)
    ✓ Test replication resumes when checkpointing on target only (83ms)
    ✓ #3136 open revs returned correctly 1 (212ms)
    ✓ #3136 open revs returned correctly 2 (206ms)
    ✓ #3136 winningRev has a lower seq (156ms)
    ✓ #3136 same changes with style=all_docs (139ms)
    ✓ #3136 style=all_docs with conflicts (150ms)
    ✓ #3136 style=all_docs with conflicts reversed (140ms)
    ✓ Test checkpoint read only 3 :) (155ms)
    ✓ Testing allDocs with some conflicts (issue #468) (176ms)
    ✓ Test basic conflict (70ms)
    ✓ Test _conflicts key (87ms)
    ✓ Test basic live pull replication (87ms)
    ✓ Test basic live push replication (94ms)
    ✓ test-cancel-pull-replication (199ms)
    ✓ Test basic events (73ms)
    ✓ Replication filter (70ms)
    ✓ Replication with different filters (98ms)
    ✓ Replication doc ids (61ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (131ms)
    ✓ Replication with same filters (95ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (92ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (78ms)
    ✓ Replication with deleted doc (72ms)
    ✓ 5904 - replication with deleted doc and value (66ms)
    ✓ Replication notifications (58ms)
    ✓ Replication with remote conflict (145ms)
    ✓ Replicate and modify three times (141ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (103ms)
    ✓ Replicates deleted docs w/ compaction (208ms)
    ✓ Replicates modified docs (issue #2636) (62ms)
    ✓ Replication of multiple remote conflicts (#789) (80ms)
    ✓ Replicate large number of docs (87ms)
    ✓ Ensure checkpoint after deletion (114ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (78ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (151ms)
    ✓ #3999-1 should not start over if last_seq mismatches (121ms)
    ✓ #3999-2 should start over if no common session is found (109ms)
    ✓ #3999-3 should not start over if common session is found (102ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (98ms)
    ✓ (#1307) - replicate empty database (43ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (98ms)
    ✓ Report write failures if whole saving fails (#942) (96ms)
    ✓ Test consecutive replications with different query_params (91ms)
    ✓ Test consecutive replications with different query_params and promises (97ms)
    ✓ Test consecutive replications with different doc_ids (114ms)
    ✓ #3962 - Test many attachments (305ms)
    ✓ doc count after multiple replications (137ms)
    ✓ issue #300 rev id unique per doc (67ms)
    ✓ issue #585 Store checkpoint on target db. (108ms)
    ✓ should work with a read only source (62ms)
    ✓ issue #2342 update_seq after replication (82ms)
    ✓ should cancel for live replication (561ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (69ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (69ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (65ms)
    ✓ #3606 - live repl with doc_ids (70ms)
    ✓ #3606 - live repl with view (64ms)
    ✓ #3569 - 409 during replication (148ms)
    ✓ #3270 triggers "change" events with .docs property (62ms)
    ✓ #3543 replication with a ddoc filter (69ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (109ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (164ms)
    ✓ #2454 info() call breaks taskqueue (54ms)
    ✓ #4094 can't fetch server uuid (HTTP error) (69ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (64ms)
    ✓ #4293 Triggers extra replication events (177ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (118ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (136ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (141ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (57ms)
    ✓ Test basic pull replication plain api 2 (45ms)
    ✓ Test pull replication with many changes (150ms)
    ✓ Test basic pull replication with funny ids (51ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (573ms)
    ✓ Test correct # docs replicated with staggered revs (65ms)
    ✓ Local DB contains documents (50ms)
    ✓ Test basic push replication (54ms)
    ✓ Test basic push replication take 2 (44ms)
    ✓ Test basic push replication sequence tracking (106ms)
    ✓ Test checkpoint (62ms)
    ✓ Test live pull checkpoint (98ms)
    ✓ Test type of progress values (52ms)
    ✓ Test live push checkpoint (62ms)
    ✓ Test checkpoint 2 (59ms)
    ✓ Test checkpoint 3 :) (67ms)
    ✓ Test disable checkpoints on both source and target (41ms)
    ✓ Test write checkpoints on source only (45ms)
    ✓ Test write checkpoints on target only (43ms)
    ✓ Test replication resumes when checkpointing is enabled (64ms)
    ✓ Test replication resumes when checkpointing is disabled (50ms)
    ✓ Test replication resumes when checkpointing on source only (67ms)
    ✓ Test replication resumes when checkpointing on target only (53ms)
    ✓ #3136 open revs returned correctly 1 (216ms)
    ✓ #3136 open revs returned correctly 2 (182ms)
    ✓ #3136 winningRev has a lower seq (89ms)
    ✓ #3136 same changes with style=all_docs (92ms)
    ✓ #3136 style=all_docs with conflicts (90ms)
    ✓ #3136 style=all_docs with conflicts reversed (86ms)
    ✓ Test checkpoint read only 3 :) (57ms)
    ✓ Testing allDocs with some conflicts (issue #468) (67ms)
    ✓ Test basic conflict (42ms)
    ✓ Test _conflicts key (68ms)
    ✓ Test basic live pull replication (69ms)
    ✓ Test basic live push replication (54ms)
    ✓ test-cancel-pull-replication (162ms)
    ✓ Test basic events (52ms)
    ✓ Replication filter (99ms)
    ✓ Replication with different filters (70ms)
    ✓ Replication doc ids (55ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (67ms)
    ✓ Replication with same filters (59ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (55ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (52ms)
    ✓ Replication with deleted doc (57ms)
    ✓ 5904 - replication with deleted doc and value (44ms)
    ✓ Replication notifications (42ms)
    ✓ Replication with remote conflict (81ms)
    ✓ Replicate and modify three times (113ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (44ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (58ms)
    ✓ Replicates deleted docs w/ compaction (69ms)
    ✓ Replicates modified docs (issue #2636) (58ms)
    ✓ Replication of multiple remote conflicts (#789) (47ms)
    ✓ Replicate large number of docs (57ms)
    ✓ Ensure checkpoint after deletion (83ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (163ms)
    ✓ #909 Filtered replication bails at paging limit (62ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (107ms)
    ✓ #3999-1 should not start over if last_seq mismatches (75ms)
    ✓ #3999-2 should start over if no common session is found (64ms)
    ✓ #3999-3 should not start over if common session is found (63ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (68ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (69ms)
    ✓ Report write failures if whole saving fails (#942) (130ms)
    ✓ Test consecutive replications with different query_params (110ms)
    ✓ Test consecutive replications with different query_params and promises (67ms)
    ✓ Test consecutive replications with different doc_ids (77ms)
    ✓ #3962 - Test many attachments (59ms)
    ✓ doc count after multiple replications (89ms)
    ✓ issue #300 rev id unique per doc (53ms)
    ✓ issue #585 Store checkpoint on target db. (76ms)
    ✓ should work with a read only source (42ms)
    ✓ issue #2342 update_seq after replication (54ms)
    ✓ should cancel for live replication (535ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (53ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (47ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (45ms)
    ✓ #3606 - live repl with doc_ids (45ms)
    ✓ #3606 - live repl with view (45ms)
    ✓ #3569 - 409 during replication (125ms)
    ✓ #3270 triggers "change" events with .docs property (51ms)
    ✓ #3543 replication with a ddoc filter (50ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (69ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (68ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (40ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (74ms)
    ✓ #4293 Triggers extra replication events (186ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (60ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (75ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (69ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (111ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (542ms)
    ✓ Test correct # docs replicated with staggered revs (44ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking (39ms)
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (44ms)
    ✓ Test checkpoint 3 :) (38ms)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (61ms)
    ✓ #3136 open revs returned correctly 2 (55ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (41ms)
    ✓ Test basic live pull replication (57ms)
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (127ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (51ms)
    ✓ Ensure checkpoint after deletion (42ms)
    ✓ issue #1001 cb as 3rd argument (169ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments (40ms)
    ✓ doc count after multiple replications (65ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (47ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (523ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (121ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (65ms)
    ✓ #3852 Test basic starting with docs (90ms)
    ✓ #5710 Test pending property support (64ms)
    ✓ #3852 Test errors (72ms)
    ✓ #4627 Test no duplicate changes in live replication (2054ms)
    ✓ Test checkpoint events (51ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (127ms)
    ✓ #3852 Test basic starting with docs (147ms)
    ✓ #5710 Test pending property support (99ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2090ms)
    ✓ Test checkpoint events (62ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (88ms)
    ✓ #3852 Test basic starting with docs (112ms)
    ✓ #5710 Test pending property support (114ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2112ms)
    ✓ Test checkpoint events (95ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs (39ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2027ms)
    ✓ Test checkpoint events
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (69ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (105ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (76ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (49ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (88ms)
    ✓ #3687 active event only fired once... (67ms)
    ✓ source doesn't leak "destroyed" event (173ms)
    ✓ target doesn't leak "destroyed" event (182ms)
    ✓ returnValue doesn't leak "complete" event (178ms)
    ✓ returnValue doesn't leak "error" event (185ms)
    ✓ returnValue doesn't leak "paused" event (166ms)
    ✓ returnValue doesn't leak "active" event (206ms)
    ✓ returnValue doesn't leak "change" event (309ms)
    ✓ returnValue doesn't leak "cancel" event (175ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (186ms)
    ✓ retry many times, no leaks on any events (756ms)
    ✓ 4049 retry while starting offline (40ms)
    ✓ #5157 replicate many docs with live+retry (450ms)
    ✓ 6510 no changes live+retry does not call backoff function (2002ms)

  test.retry.js-http-http
    ✓ retry stuff (124ms)
    ✓ #3687 active event only fired once... (75ms)
    ✓ source doesn't leak "destroyed" event (299ms)
    ✓ target doesn't leak "destroyed" event (462ms)
    ✓ returnValue doesn't leak "complete" event (303ms)
    ✓ returnValue doesn't leak "error" event (272ms)
    ✓ returnValue doesn't leak "paused" event (270ms)
    ✓ returnValue doesn't leak "active" event (268ms)
    ✓ returnValue doesn't leak "change" event (307ms)
    ✓ returnValue doesn't leak "cancel" event (285ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (403ms)
    ✓ retry many times, no leaks on any events (1264ms)
    ✓ 4049 retry while starting offline (55ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant3/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 394ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660233046232


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (150ms)
    ✓ Testing allDocs opts.keys (66ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (43ms)
    ✓ Testing updating in changes (43ms)
    ✓ Testing include docs (38ms)
    ✓ Testing conflicts (51ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (142ms)
    ✓ test total_rows with both skip and limit (38ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (53ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (270ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (271ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (90ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (58ms)
    ✓ #2858 {binary: true} in allDocs() 1 (39ms)
    ✓ #2858 {binary: true} in allDocs() 2 (48ms)
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (52ms)
    ✓ #3074 live changes() (45ms)
    ✓ #3074 non-live changes(), no attachments (38ms)
    ✓ #3074 live changes(), no attachments (38ms)
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (39ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (56ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (78ms)
    ✓ Test get() with binary:true and stubs (44ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (46ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (49ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (48ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data (71ms)
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs (42ms)
    ✓ Test put with attachments and new_edits=false (43ms)
    ✓ Test getAttachment with specific rev (42ms)
    ✓ Test getAttachment with diff revs and content (46ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (57ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction) (38ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (132ms)
    ✓ #2709 `revpos` with putAttachment (51ms)
    ✓ #2709 `revpos` with inline attachment (54ms)
    ✓ #2709 `revpos` with allDocs (51ms)
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc (52ms)

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (112ms)
    ✓ Replicate same doc, same atts (119ms)
    ✓ Replicate same doc, same atts 2 (119ms)
    ✓ Attachments replicate (85ms)
    ✓ Attachment types replicate (66ms)
    ✓ Many many attachments replicate (202ms)
    ✓ Many many png attachments replicate (224ms)
    ✓ Multiple attachments replicate (119ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (81ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (74ms)
    ✓ #3932 attachments with tricky revpos (146ms)
    ✓ replication with changing attachments (108ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (122ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (176ms)
    ✓ Replicate same doc, same atts (187ms)
    ✓ Replicate same doc, same atts 2 (180ms)
    ✓ Attachments replicate (88ms)
    ✓ Attachment types replicate (136ms)
    ✓ Many many attachments replicate (390ms)
    ✓ Many many png attachments replicate (319ms)
    ✓ Multiple attachments replicate (122ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (116ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (129ms)
    ✓ #3932 attachments with tricky revpos (227ms)
    ✓ replication with changing attachments (146ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (176ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (107ms)
    ✓ Replicate same doc, same atts (94ms)
    ✓ Replicate same doc, same atts 2 (102ms)
    ✓ Attachments replicate (54ms)
    ✓ Attachment types replicate (53ms)
    ✓ Many many attachments replicate (264ms)
    ✓ Many many png attachments replicate (167ms)
    ✓ Multiple attachments replicate (85ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (77ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (90ms)
    ✓ #3932 attachments with tricky revpos (164ms)
    ✓ replication with changing attachments (95ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (124ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (46ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (56ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (44ms)
    ✓ Fail to fetch a doc after db was deleted (53ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content (40ms)
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (47ms)
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (330ms)
    ✓ 2839 implement revs_limit (177ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content (67ms)
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (302ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (39ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified (48ms)
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (61ms)
    ✓ Changes with style = all_docs and a callback for complete (57ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (323ms)
    ✓ #3579 changes firing 1 too many times (72ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (129ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (42ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1022ms)
    ✓ supports return_docs=false
    ✓ should respects limit (74ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (294ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (315ms)
    ✓ #3579 changes firing 1 too many times (66ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc (50ms)
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1019ms)
    ✓ supports return_docs=false
    ✓ should respects limit (66ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (64ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage (43ms)
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (637ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (114ms)
    ✓ Compact two times more complicated tree (104ms)
    ✓ Compact database with at least two documents (165ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (43ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (44ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1473ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1323ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (328ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (299ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (248ms)

  test.conflicts.js-http
    ✓ Testing conflicts (41ms)
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (575ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (606ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (82ms)
    ✓ Indexing event
    ✓ Concurrent queries (48ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (41ms)
    ✓ Indexing event (45ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (66ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (67ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (39ms)
    ✓ Test opts.revs=true return only winning branch (50ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (45ms)
    ✓ #2951 Parallelized gets with 409s/404s (74ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (64ms)
    ✓ Test get with conflicts (41ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (38ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (171ms)
    ✓ 4358 db.destroy rejects when server is down (287ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (500ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (500ms)
    ✓ Initial replication returns err if source returns HTTP 500 (516ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (501ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (66ms)
    ✓ Testing issue #221 again (76ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (85ms)
    ✓ Testing issue #221 again (112ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (53ms)
    ✓ Testing issue #221 again (83ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (73ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (291ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (235ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (404ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (245ms)
    ✓ #3179 conflicts synced, non-live sync (223ms)
    ✓ #3179 conflicts synced, live sync (274ms)
    ✓ #3179 conflicts synced, live repl (276ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (136ms)
    ✓ #3179 conflicts synced, non-live sync (230ms)
    ✓ #3179 conflicts synced, live sync (159ms)
    ✓ #3179 conflicts synced, live repl (181ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (145ms)
    ✓ #3179 conflicts synced, non-live sync (136ms)
    ✓ #3179 conflicts synced, live sync (152ms)
    ✓ #3179 conflicts synced, live repl (151ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication
    ✓ #3179 conflicts synced, non-live sync (42ms)
    ✓ #3179 conflicts synced, live sync (39ms)
    ✓ #3179 conflicts synced, live repl (38ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (43ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (48ms)
    ✓ Test basic pull replication plain api (73ms)
    ✓ Test basic pull replication plain api 2 (108ms)
    ✓ Test pull replication with many changes (185ms)
    ✓ Test basic pull replication with funny ids (55ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (527ms)
    ✓ Test correct # docs replicated with staggered revs (86ms)
    ✓ Local DB contains documents (51ms)
    ✓ Test basic push replication (55ms)
    ✓ Test basic push replication take 2 (58ms)
    ✓ Test basic push replication sequence tracking (89ms)
    ✓ Test checkpoint (92ms)
    ✓ Test live pull checkpoint (66ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (67ms)
    ✓ Test checkpoint 2 (78ms)
    ✓ Test checkpoint 3 :) (64ms)
    ✓ Test disable checkpoints on both source and target (48ms)
    ✓ Test write checkpoints on source only (47ms)
    ✓ Test write checkpoints on target only (59ms)
    ✓ Test replication resumes when checkpointing is enabled (66ms)
    ✓ Test replication resumes when checkpointing is disabled (54ms)
    ✓ Test replication resumes when checkpointing on source only (50ms)
    ✓ Test replication resumes when checkpointing on target only (67ms)
    ✓ #3136 open revs returned correctly 1 (125ms)
    ✓ #3136 open revs returned correctly 2 (157ms)
    ✓ #3136 winningRev has a lower seq (83ms)
    ✓ #3136 same changes with style=all_docs (106ms)
    ✓ #3136 style=all_docs with conflicts (93ms)
    ✓ #3136 style=all_docs with conflicts reversed (95ms)
    ✓ Test checkpoint read only 3 :) (60ms)
    ✓ Testing allDocs with some conflicts (issue #468) (84ms)
    ✓ Test basic conflict (61ms)
    ✓ Test _conflicts key (69ms)
    ✓ Test basic live pull replication (62ms)
    ✓ Test basic live push replication (63ms)
    ✓ test-cancel-pull-replication (173ms)
    ✓ Test basic events (53ms)
    ✓ Replication filter (44ms)
    ✓ Replication with different filters (64ms)
    ✓ Replication doc ids (44ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (82ms)
    ✓ Replication with same filters (64ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (56ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (63ms)
    ✓ Replication with deleted doc (56ms)
    ✓ 5904 - replication with deleted doc and value (51ms)
    ✓ Replication notifications (38ms)
    ✓ Replication with remote conflict (91ms)
    ✓ Replicate and modify three times (95ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (39ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (54ms)
    ✓ Replicates deleted docs w/ compaction (115ms)
    ✓ Replicates modified docs (issue #2636) (55ms)
    ✓ Replication of multiple remote conflicts (#789) (62ms)
    ✓ Replicate large number of docs (57ms)
    ✓ Ensure checkpoint after deletion (80ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (57ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (92ms)
    ✓ #3999-1 should not start over if last_seq mismatches (103ms)
    ✓ #3999-2 should start over if no common session is found (88ms)
    ✓ #3999-3 should not start over if common session is found (77ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (125ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (67ms)
    ✓ Report write failures if whole saving fails (#942) (63ms)
    ✓ Test consecutive replications with different query_params (65ms)
    ✓ Test consecutive replications with different query_params and promises (73ms)
    ✓ Test consecutive replications with different doc_ids (91ms)
    ✓ #3962 - Test many attachments (156ms)
    ✓ doc count after multiple replications (125ms)
    ✓ issue #300 rev id unique per doc (51ms)
    ✓ issue #585 Store checkpoint on target db. (82ms)
    ✓ should work with a read only source (53ms)
    ✓ issue #2342 update_seq after replication (125ms)
    ✓ should cancel for live replication (554ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (50ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (44ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (44ms)
    ✓ #3606 - live repl with doc_ids (42ms)
    ✓ #3606 - live repl with view (47ms)
    ✓ #3569 - 409 during replication (84ms)
    ✓ #3270 triggers "change" events with .docs property (51ms)
    ✓ #3543 replication with a ddoc filter (55ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (71ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (73ms)
    ✓ #2454 info() call breaks taskqueue (45ms)
    ✓ #4094 can't fetch server uuid (HTTP error) (49ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (46ms)
    ✓ #4293 Triggers extra replication events (151ms)
    ✓ Heartbeat gets passed (53ms)
    ✓ Timeout gets passed (43ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (86ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (105ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (215ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (82ms)
    ✓ Test basic pull replication plain api (65ms)
    ✓ Test basic pull replication plain api 2 (69ms)
    ✓ Test pull replication with many changes (190ms)
    ✓ Test basic pull replication with funny ids (73ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (547ms)
    ✓ Test correct # docs replicated with staggered revs (121ms)
    ✓ Local DB contains documents (77ms)
    ✓ Test basic push replication (67ms)
    ✓ Test basic push replication take 2 (78ms)
    ✓ Test basic push replication sequence tracking (112ms)
    ✓ Test checkpoint (84ms)
    ✓ Test live pull checkpoint (114ms)
    ✓ Test type of progress values (70ms)
    ✓ Test live push checkpoint (104ms)
    ✓ Test checkpoint 2 (116ms)
    ✓ Test checkpoint 3 :) (204ms)
    ✓ Test disable checkpoints on both source and target (87ms)
    ✓ Test write checkpoints on source only (64ms)
    ✓ Test write checkpoints on target only (62ms)
    ✓ Test replication resumes when checkpointing is enabled (90ms)
    ✓ Test replication resumes when checkpointing is disabled (85ms)
    ✓ Test replication resumes when checkpointing on source only (94ms)
    ✓ Test replication resumes when checkpointing on target only (84ms)
    ✓ #3136 open revs returned correctly 1 (212ms)
    ✓ #3136 open revs returned correctly 2 (209ms)
    ✓ #3136 winningRev has a lower seq (143ms)
    ✓ #3136 same changes with style=all_docs (144ms)
    ✓ #3136 style=all_docs with conflicts (149ms)
    ✓ #3136 style=all_docs with conflicts reversed (147ms)
    ✓ Test checkpoint read only 3 :) (114ms)
    ✓ Testing allDocs with some conflicts (issue #468) (126ms)
    ✓ Test basic conflict (79ms)
    ✓ Test _conflicts key (104ms)
    ✓ Test basic live pull replication (151ms)
    ✓ Test basic live push replication (139ms)
    ✓ test-cancel-pull-replication (204ms)
    ✓ Test basic events (76ms)
    ✓ Replication filter (67ms)
    ✓ Replication with different filters (100ms)
    ✓ Replication doc ids (78ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (122ms)
    ✓ Replication with same filters (112ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (97ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (82ms)
    ✓ Replication with deleted doc (66ms)
    ✓ 5904 - replication with deleted doc and value (69ms)
    ✓ Replication notifications (60ms)
    ✓ Replication with remote conflict (148ms)
    ✓ Replicate and modify three times (135ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (56ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (90ms)
    ✓ Replicates deleted docs w/ compaction (116ms)
    ✓ Replicates modified docs (issue #2636) (60ms)
    ✓ Replication of multiple remote conflicts (#789) (69ms)
    ✓ Replicate large number of docs (136ms)
    ✓ Ensure checkpoint after deletion (172ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (73ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (158ms)
    ✓ #3999-1 should not start over if last_seq mismatches (125ms)
    ✓ #3999-2 should start over if no common session is found (100ms)
    ✓ #3999-3 should not start over if common session is found (103ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (107ms)
    ✓ (#1307) - replicate empty database (49ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (99ms)
    ✓ Report write failures if whole saving fails (#942) (99ms)
    ✓ Test consecutive replications with different query_params (99ms)
    ✓ Test consecutive replications with different query_params and promises (100ms)
    ✓ Test consecutive replications with different doc_ids (120ms)
    ✓ #3962 - Test many attachments (157ms)
    ✓ doc count after multiple replications (132ms)
    ✓ issue #300 rev id unique per doc (139ms)
    ✓ issue #585 Store checkpoint on target db. (156ms)
    ✓ should work with a read only source (75ms)
    ✓ issue #2342 update_seq after replication (106ms)
    ✓ should cancel for live replication (575ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (81ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (73ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (70ms)
    ✓ #3606 - live repl with doc_ids (67ms)
    ✓ #3606 - live repl with view (75ms)
    ✓ #3569 - 409 during replication (211ms)
    ✓ #3270 triggers "change" events with .docs property (68ms)
    ✓ #3543 replication with a ddoc filter (67ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (107ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (119ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (78ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (102ms)
    ✓ #4293 Triggers extra replication events (189ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (142ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (150ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (152ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (50ms)
    ✓ Test basic pull replication plain api (55ms)
    ✓ Test basic pull replication plain api 2 (52ms)
    ✓ Test pull replication with many changes (159ms)
    ✓ Test basic pull replication with funny ids (62ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (597ms)
    ✓ Test correct # docs replicated with staggered revs (72ms)
    ✓ Local DB contains documents (60ms)
    ✓ Test basic push replication (68ms)
    ✓ Test basic push replication take 2 (101ms)
    ✓ Test basic push replication sequence tracking (141ms)
    ✓ Test checkpoint (68ms)
    ✓ Test live pull checkpoint (77ms)
    ✓ Test type of progress values (61ms)
    ✓ Test live push checkpoint (104ms)
    ✓ Test checkpoint 2 (77ms)
    ✓ Test checkpoint 3 :) (68ms)
    ✓ Test disable checkpoints on both source and target (48ms)
    ✓ Test write checkpoints on source only (48ms)
    ✓ Test write checkpoints on target only (47ms)
    ✓ Test replication resumes when checkpointing is enabled (67ms)
    ✓ Test replication resumes when checkpointing is disabled (62ms)
    ✓ Test replication resumes when checkpointing on source only (66ms)
    ✓ Test replication resumes when checkpointing on target only (55ms)
    ✓ #3136 open revs returned correctly 1 (216ms)
    ✓ #3136 open revs returned correctly 2 (184ms)
    ✓ #3136 winningRev has a lower seq (94ms)
    ✓ #3136 same changes with style=all_docs (90ms)
    ✓ #3136 style=all_docs with conflicts (94ms)
    ✓ #3136 style=all_docs with conflicts reversed (89ms)
    ✓ Test checkpoint read only 3 :) (63ms)
    ✓ Testing allDocs with some conflicts (issue #468) (71ms)
    ✓ Test basic conflict (42ms)
    ✓ Test _conflicts key (81ms)
    ✓ Test basic live pull replication (70ms)
    ✓ Test basic live push replication (126ms)
    ✓ test-cancel-pull-replication (203ms)
    ✓ Test basic events (63ms)
    ✓ Replication filter (52ms)
    ✓ Replication with different filters (61ms)
    ✓ Replication doc ids (64ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (70ms)
    ✓ Replication with same filters (64ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (69ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (57ms)
    ✓ Replication with deleted doc (56ms)
    ✓ 5904 - replication with deleted doc and value (47ms)
    ✓ Replication notifications (61ms)
    ✓ Replication with remote conflict (90ms)
    ✓ Replicate and modify three times (90ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ compaction (76ms)
    ✓ Replicates modified docs (issue #2636) (53ms)
    ✓ Replication of multiple remote conflicts (#789) (58ms)
    ✓ Replicate large number of docs (65ms)
    ✓ Ensure checkpoint after deletion (93ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (62ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (163ms)
    ✓ #3999-1 should not start over if last_seq mismatches (133ms)
    ✓ #3999-2 should start over if no common session is found (73ms)
    ✓ #3999-3 should not start over if common session is found (69ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (64ms)
    ✓ (#1307) - replicate empty database (39ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (67ms)
    ✓ Report write failures if whole saving fails (#942) (73ms)
    ✓ Test consecutive replications with different query_params (70ms)
    ✓ Test consecutive replications with different query_params and promises (63ms)
    ✓ Test consecutive replications with different doc_ids (76ms)
    ✓ #3962 - Test many attachments (68ms)
    ✓ doc count after multiple replications (90ms)
    ✓ issue #300 rev id unique per doc (53ms)
    ✓ issue #585 Store checkpoint on target db. (85ms)
    ✓ should work with a read only source (41ms)
    ✓ issue #2342 update_seq after replication (55ms)
    ✓ should cancel for live replication (534ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (47ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (51ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (58ms)
    ✓ #3606 - live repl with doc_ids (46ms)
    ✓ #3606 - live repl with view (74ms)
    ✓ #3569 - 409 during replication (247ms)
    ✓ #3270 triggers "change" events with .docs property (57ms)
    ✓ #3543 replication with a ddoc filter (51ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (74ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (67ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON) (38ms)
    ✓ #4293 Triggers extra replication events (150ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (65ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (78ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (76ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (139ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (498ms)
    ✓ Test correct # docs replicated with staggered revs (41ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only (49ms)
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only (39ms)
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (81ms)
    ✓ #3136 open revs returned correctly 2 (60ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (53ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (128ms)
    ✓ Test basic events (39ms)
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs
    ✓ Ensure checkpoint after deletion (50ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (73ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (67ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (539ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (126ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (75ms)
    ✓ #3852 Test basic starting with docs (122ms)
    ✓ #5710 Test pending property support (84ms)
    ✓ #3852 Test errors (67ms)
    ✓ #4627 Test no duplicate changes in live replication (2054ms)
    ✓ Test checkpoint events (49ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (124ms)
    ✓ #3852 Test basic starting with docs (217ms)
    ✓ #5710 Test pending property support (154ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2096ms)
    ✓ Test checkpoint events (94ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (87ms)
    ✓ #3852 Test basic starting with docs (98ms)
    ✓ #5710 Test pending property support (65ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2070ms)
    ✓ Test checkpoint events (44ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs (41ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2030ms)
    ✓ Test checkpoint events (38ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (78ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (104ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (73ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (44ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (85ms)
    ✓ #3687 active event only fired once... (62ms)
    ✓ source doesn't leak "destroyed" event (218ms)
    ✓ target doesn't leak "destroyed" event (167ms)
    ✓ returnValue doesn't leak "complete" event (172ms)
    ✓ returnValue doesn't leak "error" event (225ms)
    ✓ returnValue doesn't leak "paused" event (245ms)
    ✓ returnValue doesn't leak "active" event (175ms)
    ✓ returnValue doesn't leak "change" event (170ms)
    ✓ returnValue doesn't leak "cancel" event (178ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (210ms)
    ✓ retry many times, no leaks on any events (720ms)
    ✓ 4049 retry while starting offline (39ms)
    ✓ #5157 replicate many docs with live+retry (566ms)
    ✓ 6510 no changes live+retry does not call backoff function (2002ms)

  test.retry.js-http-http
    ✓ retry stuff (123ms)
    ✓ #3687 active event only fired once... (125ms)
    ✓ source doesn't leak "destroyed" event (320ms)
    ✓ target doesn't leak "destroyed" event (281ms)
    ✓ returnValue doesn't leak "complete" event (295ms)
    ✓ returnValue doesn't leak "error" event (271ms)
    ✓ returnValue doesn't leak "paused" event (265ms)
    ✓ returnValue doesn't leak "active" event (279ms)
    ✓ returnValue doesn't leak "change" event (287ms)
    ✓ returnValue doesn't leak "cancel" event (438ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (284ms)
    ✓ retry many times, no leaks on any events (1234ms)
    ✓ 4049 retry while starting offline (53ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant2/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660233176494


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (147ms)
    ✓ Testing allDocs opts.keys (76ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit (39ms)
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (45ms)
    ✓ Testing updating in changes (49ms)
    ✓ Testing include docs (38ms)
    ✓ Testing conflicts (53ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (136ms)
    ✓ test total_rows with both skip and limit (41ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option (45ms)
    ✓ test inclusive_end=false (58ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (265ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (197ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (167ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3 (39ms)
    ✓ issue 2803 should throw 412 part 4 (41ms)
    ✓ #2858 {binary: true} in get() (51ms)
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false (48ms)
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (51ms)
    ✓ #3074 live changes() (58ms)
    ✓ #3074 non-live changes(), no attachments (66ms)
    ✓ #3074 live changes(), no attachments (53ms)
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (47ms)
    ✓ #2771 allDocs() 2, many docs same att (54ms)
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (64ms)
    ✓ Test getAttachment (42ms)
    ✓ Test getAttachment with stubs (89ms)
    ✓ Test get() with binary:true and stubs (47ms)
    ✓ Test attachments in allDocs/changes (45ms)
    ✓ Test putAttachment with base64 plaintext (49ms)
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text (52ms)
    ✓ Test getAttachment with normal text (54ms)
    ✓ Test getAttachment with PNG (41ms)
    ✓ Test getAttachment with PNG using bulkDocs (62ms)
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback (40ms)
    ✓ Test create attachment without callback (39ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (47ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments (45ms)
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (75ms)
    ✓ Test a document with a json string attachment (40ms)
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data (38ms)
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (40ms)
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (51ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction) (40ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (143ms)
    ✓ #2709 `revpos` with putAttachment (52ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (106ms)
    ✓ Replicate same doc, same atts (118ms)
    ✓ Replicate same doc, same atts 2 (126ms)
    ✓ Attachments replicate (111ms)
    ✓ Attachment types replicate (53ms)
    ✓ Many many attachments replicate (178ms)
    ✓ Many many png attachments replicate (196ms)
    ✓ Multiple attachments replicate (88ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (73ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (80ms)
    ✓ #3932 attachments with tricky revpos (145ms)
    ✓ replication with changing attachments (97ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (115ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (164ms)
    ✓ Replicate same doc, same atts (176ms)
    ✓ Replicate same doc, same atts 2 (181ms)
    ✓ Attachments replicate (82ms)
    ✓ Attachment types replicate (183ms)
    ✓ Many many attachments replicate (371ms)
    ✓ Many many png attachments replicate (287ms)
    ✓ Multiple attachments replicate (126ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (120ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (124ms)
    ✓ #3932 attachments with tricky revpos (222ms)
    ✓ replication with changing attachments (151ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (174ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (106ms)
    ✓ Replicate same doc, same atts (143ms)
    ✓ Replicate same doc, same atts 2 (102ms)
    ✓ Attachments replicate (48ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (215ms)
    ✓ Many many png attachments replicate (152ms)
    ✓ Multiple attachments replicate (111ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (67ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (85ms)
    ✓ #3932 attachments with tricky revpos (138ms)
    ✓ replication with changing attachments (93ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (114ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (38ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos (85ms)
    ✓ replication with changing attachments (54ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (56ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (46ms)
    ✓ Fail to fetch a doc after db was deleted (60ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (42ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (51ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false (49ms)
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (264ms)
    ✓ 2839 implement revs_limit (225ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (301ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (113ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified (39ms)
    ✓ test bulk get with latest=true (38ms)
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (41ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (61ms)
    ✓ Changes with style = all_docs and a callback for complete (56ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (322ms)
    ✓ #3579 changes firing 1 too many times (84ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (131ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (44ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1023ms)
    ✓ supports return_docs=false
    ✓ should respects limit (72ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (198ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (320ms)
    ✓ #3579 changes firing 1 too many times (66ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (66ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (61ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage (60ms)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (637ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test (38ms)
    ✓ Compact more complicated tree (109ms)
    ✓ Compact two times more complicated tree (99ms)
    ✓ Compact database with at least two documents (162ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (47ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (40ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (47ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (39ms)
    ✓ #2931 - synchronous putAttachment + compact (1599ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1350ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (239ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (271ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (254ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (736ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (608ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (59ms)
    ✓ Indexing event
    ✓ Concurrent queries (43ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (45ms)
    ✓ Indexing event (44ms)
    ✓ Concurrent queries (39ms)

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (65ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (66ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (67ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (49ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (43ms)
    ✓ #2951 Parallelized gets with 409s/404s (68ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (61ms)
    ✓ Test get with conflicts (42ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (40ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs (38ms)
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes (49ms)
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs() (59ms)
    ✓ 4358 db.info rejects when server is down (174ms)
    ✓ 4358 db.destroy rejects when server is down (234ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (502ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (502ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (502ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (63ms)
    ✓ Testing issue #221 again (109ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (156ms)
    ✓ Testing issue #221 again (125ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (51ms)
    ✓ Testing issue #221 again (77ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (47ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (225ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (232ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (385ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (252ms)
    ✓ #3179 conflicts synced, non-live sync (228ms)
    ✓ #3179 conflicts synced, live sync (262ms)
    ✓ #3179 conflicts synced, live repl (365ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (133ms)
    ✓ #3179 conflicts synced, non-live sync (152ms)
    ✓ #3179 conflicts synced, live sync (161ms)
    ✓ #3179 conflicts synced, live repl (167ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (143ms)
    ✓ #3179 conflicts synced, non-live sync (135ms)
    ✓ #3179 conflicts synced, live sync (154ms)
    ✓ #3179 conflicts synced, live repl (144ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove (45ms)
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (41ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (46ms)
    ✓ Test basic pull replication plain api (55ms)
    ✓ Test basic pull replication plain api 2 (56ms)
    ✓ Test pull replication with many changes (164ms)
    ✓ Test basic pull replication with funny ids (46ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (527ms)
    ✓ Test correct # docs replicated with staggered revs (86ms)
    ✓ Local DB contains documents (54ms)
    ✓ Test basic push replication (54ms)
    ✓ Test basic push replication take 2 (48ms)
    ✓ Test basic push replication sequence tracking (66ms)
    ✓ Test checkpoint (63ms)
    ✓ Test live pull checkpoint (68ms)
    ✓ Test type of progress values (40ms)
    ✓ Test live push checkpoint (73ms)
    ✓ Test checkpoint 2 (70ms)
    ✓ Test checkpoint 3 :) (57ms)
    ✓ Test disable checkpoints on both source and target (44ms)
    ✓ Test write checkpoints on source only (40ms)
    ✓ Test write checkpoints on target only (53ms)
    ✓ Test replication resumes when checkpointing is enabled (66ms)
    ✓ Test replication resumes when checkpointing is disabled (81ms)
    ✓ Test replication resumes when checkpointing on source only (60ms)
    ✓ Test replication resumes when checkpointing on target only (78ms)
    ✓ #3136 open revs returned correctly 1 (106ms)
    ✓ #3136 open revs returned correctly 2 (123ms)
    ✓ #3136 winningRev has a lower seq (89ms)
    ✓ #3136 same changes with style=all_docs (98ms)
    ✓ #3136 style=all_docs with conflicts (84ms)
    ✓ #3136 style=all_docs with conflicts reversed (91ms)
    ✓ Test checkpoint read only 3 :) (60ms)
    ✓ Testing allDocs with some conflicts (issue #468) (82ms)
    ✓ Test basic conflict (62ms)
    ✓ Test _conflicts key (61ms)
    ✓ Test basic live pull replication (63ms)
    ✓ Test basic live push replication (66ms)
    ✓ test-cancel-pull-replication (171ms)
    ✓ Test basic events (55ms)
    ✓ Replication filter (45ms)
    ✓ Replication with different filters (67ms)
    ✓ Replication doc ids (39ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (83ms)
    ✓ Replication with same filters (61ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (58ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (58ms)
    ✓ Replication with deleted doc (54ms)
    ✓ 5904 - replication with deleted doc and value (51ms)
    ✓ Replication notifications (40ms)
    ✓ Replication with remote conflict (91ms)
    ✓ Replicate and modify three times (186ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (45ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (53ms)
    ✓ Replicates deleted docs w/ compaction (72ms)
    ✓ Replicates modified docs (issue #2636) (41ms)
    ✓ Replication of multiple remote conflicts (#789) (57ms)
    ✓ Replicate large number of docs (70ms)
    ✓ Ensure checkpoint after deletion (100ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (167ms)
    ✓ #909 Filtered replication bails at paging limit (58ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (89ms)
    ✓ #3999-1 should not start over if last_seq mismatches (105ms)
    ✓ #3999-2 should start over if no common session is found (78ms)
    ✓ #3999-3 should not start over if common session is found (94ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (78ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (73ms)
    ✓ Report write failures if whole saving fails (#942) (67ms)
    ✓ Test consecutive replications with different query_params (69ms)
    ✓ Test consecutive replications with different query_params and promises (68ms)
    ✓ Test consecutive replications with different doc_ids (87ms)
    ✓ #3962 - Test many attachments (150ms)
    ✓ doc count after multiple replications (170ms)
    ✓ issue #300 rev id unique per doc (58ms)
    ✓ issue #585 Store checkpoint on target db. (89ms)
    ✓ should work with a read only source (56ms)
    ✓ issue #2342 update_seq after replication (68ms)
    ✓ should cancel for live replication (553ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (51ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (43ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (43ms)
    ✓ #3606 - live repl with doc_ids (39ms)
    ✓ #3606 - live repl with view (47ms)
    ✓ #3569 - 409 during replication (104ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (52ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (75ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (84ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (45ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (49ms)
    ✓ #4293 Triggers extra replication events (149ms)
    ✓ Heartbeat gets passed (43ms)
    ✓ Timeout gets passed (45ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (150ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (178ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (101ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (65ms)
    ✓ Test basic pull replication plain api (71ms)
    ✓ Test basic pull replication plain api 2 (72ms)
    ✓ Test pull replication with many changes (194ms)
    ✓ Test basic pull replication with funny ids (70ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (574ms)
    ✓ Test correct # docs replicated with staggered revs (111ms)
    ✓ Local DB contains documents (68ms)
    ✓ Test basic push replication (68ms)
    ✓ Test basic push replication take 2 (77ms)
    ✓ Test basic push replication sequence tracking (109ms)
    ✓ Test checkpoint (93ms)
    ✓ Test live pull checkpoint (108ms)
    ✓ Test type of progress values (66ms)
    ✓ Test live push checkpoint (186ms)
    ✓ Test checkpoint 2 (124ms)
    ✓ Test checkpoint 3 :) (97ms)
    ✓ Test disable checkpoints on both source and target (67ms)
    ✓ Test write checkpoints on source only (64ms)
    ✓ Test write checkpoints on target only (69ms)
    ✓ Test replication resumes when checkpointing is enabled (100ms)
    ✓ Test replication resumes when checkpointing is disabled (75ms)
    ✓ Test replication resumes when checkpointing on source only (84ms)
    ✓ Test replication resumes when checkpointing on target only (82ms)
    ✓ #3136 open revs returned correctly 1 (226ms)
    ✓ #3136 open revs returned correctly 2 (210ms)
    ✓ #3136 winningRev has a lower seq (140ms)
    ✓ #3136 same changes with style=all_docs (137ms)
    ✓ #3136 style=all_docs with conflicts (145ms)
    ✓ #3136 style=all_docs with conflicts reversed (152ms)
    ✓ Test checkpoint read only 3 :) (96ms)
    ✓ Testing allDocs with some conflicts (issue #468) (124ms)
    ✓ Test basic conflict (132ms)
    ✓ Test _conflicts key (145ms)
    ✓ Test basic live pull replication (94ms)
    ✓ Test basic live push replication (92ms)
    ✓ test-cancel-pull-replication (197ms)
    ✓ Test basic events (71ms)
    ✓ Replication filter (79ms)
    ✓ Replication with different filters (104ms)
    ✓ Replication doc ids (66ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (114ms)
    ✓ Replication with same filters (96ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (90ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (76ms)
    ✓ Replication with deleted doc (69ms)
    ✓ 5904 - replication with deleted doc and value (65ms)
    ✓ Replication notifications (64ms)
    ✓ Replication with remote conflict (142ms)
    ✓ Replicate and modify three times (138ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (74ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (77ms)
    ✓ Replicates deleted docs w/ compaction (111ms)
    ✓ Replicates modified docs (issue #2636) (71ms)
    ✓ Replication of multiple remote conflicts (#789) (116ms)
    ✓ Replicate large number of docs (133ms)
    ✓ Ensure checkpoint after deletion (115ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (80ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (157ms)
    ✓ #3999-1 should not start over if last_seq mismatches (124ms)
    ✓ #3999-2 should start over if no common session is found (115ms)
    ✓ #3999-3 should not start over if common session is found (105ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (102ms)
    ✓ (#1307) - replicate empty database (45ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (102ms)
    ✓ Report write failures if whole saving fails (#942) (108ms)
    ✓ Test consecutive replications with different query_params (95ms)
    ✓ Test consecutive replications with different query_params and promises (104ms)
    ✓ Test consecutive replications with different doc_ids (116ms)
    ✓ #3962 - Test many attachments (159ms)
    ✓ doc count after multiple replications (220ms)
    ✓ issue #300 rev id unique per doc (100ms)
    ✓ issue #585 Store checkpoint on target db. (115ms)
    ✓ should work with a read only source (67ms)
    ✓ issue #2342 update_seq after replication (87ms)
    ✓ should cancel for live replication (555ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (78ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (65ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (70ms)
    ✓ #3606 - live repl with doc_ids (68ms)
    ✓ #3606 - live repl with view (80ms)
    ✓ #3569 - 409 during replication (147ms)
    ✓ #3270 triggers "change" events with .docs property (65ms)
    ✓ #3543 replication with a ddoc filter (79ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (108ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (112ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (109ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (72ms)
    ✓ #4293 Triggers extra replication events (220ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (123ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (143ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (147ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (52ms)
    ✓ Test basic pull replication plain api (53ms)
    ✓ Test basic pull replication plain api 2 (50ms)
    ✓ Test pull replication with many changes (174ms)
    ✓ Test basic pull replication with funny ids (53ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (885ms)
    ✓ Test correct # docs replicated with staggered revs (131ms)
    ✓ Local DB contains documents (66ms)
    ✓ Test basic push replication (87ms)
    ✓ Test basic push replication take 2 (47ms)
    ✓ Test basic push replication sequence tracking (88ms)
    ✓ Test checkpoint (58ms)
    ✓ Test live pull checkpoint (67ms)
    ✓ Test type of progress values (56ms)
    ✓ Test live push checkpoint (94ms)
    ✓ Test checkpoint 2 (59ms)
    ✓ Test checkpoint 3 :) (69ms)
    ✓ Test disable checkpoints on both source and target (44ms)
    ✓ Test write checkpoints on source only (53ms)
    ✓ Test write checkpoints on target only (43ms)
    ✓ Test replication resumes when checkpointing is enabled (69ms)
    ✓ Test replication resumes when checkpointing is disabled (57ms)
    ✓ Test replication resumes when checkpointing on source only (68ms)
    ✓ Test replication resumes when checkpointing on target only (62ms)
    ✓ #3136 open revs returned correctly 1 (223ms)
    ✓ #3136 open revs returned correctly 2 (187ms)
    ✓ #3136 winningRev has a lower seq (95ms)
    ✓ #3136 same changes with style=all_docs (101ms)
    ✓ #3136 style=all_docs with conflicts (90ms)
    ✓ #3136 style=all_docs with conflicts reversed (95ms)
    ✓ Test checkpoint read only 3 :) (60ms)
    ✓ Testing allDocs with some conflicts (issue #468) (77ms)
    ✓ Test basic conflict (48ms)
    ✓ Test _conflicts key (105ms)
    ✓ Test basic live pull replication (100ms)
    ✓ Test basic live push replication (69ms)
    ✓ test-cancel-pull-replication (179ms)
    ✓ Test basic events (51ms)
    ✓ Replication filter (51ms)
    ✓ Replication with different filters (67ms)
    ✓ Replication doc ids (47ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (71ms)
    ✓ Replication with same filters (72ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (62ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (54ms)
    ✓ Replication with deleted doc (56ms)
    ✓ 5904 - replication with deleted doc and value (53ms)
    ✓ Replication notifications (45ms)
    ✓ Replication with remote conflict (90ms)
    ✓ Replicate and modify three times (80ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (45ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (65ms)
    ✓ Replicates deleted docs w/ compaction (70ms)
    ✓ Replicates modified docs (issue #2636) (57ms)
    ✓ Replication of multiple remote conflicts (#789) (51ms)
    ✓ Replicate large number of docs (65ms)
    ✓ Ensure checkpoint after deletion (95ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (89ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (211ms)
    ✓ #3999-1 should not start over if last_seq mismatches (83ms)
    ✓ #3999-2 should start over if no common session is found (68ms)
    ✓ #3999-3 should not start over if common session is found (66ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (65ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (66ms)
    ✓ Report write failures if whole saving fails (#942) (65ms)
    ✓ Test consecutive replications with different query_params (61ms)
    ✓ Test consecutive replications with different query_params and promises (63ms)
    ✓ Test consecutive replications with different doc_ids (71ms)
    ✓ #3962 - Test many attachments (62ms)
    ✓ doc count after multiple replications (91ms)
    ✓ issue #300 rev id unique per doc (52ms)
    ✓ issue #585 Store checkpoint on target db. (74ms)
    ✓ should work with a read only source (40ms)
    ✓ issue #2342 update_seq after replication (55ms)
    ✓ should cancel for live replication (535ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (51ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (53ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (57ms)
    ✓ #3606 - live repl with doc_ids (48ms)
    ✓ #3606 - live repl with view (51ms)
    ✓ #3569 - 409 during replication (218ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (56ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (68ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (72ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (40ms)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (159ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (60ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (82ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (81ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (127ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (471ms)
    ✓ Test correct # docs replicated with staggered revs (41ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (120ms)
    ✓ #3136 open revs returned correctly 2 (55ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (44ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (125ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (46ms)
    ✓ Ensure checkpoint after deletion
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found (46ms)
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (63ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (44ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (535ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (120ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (44ms)
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (72ms)
    ✓ #3852 Test basic starting with docs (85ms)
    ✓ #5710 Test pending property support (76ms)
    ✓ #3852 Test errors (68ms)
    ✓ #4627 Test no duplicate changes in live replication (2054ms)
    ✓ Test checkpoint events (51ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (129ms)
    ✓ #3852 Test basic starting with docs (152ms)
    ✓ #5710 Test pending property support (252ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2092ms)
    ✓ Test checkpoint events (82ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (85ms)
    ✓ #3852 Test basic starting with docs (103ms)
    ✓ #5710 Test pending property support (69ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2074ms)
    ✓ Test checkpoint events (49ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2028ms)
    ✓ Test checkpoint events (38ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (68ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (96ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (75ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (46ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (85ms)
    ✓ #3687 active event only fired once... (51ms)
    ✓ source doesn't leak "destroyed" event (175ms)
    ✓ target doesn't leak "destroyed" event (184ms)
    ✓ returnValue doesn't leak "complete" event (253ms)
    ✓ returnValue doesn't leak "error" event (243ms)
    ✓ returnValue doesn't leak "paused" event (175ms)
    ✓ returnValue doesn't leak "active" event (174ms)
    ✓ returnValue doesn't leak "change" event (185ms)
    ✓ returnValue doesn't leak "cancel" event (181ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (176ms)
    ✓ retry many times, no leaks on any events (748ms)
    ✓ 4049 retry while starting offline (40ms)
    ✓ #5157 replicate many docs with live+retry (565ms)
    ✓ 6510 no changes live+retry does not call backoff function (2003ms)

  test.retry.js-http-http
    ✓ retry stuff (158ms)
    ✓ #3687 active event only fired once... (78ms)
    ✓ source doesn't leak "destroyed" event (266ms)
    ✓ target doesn't leak "destroyed" event (280ms)
    ✓ returnValue doesn't leak "complete" event (298ms)
    ✓ returnValue doesn't leak "error" event (276ms)
    ✓ returnValue doesn't leak "paused" event (269ms)
    ✓ returnValue doesn't leak "active" event (281ms)
    ✓ returnValue doesn't leak "change" event (398ms)
    ✓ returnValue doesn't leak "cancel" event (274ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (277ms)
    ✓ retry many times, no leaks on any events (1177ms)
    ✓ 4049 retry while starting offline (61ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant1/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 8s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 424ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660233311029


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (173ms)
    ✓ Testing allDocs opts.keys (65ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (46ms)
    ✓ Testing updating in changes (48ms)
    ✓ Testing include docs (40ms)
    ✓ Testing conflicts (96ms)
    ✓ test basic collation (38ms)
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (150ms)
    ✓ test total_rows with both skip and limit (38ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (54ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (256ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (181ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (42ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content (42ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel (40ms)
    ✓ #2818 - revisions keep attachments (no compaction) (41ms)
    ✓ #2818 - doesn't throw 409 if same filename (38ms)
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (99ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (40ms)
    ✓ #2858 {binary: true} in allDocs() 1 (39ms)
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts (40ms)
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts (51ms)
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (51ms)
    ✓ #3074 live changes() (39ms)
    ✓ #3074 non-live changes(), no attachments (41ms)
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (39ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (49ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions (40ms)
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (69ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs (39ms)
    ✓ proper stub behavior (41ms)
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go (40ms)
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (46ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (48ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (46ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (43ms)
    ✓ Test getAttachment with diff revs and content (39ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext (40ms)
    ✓ putAttachment and getAttachment with png data (49ms)
    ✓ putAttachment in new doc with base64 (39ms)
    ✓ #2818 - save same attachment in different revs (88ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction) (38ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (149ms)
    ✓ #2709 `revpos` with putAttachment (44ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (114ms)
    ✓ Replicate same doc, same atts (110ms)
    ✓ Replicate same doc, same atts 2 (111ms)
    ✓ Attachments replicate (85ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (191ms)
    ✓ Many many png attachments replicate (197ms)
    ✓ Multiple attachments replicate (79ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (74ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (73ms)
    ✓ #3932 attachments with tricky revpos (147ms)
    ✓ replication with changing attachments (184ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (169ms)
    ✓ Replicate same doc, same atts (180ms)
    ✓ Replicate same doc, same atts 2 (205ms)
    ✓ Attachments replicate (82ms)
    ✓ Attachment types replicate (101ms)
    ✓ Many many attachments replicate (378ms)
    ✓ Many many png attachments replicate (306ms)
    ✓ Multiple attachments replicate (126ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (189ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (136ms)
    ✓ #3932 attachments with tricky revpos (228ms)
    ✓ replication with changing attachments (164ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (189ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (114ms)
    ✓ Replicate same doc, same atts (95ms)
    ✓ Replicate same doc, same atts 2 (97ms)
    ✓ Attachments replicate (68ms)
    ✓ Attachment types replicate (53ms)
    ✓ Many many attachments replicate (147ms)
    ✓ Many many png attachments replicate (160ms)
    ✓ Multiple attachments replicate (108ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (119ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (101ms)
    ✓ #3932 attachments with tricky revpos (149ms)
    ✓ replication with changing attachments (98ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax (59ms)
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub (44ms)
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (55ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (50ms)
    ✓ Fail to fetch a doc after db was deleted (57ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (38ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (51ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (261ms)
    ✓ 2839 implement revs_limit (192ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911 (50ms)
    ✓ Test multiple bulkdocs (41ms)
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (40ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (298ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (41ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter (63ms)
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (63ms)
    ✓ Changes with style = all_docs and a callback for complete (66ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (323ms)
    ✓ #3579 changes firing 1 too many times (76ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (192ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (41ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1025ms)
    ✓ supports return_docs=false
    ✓ should respects limit (74ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (199ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine (38ms)
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (314ms)
    ✓ #3579 changes firing 1 too many times (64ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1017ms)
    ✓ supports return_docs=false
    ✓ should respects limit (68ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (70ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (779ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test (48ms)
    ✓ Compact more complicated tree (118ms)
    ✓ Compact two times more complicated tree (107ms)
    ✓ Compact database with at least two documents (165ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (44ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (38ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (42ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1494ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1291ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (328ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (269ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (264ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (594ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (704ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (57ms)
    ✓ Indexing event
    ✓ Concurrent queries (48ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (43ms)
    ✓ Indexing event (43ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (118ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (40ms)
    ✓ Test opts.revs=true return only winning branch (53ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (43ms)
    ✓ #2951 Parallelized gets with 409s/404s (61ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (63ms)
    ✓ Test get with conflicts (43ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (38ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (184ms)
    ✓ 4358 db.destroy rejects when server is down (285ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (500ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (500ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (75ms)
    ✓ Testing issue #221 again (79ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (86ms)
    ✓ Testing issue #221 again (111ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (55ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (49ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (222ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (358ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (420ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (244ms)
    ✓ #3179 conflicts synced, non-live sync (228ms)
    ✓ #3179 conflicts synced, live sync (262ms)
    ✓ #3179 conflicts synced, live repl (280ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (138ms)
    ✓ #3179 conflicts synced, non-live sync (157ms)
    ✓ #3179 conflicts synced, live sync (152ms)
    ✓ #3179 conflicts synced, live repl (240ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (170ms)
    ✓ #3179 conflicts synced, non-live sync (163ms)
    ✓ #3179 conflicts synced, live sync (150ms)
    ✓ #3179 conflicts synced, live repl (164ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (47ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (44ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (50ms)
    ✓ Test basic pull replication plain api 2 (53ms)
    ✓ Test pull replication with many changes (155ms)
    ✓ Test basic pull replication with funny ids (51ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (699ms)
    ✓ Test correct # docs replicated with staggered revs (101ms)
    ✓ Local DB contains documents (51ms)
    ✓ Test basic push replication (52ms)
    ✓ Test basic push replication take 2 (62ms)
    ✓ Test basic push replication sequence tracking (69ms)
    ✓ Test checkpoint (62ms)
    ✓ Test live pull checkpoint (66ms)
    ✓ Test type of progress values (47ms)
    ✓ Test live push checkpoint (72ms)
    ✓ Test checkpoint 2 (73ms)
    ✓ Test checkpoint 3 :) (62ms)
    ✓ Test disable checkpoints on both source and target (45ms)
    ✓ Test write checkpoints on source only (43ms)
    ✓ Test write checkpoints on target only (48ms)
    ✓ Test replication resumes when checkpointing is enabled (59ms)
    ✓ Test replication resumes when checkpointing is disabled (49ms)
    ✓ Test replication resumes when checkpointing on source only (47ms)
    ✓ Test replication resumes when checkpointing on target only (63ms)
    ✓ #3136 open revs returned correctly 1 (118ms)
    ✓ #3136 open revs returned correctly 2 (118ms)
    ✓ #3136 winningRev has a lower seq (84ms)
    ✓ #3136 same changes with style=all_docs (111ms)
    ✓ #3136 style=all_docs with conflicts (150ms)
    ✓ #3136 style=all_docs with conflicts reversed (160ms)
    ✓ Test checkpoint read only 3 :) (59ms)
    ✓ Testing allDocs with some conflicts (issue #468) (79ms)
    ✓ Test basic conflict (62ms)
    ✓ Test _conflicts key (89ms)
    ✓ Test basic live pull replication (60ms)
    ✓ Test basic live push replication (63ms)
    ✓ test-cancel-pull-replication (169ms)
    ✓ Test basic events (52ms)
    ✓ Replication filter (45ms)
    ✓ Replication with different filters (65ms)
    ✓ Replication doc ids (47ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (82ms)
    ✓ Replication with same filters (67ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (62ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (89ms)
    ✓ Replication with deleted doc (58ms)
    ✓ 5904 - replication with deleted doc and value (55ms)
    ✓ Replication notifications (46ms)
    ✓ Replication with remote conflict (86ms)
    ✓ Replicate and modify three times (86ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (43ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (55ms)
    ✓ Replicates deleted docs w/ compaction (66ms)
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789) (54ms)
    ✓ Replicate large number of docs (53ms)
    ✓ Ensure checkpoint after deletion (88ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (58ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (103ms)
    ✓ #3999-1 should not start over if last_seq mismatches (105ms)
    ✓ #3999-2 should start over if no common session is found (83ms)
    ✓ #3999-3 should not start over if common session is found (76ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (90ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (71ms)
    ✓ Report write failures if whole saving fails (#942) (67ms)
    ✓ Test consecutive replications with different query_params (70ms)
    ✓ Test consecutive replications with different query_params and promises (75ms)
    ✓ Test consecutive replications with different doc_ids (90ms)
    ✓ #3962 - Test many attachments (172ms)
    ✓ doc count after multiple replications (116ms)
    ✓ issue #300 rev id unique per doc (53ms)
    ✓ issue #585 Store checkpoint on target db. (78ms)
    ✓ should work with a read only source (50ms)
    ✓ issue #2342 update_seq after replication (69ms)
    ✓ should cancel for live replication (556ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (51ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (44ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (50ms)
    ✓ #3606 - live repl with doc_ids (64ms)
    ✓ #3606 - live repl with view (55ms)
    ✓ #3569 - 409 during replication (117ms)
    ✓ #3270 triggers "change" events with .docs property (50ms)
    ✓ #3543 replication with a ddoc filter (47ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (73ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (84ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (45ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (51ms)
    ✓ #4293 Triggers extra replication events (156ms)
    ✓ Heartbeat gets passed (42ms)
    ✓ Timeout gets passed (43ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (97ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (111ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (119ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (72ms)
    ✓ Test basic pull replication plain api (68ms)
    ✓ Test basic pull replication plain api 2 (80ms)
    ✓ Test pull replication with many changes (327ms)
    ✓ Test basic pull replication with funny ids (76ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (582ms)
    ✓ Test correct # docs replicated with staggered revs (130ms)
    ✓ Local DB contains documents (77ms)
    ✓ Test basic push replication (80ms)
    ✓ Test basic push replication take 2 (75ms)
    ✓ Test basic push replication sequence tracking (124ms)
    ✓ Test checkpoint (102ms)
    ✓ Test live pull checkpoint (117ms)
    ✓ Test type of progress values (74ms)
    ✓ Test live push checkpoint (116ms)
    ✓ Test checkpoint 2 (107ms)
    ✓ Test checkpoint 3 :) (111ms)
    ✓ Test disable checkpoints on both source and target (68ms)
    ✓ Test write checkpoints on source only (72ms)
    ✓ Test write checkpoints on target only (130ms)
    ✓ Test replication resumes when checkpointing is enabled (177ms)
    ✓ Test replication resumes when checkpointing is disabled (94ms)
    ✓ Test replication resumes when checkpointing on source only (92ms)
    ✓ Test replication resumes when checkpointing on target only (101ms)
    ✓ #3136 open revs returned correctly 1 (243ms)
    ✓ #3136 open revs returned correctly 2 (215ms)
    ✓ #3136 winningRev has a lower seq (149ms)
    ✓ #3136 same changes with style=all_docs (157ms)
    ✓ #3136 style=all_docs with conflicts (154ms)
    ✓ #3136 style=all_docs with conflicts reversed (187ms)
    ✓ Test checkpoint read only 3 :) (94ms)
    ✓ Testing allDocs with some conflicts (issue #468) (126ms)
    ✓ Test basic conflict (73ms)
    ✓ Test _conflicts key (96ms)
    ✓ Test basic live pull replication (95ms)
    ✓ Test basic live push replication (147ms)
    ✓ test-cancel-pull-replication (241ms)
    ✓ Test basic events (71ms)
    ✓ Replication filter (81ms)
    ✓ Replication with different filters (108ms)
    ✓ Replication doc ids (74ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (120ms)
    ✓ Replication with same filters (100ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (96ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (86ms)
    ✓ Replication with deleted doc (73ms)
    ✓ 5904 - replication with deleted doc and value (67ms)
    ✓ Replication notifications (57ms)
    ✓ Replication with remote conflict (140ms)
    ✓ Replicate and modify three times (140ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (55ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (101ms)
    ✓ Replicates deleted docs w/ compaction (118ms)
    ✓ Replicates modified docs (issue #2636) (57ms)
    ✓ Replication of multiple remote conflicts (#789) (83ms)
    ✓ Replicate large number of docs (92ms)
    ✓ Ensure checkpoint after deletion (188ms)
    ✓ issue #1001 cb as 3rd argument (168ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (77ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (163ms)
    ✓ #3999-1 should not start over if last_seq mismatches (127ms)
    ✓ #3999-2 should start over if no common session is found (107ms)
    ✓ #3999-3 should not start over if common session is found (109ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (105ms)
    ✓ (#1307) - replicate empty database (42ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (108ms)
    ✓ Report write failures if whole saving fails (#942) (109ms)
    ✓ Test consecutive replications with different query_params (103ms)
    ✓ Test consecutive replications with different query_params and promises (102ms)
    ✓ Test consecutive replications with different doc_ids (133ms)
    ✓ #3962 - Test many attachments (166ms)
    ✓ doc count after multiple replications (192ms)
    ✓ issue #300 rev id unique per doc (113ms)
    ✓ issue #585 Store checkpoint on target db. (118ms)
    ✓ should work with a read only source (64ms)
    ✓ issue #2342 update_seq after replication (92ms)
    ✓ should cancel for live replication (553ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (72ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (70ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (67ms)
    ✓ #3606 - live repl with doc_ids (58ms)
    ✓ #3606 - live repl with view (65ms)
    ✓ #3569 - 409 during replication (156ms)
    ✓ #3270 triggers "change" events with .docs property (65ms)
    ✓ #3543 replication with a ddoc filter (67ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (108ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (113ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (54ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (133ms)
    ✓ #4293 Triggers extra replication events (270ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (121ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (137ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (156ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (51ms)
    ✓ Test basic pull replication plain api (48ms)
    ✓ Test basic pull replication plain api 2 (47ms)
    ✓ Test pull replication with many changes (146ms)
    ✓ Test basic pull replication with funny ids (57ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (503ms)
    ✓ Test correct # docs replicated with staggered revs (70ms)
    ✓ Local DB contains documents (50ms)
    ✓ Test basic push replication (55ms)
    ✓ Test basic push replication take 2 (49ms)
    ✓ Test basic push replication sequence tracking (79ms)
    ✓ Test checkpoint (54ms)
    ✓ Test live pull checkpoint (64ms)
    ✓ Test type of progress values (41ms)
    ✓ Test live push checkpoint (122ms)
    ✓ Test checkpoint 2 (106ms)
    ✓ Test checkpoint 3 :) (84ms)
    ✓ Test disable checkpoints on both source and target (49ms)
    ✓ Test write checkpoints on source only (49ms)
    ✓ Test write checkpoints on target only (40ms)
    ✓ Test replication resumes when checkpointing is enabled (62ms)
    ✓ Test replication resumes when checkpointing is disabled (49ms)
    ✓ Test replication resumes when checkpointing on source only (66ms)
    ✓ Test replication resumes when checkpointing on target only (51ms)
    ✓ #3136 open revs returned correctly 1 (226ms)
    ✓ #3136 open revs returned correctly 2 (187ms)
    ✓ #3136 winningRev has a lower seq (98ms)
    ✓ #3136 same changes with style=all_docs (92ms)
    ✓ #3136 style=all_docs with conflicts (97ms)
    ✓ #3136 style=all_docs with conflicts reversed (91ms)
    ✓ Test checkpoint read only 3 :) (63ms)
    ✓ Testing allDocs with some conflicts (issue #468) (68ms)
    ✓ Test basic conflict (45ms)
    ✓ Test _conflicts key (75ms)
    ✓ Test basic live pull replication (67ms)
    ✓ Test basic live push replication (66ms)
    ✓ test-cancel-pull-replication (167ms)
    ✓ Test basic events (55ms)
    ✓ Replication filter (52ms)
    ✓ Replication with different filters (63ms)
    ✓ Replication doc ids (85ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (124ms)
    ✓ Replication with same filters (62ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (65ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (56ms)
    ✓ Replication with deleted doc (61ms)
    ✓ 5904 - replication with deleted doc and value (57ms)
    ✓ Replication notifications (45ms)
    ✓ Replication with remote conflict (84ms)
    ✓ Replicate and modify three times (86ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (44ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (62ms)
    ✓ Replicates deleted docs w/ compaction (72ms)
    ✓ Replicates modified docs (issue #2636) (48ms)
    ✓ Replication of multiple remote conflicts (#789) (55ms)
    ✓ Replicate large number of docs (60ms)
    ✓ Ensure checkpoint after deletion (85ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (62ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (111ms)
    ✓ #3999-1 should not start over if last_seq mismatches (77ms)
    ✓ #3999-2 should start over if no common session is found (69ms)
    ✓ #3999-3 should not start over if common session is found (64ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (70ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (75ms)
    ✓ Report write failures if whole saving fails (#942) (114ms)
    ✓ Test consecutive replications with different query_params (122ms)
    ✓ Test consecutive replications with different query_params and promises (66ms)
    ✓ Test consecutive replications with different doc_ids (78ms)
    ✓ #3962 - Test many attachments (58ms)
    ✓ doc count after multiple replications (96ms)
    ✓ issue #300 rev id unique per doc (53ms)
    ✓ issue #585 Store checkpoint on target db. (85ms)
    ✓ should work with a read only source (43ms)
    ✓ issue #2342 update_seq after replication (63ms)
    ✓ should cancel for live replication (536ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (50ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (50ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (47ms)
    ✓ #3606 - live repl with doc_ids (44ms)
    ✓ #3606 - live repl with view (50ms)
    ✓ #3569 - 409 during replication (155ms)
    ✓ #3270 triggers "change" events with .docs property (51ms)
    ✓ #3543 replication with a ddoc filter (52ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (69ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (77ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON) (86ms)
    ✓ #4293 Triggers extra replication events (209ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (69ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (78ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (76ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2 (45ms)
    ✓ Test pull replication with many changes (135ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (498ms)
    ✓ Test correct # docs replicated with staggered revs (38ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (75ms)
    ✓ #3136 open revs returned correctly 2 (61ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468) (69ms)
    ✓ Test basic conflict
    ✓ Test _conflicts key (47ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (128ms)
    ✓ Test basic events (42ms)
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (47ms)
    ✓ Ensure checkpoint after deletion (42ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (63ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db.
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (527ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (48ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params (69ms)
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove() (40ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (123ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (73ms)
    ✓ #3852 Test basic starting with docs (91ms)
    ✓ #5710 Test pending property support (74ms)
    ✓ #3852 Test errors (64ms)
    ✓ #4627 Test no duplicate changes in live replication (2057ms)
    ✓ Test checkpoint events (55ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (128ms)
    ✓ #3852 Test basic starting with docs (157ms)
    ✓ #5710 Test pending property support (102ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2089ms)
    ✓ Test checkpoint events (71ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (84ms)
    ✓ #3852 Test basic starting with docs (107ms)
    ✓ #5710 Test pending property support (133ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2090ms)
    ✓ Test checkpoint events (58ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2031ms)
    ✓ Test checkpoint events (44ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (92ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (102ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (78ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (53ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (80ms)
    ✓ #3687 active event only fired once... (56ms)
    ✓ source doesn't leak "destroyed" event (176ms)
    ✓ target doesn't leak "destroyed" event (178ms)
    ✓ returnValue doesn't leak "complete" event (189ms)
    ✓ returnValue doesn't leak "error" event (188ms)
    ✓ returnValue doesn't leak "paused" event (170ms)
    ✓ returnValue doesn't leak "active" event (175ms)
    ✓ returnValue doesn't leak "change" event (264ms)
    ✓ returnValue doesn't leak "cancel" event (249ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (197ms)
    ✓ retry many times, no leaks on any events (745ms)
    ✓ 4049 retry while starting offline
    ✓ #5157 replicate many docs with live+retry (476ms)
    ✓ 6510 no changes live+retry does not call backoff function (2001ms)

  test.retry.js-http-http
    ✓ retry stuff (124ms)
    ✓ #3687 active event only fired once... (79ms)
    ✓ source doesn't leak "destroyed" event (279ms)
    ✓ target doesn't leak "destroyed" event (416ms)
    ✓ returnValue doesn't leak "complete" event (282ms)
    ✓ returnValue doesn't leak "error" event (272ms)
    ✓ returnValue doesn't leak "paused" event (279ms)
    ✓ returnValue doesn't leak "active" event (279ms)
    ✓ returnValue doesn't leak "change" event (276ms)
    ✓ returnValue doesn't leak "cancel" event (293ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (336ms)
************* run test done *************
variantsDepsNum: 3
/data/js-variants/multee
3
pouchdb is testing ./VariantsDeps/memdown/variant3/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 9s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 401ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-adapter-utils...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660234306169


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (150ms)
    ✓ Testing allDocs opts.keys (64ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (42ms)
    ✓ Testing updating in changes (40ms)
    ✓ Testing include docs
    ✓ Testing conflicts (49ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (119ms)
    ✓ test total_rows with both skip and limit (50ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (53ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (254ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (186ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (100ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (42ms)
    ✓ #3074 live changes() (43ms)
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (38ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (43ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (55ms)
    ✓ Test get() with binary:true and stubs (39ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (39ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (49ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (39ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (48ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (107ms)
    ✓ #2709 `revpos` with putAttachment (39ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (109ms)
    ✓ Replicate same doc, same atts (120ms)
    ✓ Replicate same doc, same atts 2 (111ms)
    ✓ Attachments replicate (88ms)
    ✓ Attachment types replicate (54ms)
    ✓ Many many attachments replicate (184ms)
    ✓ Many many png attachments replicate (219ms)
    ✓ Multiple attachments replicate (78ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (80ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (67ms)
    ✓ #3932 attachments with tricky revpos (148ms)
    ✓ replication with changing attachments (97ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (174ms)
    ✓ Replicate same doc, same atts (169ms)
    ✓ Replicate same doc, same atts 2 (187ms)
    ✓ Attachments replicate (109ms)
    ✓ Attachment types replicate (89ms)
    ✓ Many many attachments replicate (345ms)
    ✓ Many many png attachments replicate (285ms)
    ✓ Multiple attachments replicate (125ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (119ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (132ms)
    ✓ #3932 attachments with tricky revpos (249ms)
    ✓ replication with changing attachments (146ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (172ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (140ms)
    ✓ Replicate same doc, same atts (96ms)
    ✓ Replicate same doc, same atts 2 (112ms)
    ✓ Attachments replicate (55ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (147ms)
    ✓ Many many png attachments replicate (152ms)
    ✓ Multiple attachments replicate (83ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (69ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (89ms)
    ✓ #3932 attachments with tricky revpos (145ms)
    ✓ replication with changing attachments (95ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (112ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (48ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback (53ms)
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (42ms)
    ✓ Fail to fetch a doc after db was deleted (51ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (97ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists (38ms)
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (269ms)
    ✓ 2839 implement revs_limit (172ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (363ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (43ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0 (51ms)
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (66ms)
    ✓ Changes with style = all_docs and a callback for complete (59ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (324ms)
    ✓ #3579 changes firing 1 too many times (73ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (120ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1022ms)
    ✓ supports return_docs=false
    ✓ should respects limit (79ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (190ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (320ms)
    ✓ #3579 changes firing 1 too many times (68ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1017ms)
    ✓ supports return_docs=false (58ms)
    ✓ should respects limit (70ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (61ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (603ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (105ms)
    ✓ Compact two times more complicated tree (102ms)
    ✓ Compact database with at least two documents (164ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id (42ms)
    ✓ Compaction removes non-leaf revs (#2807) (91ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (51ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (42ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1474ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1384ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (281ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (304ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (259ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level (45ms)
    ✓ force put ok on 2nd level (42ms)
    ✓ Conflict resolution 1 (52ms)
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (598ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (626ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter (42ms)
    ✓ Basic views (55ms)
    ✓ Indexing event
    ✓ Concurrent queries (50ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (47ms)
    ✓ Indexing event (44ms)
    ✓ Concurrent queries (41ms)

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (68ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (38ms)
    ✓ Test opts.revs=true return only winning branch (49ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (44ms)
    ✓ #2951 Parallelized gets with 409s/404s (68ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (67ms)
    ✓ Test get with conflicts (40ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (256ms)
    ✓ 4358 db.destroy rejects when server is down (220ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (502ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (502ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (500ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (78ms)
    ✓ Testing issue #221 again (71ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (85ms)
    ✓ Testing issue #221 again (112ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (50ms)
    ✓ Testing issue #221 again (66ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (42ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (213ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (233ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (390ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (281ms)
    ✓ #3179 conflicts synced, non-live sync (279ms)
    ✓ #3179 conflicts synced, live sync (257ms)
    ✓ #3179 conflicts synced, live repl (264ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (162ms)
    ✓ #3179 conflicts synced, non-live sync (163ms)
    ✓ #3179 conflicts synced, live sync (167ms)
    ✓ #3179 conflicts synced, live repl (175ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (141ms)
    ✓ #3179 conflicts synced, non-live sync (140ms)
    ✓ #3179 conflicts synced, live sync (141ms)
    ✓ #3179 conflicts synced, live repl (133ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (41ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync (92ms)
    ✓ #3179 conflicts synced, live repl (41ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents (44ms)

  test.issue3646.js- http
    ✓ Should finish with 0 documents (40ms)

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (49ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (57ms)
    ✓ Test basic pull replication plain api 2 (52ms)
    ✓ Test pull replication with many changes (173ms)
    ✓ Test basic pull replication with funny ids (47ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (544ms)
    ✓ Test correct # docs replicated with staggered revs (80ms)
    ✓ Local DB contains documents (53ms)
    ✓ Test basic push replication (48ms)
    ✓ Test basic push replication take 2 (61ms)
    ✓ Test basic push replication sequence tracking (103ms)
    ✓ Test checkpoint (119ms)
    ✓ Test live pull checkpoint (82ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (69ms)
    ✓ Test checkpoint 2 (76ms)
    ✓ Test checkpoint 3 :) (67ms)
    ✓ Test disable checkpoints on both source and target (58ms)
    ✓ Test write checkpoints on source only (52ms)
    ✓ Test write checkpoints on target only (64ms)
    ✓ Test replication resumes when checkpointing is enabled (67ms)
    ✓ Test replication resumes when checkpointing is disabled (59ms)
    ✓ Test replication resumes when checkpointing on source only (52ms)
    ✓ Test replication resumes when checkpointing on target only (70ms)
    ✓ #3136 open revs returned correctly 1 (111ms)
    ✓ #3136 open revs returned correctly 2 (131ms)
    ✓ #3136 winningRev has a lower seq (83ms)
    ✓ #3136 same changes with style=all_docs (102ms)
    ✓ #3136 style=all_docs with conflicts (87ms)
    ✓ #3136 style=all_docs with conflicts reversed (96ms)
    ✓ Test checkpoint read only 3 :) (69ms)
    ✓ Testing allDocs with some conflicts (issue #468) (85ms)
    ✓ Test basic conflict (59ms)
    ✓ Test _conflicts key (68ms)
    ✓ Test basic live pull replication (58ms)
    ✓ Test basic live push replication (63ms)
    ✓ test-cancel-pull-replication (169ms)
    ✓ Test basic events (80ms)
    ✓ Replication filter (85ms)
    ✓ Replication with different filters (71ms)
    ✓ Replication doc ids (42ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (78ms)
    ✓ Replication with same filters (66ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (57ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (59ms)
    ✓ Replication with deleted doc (56ms)
    ✓ 5904 - replication with deleted doc and value (56ms)
    ✓ Replication notifications (46ms)
    ✓ Replication with remote conflict (90ms)
    ✓ Replicate and modify three times (99ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636) (53ms)
    ✓ Replicates deleted docs w/ compaction (71ms)
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789) (48ms)
    ✓ Replicate large number of docs (52ms)
    ✓ Ensure checkpoint after deletion (78ms)
    ✓ issue #1001 cb as 3rd argument (170ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (59ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (97ms)
    ✓ #3999-1 should not start over if last_seq mismatches (105ms)
    ✓ #3999-2 should start over if no common session is found (84ms)
    ✓ #3999-3 should not start over if common session is found (78ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (135ms)
    ✓ (#1307) - replicate empty database (46ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (98ms)
    ✓ Report write failures if whole saving fails (#942) (72ms)
    ✓ Test consecutive replications with different query_params (70ms)
    ✓ Test consecutive replications with different query_params and promises (68ms)
    ✓ Test consecutive replications with different doc_ids (85ms)
    ✓ #3962 - Test many attachments (156ms)
    ✓ doc count after multiple replications (121ms)
    ✓ issue #300 rev id unique per doc (60ms)
    ✓ issue #585 Store checkpoint on target db. (77ms)
    ✓ should work with a read only source (55ms)
    ✓ issue #2342 update_seq after replication (63ms)
    ✓ should cancel for live replication (550ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (53ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (38ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (47ms)
    ✓ #3606 - live repl with doc_ids (41ms)
    ✓ #3606 - live repl with view (41ms)
    ✓ #3569 - 409 during replication (88ms)
    ✓ #3270 triggers "change" events with .docs property (55ms)
    ✓ #3543 replication with a ddoc filter (74ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (154ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (79ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (41ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (41ms)
    ✓ #4293 Triggers extra replication events (155ms)
    ✓ Heartbeat gets passed (49ms)
    ✓ Timeout gets passed (42ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (87ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (105ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (107ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (66ms)
    ✓ Test basic pull replication plain api (67ms)
    ✓ Test basic pull replication plain api 2 (68ms)
    ✓ Test pull replication with many changes (203ms)
    ✓ Test basic pull replication with funny ids (64ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (545ms)
    ✓ Test correct # docs replicated with staggered revs (151ms)
    ✓ Local DB contains documents (85ms)
    ✓ Test basic push replication (87ms)
    ✓ Test basic push replication take 2 (69ms)
    ✓ Test basic push replication sequence tracking (109ms)
    ✓ Test checkpoint (86ms)
    ✓ Test live pull checkpoint (115ms)
    ✓ Test type of progress values (63ms)
    ✓ Test live push checkpoint (97ms)
    ✓ Test checkpoint 2 (105ms)
    ✓ Test checkpoint 3 :) (109ms)
    ✓ Test disable checkpoints on both source and target (63ms)
    ✓ Test write checkpoints on source only (72ms)
    ✓ Test write checkpoints on target only (66ms)
    ✓ Test replication resumes when checkpointing is enabled (106ms)
    ✓ Test replication resumes when checkpointing is disabled (74ms)
    ✓ Test replication resumes when checkpointing on source only (87ms)
    ✓ Test replication resumes when checkpointing on target only (83ms)
    ✓ #3136 open revs returned correctly 1 (218ms)
    ✓ #3136 open revs returned correctly 2 (221ms)
    ✓ #3136 winningRev has a lower seq (164ms)
    ✓ #3136 same changes with style=all_docs (278ms)
    ✓ #3136 style=all_docs with conflicts (150ms)
    ✓ #3136 style=all_docs with conflicts reversed (136ms)
    ✓ Test checkpoint read only 3 :) (98ms)
    ✓ Testing allDocs with some conflicts (issue #468) (120ms)
    ✓ Test basic conflict (67ms)
    ✓ Test _conflicts key (95ms)
    ✓ Test basic live pull replication (87ms)
    ✓ Test basic live push replication (93ms)
    ✓ test-cancel-pull-replication (192ms)
    ✓ Test basic events (71ms)
    ✓ Replication filter (71ms)
    ✓ Replication with different filters (96ms)
    ✓ Replication doc ids (97ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (131ms)
    ✓ Replication with same filters (105ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (98ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (76ms)
    ✓ Replication with deleted doc (71ms)
    ✓ 5904 - replication with deleted doc and value (123ms)
    ✓ Replication notifications (116ms)
    ✓ Replication with remote conflict (142ms)
    ✓ Replicate and modify three times (141ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (59ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (86ms)
    ✓ Replicates deleted docs w/ compaction (111ms)
    ✓ Replicates modified docs (issue #2636) (55ms)
    ✓ Replication of multiple remote conflicts (#789) (67ms)
    ✓ Replicate large number of docs (77ms)
    ✓ Ensure checkpoint after deletion (121ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (80ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (221ms)
    ✓ #3999-1 should not start over if last_seq mismatches (122ms)
    ✓ #3999-2 should start over if no common session is found (103ms)
    ✓ #3999-3 should not start over if common session is found (98ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (167ms)
    ✓ (#1307) - replicate empty database (84ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (115ms)
    ✓ Report write failures if whole saving fails (#942) (100ms)
    ✓ Test consecutive replications with different query_params (89ms)
    ✓ Test consecutive replications with different query_params and promises (88ms)
    ✓ Test consecutive replications with different doc_ids (121ms)
    ✓ #3962 - Test many attachments (149ms)
    ✓ doc count after multiple replications (130ms)
    ✓ issue #300 rev id unique per doc (65ms)
    ✓ issue #585 Store checkpoint on target db. (106ms)
    ✓ should work with a read only source (66ms)
    ✓ issue #2342 update_seq after replication (99ms)
    ✓ should cancel for live replication (557ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (74ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (69ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (115ms)
    ✓ #3606 - live repl with doc_ids (84ms)
    ✓ #3606 - live repl with view (72ms)
    ✓ #3569 - 409 during replication (133ms)
    ✓ #3270 triggers "change" events with .docs property (60ms)
    ✓ #3543 replication with a ddoc filter (68ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (107ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (108ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (52ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (52ms)
    ✓ #4293 Triggers extra replication events (186ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (117ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (130ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (140ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (55ms)
    ✓ Test basic pull replication plain api (61ms)
    ✓ Test basic pull replication plain api 2 (57ms)
    ✓ Test pull replication with many changes (157ms)
    ✓ Test basic pull replication with funny ids (49ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (666ms)
    ✓ Test correct # docs replicated with staggered revs (71ms)
    ✓ Local DB contains documents (48ms)
    ✓ Test basic push replication (50ms)
    ✓ Test basic push replication take 2 (47ms)
    ✓ Test basic push replication sequence tracking (80ms)
    ✓ Test checkpoint (56ms)
    ✓ Test live pull checkpoint (68ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (60ms)
    ✓ Test checkpoint 2 (70ms)
    ✓ Test checkpoint 3 :) (68ms)
    ✓ Test disable checkpoints on both source and target (49ms)
    ✓ Test write checkpoints on source only (56ms)
    ✓ Test write checkpoints on target only (40ms)
    ✓ Test replication resumes when checkpointing is enabled (63ms)
    ✓ Test replication resumes when checkpointing is disabled (50ms)
    ✓ Test replication resumes when checkpointing on source only (64ms)
    ✓ Test replication resumes when checkpointing on target only (62ms)
    ✓ #3136 open revs returned correctly 1 (232ms)
    ✓ #3136 open revs returned correctly 2 (188ms)
    ✓ #3136 winningRev has a lower seq (90ms)
    ✓ #3136 same changes with style=all_docs (91ms)
    ✓ #3136 style=all_docs with conflicts (90ms)
    ✓ #3136 style=all_docs with conflicts reversed (175ms)
    ✓ Test checkpoint read only 3 :) (137ms)
    ✓ Testing allDocs with some conflicts (issue #468) (70ms)
    ✓ Test basic conflict (43ms)
    ✓ Test _conflicts key (73ms)
    ✓ Test basic live pull replication (76ms)
    ✓ Test basic live push replication (58ms)
    ✓ test-cancel-pull-replication (174ms)
    ✓ Test basic events (54ms)
    ✓ Replication filter (55ms)
    ✓ Replication with different filters (66ms)
    ✓ Replication doc ids (50ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (71ms)
    ✓ Replication with same filters (59ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (59ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (61ms)
    ✓ Replication with deleted doc (51ms)
    ✓ 5904 - replication with deleted doc and value (47ms)
    ✓ Replication notifications (47ms)
    ✓ Replication with remote conflict (82ms)
    ✓ Replicate and modify three times (84ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (47ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (63ms)
    ✓ Replicates deleted docs w/ compaction (69ms)
    ✓ Replicates modified docs (issue #2636) (61ms)
    ✓ Replication of multiple remote conflicts (#789) (49ms)
    ✓ Replicate large number of docs (58ms)
    ✓ Ensure checkpoint after deletion (89ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (168ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (101ms)
    ✓ #3999-1 should not start over if last_seq mismatches (76ms)
    ✓ #3999-2 should start over if no common session is found (61ms)
    ✓ #3999-3 should not start over if common session is found (61ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (60ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (63ms)
    ✓ Report write failures if whole saving fails (#942) (70ms)
    ✓ Test consecutive replications with different query_params (67ms)
    ✓ Test consecutive replications with different query_params and promises (60ms)
    ✓ Test consecutive replications with different doc_ids (74ms)
    ✓ #3962 - Test many attachments (59ms)
    ✓ doc count after multiple replications (83ms)
    ✓ issue #300 rev id unique per doc (52ms)
    ✓ issue #585 Store checkpoint on target db. (78ms)
    ✓ should work with a read only source (41ms)
    ✓ issue #2342 update_seq after replication (67ms)
    ✓ should cancel for live replication (583ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (47ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (78ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (61ms)
    ✓ #3606 - live repl with doc_ids (61ms)
    ✓ #3606 - live repl with view (46ms)
    ✓ #3569 - 409 during replication (127ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (49ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (69ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (70ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (39ms)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (159ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (62ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (69ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (70ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (131ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (527ms)
    ✓ Test correct # docs replicated with staggered revs
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint (51ms)
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (97ms)
    ✓ #3136 open revs returned correctly 2 (71ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (42ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (123ms)
    ✓ Test basic events (39ms)
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs
    ✓ Ensure checkpoint after deletion (43ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (41ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (97ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (43ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (524ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (126ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (51ms)
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (74ms)
    ✓ #3852 Test basic starting with docs (87ms)
    ✓ #5710 Test pending property support (69ms)
    ✓ #3852 Test errors (65ms)
    ✓ #4627 Test no duplicate changes in live replication (2053ms)
    ✓ Test checkpoint events (52ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (129ms)
    ✓ #3852 Test basic starting with docs (270ms)
    ✓ #5710 Test pending property support (118ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2089ms)
    ✓ Test checkpoint events (75ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (91ms)
    ✓ #3852 Test basic starting with docs (107ms)
    ✓ #5710 Test pending property support (69ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2069ms)
    ✓ Test checkpoint events (43ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs (50ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2028ms)
    ✓ Test checkpoint events (40ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (72ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (106ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (72ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (48ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (82ms)
    ✓ #3687 active event only fired once... (56ms)
    ✓ source doesn't leak "destroyed" event (174ms)
    ✓ target doesn't leak "destroyed" event (167ms)
    ✓ returnValue doesn't leak "complete" event (183ms)
    ✓ returnValue doesn't leak "error" event (287ms)
    ✓ returnValue doesn't leak "paused" event (189ms)
    ✓ returnValue doesn't leak "active" event (171ms)
    ✓ returnValue doesn't leak "change" event (173ms)
    ✓ returnValue doesn't leak "cancel" event (170ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (184ms)
    ✓ retry many times, no leaks on any events (733ms)
    ✓ 4049 retry while starting offline (41ms)
    ✓ #5157 replicate many docs with live+retry (597ms)
    ✓ 6510 no changes live+retry does not call backoff function (2003ms)

  test.retry.js-http-http
    ✓ retry stuff (168ms)
    ✓ #3687 active event only fired once... (136ms)
    ✓ source doesn't leak "destroyed" event (268ms)
    ✓ target doesn't leak "destroyed" event (281ms)
    ✓ returnValue doesn't leak "complete" event (336ms)
    ✓ returnValue doesn't leak "error" event (263ms)
    ✓ returnValue doesn't leak "paused" event (271ms)
    ✓ returnValue doesn't leak "active" event (274ms)
    ✓ returnValue doesn't leak "change" event (284ms)
    ✓ returnValue doesn't leak "cancel" event (407ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (289ms)
    ✓ retry many times, no leaks on any events (1279ms)
    ✓ 4049 retry while starting offline (53ms)
    ✓ #5157 replicate many docs with live+retry (1262ms)
************* run test done *************
pouchdb is testing ./VariantsDeps/memdown/variant2/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 424ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660234436947


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (180ms)
    ✓ Testing allDocs opts.keys (60ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (46ms)
    ✓ Testing updating in changes (44ms)
    ✓ Testing include docs
    ✓ Testing conflicts (50ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (122ms)
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (57ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (266ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true (47ms)
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs (60ms)
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (190ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (94ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (39ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (38ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (45ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (46ms)
    ✓ Test get() with binary:true and stubs (45ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs (41ms)
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (85ms)
    ✓ Test put attachment on a doc without attachments (60ms)
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (63ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (47ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs (38ms)
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (42ms)
    ✓ Test getAttachment with diff revs and content (41ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (49ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (140ms)
    ✓ #2709 `revpos` with putAttachment (40ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (110ms)
    ✓ Replicate same doc, same atts (114ms)
    ✓ Replicate same doc, same atts 2 (109ms)
    ✓ Attachments replicate (66ms)
    ✓ Attachment types replicate (51ms)
    ✓ Many many attachments replicate (196ms)
    ✓ Many many png attachments replicate (308ms)
    ✓ Multiple attachments replicate (78ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (77ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (77ms)
    ✓ #3932 attachments with tricky revpos (136ms)
    ✓ replication with changing attachments (100ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (118ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (165ms)
    ✓ Replicate same doc, same atts (183ms)
    ✓ Replicate same doc, same atts 2 (174ms)
    ✓ Attachments replicate (84ms)
    ✓ Attachment types replicate (117ms)
    ✓ Many many attachments replicate (430ms)
    ✓ Many many png attachments replicate (294ms)
    ✓ Multiple attachments replicate (122ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (119ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (130ms)
    ✓ #3932 attachments with tricky revpos (241ms)
    ✓ replication with changing attachments (151ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (174ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (110ms)
    ✓ Replicate same doc, same atts (95ms)
    ✓ Replicate same doc, same atts 2 (101ms)
    ✓ Attachments replicate (63ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (273ms)
    ✓ Many many png attachments replicate (153ms)
    ✓ Multiple attachments replicate (83ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (84ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (89ms)
    ✓ #3932 attachments with tricky revpos (148ms)
    ✓ replication with changing attachments (99ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (115ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (43ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos (41ms)
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (46ms)
    ✓ Fail to fetch a doc after db was deleted (53ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (51ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists (38ms)
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (409ms)
    ✓ 2839 implement revs_limit (184ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs (50ms)
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (254ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (43ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (39ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (62ms)
    ✓ Changes with style = all_docs and a callback for complete (61ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (321ms)
    ✓ #3579 changes firing 1 too many times (76ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs (101ms)
    ✓ changes-filter with query params
    ✓ Non-live changes filter (38ms)
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids (50ms)
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (129ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1026ms)
    ✓ supports return_docs=false
    ✓ should respects limit (72ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (230ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (320ms)
    ✓ #3579 changes firing 1 too many times (66ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1020ms)
    ✓ supports return_docs=false
    ✓ should respects limit (65ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (65ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (647ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (114ms)
    ✓ Compact two times more complicated tree (108ms)
    ✓ Compact database with at least two documents (164ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (51ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (38ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (44ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (39ms)
    ✓ #2931 - synchronous putAttachment + compact (1553ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1369ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (406ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (283ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (261ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level (78ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (684ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (625ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (58ms)
    ✓ Indexing event
    ✓ Concurrent queries (43ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (45ms)
    ✓ Indexing event (47ms)
    ✓ Concurrent queries (39ms)

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (66ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (58ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (39ms)
    ✓ Test opts.revs=true return only winning branch (48ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (44ms)
    ✓ #2951 Parallelized gets with 409s/404s (62ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (69ms)
    ✓ Test get with conflicts (42ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (40ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs() (38ms)
    ✓ 4358 db.info rejects when server is down (173ms)
    ✓ 4358 db.destroy rejects when server is down (297ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (502ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (501ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (76ms)
    ✓ Testing issue #221 again (74ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (84ms)
    ✓ Testing issue #221 again (134ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (84ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (41ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (210ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (227ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (381ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (250ms)
    ✓ #3179 conflicts synced, non-live sync (227ms)
    ✓ #3179 conflicts synced, live sync (307ms)
    ✓ #3179 conflicts synced, live repl (345ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (206ms)
    ✓ #3179 conflicts synced, non-live sync (145ms)
    ✓ #3179 conflicts synced, live sync (164ms)
    ✓ #3179 conflicts synced, live repl (167ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (144ms)
    ✓ #3179 conflicts synced, non-live sync (133ms)
    ✓ #3179 conflicts synced, live sync (174ms)
    ✓ #3179 conflicts synced, live repl (149ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (50ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl (38ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (47ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix (41ms)
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (57ms)
    ✓ Test basic pull replication plain api 2 (69ms)
    ✓ Test pull replication with many changes (154ms)
    ✓ Test basic pull replication with funny ids (44ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (556ms)
    ✓ Test correct # docs replicated with staggered revs (84ms)
    ✓ Local DB contains documents (48ms)
    ✓ Test basic push replication (43ms)
    ✓ Test basic push replication take 2 (58ms)
    ✓ Test basic push replication sequence tracking (66ms)
    ✓ Test checkpoint (61ms)
    ✓ Test live pull checkpoint (67ms)
    ✓ Test type of progress values (48ms)
    ✓ Test live push checkpoint (72ms)
    ✓ Test checkpoint 2 (73ms)
    ✓ Test checkpoint 3 :) (58ms)
    ✓ Test disable checkpoints on both source and target (43ms)
    ✓ Test write checkpoints on source only (48ms)
    ✓ Test write checkpoints on target only (50ms)
    ✓ Test replication resumes when checkpointing is enabled (57ms)
    ✓ Test replication resumes when checkpointing is disabled (50ms)
    ✓ Test replication resumes when checkpointing on source only (44ms)
    ✓ Test replication resumes when checkpointing on target only (85ms)
    ✓ #3136 open revs returned correctly 1 (169ms)
    ✓ #3136 open revs returned correctly 2 (121ms)
    ✓ #3136 winningRev has a lower seq (93ms)
    ✓ #3136 same changes with style=all_docs (114ms)
    ✓ #3136 style=all_docs with conflicts (89ms)
    ✓ #3136 style=all_docs with conflicts reversed (98ms)
    ✓ Test checkpoint read only 3 :) (62ms)
    ✓ Testing allDocs with some conflicts (issue #468) (77ms)
    ✓ Test basic conflict (57ms)
    ✓ Test _conflicts key (60ms)
    ✓ Test basic live pull replication (57ms)
    ✓ Test basic live push replication (61ms)
    ✓ test-cancel-pull-replication (170ms)
    ✓ Test basic events (49ms)
    ✓ Replication filter (45ms)
    ✓ Replication with different filters (65ms)
    ✓ Replication doc ids (53ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (79ms)
    ✓ Replication with same filters (63ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (52ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (54ms)
    ✓ Replication with deleted doc (57ms)
    ✓ 5904 - replication with deleted doc and value (47ms)
    ✓ Replication notifications (42ms)
    ✓ Replication with remote conflict (92ms)
    ✓ Replicate and modify three times (85ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (64ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (107ms)
    ✓ Replicates deleted docs w/ compaction (66ms)
    ✓ Replicates modified docs (issue #2636) (41ms)
    ✓ Replication of multiple remote conflicts (#789) (50ms)
    ✓ Replicate large number of docs (50ms)
    ✓ Ensure checkpoint after deletion (78ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (167ms)
    ✓ #909 Filtered replication bails at paging limit (54ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (94ms)
    ✓ #3999-1 should not start over if last_seq mismatches (105ms)
    ✓ #3999-2 should start over if no common session is found (89ms)
    ✓ #3999-3 should not start over if common session is found (73ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (80ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (68ms)
    ✓ Report write failures if whole saving fails (#942) (60ms)
    ✓ Test consecutive replications with different query_params (69ms)
    ✓ Test consecutive replications with different query_params and promises (94ms)
    ✓ Test consecutive replications with different doc_ids (85ms)
    ✓ #3962 - Test many attachments (160ms)
    ✓ doc count after multiple replications (119ms)
    ✓ issue #300 rev id unique per doc (48ms)
    ✓ issue #585 Store checkpoint on target db. (85ms)
    ✓ should work with a read only source (101ms)
    ✓ issue #2342 update_seq after replication (100ms)
    ✓ should cancel for live replication (554ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (45ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (38ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (40ms)
    ✓ #3606 - live repl with doc_ids (43ms)
    ✓ #3606 - live repl with view (45ms)
    ✓ #3569 - 409 during replication (83ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (43ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (72ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (78ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (39ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (43ms)
    ✓ #4293 Triggers extra replication events (152ms)
    ✓ Heartbeat gets passed (42ms)
    ✓ Timeout gets passed (49ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (92ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (107ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (196ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (92ms)
    ✓ Test basic pull replication plain api (69ms)
    ✓ Test basic pull replication plain api 2 (66ms)
    ✓ Test pull replication with many changes (198ms)
    ✓ Test basic pull replication with funny ids (67ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (571ms)
    ✓ Test correct # docs replicated with staggered revs (111ms)
    ✓ Local DB contains documents (72ms)
    ✓ Test basic push replication (65ms)
    ✓ Test basic push replication take 2 (68ms)
    ✓ Test basic push replication sequence tracking (107ms)
    ✓ Test checkpoint (89ms)
    ✓ Test live pull checkpoint (118ms)
    ✓ Test type of progress values (63ms)
    ✓ Test live push checkpoint (102ms)
    ✓ Test checkpoint 2 (100ms)
    ✓ Test checkpoint 3 :) (165ms)
    ✓ Test disable checkpoints on both source and target (104ms)
    ✓ Test write checkpoints on source only (83ms)
    ✓ Test write checkpoints on target only (62ms)
    ✓ Test replication resumes when checkpointing is enabled (97ms)
    ✓ Test replication resumes when checkpointing is disabled (80ms)
    ✓ Test replication resumes when checkpointing on source only (82ms)
    ✓ Test replication resumes when checkpointing on target only (85ms)
    ✓ #3136 open revs returned correctly 1 (235ms)
    ✓ #3136 open revs returned correctly 2 (224ms)
    ✓ #3136 winningRev has a lower seq (151ms)
    ✓ #3136 same changes with style=all_docs (137ms)
    ✓ #3136 style=all_docs with conflicts (164ms)
    ✓ #3136 style=all_docs with conflicts reversed (152ms)
    ✓ Test checkpoint read only 3 :) (93ms)
    ✓ Testing allDocs with some conflicts (issue #468) (130ms)
    ✓ Test basic conflict (75ms)
    ✓ Test _conflicts key (108ms)
    ✓ Test basic live pull replication (151ms)
    ✓ Test basic live push replication (157ms)
    ✓ test-cancel-pull-replication (202ms)
    ✓ Test basic events (73ms)
    ✓ Replication filter (74ms)
    ✓ Replication with different filters (97ms)
    ✓ Replication doc ids (69ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (121ms)
    ✓ Replication with same filters (96ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (105ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (81ms)
    ✓ Replication with deleted doc (73ms)
    ✓ 5904 - replication with deleted doc and value (71ms)
    ✓ Replication notifications (60ms)
    ✓ Replication with remote conflict (145ms)
    ✓ Replicate and modify three times (147ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (61ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (85ms)
    ✓ Replicates deleted docs w/ compaction (115ms)
    ✓ Replicates modified docs (issue #2636) (56ms)
    ✓ Replication of multiple remote conflicts (#789) (68ms)
    ✓ Replicate large number of docs (185ms)
    ✓ Ensure checkpoint after deletion (164ms)
    ✓ issue #1001 cb as 3rd argument (169ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (73ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (162ms)
    ✓ #3999-1 should not start over if last_seq mismatches (130ms)
    ✓ #3999-2 should start over if no common session is found (114ms)
    ✓ #3999-3 should not start over if common session is found (107ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (105ms)
    ✓ (#1307) - replicate empty database (44ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (105ms)
    ✓ Report write failures if whole saving fails (#942) (108ms)
    ✓ Test consecutive replications with different query_params (101ms)
    ✓ Test consecutive replications with different query_params and promises (99ms)
    ✓ Test consecutive replications with different doc_ids (120ms)
    ✓ #3962 - Test many attachments (167ms)
    ✓ doc count after multiple replications (270ms)
    ✓ issue #300 rev id unique per doc (118ms)
    ✓ issue #585 Store checkpoint on target db. (109ms)
    ✓ should work with a read only source (63ms)
    ✓ issue #2342 update_seq after replication (86ms)
    ✓ should cancel for live replication (554ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (76ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (85ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (80ms)
    ✓ #3606 - live repl with doc_ids (75ms)
    ✓ #3606 - live repl with view (78ms)
    ✓ #3569 - 409 during replication (152ms)
    ✓ #3270 triggers "change" events with .docs property (80ms)
    ✓ #3543 replication with a ddoc filter (73ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (121ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (196ms)
    ✓ #2454 info() call breaks taskqueue (48ms)
    ✓ #4094 can't fetch server uuid (HTTP error) (72ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (61ms)
    ✓ #4293 Triggers extra replication events (184ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (132ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (144ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (162ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (53ms)
    ✓ Test basic pull replication plain api (57ms)
    ✓ Test basic pull replication plain api 2 (51ms)
    ✓ Test pull replication with many changes (172ms)
    ✓ Test basic pull replication with funny ids (57ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (524ms)
    ✓ Test correct # docs replicated with staggered revs (76ms)
    ✓ Local DB contains documents (60ms)
    ✓ Test basic push replication (78ms)
    ✓ Test basic push replication take 2 (88ms)
    ✓ Test basic push replication sequence tracking (134ms)
    ✓ Test checkpoint (59ms)
    ✓ Test live pull checkpoint (67ms)
    ✓ Test type of progress values (48ms)
    ✓ Test live push checkpoint (66ms)
    ✓ Test checkpoint 2 (62ms)
    ✓ Test checkpoint 3 :) (75ms)
    ✓ Test disable checkpoints on both source and target (43ms)
    ✓ Test write checkpoints on source only (56ms)
    ✓ Test write checkpoints on target only (46ms)
    ✓ Test replication resumes when checkpointing is enabled (64ms)
    ✓ Test replication resumes when checkpointing is disabled (47ms)
    ✓ Test replication resumes when checkpointing on source only (66ms)
    ✓ Test replication resumes when checkpointing on target only (53ms)
    ✓ #3136 open revs returned correctly 1 (220ms)
    ✓ #3136 open revs returned correctly 2 (189ms)
    ✓ #3136 winningRev has a lower seq (94ms)
    ✓ #3136 same changes with style=all_docs (94ms)
    ✓ #3136 style=all_docs with conflicts (93ms)
    ✓ #3136 style=all_docs with conflicts reversed (91ms)
    ✓ Test checkpoint read only 3 :) (61ms)
    ✓ Testing allDocs with some conflicts (issue #468) (73ms)
    ✓ Test basic conflict (43ms)
    ✓ Test _conflicts key (74ms)
    ✓ Test basic live pull replication (84ms)
    ✓ Test basic live push replication (61ms)
    ✓ test-cancel-pull-replication (226ms)
    ✓ Test basic events (55ms)
    ✓ Replication filter (63ms)
    ✓ Replication with different filters (66ms)
    ✓ Replication doc ids (52ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (78ms)
    ✓ Replication with same filters (62ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (63ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (57ms)
    ✓ Replication with deleted doc (62ms)
    ✓ 5904 - replication with deleted doc and value (50ms)
    ✓ Replication notifications (48ms)
    ✓ Replication with remote conflict (86ms)
    ✓ Replicate and modify three times (87ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (50ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (64ms)
    ✓ Replicates deleted docs w/ compaction (83ms)
    ✓ Replicates modified docs (issue #2636) (59ms)
    ✓ Replication of multiple remote conflicts (#789) (71ms)
    ✓ Replicate large number of docs (77ms)
    ✓ Ensure checkpoint after deletion (90ms)
    ✓ issue #1001 cb as 3rd argument (168ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (62ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (108ms)
    ✓ #3999-1 should not start over if last_seq mismatches (146ms)
    ✓ #3999-2 should start over if no common session is found (80ms)
    ✓ #3999-3 should not start over if common session is found (70ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (64ms)
    ✓ (#1307) - replicate empty database (38ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (65ms)
    ✓ Report write failures if whole saving fails (#942) (72ms)
    ✓ Test consecutive replications with different query_params (62ms)
    ✓ Test consecutive replications with different query_params and promises (62ms)
    ✓ Test consecutive replications with different doc_ids (73ms)
    ✓ #3962 - Test many attachments (64ms)
    ✓ doc count after multiple replications (97ms)
    ✓ issue #300 rev id unique per doc (54ms)
    ✓ issue #585 Store checkpoint on target db. (84ms)
    ✓ should work with a read only source (46ms)
    ✓ issue #2342 update_seq after replication (60ms)
    ✓ should cancel for live replication (543ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (56ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (51ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (50ms)
    ✓ #3606 - live repl with doc_ids (47ms)
    ✓ #3606 - live repl with view (51ms)
    ✓ #3569 - 409 during replication (280ms)
    ✓ #3270 triggers "change" events with .docs property (59ms)
    ✓ #3543 replication with a ddoc filter (49ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (69ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (79ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (42ms)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (167ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (69ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (88ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (81ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api (40ms)
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (130ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (558ms)
    ✓ Test correct # docs replicated with staggered revs
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (66ms)
    ✓ Test checkpoint 3 :) (54ms)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (62ms)
    ✓ #3136 open revs returned correctly 2 (59ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (42ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (124ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times (38ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (45ms)
    ✓ Ensure checkpoint after deletion
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (43ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches (38ms)
    ✓ #3999-2 should start over if no common session is found (39ms)
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments (62ms)
    ✓ doc count after multiple replications (61ms)
    ✓ issue #300 rev id unique per doc (48ms)
    ✓ issue #585 Store checkpoint on target db. (44ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (523ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (133ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication (44ms)
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (72ms)
    ✓ #3852 Test basic starting with docs (84ms)
    ✓ #5710 Test pending property support (81ms)
    ✓ #3852 Test errors (63ms)
    ✓ #4627 Test no duplicate changes in live replication (2054ms)
    ✓ Test checkpoint events (60ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (128ms)
    ✓ #3852 Test basic starting with docs (288ms)
    ✓ #5710 Test pending property support (99ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2091ms)
    ✓ Test checkpoint events (69ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (83ms)
    ✓ #3852 Test basic starting with docs (102ms)
    ✓ #5710 Test pending property support (67ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2076ms)
    ✓ Test checkpoint events (46ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs (39ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2032ms)
    ✓ Test checkpoint events (42ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (75ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (107ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (80ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (46ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (93ms)
    ✓ #3687 active event only fired once... (65ms)
    ✓ source doesn't leak "destroyed" event (177ms)
    ✓ target doesn't leak "destroyed" event (183ms)
    ✓ returnValue doesn't leak "complete" event (290ms)
    ✓ returnValue doesn't leak "error" event (202ms)
    ✓ returnValue doesn't leak "paused" event (182ms)
    ✓ returnValue doesn't leak "active" event (177ms)
    ✓ returnValue doesn't leak "change" event (181ms)
    ✓ returnValue doesn't leak "cancel" event (178ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (185ms)
    ✓ retry many times, no leaks on any events (757ms)
    ✓ 4049 retry while starting offline
    ✓ #5157 replicate many docs with live+retry (578ms)
    ✓ 6510 no changes live+retry does not call backoff function (2003ms)

  test.retry.js-http-http
    ✓ retry stuff (151ms)
    ✓ #3687 active event only fired once... (75ms)
    ✓ source doesn't leak "destroyed" event (285ms)
    ✓ target doesn't leak "destroyed" event (292ms)
    ✓ returnValue doesn't leak "complete" event (289ms)
    ✓ returnValue doesn't leak "error" event (277ms)
    ✓ returnValue doesn't leak "paused" event (296ms)
    ✓ returnValue doesn't leak "active" event (271ms)
    ✓ returnValue doesn't leak "change" event (432ms)
    ✓ returnValue doesn't leak "cancel" event (277ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (271ms)
************* run test done *************
pouchdb is testing ./VariantsDeps/memdown/variant1/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 418ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660234567208


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (149ms)
    ✓ Testing allDocs opts.keys (72ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (50ms)
    ✓ Testing updating in changes (45ms)
    ✓ Testing include docs (38ms)
    ✓ Testing conflicts (53ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (146ms)
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (52ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (246ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts (49ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (203ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (187ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (38ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments (49ms)
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (45ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions (38ms)
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (43ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (51ms)
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior (38ms)
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback (41ms)
    ✓ Test create attachment without callback (44ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name (67ms)
    ✓ 3963 length property on stubs (104ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (40ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (40ms)
    ✓ Test getAttachment with diff revs and content (38ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (51ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction) (41ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (135ms)
    ✓ #2709 `revpos` with putAttachment (40ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (117ms)
    ✓ Replicate same doc, same atts (114ms)
    ✓ Replicate same doc, same atts 2 (137ms)
    ✓ Attachments replicate (68ms)
    ✓ Attachment types replicate (59ms)
    ✓ Many many attachments replicate (192ms)
    ✓ Many many png attachments replicate (317ms)
    ✓ Multiple attachments replicate (86ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (87ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (70ms)
    ✓ #3932 attachments with tricky revpos (144ms)
    ✓ replication with changing attachments (98ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (118ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (160ms)
    ✓ Replicate same doc, same atts (177ms)
    ✓ Replicate same doc, same atts 2 (174ms)
    ✓ Attachments replicate (77ms)
    ✓ Attachment types replicate (95ms)
    ✓ Many many attachments replicate (425ms)
    ✓ Many many png attachments replicate (310ms)
    ✓ Multiple attachments replicate (124ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (119ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (130ms)
    ✓ #3932 attachments with tricky revpos (231ms)
    ✓ replication with changing attachments (151ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (174ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (107ms)
    ✓ Replicate same doc, same atts (98ms)
    ✓ Replicate same doc, same atts 2 (102ms)
    ✓ Attachments replicate (57ms)
    ✓ Attachment types replicate (60ms)
    ✓ Many many attachments replicate (293ms)
    ✓ Many many png attachments replicate (204ms)
    ✓ Multiple attachments replicate (88ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (76ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (90ms)
    ✓ #3932 attachments with tricky revpos (146ms)
    ✓ replication with changing attachments (94ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (111ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate (38ms)
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (55ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (50ms)
    ✓ Fail to fetch a doc after db was deleted (51ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (41ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (51ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs (38ms)
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (279ms)
    ✓ 2839 implement revs_limit (181ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number (39ms)
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (38ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (276ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified (40ms)
    ✓ _revisions is not returned by default (49ms)
    ✓ #5886 bulkGet with reserved id (40ms)
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (72ms)
    ✓ Changes with style = all_docs and a callback for complete (60ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers (55ms)
    ✓ Continuous changes doc
    ✓ Cancel changes (322ms)
    ✓ #3579 changes firing 1 too many times (74ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (130ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1024ms)
    ✓ supports return_docs=false
    ✓ should respects limit (78ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (196ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (316ms)
    ✓ #3579 changes firing 1 too many times (69ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (66ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (106ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (616ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (108ms)
    ✓ Compact two times more complicated tree (101ms)
    ✓ Compact database with at least two documents (166ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (48ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (41ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (161ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (38ms)
    ✓ #2931 - synchronous putAttachment + compact (1441ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1399ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (253ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (315ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (250ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (701ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (719ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (64ms)
    ✓ Indexing event
    ✓ Concurrent queries (40ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (41ms)
    ✓ Indexing event (59ms)
    ✓ Concurrent queries (55ms)

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different (40ms)
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (73ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (70ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc (57ms)
    ✓ Get design doc (43ms)
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (51ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (45ms)
    ✓ Test opts.revs=true return only winning branch (53ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (44ms)
    ✓ #2951 Parallelized gets with 409s/404s (69ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (61ms)
    ✓ Test get with conflicts (40ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (38ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests (49ms)
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (171ms)
    ✓ 4358 db.destroy rejects when server is down (220ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (500ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (67ms)
    ✓ Testing issue #221 again (160ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (100ms)
    ✓ Testing issue #221 again (112ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (54ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (49ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (223ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (222ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (387ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (252ms)
    ✓ #3179 conflicts synced, non-live sync (226ms)
    ✓ #3179 conflicts synced, live sync (284ms)
    ✓ #3179 conflicts synced, live repl (358ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (138ms)
    ✓ #3179 conflicts synced, non-live sync (136ms)
    ✓ #3179 conflicts synced, live sync (157ms)
    ✓ #3179 conflicts synced, live repl (168ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (146ms)
    ✓ #3179 conflicts synced, non-live sync (145ms)
    ✓ #3179 conflicts synced, live sync (155ms)
    ✓ #3179 conflicts synced, live repl (132ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (46ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl (38ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents (39ms)

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (46ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (57ms)
    ✓ Test basic pull replication plain api (58ms)
    ✓ Test basic pull replication plain api 2 (48ms)
    ✓ Test pull replication with many changes (178ms)
    ✓ Test basic pull replication with funny ids (46ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (550ms)
    ✓ Test correct # docs replicated with staggered revs (81ms)
    ✓ Local DB contains documents (51ms)
    ✓ Test basic push replication (46ms)
    ✓ Test basic push replication take 2 (50ms)
    ✓ Test basic push replication sequence tracking (82ms)
    ✓ Test checkpoint (79ms)
    ✓ Test live pull checkpoint (70ms)
    ✓ Test type of progress values (50ms)
    ✓ Test live push checkpoint (61ms)
    ✓ Test checkpoint 2 (84ms)
    ✓ Test checkpoint 3 :) (64ms)
    ✓ Test disable checkpoints on both source and target (51ms)
    ✓ Test write checkpoints on source only (55ms)
    ✓ Test write checkpoints on target only (72ms)
    ✓ Test replication resumes when checkpointing is enabled (76ms)
    ✓ Test replication resumes when checkpointing is disabled (50ms)
    ✓ Test replication resumes when checkpointing on source only (60ms)
    ✓ Test replication resumes when checkpointing on target only (65ms)
    ✓ #3136 open revs returned correctly 1 (107ms)
    ✓ #3136 open revs returned correctly 2 (128ms)
    ✓ #3136 winningRev has a lower seq (92ms)
    ✓ #3136 same changes with style=all_docs (102ms)
    ✓ #3136 style=all_docs with conflicts (96ms)
    ✓ #3136 style=all_docs with conflicts reversed (91ms)
    ✓ Test checkpoint read only 3 :) (66ms)
    ✓ Testing allDocs with some conflicts (issue #468) (101ms)
    ✓ Test basic conflict (58ms)
    ✓ Test _conflicts key (68ms)
    ✓ Test basic live pull replication (62ms)
    ✓ Test basic live push replication (62ms)
    ✓ test-cancel-pull-replication (170ms)
    ✓ Test basic events (52ms)
    ✓ Replication filter (47ms)
    ✓ Replication with different filters (69ms)
    ✓ Replication doc ids (45ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (83ms)
    ✓ Replication with same filters (61ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (55ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (55ms)
    ✓ Replication with deleted doc (74ms)
    ✓ 5904 - replication with deleted doc and value (83ms)
    ✓ Replication notifications (63ms)
    ✓ Replication with remote conflict (96ms)
    ✓ Replicate and modify three times (84ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (38ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (53ms)
    ✓ Replicates deleted docs w/ compaction (71ms)
    ✓ Replicates modified docs (issue #2636) (42ms)
    ✓ Replication of multiple remote conflicts (#789) (50ms)
    ✓ Replicate large number of docs (57ms)
    ✓ Ensure checkpoint after deletion (79ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (64ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (90ms)
    ✓ #3999-1 should not start over if last_seq mismatches (90ms)
    ✓ #3999-2 should start over if no common session is found (89ms)
    ✓ #3999-3 should not start over if common session is found (75ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (84ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (71ms)
    ✓ Report write failures if whole saving fails (#942) (66ms)
    ✓ Test consecutive replications with different query_params (70ms)
    ✓ Test consecutive replications with different query_params and promises (69ms)
    ✓ Test consecutive replications with different doc_ids (89ms)
    ✓ #3962 - Test many attachments (315ms)
    ✓ doc count after multiple replications (127ms)
    ✓ issue #300 rev id unique per doc (45ms)
    ✓ issue #585 Store checkpoint on target db. (93ms)
    ✓ should work with a read only source (66ms)
    ✓ issue #2342 update_seq after replication (70ms)
    ✓ should cancel for live replication (550ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (48ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (47ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (52ms)
    ✓ #3606 - live repl with doc_ids (44ms)
    ✓ #3606 - live repl with view (39ms)
    ✓ #3569 - 409 during replication (94ms)
    ✓ #3270 triggers "change" events with .docs property (54ms)
    ✓ #3543 replication with a ddoc filter (85ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (78ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (73ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (50ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (43ms)
    ✓ #4293 Triggers extra replication events (143ms)
    ✓ Heartbeat gets passed (59ms)
    ✓ Timeout gets passed (68ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (90ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (102ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (96ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (70ms)
    ✓ Test basic pull replication plain api (75ms)
    ✓ Test basic pull replication plain api 2 (71ms)
    ✓ Test pull replication with many changes (194ms)
    ✓ Test basic pull replication with funny ids (69ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (619ms)
    ✓ Test correct # docs replicated with staggered revs (110ms)
    ✓ Local DB contains documents (69ms)
    ✓ Test basic push replication (64ms)
    ✓ Test basic push replication take 2 (73ms)
    ✓ Test basic push replication sequence tracking (113ms)
    ✓ Test checkpoint (116ms)
    ✓ Test live pull checkpoint (133ms)
    ✓ Test type of progress values (68ms)
    ✓ Test live push checkpoint (96ms)
    ✓ Test checkpoint 2 (106ms)
    ✓ Test checkpoint 3 :) (113ms)
    ✓ Test disable checkpoints on both source and target (64ms)
    ✓ Test write checkpoints on source only (70ms)
    ✓ Test write checkpoints on target only (66ms)
    ✓ Test replication resumes when checkpointing is enabled (107ms)
    ✓ Test replication resumes when checkpointing is disabled (77ms)
    ✓ Test replication resumes when checkpointing on source only (84ms)
    ✓ Test replication resumes when checkpointing on target only (87ms)
    ✓ #3136 open revs returned correctly 1 (297ms)
    ✓ #3136 open revs returned correctly 2 (218ms)
    ✓ #3136 winningRev has a lower seq (143ms)
    ✓ #3136 same changes with style=all_docs (139ms)
    ✓ #3136 style=all_docs with conflicts (144ms)
    ✓ #3136 style=all_docs with conflicts reversed (155ms)
    ✓ Test checkpoint read only 3 :) (185ms)
    ✓ Testing allDocs with some conflicts (issue #468) (119ms)
    ✓ Test basic conflict (78ms)
    ✓ Test _conflicts key (88ms)
    ✓ Test basic live pull replication (101ms)
    ✓ Test basic live push replication (90ms)
    ✓ test-cancel-pull-replication (201ms)
    ✓ Test basic events (74ms)
    ✓ Replication filter (72ms)
    ✓ Replication with different filters (110ms)
    ✓ Replication doc ids (71ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (117ms)
    ✓ Replication with same filters (111ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (100ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (79ms)
    ✓ Replication with deleted doc (72ms)
    ✓ 5904 - replication with deleted doc and value (72ms)
    ✓ Replication notifications (67ms)
    ✓ Replication with remote conflict (154ms)
    ✓ Replicate and modify three times (166ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (77ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (112ms)
    ✓ Replicates deleted docs w/ compaction (114ms)
    ✓ Replicates modified docs (issue #2636) (70ms)
    ✓ Replication of multiple remote conflicts (#789) (79ms)
    ✓ Replicate large number of docs (87ms)
    ✓ Ensure checkpoint after deletion (116ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (74ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (161ms)
    ✓ #3999-1 should not start over if last_seq mismatches (123ms)
    ✓ #3999-2 should start over if no common session is found (111ms)
    ✓ #3999-3 should not start over if common session is found (106ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (103ms)
    ✓ (#1307) - replicate empty database (45ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (98ms)
    ✓ Report write failures if whole saving fails (#942) (110ms)
    ✓ Test consecutive replications with different query_params (95ms)
    ✓ Test consecutive replications with different query_params and promises (138ms)
    ✓ Test consecutive replications with different doc_ids (177ms)
    ✓ #3962 - Test many attachments (160ms)
    ✓ doc count after multiple replications (130ms)
    ✓ issue #300 rev id unique per doc (68ms)
    ✓ issue #585 Store checkpoint on target db. (114ms)
    ✓ should work with a read only source (65ms)
    ✓ issue #2342 update_seq after replication (96ms)
    ✓ should cancel for live replication (555ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (68ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (66ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (67ms)
    ✓ #3606 - live repl with doc_ids (69ms)
    ✓ #3606 - live repl with view (71ms)
    ✓ #3569 - 409 during replication (141ms)
    ✓ #3270 triggers "change" events with .docs property (70ms)
    ✓ #3543 replication with a ddoc filter (102ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (171ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (104ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (57ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (51ms)
    ✓ #4293 Triggers extra replication events (181ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (126ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (138ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (138ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (48ms)
    ✓ Test basic pull replication plain api (55ms)
    ✓ Test basic pull replication plain api 2 (65ms)
    ✓ Test pull replication with many changes (176ms)
    ✓ Test basic pull replication with funny ids (50ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (525ms)
    ✓ Test correct # docs replicated with staggered revs (88ms)
    ✓ Local DB contains documents (70ms)
    ✓ Test basic push replication (72ms)
    ✓ Test basic push replication take 2 (51ms)
    ✓ Test basic push replication sequence tracking (81ms)
    ✓ Test checkpoint (56ms)
    ✓ Test live pull checkpoint (64ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (63ms)
    ✓ Test checkpoint 2 (65ms)
    ✓ Test checkpoint 3 :) (72ms)
    ✓ Test disable checkpoints on both source and target (41ms)
    ✓ Test write checkpoints on source only (47ms)
    ✓ Test write checkpoints on target only (40ms)
    ✓ Test replication resumes when checkpointing is enabled (64ms)
    ✓ Test replication resumes when checkpointing is disabled (53ms)
    ✓ Test replication resumes when checkpointing on source only (64ms)
    ✓ Test replication resumes when checkpointing on target only (55ms)
    ✓ #3136 open revs returned correctly 1 (209ms)
    ✓ #3136 open revs returned correctly 2 (183ms)
    ✓ #3136 winningRev has a lower seq (122ms)
    ✓ #3136 same changes with style=all_docs (94ms)
    ✓ #3136 style=all_docs with conflicts (88ms)
    ✓ #3136 style=all_docs with conflicts reversed (90ms)
    ✓ Test checkpoint read only 3 :) (61ms)
    ✓ Testing allDocs with some conflicts (issue #468) (73ms)
    ✓ Test basic conflict (52ms)
    ✓ Test _conflicts key (70ms)
    ✓ Test basic live pull replication (74ms)
    ✓ Test basic live push replication (117ms)
    ✓ test-cancel-pull-replication (188ms)
    ✓ Test basic events (56ms)
    ✓ Replication filter (58ms)
    ✓ Replication with different filters (60ms)
    ✓ Replication doc ids (51ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (73ms)
    ✓ Replication with same filters (67ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (65ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (55ms)
    ✓ Replication with deleted doc (55ms)
    ✓ 5904 - replication with deleted doc and value (44ms)
    ✓ Replication notifications (44ms)
    ✓ Replication with remote conflict (82ms)
    ✓ Replicate and modify three times (79ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (41ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (59ms)
    ✓ Replicates deleted docs w/ compaction (71ms)
    ✓ Replicates modified docs (issue #2636) (49ms)
    ✓ Replication of multiple remote conflicts (#789) (57ms)
    ✓ Replicate large number of docs (65ms)
    ✓ Ensure checkpoint after deletion (87ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (69ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (117ms)
    ✓ #3999-1 should not start over if last_seq mismatches (117ms)
    ✓ #3999-2 should start over if no common session is found (87ms)
    ✓ #3999-3 should not start over if common session is found (64ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (62ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (69ms)
    ✓ Report write failures if whole saving fails (#942) (69ms)
    ✓ Test consecutive replications with different query_params (59ms)
    ✓ Test consecutive replications with different query_params and promises (64ms)
    ✓ Test consecutive replications with different doc_ids (75ms)
    ✓ #3962 - Test many attachments (59ms)
    ✓ doc count after multiple replications (91ms)
    ✓ issue #300 rev id unique per doc (51ms)
    ✓ issue #585 Store checkpoint on target db. (79ms)
    ✓ should work with a read only source (41ms)
    ✓ issue #2342 update_seq after replication (65ms)
    ✓ should cancel for live replication (538ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (50ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (50ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (50ms)
    ✓ #3606 - live repl with doc_ids (45ms)
    ✓ #3606 - live repl with view (53ms)
    ✓ #3569 - 409 during replication (140ms)
    ✓ #3270 triggers "change" events with .docs property (59ms)
    ✓ #3543 replication with a ddoc filter (59ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (80ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (63ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON) (39ms)
    ✓ #4293 Triggers extra replication events (151ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (64ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (69ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (81ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (133ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (554ms)
    ✓ Test correct # docs replicated with staggered revs (40ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (148ms)
    ✓ #3136 open revs returned correctly 2 (82ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (42ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (124ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (42ms)
    ✓ Ensure checkpoint after deletion (50ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (163ms)
    ✓ #909 Filtered replication bails at paging limit (41ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found (41ms)
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (58ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db.
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (521ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (127ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (72ms)
    ✓ #3852 Test basic starting with docs (90ms)
    ✓ #5710 Test pending property support (68ms)
    ✓ #3852 Test errors (76ms)
    ✓ #4627 Test no duplicate changes in live replication (2058ms)
    ✓ Test checkpoint events (52ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (126ms)
    ✓ #3852 Test basic starting with docs (144ms)
    ✓ #5710 Test pending property support (99ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2168ms)
    ✓ Test checkpoint events (73ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (112ms)
    ✓ #3852 Test basic starting with docs (99ms)
    ✓ #5710 Test pending property support (67ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2070ms)
    ✓ Test checkpoint events (60ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2030ms)
    ✓ Test checkpoint events (38ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (75ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (105ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (82ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (44ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (83ms)
    ✓ #3687 active event only fired once... (67ms)
    ✓ source doesn't leak "destroyed" event (174ms)
    ✓ target doesn't leak "destroyed" event (189ms)
    ✓ returnValue doesn't leak "complete" event (175ms)
    ✓ returnValue doesn't leak "error" event (176ms)
    ✓ returnValue doesn't leak "paused" event (226ms)
    ✓ returnValue doesn't leak "active" event (255ms)
    ✓ returnValue doesn't leak "change" event (179ms)
    ✓ returnValue doesn't leak "cancel" event (172ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (182ms)
    ✓ retry many times, no leaks on any events (725ms)
    ✓ 4049 retry while starting offline (42ms)
    ✓ #5157 replicate many docs with live+retry (470ms)
    ✓ 6510 no changes live+retry does not call backoff function (2002ms)

  test.retry.js-http-http
    ✓ retry stuff (113ms)
    ✓ #3687 active event only fired once... (74ms)
    ✓ source doesn't leak "destroyed" event (422ms)
    ✓ target doesn't leak "destroyed" event (278ms)
    ✓ returnValue doesn't leak "complete" event (295ms)
    ✓ returnValue doesn't leak "error" event (289ms)
    ✓ returnValue doesn't leak "paused" event (268ms)
    ✓ returnValue doesn't leak "active" event (301ms)
    ✓ returnValue doesn't leak "change" event (287ms)
    ✓ returnValue doesn't leak "cancel" event (262ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (423ms)
    ✓ retry many times, no leaks on any events (1201ms)
    ✓ 4049 retry while starting offline (71ms)
************* run test done *************
