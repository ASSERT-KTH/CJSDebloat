/data/js-variants/multee
4
pouchdb is testing ./Variants/memdown/variant4/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 8s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660235465737


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (147ms)
    ✓ Testing allDocs opts.keys (63ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (51ms)
    ✓ Testing updating in changes (43ms)
    ✓ Testing include docs (38ms)
    ✓ Testing conflicts (52ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (141ms)
    ✓ test total_rows with both skip and limit (41ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (57ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (250ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (187ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (93ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (56ms)
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (42ms)
    ✓ #3074 live changes() (40ms)
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (45ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (62ms)
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback (71ms)
    ✓ Test create attachment without callback (46ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (48ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (45ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (43ms)
    ✓ Test getAttachment with diff revs and content (42ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (48ms)
    ✓ #2818 - save same attachment many times in parallel (38ms)
    ✓ #2818 - revisions keep attachments (no compaction) (40ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (130ms)
    ✓ #2709 `revpos` with putAttachment (43ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (119ms)
    ✓ Replicate same doc, same atts (112ms)
    ✓ Replicate same doc, same atts 2 (109ms)
    ✓ Attachments replicate (66ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (235ms)
    ✓ Many many png attachments replicate (203ms)
    ✓ Multiple attachments replicate (79ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (76ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (73ms)
    ✓ #3932 attachments with tricky revpos (155ms)
    ✓ replication with changing attachments (163ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (169ms)
    ✓ Replicate same doc, same atts (182ms)
    ✓ Replicate same doc, same atts 2 (181ms)
    ✓ Attachments replicate (80ms)
    ✓ Attachment types replicate (98ms)
    ✓ Many many attachments replicate (374ms)
    ✓ Many many png attachments replicate (291ms)
    ✓ Multiple attachments replicate (124ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (116ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (130ms)
    ✓ #3932 attachments with tricky revpos (226ms)
    ✓ replication with changing attachments (150ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (172ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (109ms)
    ✓ Replicate same doc, same atts (121ms)
    ✓ Replicate same doc, same atts 2 (111ms)
    ✓ Attachments replicate (64ms)
    ✓ Attachment types replicate (58ms)
    ✓ Many many attachments replicate (137ms)
    ✓ Many many png attachments replicate (193ms)
    ✓ Multiple attachments replicate (83ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (70ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (92ms)
    ✓ #3932 attachments with tricky revpos (143ms)
    ✓ replication with changing attachments (88ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (38ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos (65ms)
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (53ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (48ms)
    ✓ Fail to fetch a doc after db was deleted (55ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (56ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (51ms)
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (276ms)
    ✓ 2839 implement revs_limit (182ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs (49ms)
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (38ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (368ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter (39ms)
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (60ms)
    ✓ Changes with style = all_docs and a callback for complete (61ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (328ms)
    ✓ #3579 changes firing 1 too many times (77ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (126ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (41ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1025ms)
    ✓ supports return_docs=false
    ✓ should respects limit (77ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (195ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (316ms)
    ✓ #3579 changes firing 1 too many times (66ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1014ms)
    ✓ supports return_docs=false
    ✓ should respects limit (65ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (118ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (654ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (115ms)
    ✓ Compact two times more complicated tree (103ms)
    ✓ Compact database with at least two documents (177ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id (38ms)
    ✓ Compaction removes non-leaf revs (#2807) (119ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (44ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (42ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1386ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1422ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (240ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (303ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (275ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level (71ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3 (39ms)
    ✓ Conflict resolution 4-a (65ms)
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (647ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (574ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter (38ms)
    ✓ Basic views (64ms)
    ✓ Indexing event
    ✓ Concurrent queries (45ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (44ms)
    ✓ Indexing event (39ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (63ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (70ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (64ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning (39ms)
    ✓ Test opts.revs=true return only winning branch (57ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (42ms)
    ✓ #2951 Parallelized gets with 409s/404s (66ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (63ms)
    ✓ Test get with conflicts (43ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s (66ms)
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (172ms)
    ✓ 4358 db.destroy rejects when server is down (279ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (501ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (500ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (501ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (79ms)
    ✓ Testing issue #221 again (73ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (82ms)
    ✓ Testing issue #221 again (115ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (52ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (45ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (232ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (227ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (388ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (245ms)
    ✓ #3179 conflicts synced, non-live sync (346ms)
    ✓ #3179 conflicts synced, live sync (266ms)
    ✓ #3179 conflicts synced, live repl (278ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (136ms)
    ✓ #3179 conflicts synced, non-live sync (148ms)
    ✓ #3179 conflicts synced, live sync (171ms)
    ✓ #3179 conflicts synced, live repl (175ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (138ms)
    ✓ #3179 conflicts synced, non-live sync (134ms)
    ✓ #3179 conflicts synced, live sync (157ms)
    ✓ #3179 conflicts synced, live repl (148ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication
    ✓ #3179 conflicts synced, non-live sync (44ms)
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents (40ms)

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (43ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (52ms)
    ✓ Test basic pull replication plain api (53ms)
    ✓ Test basic pull replication plain api 2 (65ms)
    ✓ Test pull replication with many changes (167ms)
    ✓ Test basic pull replication with funny ids (43ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (546ms)
    ✓ Test correct # docs replicated with staggered revs (80ms)
    ✓ Local DB contains documents (54ms)
    ✓ Test basic push replication (46ms)
    ✓ Test basic push replication take 2 (60ms)
    ✓ Test basic push replication sequence tracking (78ms)
    ✓ Test checkpoint (64ms)
    ✓ Test live pull checkpoint (106ms)
    ✓ Test type of progress values (58ms)
    ✓ Test live push checkpoint (120ms)
    ✓ Test checkpoint 2 (70ms)
    ✓ Test checkpoint 3 :) (61ms)
    ✓ Test disable checkpoints on both source and target (49ms)
    ✓ Test write checkpoints on source only (49ms)
    ✓ Test write checkpoints on target only (55ms)
    ✓ Test replication resumes when checkpointing is enabled (68ms)
    ✓ Test replication resumes when checkpointing is disabled (56ms)
    ✓ Test replication resumes when checkpointing on source only (45ms)
    ✓ Test replication resumes when checkpointing on target only (60ms)
    ✓ #3136 open revs returned correctly 1 (116ms)
    ✓ #3136 open revs returned correctly 2 (128ms)
    ✓ #3136 winningRev has a lower seq (86ms)
    ✓ #3136 same changes with style=all_docs (105ms)
    ✓ #3136 style=all_docs with conflicts (98ms)
    ✓ #3136 style=all_docs with conflicts reversed (95ms)
    ✓ Test checkpoint read only 3 :) (65ms)
    ✓ Testing allDocs with some conflicts (issue #468) (78ms)
    ✓ Test basic conflict (52ms)
    ✓ Test _conflicts key (71ms)
    ✓ Test basic live pull replication (67ms)
    ✓ Test basic live push replication (67ms)
    ✓ test-cancel-pull-replication (166ms)
    ✓ Test basic events (52ms)
    ✓ Replication filter (51ms)
    ✓ Replication with different filters (74ms)
    ✓ Replication doc ids (46ms)
    ✓ 2204 Invalid doc_ids (64ms)
    ✓ Replication since (111ms)
    ✓ Replication with same filters (117ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (61ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (58ms)
    ✓ Replication with deleted doc (54ms)
    ✓ 5904 - replication with deleted doc and value (58ms)
    ✓ Replication notifications (41ms)
    ✓ Replication with remote conflict (94ms)
    ✓ Replicate and modify three times (90ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (43ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ compaction (73ms)
    ✓ Replicates modified docs (issue #2636) (41ms)
    ✓ Replication of multiple remote conflicts (#789) (63ms)
    ✓ Replicate large number of docs (56ms)
    ✓ Ensure checkpoint after deletion (104ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (167ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (93ms)
    ✓ #3999-1 should not start over if last_seq mismatches (101ms)
    ✓ #3999-2 should start over if no common session is found (83ms)
    ✓ #3999-3 should not start over if common session is found (82ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (71ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (67ms)
    ✓ Report write failures if whole saving fails (#942) (88ms)
    ✓ Test consecutive replications with different query_params (125ms)
    ✓ Test consecutive replications with different query_params and promises (65ms)
    ✓ Test consecutive replications with different doc_ids (88ms)
    ✓ #3962 - Test many attachments (156ms)
    ✓ doc count after multiple replications (124ms)
    ✓ issue #300 rev id unique per doc (49ms)
    ✓ issue #585 Store checkpoint on target db. (80ms)
    ✓ should work with a read only source (61ms)
    ✓ issue #2342 update_seq after replication (67ms)
    ✓ should cancel for live replication (552ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (52ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (49ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (42ms)
    ✓ #3606 - live repl with doc_ids (44ms)
    ✓ #3606 - live repl with view (47ms)
    ✓ #3569 - 409 during replication (96ms)
    ✓ #3270 triggers "change" events with .docs property (51ms)
    ✓ #3543 replication with a ddoc filter (53ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (104ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (136ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (45ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (46ms)
    ✓ #4293 Triggers extra replication events (158ms)
    ✓ Heartbeat gets passed (52ms)
    ✓ Timeout gets passed (50ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (100ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (100ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (101ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (74ms)
    ✓ Test basic pull replication plain api (77ms)
    ✓ Test basic pull replication plain api 2 (78ms)
    ✓ Test pull replication with many changes (204ms)
    ✓ Test basic pull replication with funny ids (74ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (541ms)
    ✓ Test correct # docs replicated with staggered revs (114ms)
    ✓ Local DB contains documents (86ms)
    ✓ Test basic push replication (89ms)
    ✓ Test basic push replication take 2 (108ms)
    ✓ Test basic push replication sequence tracking (115ms)
    ✓ Test checkpoint (93ms)
    ✓ Test live pull checkpoint (107ms)
    ✓ Test type of progress values (69ms)
    ✓ Test live push checkpoint (101ms)
    ✓ Test checkpoint 2 (108ms)
    ✓ Test checkpoint 3 :) (104ms)
    ✓ Test disable checkpoints on both source and target (62ms)
    ✓ Test write checkpoints on source only (75ms)
    ✓ Test write checkpoints on target only (72ms)
    ✓ Test replication resumes when checkpointing is enabled (99ms)
    ✓ Test replication resumes when checkpointing is disabled (76ms)
    ✓ Test replication resumes when checkpointing on source only (89ms)
    ✓ Test replication resumes when checkpointing on target only (100ms)
    ✓ #3136 open revs returned correctly 1 (213ms)
    ✓ #3136 open revs returned correctly 2 (231ms)
    ✓ #3136 winningRev has a lower seq (143ms)
    ✓ #3136 same changes with style=all_docs (211ms)
    ✓ #3136 style=all_docs with conflicts (189ms)
    ✓ #3136 style=all_docs with conflicts reversed (146ms)
    ✓ Test checkpoint read only 3 :) (94ms)
    ✓ Testing allDocs with some conflicts (issue #468) (118ms)
    ✓ Test basic conflict (71ms)
    ✓ Test _conflicts key (109ms)
    ✓ Test basic live pull replication (93ms)
    ✓ Test basic live push replication (92ms)
    ✓ test-cancel-pull-replication (201ms)
    ✓ Test basic events (70ms)
    ✓ Replication filter (69ms)
    ✓ Replication with different filters (144ms)
    ✓ Replication doc ids (74ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (125ms)
    ✓ Replication with same filters (95ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (97ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (79ms)
    ✓ Replication with deleted doc (75ms)
    ✓ 5904 - replication with deleted doc and value (68ms)
    ✓ Replication notifications (123ms)
    ✓ Replication with remote conflict (237ms)
    ✓ Replicate and modify three times (145ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (58ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (84ms)
    ✓ Replicates deleted docs w/ compaction (117ms)
    ✓ Replicates modified docs (issue #2636) (56ms)
    ✓ Replication of multiple remote conflicts (#789) (72ms)
    ✓ Replicate large number of docs (76ms)
    ✓ Ensure checkpoint after deletion (120ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (76ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (151ms)
    ✓ #3999-1 should not start over if last_seq mismatches (123ms)
    ✓ #3999-2 should start over if no common session is found (114ms)
    ✓ #3999-3 should not start over if common session is found (103ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (103ms)
    ✓ (#1307) - replicate empty database (42ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (169ms)
    ✓ Report write failures if whole saving fails (#942) (160ms)
    ✓ Test consecutive replications with different query_params (95ms)
    ✓ Test consecutive replications with different query_params and promises (95ms)
    ✓ Test consecutive replications with different doc_ids (119ms)
    ✓ #3962 - Test many attachments (147ms)
    ✓ doc count after multiple replications (131ms)
    ✓ issue #300 rev id unique per doc (65ms)
    ✓ issue #585 Store checkpoint on target db. (107ms)
    ✓ should work with a read only source (62ms)
    ✓ issue #2342 update_seq after replication (87ms)
    ✓ should cancel for live replication (555ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (67ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (70ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (67ms)
    ✓ #3606 - live repl with doc_ids (64ms)
    ✓ #3606 - live repl with view (126ms)
    ✓ #3569 - 409 during replication (190ms)
    ✓ #3270 triggers "change" events with .docs property (72ms)
    ✓ #3543 replication with a ddoc filter (68ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (113ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (108ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (56ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (64ms)
    ✓ #4293 Triggers extra replication events (182ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (123ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (141ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (150ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (55ms)
    ✓ Test basic pull replication plain api (59ms)
    ✓ Test basic pull replication plain api 2 (56ms)
    ✓ Test pull replication with many changes (159ms)
    ✓ Test basic pull replication with funny ids (48ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (643ms)
    ✓ Test correct # docs replicated with staggered revs (72ms)
    ✓ Local DB contains documents (57ms)
    ✓ Test basic push replication (57ms)
    ✓ Test basic push replication take 2 (50ms)
    ✓ Test basic push replication sequence tracking (71ms)
    ✓ Test checkpoint (60ms)
    ✓ Test live pull checkpoint (72ms)
    ✓ Test type of progress values (53ms)
    ✓ Test live push checkpoint (69ms)
    ✓ Test checkpoint 2 (66ms)
    ✓ Test checkpoint 3 :) (74ms)
    ✓ Test disable checkpoints on both source and target (47ms)
    ✓ Test write checkpoints on source only (56ms)
    ✓ Test write checkpoints on target only (43ms)
    ✓ Test replication resumes when checkpointing is enabled (69ms)
    ✓ Test replication resumes when checkpointing is disabled (55ms)
    ✓ Test replication resumes when checkpointing on source only (63ms)
    ✓ Test replication resumes when checkpointing on target only (57ms)
    ✓ #3136 open revs returned correctly 1 (209ms)
    ✓ #3136 open revs returned correctly 2 (215ms)
    ✓ #3136 winningRev has a lower seq (93ms)
    ✓ #3136 same changes with style=all_docs (94ms)
    ✓ #3136 style=all_docs with conflicts (147ms)
    ✓ #3136 style=all_docs with conflicts reversed (147ms)
    ✓ Test checkpoint read only 3 :) (75ms)
    ✓ Testing allDocs with some conflicts (issue #468) (71ms)
    ✓ Test basic conflict (47ms)
    ✓ Test _conflicts key (76ms)
    ✓ Test basic live pull replication (76ms)
    ✓ Test basic live push replication (62ms)
    ✓ test-cancel-pull-replication (170ms)
    ✓ Test basic events (65ms)
    ✓ Replication filter (57ms)
    ✓ Replication with different filters (64ms)
    ✓ Replication doc ids (54ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (72ms)
    ✓ Replication with same filters (65ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (65ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (57ms)
    ✓ Replication with deleted doc (52ms)
    ✓ 5904 - replication with deleted doc and value (53ms)
    ✓ Replication notifications (50ms)
    ✓ Replication with remote conflict (119ms)
    ✓ Replicate and modify three times (89ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (44ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (74ms)
    ✓ Replicates deleted docs w/ compaction (75ms)
    ✓ Replicates modified docs (issue #2636) (49ms)
    ✓ Replication of multiple remote conflicts (#789) (47ms)
    ✓ Replicate large number of docs (61ms)
    ✓ Ensure checkpoint after deletion (87ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (107ms)
    ✓ #3999-1 should not start over if last_seq mismatches (75ms)
    ✓ #3999-2 should start over if no common session is found (70ms)
    ✓ #3999-3 should not start over if common session is found (67ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (63ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (68ms)
    ✓ Report write failures if whole saving fails (#942) (62ms)
    ✓ Test consecutive replications with different query_params (65ms)
    ✓ Test consecutive replications with different query_params and promises (61ms)
    ✓ Test consecutive replications with different doc_ids (72ms)
    ✓ #3962 - Test many attachments (62ms)
    ✓ doc count after multiple replications (96ms)
    ✓ issue #300 rev id unique per doc (55ms)
    ✓ issue #585 Store checkpoint on target db. (83ms)
    ✓ should work with a read only source (44ms)
    ✓ issue #2342 update_seq after replication (76ms)
    ✓ should cancel for live replication (542ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (96ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (53ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (51ms)
    ✓ #3606 - live repl with doc_ids (47ms)
    ✓ #3606 - live repl with view (51ms)
    ✓ #3569 - 409 during replication (130ms)
    ✓ #3270 triggers "change" events with .docs property (60ms)
    ✓ #3543 replication with a ddoc filter (50ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (66ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (70ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (41ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (40ms)
    ✓ #4293 Triggers extra replication events (149ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (68ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (78ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (75ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (134ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (633ms)
    ✓ Test correct # docs replicated with staggered revs
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (62ms)
    ✓ #3136 open revs returned correctly 2 (60ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (42ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (128ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs
    ✓ Ensure checkpoint after deletion (55ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (53ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (55ms)
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found (53ms)
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (65ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db.
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (523ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (132ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication (38ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (39ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (74ms)
    ✓ #3852 Test basic starting with docs (116ms)
    ✓ #5710 Test pending property support (128ms)
    ✓ #3852 Test errors (71ms)
    ✓ #4627 Test no duplicate changes in live replication (2057ms)
    ✓ Test checkpoint events (78ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (144ms)
    ✓ #3852 Test basic starting with docs (152ms)
    ✓ #5710 Test pending property support (107ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2089ms)
    ✓ Test checkpoint events (65ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (88ms)
    ✓ #3852 Test basic starting with docs (110ms)
    ✓ #5710 Test pending property support (67ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2072ms)
    ✓ Test checkpoint events (48ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty (38ms)
    ✓ #3852 Test basic starting with docs (38ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2034ms)
    ✓ Test checkpoint events (43ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (71ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (118ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (81ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (40ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (143ms)
    ✓ #3687 active event only fired once... (115ms)
    ✓ source doesn't leak "destroyed" event (194ms)
    ✓ target doesn't leak "destroyed" event (180ms)
    ✓ returnValue doesn't leak "complete" event (180ms)
    ✓ returnValue doesn't leak "error" event (177ms)
    ✓ returnValue doesn't leak "paused" event (181ms)
    ✓ returnValue doesn't leak "active" event (171ms)
    ✓ returnValue doesn't leak "change" event (178ms)
    ✓ returnValue doesn't leak "cancel" event (177ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (180ms)
    ✓ retry many times, no leaks on any events (894ms)
    ✓ 4049 retry while starting offline (40ms)
    ✓ #5157 replicate many docs with live+retry (477ms)
    ✓ 6510 no changes live+retry does not call backoff function (2003ms)

  test.retry.js-http-http
    ✓ retry stuff (115ms)
    ✓ #3687 active event only fired once... (78ms)
    ✓ source doesn't leak "destroyed" event (282ms)
    ✓ target doesn't leak "destroyed" event (291ms)
    ✓ returnValue doesn't leak "complete" event (300ms)
    ✓ returnValue doesn't leak "error" event (273ms)
    ✓ returnValue doesn't leak "paused" event (352ms)
    ✓ returnValue doesn't leak "active" event (365ms)
    ✓ returnValue doesn't leak "change" event (306ms)
    ✓ returnValue doesn't leak "cancel" event (275ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (276ms)
    ✓ retry many times, no leaks on any events (1409ms)
    ✓ 4049 retry while starting offline (54ms)
    ✓ #5157 replicate many docs with live+retry (1152ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant3/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 420ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660235596172


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (145ms)
    ✓ Testing allDocs opts.keys (62ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (42ms)
    ✓ Testing updating in changes (44ms)
    ✓ Testing include docs
    ✓ Testing conflicts (48ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (120ms)
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (54ms)
    ✓ test descending with startkey/endkey (53ms)
    ✓ #3082 test wrong num results returned (245ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (186ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (95ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts (48ms)
    ✓ #2858 {binary: true} in changes() non-live, mixed atts (46ms)
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (38ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (38ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (42ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs (39ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs (50ms)
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (42ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (45ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (38ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (40ms)
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (49ms)
    ✓ #2818 - save same attachment many times in parallel (62ms)
    ✓ #2818 - revisions keep attachments (no compaction) (62ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (136ms)
    ✓ #2709 `revpos` with putAttachment (41ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (111ms)
    ✓ Replicate same doc, same atts (112ms)
    ✓ Replicate same doc, same atts 2 (103ms)
    ✓ Attachments replicate (64ms)
    ✓ Attachment types replicate (54ms)
    ✓ Many many attachments replicate (182ms)
    ✓ Many many png attachments replicate (198ms)
    ✓ Multiple attachments replicate (78ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (87ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (75ms)
    ✓ #3932 attachments with tricky revpos (138ms)
    ✓ replication with changing attachments (98ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (173ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (187ms)
    ✓ Replicate same doc, same atts (177ms)
    ✓ Replicate same doc, same atts 2 (169ms)
    ✓ Attachments replicate (82ms)
    ✓ Attachment types replicate (93ms)
    ✓ Many many attachments replicate (367ms)
    ✓ Many many png attachments replicate (303ms)
    ✓ Multiple attachments replicate (116ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (113ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (124ms)
    ✓ #3932 attachments with tricky revpos (348ms)
    ✓ replication with changing attachments (154ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (166ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (152ms)
    ✓ Replicate same doc, same atts (103ms)
    ✓ Replicate same doc, same atts 2 (99ms)
    ✓ Attachments replicate (55ms)
    ✓ Attachment types replicate (57ms)
    ✓ Many many attachments replicate (144ms)
    ✓ Many many png attachments replicate (148ms)
    ✓ Multiple attachments replicate (97ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (67ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (95ms)
    ✓ #3932 attachments with tricky revpos (161ms)
    ✓ replication with changing attachments (191ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (124ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise (53ms)
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442) (44ms)
    ✓ Testing issue #48 (59ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (48ms)
    ✓ Fail to fetch a doc after db was deleted (42ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (39ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (263ms)
    ✓ 2839 implement revs_limit (178ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history (71ms)
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (259ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (42ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified (38ms)
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (40ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (116ms)
    ✓ Changes with style = all_docs and a callback for complete (72ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (324ms)
    ✓ #3579 changes firing 1 too many times (72ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (126ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1022ms)
    ✓ supports return_docs=false
    ✓ should respects limit (69ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (198ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (320ms)
    ✓ #3579 changes firing 1 too many times (68ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1020ms)
    ✓ supports return_docs=false
    ✓ should respects limit (65ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (70ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (632ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (112ms)
    ✓ Compact two times more complicated tree (97ms)
    ✓ Compact database with at least two documents (252ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (44ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (39ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1297ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1437ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (249ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (277ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (274ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c (47ms)
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (581ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (570ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (54ms)
    ✓ Indexing event
    ✓ Concurrent queries (60ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter (42ms)
    ✓ Basic views (50ms)
    ✓ Indexing event (43ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (65ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (71ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (46ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (51ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (50ms)
    ✓ #2951 Parallelized gets with 409s/404s (67ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (58ms)
    ✓ Test get with conflicts (41ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s (38ms)
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (170ms)
    ✓ 4358 db.destroy rejects when server is down (274ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (502ms)
    ✓ Initial replication is ok if target returns HTTP 404 (501ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (502ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (107ms)
    ✓ Testing issue #221 again (74ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (75ms)
    ✓ Testing issue #221 again (108ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (49ms)
    ✓ Testing issue #221 again (64ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (40ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (231ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (231ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (417ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (254ms)
    ✓ #3179 conflicts synced, non-live sync (224ms)
    ✓ #3179 conflicts synced, live sync (382ms)
    ✓ #3179 conflicts synced, live repl (275ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (134ms)
    ✓ #3179 conflicts synced, non-live sync (144ms)
    ✓ #3179 conflicts synced, live sync (160ms)
    ✓ #3179 conflicts synced, live repl (166ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (138ms)
    ✓ #3179 conflicts synced, non-live sync (134ms)
    ✓ #3179 conflicts synced, live sync (157ms)
    ✓ #3179 conflicts synced, live repl (147ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (42ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl (40ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown (41ms)
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get (38ms)
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (45ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (48ms)
    ✓ Test basic pull replication plain api (57ms)
    ✓ Test basic pull replication plain api 2 (62ms)
    ✓ Test pull replication with many changes (152ms)
    ✓ Test basic pull replication with funny ids (46ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (573ms)
    ✓ Test correct # docs replicated with staggered revs (81ms)
    ✓ Local DB contains documents (54ms)
    ✓ Test basic push replication (49ms)
    ✓ Test basic push replication take 2 (59ms)
    ✓ Test basic push replication sequence tracking (71ms)
    ✓ Test checkpoint (63ms)
    ✓ Test live pull checkpoint (73ms)
    ✓ Test type of progress values (43ms)
    ✓ Test live push checkpoint (80ms)
    ✓ Test checkpoint 2 (74ms)
    ✓ Test checkpoint 3 :) (93ms)
    ✓ Test disable checkpoints on both source and target (81ms)
    ✓ Test write checkpoints on source only (52ms)
    ✓ Test write checkpoints on target only (57ms)
    ✓ Test replication resumes when checkpointing is enabled (65ms)
    ✓ Test replication resumes when checkpointing is disabled (54ms)
    ✓ Test replication resumes when checkpointing on source only (56ms)
    ✓ Test replication resumes when checkpointing on target only (62ms)
    ✓ #3136 open revs returned correctly 1 (107ms)
    ✓ #3136 open revs returned correctly 2 (129ms)
    ✓ #3136 winningRev has a lower seq (80ms)
    ✓ #3136 same changes with style=all_docs (111ms)
    ✓ #3136 style=all_docs with conflicts (85ms)
    ✓ #3136 style=all_docs with conflicts reversed (93ms)
    ✓ Test checkpoint read only 3 :) (77ms)
    ✓ Testing allDocs with some conflicts (issue #468) (79ms)
    ✓ Test basic conflict (57ms)
    ✓ Test _conflicts key (67ms)
    ✓ Test basic live pull replication (66ms)
    ✓ Test basic live push replication (64ms)
    ✓ test-cancel-pull-replication (162ms)
    ✓ Test basic events (53ms)
    ✓ Replication filter (46ms)
    ✓ Replication with different filters (70ms)
    ✓ Replication doc ids (43ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (80ms)
    ✓ Replication with same filters (64ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (57ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (121ms)
    ✓ Replication with deleted doc (85ms)
    ✓ 5904 - replication with deleted doc and value (54ms)
    ✓ Replication notifications (46ms)
    ✓ Replication with remote conflict (92ms)
    ✓ Replicate and modify three times (127ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (42ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (51ms)
    ✓ Replicates deleted docs w/ compaction (63ms)
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789) (55ms)
    ✓ Replicate large number of docs (52ms)
    ✓ Ensure checkpoint after deletion (80ms)
    ✓ issue #1001 cb as 3rd argument (169ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (60ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (91ms)
    ✓ #3999-1 should not start over if last_seq mismatches (99ms)
    ✓ #3999-2 should start over if no common session is found (91ms)
    ✓ #3999-3 should not start over if common session is found (77ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (77ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (73ms)
    ✓ Report write failures if whole saving fails (#942) (66ms)
    ✓ Test consecutive replications with different query_params (70ms)
    ✓ Test consecutive replications with different query_params and promises (71ms)
    ✓ Test consecutive replications with different doc_ids (88ms)
    ✓ #3962 - Test many attachments (304ms)
    ✓ doc count after multiple replications (122ms)
    ✓ issue #300 rev id unique per doc (62ms)
    ✓ issue #585 Store checkpoint on target db. (81ms)
    ✓ should work with a read only source (47ms)
    ✓ issue #2342 update_seq after replication (68ms)
    ✓ should cancel for live replication (546ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (48ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (47ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (48ms)
    ✓ #3606 - live repl with doc_ids (44ms)
    ✓ #3606 - live repl with view (39ms)
    ✓ #3569 - 409 during replication (112ms)
    ✓ #3270 triggers "change" events with .docs property (54ms)
    ✓ #3543 replication with a ddoc filter (42ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (69ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (81ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (42ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (48ms)
    ✓ #4293 Triggers extra replication events (166ms)
    ✓ Heartbeat gets passed (62ms)
    ✓ Timeout gets passed (72ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (90ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (103ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (116ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (69ms)
    ✓ Test basic pull replication plain api (68ms)
    ✓ Test basic pull replication plain api 2 (73ms)
    ✓ Test pull replication with many changes (194ms)
    ✓ Test basic pull replication with funny ids (66ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (532ms)
    ✓ Test correct # docs replicated with staggered revs (112ms)
    ✓ Local DB contains documents (77ms)
    ✓ Test basic push replication (70ms)
    ✓ Test basic push replication take 2 (68ms)
    ✓ Test basic push replication sequence tracking (113ms)
    ✓ Test checkpoint (84ms)
    ✓ Test live pull checkpoint (193ms)
    ✓ Test type of progress values (72ms)
    ✓ Test live push checkpoint (99ms)
    ✓ Test checkpoint 2 (99ms)
    ✓ Test checkpoint 3 :) (95ms)
    ✓ Test disable checkpoints on both source and target (61ms)
    ✓ Test write checkpoints on source only (75ms)
    ✓ Test write checkpoints on target only (77ms)
    ✓ Test replication resumes when checkpointing is enabled (94ms)
    ✓ Test replication resumes when checkpointing is disabled (73ms)
    ✓ Test replication resumes when checkpointing on source only (82ms)
    ✓ Test replication resumes when checkpointing on target only (84ms)
    ✓ #3136 open revs returned correctly 1 (221ms)
    ✓ #3136 open revs returned correctly 2 (237ms)
    ✓ #3136 winningRev has a lower seq (137ms)
    ✓ #3136 same changes with style=all_docs (139ms)
    ✓ #3136 style=all_docs with conflicts (148ms)
    ✓ #3136 style=all_docs with conflicts reversed (148ms)
    ✓ Test checkpoint read only 3 :) (126ms)
    ✓ Testing allDocs with some conflicts (issue #468) (171ms)
    ✓ Test basic conflict (71ms)
    ✓ Test _conflicts key (94ms)
    ✓ Test basic live pull replication (90ms)
    ✓ Test basic live push replication (88ms)
    ✓ test-cancel-pull-replication (198ms)
    ✓ Test basic events (71ms)
    ✓ Replication filter (72ms)
    ✓ Replication with different filters (99ms)
    ✓ Replication doc ids (68ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (130ms)
    ✓ Replication with same filters (99ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (103ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (79ms)
    ✓ Replication with deleted doc (70ms)
    ✓ 5904 - replication with deleted doc and value (76ms)
    ✓ Replication notifications (66ms)
    ✓ Replication with remote conflict (138ms)
    ✓ Replicate and modify three times (142ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (77ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (151ms)
    ✓ Replicates deleted docs w/ compaction (113ms)
    ✓ Replicates modified docs (issue #2636) (55ms)
    ✓ Replication of multiple remote conflicts (#789) (83ms)
    ✓ Replicate large number of docs (78ms)
    ✓ Ensure checkpoint after deletion (136ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (163ms)
    ✓ #909 Filtered replication bails at paging limit (70ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (157ms)
    ✓ #3999-1 should not start over if last_seq mismatches (118ms)
    ✓ #3999-2 should start over if no common session is found (104ms)
    ✓ #3999-3 should not start over if common session is found (101ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (107ms)
    ✓ (#1307) - replicate empty database (43ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (100ms)
    ✓ Report write failures if whole saving fails (#942) (101ms)
    ✓ Test consecutive replications with different query_params (94ms)
    ✓ Test consecutive replications with different query_params and promises (92ms)
    ✓ Test consecutive replications with different doc_ids (254ms)
    ✓ #3962 - Test many attachments (156ms)
    ✓ doc count after multiple replications (131ms)
    ✓ issue #300 rev id unique per doc (69ms)
    ✓ issue #585 Store checkpoint on target db. (122ms)
    ✓ should work with a read only source (68ms)
    ✓ issue #2342 update_seq after replication (85ms)
    ✓ should cancel for live replication (556ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (67ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (68ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (71ms)
    ✓ #3606 - live repl with doc_ids (61ms)
    ✓ #3606 - live repl with view (66ms)
    ✓ #3569 - 409 during replication (145ms)
    ✓ #3270 triggers "change" events with .docs property (64ms)
    ✓ #3543 replication with a ddoc filter (67ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (223ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (116ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (54ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (51ms)
    ✓ #4293 Triggers extra replication events (177ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (126ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (140ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (144ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (49ms)
    ✓ Test basic pull replication plain api (55ms)
    ✓ Test basic pull replication plain api 2 (50ms)
    ✓ Test pull replication with many changes (156ms)
    ✓ Test basic pull replication with funny ids (53ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (500ms)
    ✓ Test correct # docs replicated with staggered revs (74ms)
    ✓ Local DB contains documents (50ms)
    ✓ Test basic push replication (86ms)
    ✓ Test basic push replication take 2 (65ms)
    ✓ Test basic push replication sequence tracking (127ms)
    ✓ Test checkpoint (56ms)
    ✓ Test live pull checkpoint (65ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (65ms)
    ✓ Test checkpoint 2 (65ms)
    ✓ Test checkpoint 3 :) (69ms)
    ✓ Test disable checkpoints on both source and target (43ms)
    ✓ Test write checkpoints on source only (47ms)
    ✓ Test write checkpoints on target only (43ms)
    ✓ Test replication resumes when checkpointing is enabled (63ms)
    ✓ Test replication resumes when checkpointing is disabled (49ms)
    ✓ Test replication resumes when checkpointing on source only (62ms)
    ✓ Test replication resumes when checkpointing on target only (58ms)
    ✓ #3136 open revs returned correctly 1 (194ms)
    ✓ #3136 open revs returned correctly 2 (179ms)
    ✓ #3136 winningRev has a lower seq (92ms)
    ✓ #3136 same changes with style=all_docs (133ms)
    ✓ #3136 style=all_docs with conflicts (92ms)
    ✓ #3136 style=all_docs with conflicts reversed (95ms)
    ✓ Test checkpoint read only 3 :) (66ms)
    ✓ Testing allDocs with some conflicts (issue #468) (68ms)
    ✓ Test basic conflict (44ms)
    ✓ Test _conflicts key (73ms)
    ✓ Test basic live pull replication (70ms)
    ✓ Test basic live push replication (57ms)
    ✓ test-cancel-pull-replication (217ms)
    ✓ Test basic events (58ms)
    ✓ Replication filter (51ms)
    ✓ Replication with different filters (62ms)
    ✓ Replication doc ids (51ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (73ms)
    ✓ Replication with same filters (63ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (61ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (61ms)
    ✓ Replication with deleted doc (53ms)
    ✓ 5904 - replication with deleted doc and value (48ms)
    ✓ Replication notifications (44ms)
    ✓ Replication with remote conflict (89ms)
    ✓ Replicate and modify three times (79ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (46ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (68ms)
    ✓ Replicates deleted docs w/ compaction (80ms)
    ✓ Replicates modified docs (issue #2636) (62ms)
    ✓ Replication of multiple remote conflicts (#789) (48ms)
    ✓ Replicate large number of docs (71ms)
    ✓ Ensure checkpoint after deletion (89ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (60ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (105ms)
    ✓ #3999-1 should not start over if last_seq mismatches (79ms)
    ✓ #3999-2 should start over if no common session is found (83ms)
    ✓ #3999-3 should not start over if common session is found (112ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (79ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (68ms)
    ✓ Report write failures if whole saving fails (#942) (65ms)
    ✓ Test consecutive replications with different query_params (62ms)
    ✓ Test consecutive replications with different query_params and promises (65ms)
    ✓ Test consecutive replications with different doc_ids (71ms)
    ✓ #3962 - Test many attachments (67ms)
    ✓ doc count after multiple replications (89ms)
    ✓ issue #300 rev id unique per doc (60ms)
    ✓ issue #585 Store checkpoint on target db. (75ms)
    ✓ should work with a read only source (41ms)
    ✓ issue #2342 update_seq after replication (69ms)
    ✓ should cancel for live replication (536ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (51ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (50ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (47ms)
    ✓ #3606 - live repl with doc_ids (43ms)
    ✓ #3606 - live repl with view (49ms)
    ✓ #3569 - 409 during replication (149ms)
    ✓ #3270 triggers "change" events with .docs property (54ms)
    ✓ #3543 replication with a ddoc filter (72ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (113ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (73ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (38ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (46ms)
    ✓ #4293 Triggers extra replication events (166ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (67ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (117ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (84ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2 (40ms)
    ✓ Test pull replication with many changes (129ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (540ms)
    ✓ Test correct # docs replicated with staggered revs (39ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication (60ms)
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint (40ms)
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only (53ms)
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (65ms)
    ✓ #3136 open revs returned correctly 2 (57ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (39ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (125ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (45ms)
    ✓ Ensure checkpoint after deletion (42ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches (38ms)
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (71ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (45ms)
    ✓ should work with a read only source (39ms)
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (525ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (124ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (75ms)
    ✓ #3852 Test basic starting with docs (86ms)
    ✓ #5710 Test pending property support (88ms)
    ✓ #3852 Test errors (66ms)
    ✓ #4627 Test no duplicate changes in live replication (2061ms)
    ✓ Test checkpoint events (51ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (121ms)
    ✓ #3852 Test basic starting with docs (293ms)
    ✓ #5710 Test pending property support (102ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2099ms)
    ✓ Test checkpoint events (83ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (86ms)
    ✓ #3852 Test basic starting with docs (114ms)
    ✓ #5710 Test pending property support (97ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2067ms)
    ✓ Test checkpoint events (55ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty (41ms)
    ✓ #3852 Test basic starting with docs (52ms)
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2049ms)
    ✓ Test checkpoint events (50ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (143ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (104ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (88ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (80ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (147ms)
    ✓ #3687 active event only fired once... (97ms)
    ✓ source doesn't leak "destroyed" event (169ms)
    ✓ target doesn't leak "destroyed" event (178ms)
    ✓ returnValue doesn't leak "complete" event (222ms)
    ✓ returnValue doesn't leak "error" event (198ms)
    ✓ returnValue doesn't leak "paused" event (187ms)
    ✓ returnValue doesn't leak "active" event (171ms)
    ✓ returnValue doesn't leak "change" event (180ms)
    ✓ returnValue doesn't leak "cancel" event (175ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (193ms)
    ✓ retry many times, no leaks on any events (847ms)
    ✓ 4049 retry while starting offline (41ms)
    ✓ #5157 replicate many docs with live+retry (464ms)
    ✓ 6510 no changes live+retry does not call backoff function (2001ms)

  test.retry.js-http-http
    ✓ retry stuff (141ms)
    ✓ #3687 active event only fired once... (77ms)
    ✓ source doesn't leak "destroyed" event (275ms)
    ✓ target doesn't leak "destroyed" event (282ms)
    ✓ returnValue doesn't leak "complete" event (286ms)
    ✓ returnValue doesn't leak "error" event (262ms)
    ✓ returnValue doesn't leak "paused" event (406ms)
    ✓ returnValue doesn't leak "active" event (276ms)
    ✓ returnValue doesn't leak "change" event (280ms)
    ✓ returnValue doesn't leak "cancel" event (273ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (272ms)
    ✓ retry many times, no leaks on any events (1321ms)
    ✓ 4049 retry while starting offline (49ms)
    ✓ #5157 replicate many docs with live+retry (1139ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant2/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 410ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660235726502


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (147ms)
    ✓ Testing allDocs opts.keys (65ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (44ms)
    ✓ Testing updating in changes (42ms)
    ✓ Testing include docs
    ✓ Testing conflicts (50ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (146ms)
    ✓ test total_rows with both skip and limit (38ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (54ms)
    ✓ test descending with startkey/endkey (38ms)
    ✓ #3082 test wrong num results returned (257ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false (63ms)
    ✓ #6230 Test allDocs opts update_seq: true (38ms)
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs (44ms)
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (180ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (43ms)
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments (40ms)
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (43ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data (40ms)
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs (44ms)
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64 (40ms)
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (112ms)
    ✓ #2709 `revpos` with putAttachment (51ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type (47ms)
    ✓ fetch atts with open_revs and missing (49ms)
    ✓ issue 2803 should throw 412 (58ms)
    ✓ issue 2803 should throw 412 part 2 (58ms)
    ✓ issue 2803 should throw 412 part 3 (39ms)
    ✓ issue 2803 should throw 412 part 4 (47ms)
    ✓ #2858 {binary: true} in get() (56ms)
    ✓ #2858 {binary: true} in allDocs() 1 (38ms)
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event (41ms)
    ✓ #2858 {binary: true} in live changes (46ms)
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (39ms)
    ✓ #3074 live changes() (38ms)
    ✓ #3074 non-live changes(), no attachments (42ms)
    ✓ #3074 live changes(), no attachments (50ms)
    ✓ #3881 filter extraneous keys from _attachments (46ms)
    ✓ #2771 allDocs() 1, single attachment (42ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts (44ms)
    ✓ #2771 allDocs() 6, no docs (44ms)
    ✓ #2771 allDocs() 7, revisions and deletions (40ms)
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (83ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (53ms)
    ✓ Test get() with binary:true and stubs (49ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior (42ms)
    ✓ Testing with invalid docs (69ms)
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback (42ms)
    ✓ Test create attachment without callback (54ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (48ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (54ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (40ms)
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (64ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (128ms)
    ✓ #2709 `revpos` with putAttachment (67ms)
    ✓ #2709 `revpos` with inline attachment (47ms)
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc (39ms)

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (148ms)
    ✓ Replicate same doc, same atts (128ms)
    ✓ Replicate same doc, same atts 2 (110ms)
    ✓ Attachments replicate (60ms)
    ✓ Attachment types replicate (65ms)
    ✓ Many many attachments replicate (200ms)
    ✓ Many many png attachments replicate (209ms)
    ✓ Multiple attachments replicate (108ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (86ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (78ms)
    ✓ #3932 attachments with tricky revpos (147ms)
    ✓ replication with changing attachments (97ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (204ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (200ms)
    ✓ Replicate same doc, same atts (176ms)
    ✓ Replicate same doc, same atts 2 (175ms)
    ✓ Attachments replicate (81ms)
    ✓ Attachment types replicate (102ms)
    ✓ Many many attachments replicate (366ms)
    ✓ Many many png attachments replicate (291ms)
    ✓ Multiple attachments replicate (119ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (126ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (163ms)
    ✓ #3932 attachments with tricky revpos (266ms)
    ✓ replication with changing attachments (149ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (173ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (120ms)
    ✓ Replicate same doc, same atts (101ms)
    ✓ Replicate same doc, same atts 2 (99ms)
    ✓ Attachments replicate (65ms)
    ✓ Attachment types replicate (55ms)
    ✓ Many many attachments replicate (138ms)
    ✓ Many many png attachments replicate (161ms)
    ✓ Multiple attachments replicate (110ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (78ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (82ms)
    ✓ #3932 attachments with tricky revpos (209ms)
    ✓ replication with changing attachments (128ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (109ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate (47ms)
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (41ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs (47ms)
    ✓ Bulk docs with a promise
    ✓ Basic checks (61ms)
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (50ms)
    ✓ Fail to fetch a doc after db was deleted (47ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (48ms)
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (272ms)
    ✓ 2839 implement revs_limit (198ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs (59ms)
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (69ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (304ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter (39ms)
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request (56ms)
    ✓ Changes limit and view instead of filter (41ms)
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (73ms)
    ✓ Changes with style = all_docs and a callback for complete (58ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (326ms)
    ✓ #3579 changes firing 1 too many times (76ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (133ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (45ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1025ms)
    ✓ supports return_docs=false
    ✓ should respects limit (74ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (190ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (318ms)
    ✓ #3579 changes firing 1 too many times (68ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (67ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (65ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (611ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test (39ms)
    ✓ Compact more complicated tree (133ms)
    ✓ Compact two times more complicated tree (111ms)
    ✓ Compact database with at least two documents (162ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (46ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (44ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1375ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1410ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (250ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (285ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (393ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level (39ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a (40ms)
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (584ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (566ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (57ms)
    ✓ Indexing event
    ✓ Concurrent queries (46ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (42ms)
    ✓ Indexing event (61ms)
    ✓ Concurrent queries (41ms)

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (69ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (47ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (56ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (41ms)
    ✓ #2951 Parallelized gets with 409s/404s (69ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (59ms)
    ✓ Test get with conflicts (39ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs (47ms)
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params (38ms)
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (171ms)
    ✓ 4358 db.destroy rejects when server is down (229ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (502ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (502ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (501ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (501ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (72ms)
    ✓ Testing issue #221 again (71ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (80ms)
    ✓ Testing issue #221 again (124ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (57ms)
    ✓ Testing issue #221 again (70ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (42ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (229ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (235ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (386ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (362ms)
    ✓ #3179 conflicts synced, non-live sync (233ms)
    ✓ #3179 conflicts synced, live sync (282ms)
    ✓ #3179 conflicts synced, live repl (338ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (141ms)
    ✓ #3179 conflicts synced, non-live sync (146ms)
    ✓ #3179 conflicts synced, live sync (159ms)
    ✓ #3179 conflicts synced, live repl (172ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (164ms)
    ✓ #3179 conflicts synced, non-live sync (133ms)
    ✓ #3179 conflicts synced, live sync (150ms)
    ✓ #3179 conflicts synced, live repl (267ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (42ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (60ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (49ms)
    ✓ Test basic pull replication plain api (52ms)
    ✓ Test basic pull replication plain api 2 (55ms)
    ✓ Test pull replication with many changes (162ms)
    ✓ Test basic pull replication with funny ids (46ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (558ms)
    ✓ Test correct # docs replicated with staggered revs (81ms)
    ✓ Local DB contains documents (94ms)
    ✓ Test basic push replication (51ms)
    ✓ Test basic push replication take 2 (98ms)
    ✓ Test basic push replication sequence tracking (72ms)
    ✓ Test checkpoint (61ms)
    ✓ Test live pull checkpoint (68ms)
    ✓ Test type of progress values (42ms)
    ✓ Test live push checkpoint (69ms)
    ✓ Test checkpoint 2 (74ms)
    ✓ Test checkpoint 3 :) (58ms)
    ✓ Test disable checkpoints on both source and target (44ms)
    ✓ Test write checkpoints on source only (42ms)
    ✓ Test write checkpoints on target only (57ms)
    ✓ Test replication resumes when checkpointing is enabled (59ms)
    ✓ Test replication resumes when checkpointing is disabled (51ms)
    ✓ Test replication resumes when checkpointing on source only (49ms)
    ✓ Test replication resumes when checkpointing on target only (65ms)
    ✓ #3136 open revs returned correctly 1 (113ms)
    ✓ #3136 open revs returned correctly 2 (122ms)
    ✓ #3136 winningRev has a lower seq (85ms)
    ✓ #3136 same changes with style=all_docs (103ms)
    ✓ #3136 style=all_docs with conflicts (100ms)
    ✓ #3136 style=all_docs with conflicts reversed (95ms)
    ✓ Test checkpoint read only 3 :) (66ms)
    ✓ Testing allDocs with some conflicts (issue #468) (87ms)
    ✓ Test basic conflict (50ms)
    ✓ Test _conflicts key (63ms)
    ✓ Test basic live pull replication (65ms)
    ✓ Test basic live push replication (64ms)
    ✓ test-cancel-pull-replication (174ms)
    ✓ Test basic events (57ms)
    ✓ Replication filter (47ms)
    ✓ Replication with different filters (68ms)
    ✓ Replication doc ids (42ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (87ms)
    ✓ Replication with same filters (69ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (53ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (58ms)
    ✓ Replication with deleted doc (52ms)
    ✓ 5904 - replication with deleted doc and value (53ms)
    ✓ Replication notifications (53ms)
    ✓ Replication with remote conflict (91ms)
    ✓ Replicate and modify three times (83ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (42ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (56ms)
    ✓ Replicates deleted docs w/ compaction (62ms)
    ✓ Replicates modified docs (issue #2636) (41ms)
    ✓ Replication of multiple remote conflicts (#789) (54ms)
    ✓ Replicate large number of docs (63ms)
    ✓ Ensure checkpoint after deletion (90ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (87ms)
    ✓ #3999-1 should not start over if last_seq mismatches (97ms)
    ✓ #3999-2 should start over if no common session is found (86ms)
    ✓ #3999-3 should not start over if common session is found (103ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (133ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (72ms)
    ✓ Report write failures if whole saving fails (#942) (65ms)
    ✓ Test consecutive replications with different query_params (74ms)
    ✓ Test consecutive replications with different query_params and promises (66ms)
    ✓ Test consecutive replications with different doc_ids (87ms)
    ✓ #3962 - Test many attachments (163ms)
    ✓ doc count after multiple replications (111ms)
    ✓ issue #300 rev id unique per doc (60ms)
    ✓ issue #585 Store checkpoint on target db. (83ms)
    ✓ should work with a read only source (51ms)
    ✓ issue #2342 update_seq after replication (75ms)
    ✓ should cancel for live replication (555ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (51ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (42ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (44ms)
    ✓ #3606 - live repl with doc_ids (45ms)
    ✓ #3606 - live repl with view (46ms)
    ✓ #3569 - 409 during replication (191ms)
    ✓ #3270 triggers "change" events with .docs property (82ms)
    ✓ #3543 replication with a ddoc filter (59ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (89ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (86ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (42ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (43ms)
    ✓ #4293 Triggers extra replication events (149ms)
    ✓ Heartbeat gets passed (51ms)
    ✓ Timeout gets passed (49ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (94ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (113ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (107ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (69ms)
    ✓ Test basic pull replication plain api (68ms)
    ✓ Test basic pull replication plain api 2 (72ms)
    ✓ Test pull replication with many changes (190ms)
    ✓ Test basic pull replication with funny ids (69ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (676ms)
    ✓ Test correct # docs replicated with staggered revs (151ms)
    ✓ Local DB contains documents (74ms)
    ✓ Test basic push replication (73ms)
    ✓ Test basic push replication take 2 (69ms)
    ✓ Test basic push replication sequence tracking (112ms)
    ✓ Test checkpoint (87ms)
    ✓ Test live pull checkpoint (105ms)
    ✓ Test type of progress values (68ms)
    ✓ Test live push checkpoint (98ms)
    ✓ Test checkpoint 2 (111ms)
    ✓ Test checkpoint 3 :) (112ms)
    ✓ Test disable checkpoints on both source and target (80ms)
    ✓ Test write checkpoints on source only (87ms)
    ✓ Test write checkpoints on target only (71ms)
    ✓ Test replication resumes when checkpointing is enabled (95ms)
    ✓ Test replication resumes when checkpointing is disabled (75ms)
    ✓ Test replication resumes when checkpointing on source only (85ms)
    ✓ Test replication resumes when checkpointing on target only (89ms)
    ✓ #3136 open revs returned correctly 1 (237ms)
    ✓ #3136 open revs returned correctly 2 (242ms)
    ✓ #3136 winningRev has a lower seq (193ms)
    ✓ #3136 same changes with style=all_docs (142ms)
    ✓ #3136 style=all_docs with conflicts (165ms)
    ✓ #3136 style=all_docs with conflicts reversed (147ms)
    ✓ Test checkpoint read only 3 :) (92ms)
    ✓ Testing allDocs with some conflicts (issue #468) (118ms)
    ✓ Test basic conflict (68ms)
    ✓ Test _conflicts key (96ms)
    ✓ Test basic live pull replication (89ms)
    ✓ Test basic live push replication (99ms)
    ✓ test-cancel-pull-replication (200ms)
    ✓ Test basic events (70ms)
    ✓ Replication filter (73ms)
    ✓ Replication with different filters (108ms)
    ✓ Replication doc ids (60ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (120ms)
    ✓ Replication with same filters (93ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (99ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (131ms)
    ✓ Replication with deleted doc (97ms)
    ✓ 5904 - replication with deleted doc and value (73ms)
    ✓ Replication notifications (59ms)
    ✓ Replication with remote conflict (159ms)
    ✓ Replicate and modify three times (143ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (50ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (86ms)
    ✓ Replicates deleted docs w/ compaction (109ms)
    ✓ Replicates modified docs (issue #2636) (57ms)
    ✓ Replication of multiple remote conflicts (#789) (75ms)
    ✓ Replicate large number of docs (86ms)
    ✓ Ensure checkpoint after deletion (119ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (167ms)
    ✓ #909 Filtered replication bails at paging limit (74ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (154ms)
    ✓ #3999-1 should not start over if last_seq mismatches (122ms)
    ✓ #3999-2 should start over if no common session is found (104ms)
    ✓ #3999-3 should not start over if common session is found (186ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (152ms)
    ✓ (#1307) - replicate empty database (44ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (96ms)
    ✓ Report write failures if whole saving fails (#942) (101ms)
    ✓ Test consecutive replications with different query_params (89ms)
    ✓ Test consecutive replications with different query_params and promises (89ms)
    ✓ Test consecutive replications with different doc_ids (112ms)
    ✓ #3962 - Test many attachments (154ms)
    ✓ doc count after multiple replications (132ms)
    ✓ issue #300 rev id unique per doc (68ms)
    ✓ issue #585 Store checkpoint on target db. (111ms)
    ✓ should work with a read only source (68ms)
    ✓ issue #2342 update_seq after replication (84ms)
    ✓ should cancel for live replication (557ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (76ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (128ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (113ms)
    ✓ #3606 - live repl with doc_ids (62ms)
    ✓ #3606 - live repl with view (62ms)
    ✓ #3569 - 409 during replication (152ms)
    ✓ #3270 triggers "change" events with .docs property (64ms)
    ✓ #3543 replication with a ddoc filter (68ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (109ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (104ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (57ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (52ms)
    ✓ #4293 Triggers extra replication events (211ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (113ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (138ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (148ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (52ms)
    ✓ Test basic pull replication plain api (51ms)
    ✓ Test basic pull replication plain api 2 (50ms)
    ✓ Test pull replication with many changes (175ms)
    ✓ Test basic pull replication with funny ids (51ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (664ms)
    ✓ Test correct # docs replicated with staggered revs (68ms)
    ✓ Local DB contains documents (46ms)
    ✓ Test basic push replication (55ms)
    ✓ Test basic push replication take 2 (45ms)
    ✓ Test basic push replication sequence tracking (72ms)
    ✓ Test checkpoint (55ms)
    ✓ Test live pull checkpoint (65ms)
    ✓ Test type of progress values (51ms)
    ✓ Test live push checkpoint (62ms)
    ✓ Test checkpoint 2 (60ms)
    ✓ Test checkpoint 3 :) (67ms)
    ✓ Test disable checkpoints on both source and target (41ms)
    ✓ Test write checkpoints on source only (52ms)
    ✓ Test write checkpoints on target only (41ms)
    ✓ Test replication resumes when checkpointing is enabled (64ms)
    ✓ Test replication resumes when checkpointing is disabled (48ms)
    ✓ Test replication resumes when checkpointing on source only (63ms)
    ✓ Test replication resumes when checkpointing on target only (55ms)
    ✓ #3136 open revs returned correctly 1 (221ms)
    ✓ #3136 open revs returned correctly 2 (184ms)
    ✓ #3136 winningRev has a lower seq (90ms)
    ✓ #3136 same changes with style=all_docs (93ms)
    ✓ #3136 style=all_docs with conflicts (200ms)
    ✓ #3136 style=all_docs with conflicts reversed (124ms)
    ✓ Test checkpoint read only 3 :) (59ms)
    ✓ Testing allDocs with some conflicts (issue #468) (69ms)
    ✓ Test basic conflict (43ms)
    ✓ Test _conflicts key (78ms)
    ✓ Test basic live pull replication (67ms)
    ✓ Test basic live push replication (71ms)
    ✓ test-cancel-pull-replication (161ms)
    ✓ Test basic events (50ms)
    ✓ Replication filter (53ms)
    ✓ Replication with different filters (73ms)
    ✓ Replication doc ids (48ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (77ms)
    ✓ Replication with same filters (68ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (62ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (51ms)
    ✓ Replication with deleted doc (54ms)
    ✓ 5904 - replication with deleted doc and value (43ms)
    ✓ Replication notifications (48ms)
    ✓ Replication with remote conflict (89ms)
    ✓ Replicate and modify three times (81ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (43ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ compaction (69ms)
    ✓ Replicates modified docs (issue #2636) (62ms)
    ✓ Replication of multiple remote conflicts (#789) (53ms)
    ✓ Replicate large number of docs (65ms)
    ✓ Ensure checkpoint after deletion (86ms)
    ✓ issue #1001 cb as 3rd argument (169ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (64ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (101ms)
    ✓ #3999-1 should not start over if last_seq mismatches (79ms)
    ✓ #3999-2 should start over if no common session is found (63ms)
    ✓ #3999-3 should not start over if common session is found (70ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (66ms)
    ✓ (#1307) - replicate empty database (38ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (74ms)
    ✓ Report write failures if whole saving fails (#942) (64ms)
    ✓ Test consecutive replications with different query_params (58ms)
    ✓ Test consecutive replications with different query_params and promises (67ms)
    ✓ Test consecutive replications with different doc_ids (72ms)
    ✓ #3962 - Test many attachments (62ms)
    ✓ doc count after multiple replications (84ms)
    ✓ issue #300 rev id unique per doc (50ms)
    ✓ issue #585 Store checkpoint on target db. (79ms)
    ✓ should work with a read only source (43ms)
    ✓ issue #2342 update_seq after replication (62ms)
    ✓ should cancel for live replication (532ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (49ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (73ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (46ms)
    ✓ #3606 - live repl with doc_ids (45ms)
    ✓ #3606 - live repl with view (50ms)
    ✓ #3569 - 409 during replication (142ms)
    ✓ #3270 triggers "change" events with .docs property (49ms)
    ✓ #3543 replication with a ddoc filter (52ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (71ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (71ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (41ms)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (153ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (63ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (76ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (79ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api (38ms)
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (161ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (574ms)
    ✓ Test correct # docs replicated with staggered revs (52ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2 (38ms)
    ✓ Test basic push replication sequence tracking (41ms)
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (45ms)
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (72ms)
    ✓ #3136 open revs returned correctly 2 (55ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (38ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (123ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (44ms)
    ✓ Ensure checkpoint after deletion (43ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (40ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches (40ms)
    ✓ #3999-2 should start over if no common session is found (39ms)
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (65ms)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises (41ms)
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments (38ms)
    ✓ doc count after multiple replications (56ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (42ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (528ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (121ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication (39ms)
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (72ms)
    ✓ #3852 Test basic starting with docs (89ms)
    ✓ #5710 Test pending property support (100ms)
    ✓ #3852 Test errors (73ms)
    ✓ #4627 Test no duplicate changes in live replication (2132ms)
    ✓ Test checkpoint events (52ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (151ms)
    ✓ #3852 Test basic starting with docs (147ms)
    ✓ #5710 Test pending property support (101ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2088ms)
    ✓ Test checkpoint events (67ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (82ms)
    ✓ #3852 Test basic starting with docs (100ms)
    ✓ #5710 Test pending property support (68ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2077ms)
    ✓ Test checkpoint events (57ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs (55ms)
    ✓ #5710 Test pending property support (42ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2035ms)
    ✓ Test checkpoint events (41ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (63ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (101ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (78ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (41ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (91ms)
    ✓ #3687 active event only fired once... (58ms)
    ✓ source doesn't leak "destroyed" event (173ms)
    ✓ target doesn't leak "destroyed" event (310ms)
    ✓ returnValue doesn't leak "complete" event (190ms)
    ✓ returnValue doesn't leak "error" event (168ms)
    ✓ returnValue doesn't leak "paused" event (175ms)
    ✓ returnValue doesn't leak "active" event (178ms)
    ✓ returnValue doesn't leak "change" event (175ms)
    ✓ returnValue doesn't leak "cancel" event (180ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (186ms)
    ✓ retry many times, no leaks on any events (750ms)
    ✓ 4049 retry while starting offline (56ms)
    ✓ #5157 replicate many docs with live+retry (536ms)
    ✓ 6510 no changes live+retry does not call backoff function (2002ms)

  test.retry.js-http-http
    ✓ retry stuff (117ms)
    ✓ #3687 active event only fired once... (81ms)
    ✓ source doesn't leak "destroyed" event (269ms)
    ✓ target doesn't leak "destroyed" event (266ms)
    ✓ returnValue doesn't leak "complete" event (281ms)
    ✓ returnValue doesn't leak "error" event (352ms)
    ✓ returnValue doesn't leak "paused" event (279ms)
    ✓ returnValue doesn't leak "active" event (385ms)
    ✓ returnValue doesn't leak "change" event (319ms)
    ✓ returnValue doesn't leak "cancel" event (306ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (276ms)
    ✓ retry many times, no leaks on any events (1264ms)
    ✓ 4049 retry while starting offline (68ms)
************* run test done *************
pouchdb is testing ./Variants/memdown/variant1/memdown
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 7s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660235859940


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (170ms)
    ✓ Testing allDocs opts.keys (63ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (47ms)
    ✓ Testing updating in changes (46ms)
    ✓ Testing include docs
    ✓ Testing conflicts (50ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (120ms)
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (57ms)
    ✓ test descending with startkey/endkey (43ms)
    ✓ #3082 test wrong num results returned (258ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (193ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (93ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (42ms)
    ✓ #2858 {binary: true} in allDocs() 1 (61ms)
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (39ms)
    ✓ #3074 live changes() (39ms)
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (47ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (38ms)
    ✓ Test get() with binary:true and stubs (38ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior (52ms)
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (46ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (48ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (43ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false (52ms)
    ✓ Test getAttachment with specific rev (93ms)
    ✓ Test getAttachment with diff revs and content (49ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data (40ms)
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (47ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (143ms)
    ✓ #2709 `revpos` with putAttachment (39ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (111ms)
    ✓ Replicate same doc, same atts (113ms)
    ✓ Replicate same doc, same atts 2 (108ms)
    ✓ Attachments replicate (81ms)
    ✓ Attachment types replicate (58ms)
    ✓ Many many attachments replicate (186ms)
    ✓ Many many png attachments replicate (199ms)
    ✓ Multiple attachments replicate (86ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (78ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (69ms)
    ✓ #3932 attachments with tricky revpos (238ms)
    ✓ replication with changing attachments (99ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (116ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (161ms)
    ✓ Replicate same doc, same atts (184ms)
    ✓ Replicate same doc, same atts 2 (177ms)
    ✓ Attachments replicate (83ms)
    ✓ Attachment types replicate (92ms)
    ✓ Many many attachments replicate (382ms)
    ✓ Many many png attachments replicate (304ms)
    ✓ Multiple attachments replicate (208ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (127ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (134ms)
    ✓ #3932 attachments with tricky revpos (241ms)
    ✓ replication with changing attachments (152ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (173ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (112ms)
    ✓ Replicate same doc, same atts (96ms)
    ✓ Replicate same doc, same atts 2 (98ms)
    ✓ Attachments replicate (58ms)
    ✓ Attachment types replicate (58ms)
    ✓ Many many attachments replicate (157ms)
    ✓ Many many png attachments replicate (157ms)
    ✓ Multiple attachments replicate (112ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (106ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (89ms)
    ✓ #3932 attachments with tricky revpos (152ms)
    ✓ replication with changing attachments (96ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (105ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (41ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc (58ms)
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax (90ms)
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (55ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (45ms)
    ✓ Fail to fetch a doc after db was deleted (52ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID (40ms)
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (38ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise (38ms)
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (263ms)
    ✓ 2839 implement revs_limit (263ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (38ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (257ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (44ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1 (106ms)
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (54ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (70ms)
    ✓ Changes with style = all_docs and a callback for complete (61ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (324ms)
    ✓ #3579 changes firing 1 too many times (72ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (178ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (101ms)
    ✓ changes are not duplicated (1026ms)
    ✓ supports return_docs=false
    ✓ should respects limit (72ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (189ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (317ms)
    ✓ #3579 changes firing 1 too many times (70ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (69ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (64ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (751ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (117ms)
    ✓ Compact two times more complicated tree (109ms)
    ✓ Compact database with at least two documents (162ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (48ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (38ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (43ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (38ms)
    ✓ #2931 - synchronous putAttachment + compact (1509ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1360ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (264ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents (43ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (269ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (295ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level (39ms)
    ✓ force put ok on 2nd level (40ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (603ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (677ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (55ms)
    ✓ Indexing event
    ✓ Concurrent queries (41ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (47ms)
    ✓ Indexing event (39ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (67ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (101ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (48ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (46ms)
    ✓ #2951 Parallelized gets with 409s/404s (66ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (60ms)
    ✓ Test get with conflicts (40ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (45ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (172ms)
    ✓ 4358 db.destroy rejects when server is down (279ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (500ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (500ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (62ms)
    ✓ Testing issue #221 again (74ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (81ms)
    ✓ Testing issue #221 again (113ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (53ms)
    ✓ Testing issue #221 again (66ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (42ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (222ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (310ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (387ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (243ms)
    ✓ #3179 conflicts synced, non-live sync (226ms)
    ✓ #3179 conflicts synced, live sync (268ms)
    ✓ #3179 conflicts synced, live repl (268ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (135ms)
    ✓ #3179 conflicts synced, non-live sync (158ms)
    ✓ #3179 conflicts synced, live sync (168ms)
    ✓ #3179 conflicts synced, live repl (213ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (203ms)
    ✓ #3179 conflicts synced, non-live sync (146ms)
    ✓ #3179 conflicts synced, live sync (155ms)
    ✓ #3179 conflicts synced, live repl (182ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (38ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (42ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (54ms)
    ✓ Test basic pull replication plain api 2 (62ms)
    ✓ Test pull replication with many changes (168ms)
    ✓ Test basic pull replication with funny ids (50ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (629ms)
    ✓ Test correct # docs replicated with staggered revs (87ms)
    ✓ Local DB contains documents (54ms)
    ✓ Test basic push replication (48ms)
    ✓ Test basic push replication take 2 (58ms)
    ✓ Test basic push replication sequence tracking (71ms)
    ✓ Test checkpoint (63ms)
    ✓ Test live pull checkpoint (64ms)
    ✓ Test type of progress values (45ms)
    ✓ Test live push checkpoint (66ms)
    ✓ Test checkpoint 2 (73ms)
    ✓ Test checkpoint 3 :) (67ms)
    ✓ Test disable checkpoints on both source and target (47ms)
    ✓ Test write checkpoints on source only (46ms)
    ✓ Test write checkpoints on target only (51ms)
    ✓ Test replication resumes when checkpointing is enabled (61ms)
    ✓ Test replication resumes when checkpointing is disabled (55ms)
    ✓ Test replication resumes when checkpointing on source only (48ms)
    ✓ Test replication resumes when checkpointing on target only (67ms)
    ✓ #3136 open revs returned correctly 1 (105ms)
    ✓ #3136 open revs returned correctly 2 (133ms)
    ✓ #3136 winningRev has a lower seq (85ms)
    ✓ #3136 same changes with style=all_docs (108ms)
    ✓ #3136 style=all_docs with conflicts (88ms)
    ✓ #3136 style=all_docs with conflicts reversed (151ms)
    ✓ Test checkpoint read only 3 :) (95ms)
    ✓ Testing allDocs with some conflicts (issue #468) (78ms)
    ✓ Test basic conflict (57ms)
    ✓ Test _conflicts key (62ms)
    ✓ Test basic live pull replication (64ms)
    ✓ Test basic live push replication (63ms)
    ✓ test-cancel-pull-replication (167ms)
    ✓ Test basic events (52ms)
    ✓ Replication filter (41ms)
    ✓ Replication with different filters (68ms)
    ✓ Replication doc ids (42ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (80ms)
    ✓ Replication with same filters (75ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (58ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (56ms)
    ✓ Replication with deleted doc (51ms)
    ✓ 5904 - replication with deleted doc and value (54ms)
    ✓ Replication notifications (51ms)
    ✓ Replication with remote conflict (89ms)
    ✓ Replicate and modify three times (92ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (41ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ compaction (72ms)
    ✓ Replicates modified docs (issue #2636) (43ms)
    ✓ Replication of multiple remote conflicts (#789) (50ms)
    ✓ Replicate large number of docs (55ms)
    ✓ Ensure checkpoint after deletion (81ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (67ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (88ms)
    ✓ #3999-1 should not start over if last_seq mismatches (103ms)
    ✓ #3999-2 should start over if no common session is found (89ms)
    ✓ #3999-3 should not start over if common session is found (83ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (68ms)
    ✓ (#1307) - replicate empty database (40ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (65ms)
    ✓ Report write failures if whole saving fails (#942) (65ms)
    ✓ Test consecutive replications with different query_params (73ms)
    ✓ Test consecutive replications with different query_params and promises (66ms)
    ✓ Test consecutive replications with different doc_ids (90ms)
    ✓ #3962 - Test many attachments (167ms)
    ✓ doc count after multiple replications (121ms)
    ✓ issue #300 rev id unique per doc (50ms)
    ✓ issue #585 Store checkpoint on target db. (79ms)
    ✓ should work with a read only source (47ms)
    ✓ issue #2342 update_seq after replication (65ms)
    ✓ should cancel for live replication (551ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (65ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (39ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (44ms)
    ✓ #3606 - live repl with doc_ids (42ms)
    ✓ #3606 - live repl with view (42ms)
    ✓ #3569 - 409 during replication (100ms)
    ✓ #3270 triggers "change" events with .docs property (46ms)
    ✓ #3543 replication with a ddoc filter (49ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (92ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (84ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (43ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (50ms)
    ✓ #4293 Triggers extra replication events (143ms)
    ✓ Heartbeat gets passed (44ms)
    ✓ Timeout gets passed (47ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (94ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (107ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (99ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (69ms)
    ✓ Test basic pull replication plain api (76ms)
    ✓ Test basic pull replication plain api 2 (71ms)
    ✓ Test pull replication with many changes (201ms)
    ✓ Test basic pull replication with funny ids (107ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (645ms)
    ✓ Test correct # docs replicated with staggered revs (111ms)
    ✓ Local DB contains documents (69ms)
    ✓ Test basic push replication (68ms)
    ✓ Test basic push replication take 2 (68ms)
    ✓ Test basic push replication sequence tracking (107ms)
    ✓ Test checkpoint (92ms)
    ✓ Test live pull checkpoint (103ms)
    ✓ Test type of progress values (64ms)
    ✓ Test live push checkpoint (101ms)
    ✓ Test checkpoint 2 (102ms)
    ✓ Test checkpoint 3 :) (135ms)
    ✓ Test disable checkpoints on both source and target (68ms)
    ✓ Test write checkpoints on source only (65ms)
    ✓ Test write checkpoints on target only (68ms)
    ✓ Test replication resumes when checkpointing is enabled (97ms)
    ✓ Test replication resumes when checkpointing is disabled (72ms)
    ✓ Test replication resumes when checkpointing on source only (84ms)
    ✓ Test replication resumes when checkpointing on target only (153ms)
    ✓ #3136 open revs returned correctly 1 (265ms)
    ✓ #3136 open revs returned correctly 2 (209ms)
    ✓ #3136 winningRev has a lower seq (147ms)
    ✓ #3136 same changes with style=all_docs (149ms)
    ✓ #3136 style=all_docs with conflicts (150ms)
    ✓ #3136 style=all_docs with conflicts reversed (147ms)
    ✓ Test checkpoint read only 3 :) (101ms)
    ✓ Testing allDocs with some conflicts (issue #468) (118ms)
    ✓ Test basic conflict (74ms)
    ✓ Test _conflicts key (91ms)
    ✓ Test basic live pull replication (87ms)
    ✓ Test basic live push replication (94ms)
    ✓ test-cancel-pull-replication (195ms)
    ✓ Test basic events (69ms)
    ✓ Replication filter (65ms)
    ✓ Replication with different filters (130ms)
    ✓ Replication doc ids (94ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (143ms)
    ✓ Replication with same filters (95ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (94ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (84ms)
    ✓ Replication with deleted doc (75ms)
    ✓ 5904 - replication with deleted doc and value (70ms)
    ✓ Replication notifications (61ms)
    ✓ Replication with remote conflict (135ms)
    ✓ Replicate and modify three times (141ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (66ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (79ms)
    ✓ Replicates deleted docs w/ compaction (112ms)
    ✓ Replicates modified docs (issue #2636) (58ms)
    ✓ Replication of multiple remote conflicts (#789) (69ms)
    ✓ Replicate large number of docs (75ms)
    ✓ Ensure checkpoint after deletion (117ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (167ms)
    ✓ #909 Filtered replication bails at paging limit (74ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (286ms)
    ✓ #3999-1 should not start over if last_seq mismatches (133ms)
    ✓ #3999-2 should start over if no common session is found (101ms)
    ✓ #3999-3 should not start over if common session is found (105ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (101ms)
    ✓ (#1307) - replicate empty database (45ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (97ms)
    ✓ Report write failures if whole saving fails (#942) (97ms)
    ✓ Test consecutive replications with different query_params (98ms)
    ✓ Test consecutive replications with different query_params and promises (100ms)
    ✓ Test consecutive replications with different doc_ids (117ms)
    ✓ #3962 - Test many attachments (152ms)
    ✓ doc count after multiple replications (131ms)
    ✓ issue #300 rev id unique per doc (64ms)
    ✓ issue #585 Store checkpoint on target db. (114ms)
    ✓ should work with a read only source (70ms)
    ✓ issue #2342 update_seq after replication (81ms)
    ✓ should cancel for live replication (551ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (70ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (62ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (66ms)
    ✓ #3606 - live repl with doc_ids (59ms)
    ✓ #3606 - live repl with view (66ms)
    ✓ #3569 - 409 during replication (139ms)
    ✓ #3270 triggers "change" events with .docs property (62ms)
    ✓ #3543 replication with a ddoc filter (63ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (105ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (106ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (52ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (67ms)
    ✓ #4293 Triggers extra replication events (177ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (116ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (145ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (143ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (52ms)
    ✓ Test basic pull replication plain api (49ms)
    ✓ Test basic pull replication plain api 2 (95ms)
    ✓ Test pull replication with many changes (272ms)
    ✓ Test basic pull replication with funny ids (49ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (552ms)
    ✓ Test correct # docs replicated with staggered revs (72ms)
    ✓ Local DB contains documents (46ms)
    ✓ Test basic push replication (59ms)
    ✓ Test basic push replication take 2 (47ms)
    ✓ Test basic push replication sequence tracking (74ms)
    ✓ Test checkpoint (55ms)
    ✓ Test live pull checkpoint (64ms)
    ✓ Test type of progress values (50ms)
    ✓ Test live push checkpoint (65ms)
    ✓ Test checkpoint 2 (61ms)
    ✓ Test checkpoint 3 :) (68ms)
    ✓ Test disable checkpoints on both source and target (46ms)
    ✓ Test write checkpoints on source only (48ms)
    ✓ Test write checkpoints on target only (48ms)
    ✓ Test replication resumes when checkpointing is enabled (63ms)
    ✓ Test replication resumes when checkpointing is disabled (51ms)
    ✓ Test replication resumes when checkpointing on source only (62ms)
    ✓ Test replication resumes when checkpointing on target only (56ms)
    ✓ #3136 open revs returned correctly 1 (212ms)
    ✓ #3136 open revs returned correctly 2 (334ms)
    ✓ #3136 winningRev has a lower seq (90ms)
    ✓ #3136 same changes with style=all_docs (89ms)
    ✓ #3136 style=all_docs with conflicts (88ms)
    ✓ #3136 style=all_docs with conflicts reversed (94ms)
    ✓ Test checkpoint read only 3 :) (62ms)
    ✓ Testing allDocs with some conflicts (issue #468) (72ms)
    ✓ Test basic conflict (42ms)
    ✓ Test _conflicts key (75ms)
    ✓ Test basic live pull replication (86ms)
    ✓ Test basic live push replication (56ms)
    ✓ test-cancel-pull-replication (166ms)
    ✓ Test basic events (55ms)
    ✓ Replication filter (50ms)
    ✓ Replication with different filters (62ms)
    ✓ Replication doc ids (51ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (68ms)
    ✓ Replication with same filters (58ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (61ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (51ms)
    ✓ Replication with deleted doc (54ms)
    ✓ 5904 - replication with deleted doc and value (45ms)
    ✓ Replication notifications (48ms)
    ✓ Replication with remote conflict (83ms)
    ✓ Replicate and modify three times (82ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (40ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (59ms)
    ✓ Replicates deleted docs w/ compaction (114ms)
    ✓ Replicates modified docs (issue #2636) (102ms)
    ✓ Replication of multiple remote conflicts (#789) (59ms)
    ✓ Replicate large number of docs (61ms)
    ✓ Ensure checkpoint after deletion (87ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (166ms)
    ✓ #909 Filtered replication bails at paging limit (66ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (110ms)
    ✓ #3999-1 should not start over if last_seq mismatches (72ms)
    ✓ #3999-2 should start over if no common session is found (66ms)
    ✓ #3999-3 should not start over if common session is found (61ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (67ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (66ms)
    ✓ Report write failures if whole saving fails (#942) (60ms)
    ✓ Test consecutive replications with different query_params (59ms)
    ✓ Test consecutive replications with different query_params and promises (62ms)
    ✓ Test consecutive replications with different doc_ids (74ms)
    ✓ #3962 - Test many attachments (56ms)
    ✓ doc count after multiple replications (86ms)
    ✓ issue #300 rev id unique per doc (52ms)
    ✓ issue #585 Store checkpoint on target db. (76ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication (65ms)
    ✓ should cancel for live replication (533ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (46ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (51ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (50ms)
    ✓ #3606 - live repl with doc_ids (47ms)
    ✓ #3606 - live repl with view (50ms)
    ✓ #3569 - 409 during replication (126ms)
    ✓ #3270 triggers "change" events with .docs property (55ms)
    ✓ #3543 replication with a ddoc filter (50ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (71ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (67ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (157ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (60ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (72ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (72ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (132ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (647ms)
    ✓ Test correct # docs replicated with staggered revs
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking (39ms)
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (58ms)
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (73ms)
    ✓ #3136 open revs returned correctly 2 (56ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (44ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (123ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (39ms)
    ✓ Ensure checkpoint after deletion
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (179ms)
    ✓ #909 Filtered replication bails at paging limit (79ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found (58ms)
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (58ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (38ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (521ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove() (42ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (122ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (106ms)
    ✓ #3852 Test basic starting with docs (118ms)
    ✓ #5710 Test pending property support (89ms)
    ✓ #3852 Test errors (66ms)
    ✓ #4627 Test no duplicate changes in live replication (2053ms)
    ✓ Test checkpoint events (58ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (140ms)
    ✓ #3852 Test basic starting with docs (142ms)
    ✓ #5710 Test pending property support (103ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2097ms)
    ✓ Test checkpoint events (64ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (84ms)
    ✓ #3852 Test basic starting with docs (159ms)
    ✓ #5710 Test pending property support (73ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2068ms)
    ✓ Test checkpoint events (47ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty (38ms)
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2033ms)
    ✓ Test checkpoint events (42ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (77ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (96ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (75ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (46ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (110ms)
    ✓ #3687 active event only fired once... (100ms)
    ✓ source doesn't leak "destroyed" event (191ms)
    ✓ target doesn't leak "destroyed" event (186ms)
    ✓ returnValue doesn't leak "complete" event (170ms)
    ✓ returnValue doesn't leak "error" event (171ms)
    ✓ returnValue doesn't leak "paused" event (172ms)
    ✓ returnValue doesn't leak "active" event (168ms)
    ✓ returnValue doesn't leak "change" event (178ms)
    ✓ returnValue doesn't leak "cancel" event (181ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (177ms)
    ✓ retry many times, no leaks on any events (878ms)
    ✓ 4049 retry while starting offline (39ms)
    ✓ #5157 replicate many docs with live+retry (452ms)
    ✓ 6510 no changes live+retry does not call backoff function (2001ms)

  test.retry.js-http-http
    ✓ retry stuff (127ms)
    ✓ #3687 active event only fired once... (85ms)
    ✓ source doesn't leak "destroyed" event (278ms)
    ✓ target doesn't leak "destroyed" event (288ms)
    ✓ returnValue doesn't leak "complete" event (283ms)
    ✓ returnValue doesn't leak "error" event (274ms)
    ✓ returnValue doesn't leak "paused" event (377ms)
    ✓ returnValue doesn't leak "active" event (302ms)
    ✓ returnValue doesn't leak "change" event (276ms)
    ✓ returnValue doesn't leak "cancel" event (276ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (284ms)
    ✓ retry many times, no leaks on any events (1391ms)
    ✓ 4049 retry while starting offline (60ms)
    ✓ #5157 replicate many docs with live+retry (1141ms)
************* run test done *************
variantsDepsNum: 3
/data/js-variants/multee
3
pouchdb is testing ./VariantsDeps/memdown/variant3/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660235989751


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (181ms)
    ✓ Testing allDocs opts.keys (65ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (53ms)
    ✓ Testing updating in changes (46ms)
    ✓ Testing include docs (41ms)
    ✓ Testing conflicts (63ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (146ms)
    ✓ test total_rows with both skip and limit (39ms)
    ✓ test limit option and total_rows (39ms)
    ✓ test escaped startkey/endkey
    ✓ test "key" option (66ms)
    ✓ test inclusive_end=false (76ms)
    ✓ test descending with startkey/endkey (66ms)
    ✓ #3082 test wrong num results returned (258ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (38ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (191ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text (43ms)
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data (43ms)
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (100ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type (43ms)
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4 (49ms)
    ✓ #2858 {binary: true} in get() (41ms)
    ✓ #2858 {binary: true} in allDocs() 1 (49ms)
    ✓ #2858 {binary: true} in allDocs() 2 (51ms)
    ✓ #2858 {binary: true} in allDocs() 3 (43ms)
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5 (42ms)
    ✓ #2858 {binary: true} in allDocs(), many atts (41ms)
    ✓ #2858 {binary: true} in allDocs(), mixed atts (48ms)
    ✓ #2858 {binary: true} in changes() non-live (39ms)
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts (49ms)
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet() (38ms)
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (49ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments (42ms)
    ✓ #3074 live changes(), no attachments (47ms)
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment (40ms)
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (49ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs (44ms)
    ✓ #2771 allDocs() 7, revisions and deletions (38ms)
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (57ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (110ms)
    ✓ Test get() with binary:true and stubs (42ms)
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text (38ms)
    ✓ Test getAttachment with normal text (39ms)
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback (44ms)
    ✓ Test create attachment without callback (41ms)
    ✓ Test put attachment on a doc without attachments (44ms)
    ✓ Test put attachment with unencoded name (63ms)
    ✓ 3963 length property on stubs (59ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (41ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (40ms)
    ✓ Test getAttachment with diff revs and content (38ms)
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext (41ms)
    ✓ putAttachment and getAttachment with png data (52ms)
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (50ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (133ms)
    ✓ #2709 `revpos` with putAttachment (44ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (108ms)
    ✓ Replicate same doc, same atts (193ms)
    ✓ Replicate same doc, same atts 2 (108ms)
    ✓ Attachments replicate (67ms)
    ✓ Attachment types replicate (55ms)
    ✓ Many many attachments replicate (196ms)
    ✓ Many many png attachments replicate (196ms)
    ✓ Multiple attachments replicate (76ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (77ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (70ms)
    ✓ #3932 attachments with tricky revpos (146ms)
    ✓ replication with changing attachments (100ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (116ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (167ms)
    ✓ Replicate same doc, same atts (182ms)
    ✓ Replicate same doc, same atts 2 (285ms)
    ✓ Attachments replicate (81ms)
    ✓ Attachment types replicate (97ms)
    ✓ Many many attachments replicate (366ms)
    ✓ Many many png attachments replicate (299ms)
    ✓ Multiple attachments replicate (129ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (120ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (129ms)
    ✓ #3932 attachments with tricky revpos (234ms)
    ✓ replication with changing attachments (153ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (198ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (110ms)
    ✓ Replicate same doc, same atts (96ms)
    ✓ Replicate same doc, same atts 2 (102ms)
    ✓ Attachments replicate (53ms)
    ✓ Attachment types replicate (58ms)
    ✓ Many many attachments replicate (147ms)
    ✓ Many many png attachments replicate (192ms)
    ✓ Multiple attachments replicate (86ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (74ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (90ms)
    ✓ #3932 attachments with tricky revpos (144ms)
    ✓ replication with changing attachments (95ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (120ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts (81ms)
    ✓ Replicate same doc, same atts 2 (39ms)
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate (39ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (54ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (50ms)
    ✓ Fail to fetch a doc after db was deleted (52ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (50ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs (53ms)
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (291ms)
    ✓ 2839 implement revs_limit (187ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content (41ms)
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (415ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (39ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (64ms)
    ✓ Changes with style = all_docs and a callback for complete (58ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc (45ms)
    ✓ Cancel changes (324ms)
    ✓ #3579 changes firing 1 too many times (74ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (133ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (42ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1024ms)
    ✓ supports return_docs=false
    ✓ should respects limit (73ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (202ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (319ms)
    ✓ #3579 changes firing 1 too many times (66ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (65ms)
    ✓ doesn't throw if opts.complete is undefined (39ms)
    ✓ handle individual changes in live replication (86ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (603ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree (113ms)
    ✓ Compact two times more complicated tree (106ms)
    ✓ Compact database with at least two documents (161ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (42ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (39ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (78ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (87ms)
    ✓ #2931 - synchronous putAttachment + compact (1408ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1434ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (293ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (272ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (259ms)

  test.conflicts.js-http
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level (69ms)
    ✓ force put ok on 2nd level (42ms)
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d (69ms)
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (609ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (628ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (55ms)
    ✓ Indexing event
    ✓ Concurrent queries (49ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (51ms)
    ✓ Indexing event (47ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (64ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (71ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (60ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (49ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (47ms)
    ✓ #2951 Parallelized gets with 409s/404s (68ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (62ms)
    ✓ Test get with conflicts (39ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (38ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs (39ms)
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (43ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (253ms)
    ✓ 4358 db.destroy rejects when server is down (276ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (502ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (501ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (74ms)
    ✓ Testing issue #221 again (69ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (81ms)
    ✓ Testing issue #221 again (117ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (50ms)
    ✓ Testing issue #221 again (70ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (43ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (202ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (233ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (376ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (247ms)
    ✓ #3179 conflicts synced, non-live sync (225ms)
    ✓ #3179 conflicts synced, live sync (416ms)
    ✓ #3179 conflicts synced, live repl (273ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (147ms)
    ✓ #3179 conflicts synced, non-live sync (152ms)
    ✓ #3179 conflicts synced, live sync (167ms)
    ✓ #3179 conflicts synced, live repl (178ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (142ms)
    1) #3179 conflicts synced, non-live sync


  918 passing (49s)
  17 pending
  1 failing

  1) test.issue3179.js-local-http #3179 conflicts synced, non-live sync:
     TypeError: Cannot read properties of undefined (reading '0')
      at tests/integration/test.issue3179.js:89:54
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)



************* run test done *************
pouchdb is testing ./VariantsDeps/memdown/variant2/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 4s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 417ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660236062567


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (143ms)
    ✓ Testing allDocs opts.keys (62ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (41ms)
    ✓ Testing updating in changes (41ms)
    ✓ Testing include docs
    ✓ Testing conflicts (49ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (145ms)
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (61ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (246ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (183ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (92ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get() (40ms)
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts (70ms)
    ✓ #2858 {binary: true} in changes() non-live (43ms)
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (40ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts (38ms)
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions (38ms)
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (45ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs (49ms)
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (48ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (41ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (56ms)
    ✓ #2818 - save same attachment many times in parallel (46ms)
    ✓ #2818 - revisions keep attachments (no compaction) (43ms)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (128ms)
    ✓ #2709 `revpos` with putAttachment (42ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (143ms)
    ✓ Replicate same doc, same atts (132ms)
    ✓ Replicate same doc, same atts 2 (114ms)
    ✓ Attachments replicate (61ms)
    ✓ Attachment types replicate (74ms)
    ✓ Many many attachments replicate (193ms)
    ✓ Many many png attachments replicate (202ms)
    ✓ Multiple attachments replicate (80ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (83ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (71ms)
    ✓ #3932 attachments with tricky revpos (146ms)
    ✓ replication with changing attachments (142ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (113ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (160ms)
    ✓ Replicate same doc, same atts (177ms)
    ✓ Replicate same doc, same atts 2 (167ms)
    ✓ Attachments replicate (79ms)
    ✓ Attachment types replicate (93ms)
    ✓ Many many attachments replicate (368ms)
    ✓ Many many png attachments replicate (294ms)
    ✓ Multiple attachments replicate (133ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (115ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (207ms)
    ✓ #3932 attachments with tricky revpos (236ms)
    ✓ replication with changing attachments (148ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (172ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (103ms)
    ✓ Replicate same doc, same atts (100ms)
    ✓ Replicate same doc, same atts 2 (104ms)
    ✓ Attachments replicate (52ms)
    ✓ Attachment types replicate (58ms)
    ✓ Many many attachments replicate (139ms)
    ✓ Many many png attachments replicate (193ms)
    ✓ Multiple attachments replicate (80ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (106ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (152ms)
    ✓ #3932 attachments with tricky revpos (187ms)
    ✓ replication with changing attachments (95ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (118ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate (39ms)
    ✓ Multiple attachments replicate (39ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style (38ms)
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (55ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (46ms)
    ✓ Fail to fetch a doc after db was deleted (55ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count (42ms)
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (52ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists (51ms)
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (273ms)
    ✓ 2839 implement revs_limit (187ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number (57ms)
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict (49ms)
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs (38ms)
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (300ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit (41ms)
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter (43ms)
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (59ms)
    ✓ Changes with style = all_docs and a callback for complete (59ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (321ms)
    ✓ #3579 changes firing 1 too many times (74ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (129ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs (42ms)
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (108ms)
    ✓ changes are not duplicated (1026ms)
    ✓ supports return_docs=false
    ✓ should respects limit (71ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (203ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (318ms)
    ✓ #3579 changes firing 1 too many times (65ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1016ms)
    ✓ supports return_docs=false
    ✓ should respects limit (67ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (66ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (661ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test (47ms)
    ✓ Compact more complicated tree (147ms)
    ✓ Compact two times more complicated tree (98ms)
    ✓ Compact database with at least two documents (159ms)
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (52ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (42ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (43ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807) (38ms)
    ✓ #2931 - synchronous putAttachment + compact (1397ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1397ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (263ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (271ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (351ms)

  test.conflicts.js-http
    ✓ Testing conflicts (43ms)
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (618ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (574ms)
    ✓ 5832 - update losing leaf returns correct rev

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (57ms)
    ✓ Indexing event
    ✓ Concurrent queries (40ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (41ms)
    ✓ Indexing event (45ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (65ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (70ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (64ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (53ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (47ms)
    ✓ #2951 Parallelized gets with 409s/404s (74ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (64ms)
    ✓ Test get with conflicts (44ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all" (38ms)
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (172ms)
    ✓ 4358 db.destroy rejects when server is down (276ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (502ms)
    ✓ Initial replication is ok if target returns HTTP 404 (502ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (500ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (500ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (501ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (61ms)
    ✓ Testing issue #221 again (67ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (85ms)
    ✓ Testing issue #221 again (109ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (48ms)
    ✓ Testing issue #221 again (66ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (45ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (215ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (215ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (375ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (250ms)
    ✓ #3179 conflicts synced, non-live sync (347ms)
    ✓ #3179 conflicts synced, live sync (322ms)
    ✓ #3179 conflicts synced, live repl (272ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (149ms)
    ✓ #3179 conflicts synced, non-live sync (138ms)
    ✓ #3179 conflicts synced, live sync (163ms)
    ✓ #3179 conflicts synced, live repl (164ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (143ms)
    ✓ #3179 conflicts synced, non-live sync (144ms)
    ✓ #3179 conflicts synced, live sync (144ms)
    ✓ #3179 conflicts synced, live repl (143ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (39ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents (51ms)

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get (43ms)
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (47ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (45ms)
    ✓ Test basic pull replication plain api (50ms)
    ✓ Test basic pull replication plain api 2 (49ms)
    ✓ Test pull replication with many changes (170ms)
    ✓ Test basic pull replication with funny ids (48ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (548ms)
    ✓ Test correct # docs replicated with staggered revs (80ms)
    ✓ Local DB contains documents (53ms)
    ✓ Test basic push replication (45ms)
    ✓ Test basic push replication take 2 (51ms)
    ✓ Test basic push replication sequence tracking (79ms)
    ✓ Test checkpoint (59ms)
    ✓ Test live pull checkpoint (62ms)
    ✓ Test type of progress values (54ms)
    ✓ Test live push checkpoint (90ms)
    ✓ Test checkpoint 2 (106ms)
    ✓ Test checkpoint 3 :) (68ms)
    ✓ Test disable checkpoints on both source and target (45ms)
    ✓ Test write checkpoints on source only (44ms)
    ✓ Test write checkpoints on target only (52ms)
    ✓ Test replication resumes when checkpointing is enabled (58ms)
    ✓ Test replication resumes when checkpointing is disabled (49ms)
    ✓ Test replication resumes when checkpointing on source only (49ms)
    ✓ Test replication resumes when checkpointing on target only (56ms)
    ✓ #3136 open revs returned correctly 1 (118ms)
    ✓ #3136 open revs returned correctly 2 (123ms)
    ✓ #3136 winningRev has a lower seq (86ms)
    ✓ #3136 same changes with style=all_docs (105ms)
    ✓ #3136 style=all_docs with conflicts (83ms)
    ✓ #3136 style=all_docs with conflicts reversed (97ms)
    ✓ Test checkpoint read only 3 :) (61ms)
    ✓ Testing allDocs with some conflicts (issue #468) (82ms)
    ✓ Test basic conflict (53ms)
    ✓ Test _conflicts key (66ms)
    ✓ Test basic live pull replication (61ms)
    ✓ Test basic live push replication (66ms)
    ✓ test-cancel-pull-replication (175ms)
    ✓ Test basic events (48ms)
    ✓ Replication filter (45ms)
    ✓ Replication with different filters (68ms)
    ✓ Replication doc ids (44ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (89ms)
    ✓ Replication with same filters (112ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (71ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (57ms)
    ✓ Replication with deleted doc (48ms)
    ✓ 5904 - replication with deleted doc and value (50ms)
    ✓ Replication notifications (41ms)
    ✓ Replication with remote conflict (100ms)
    ✓ Replicate and modify three times (89ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (42ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (52ms)
    ✓ Replicates deleted docs w/ compaction (69ms)
    ✓ Replicates modified docs (issue #2636) (41ms)
    ✓ Replication of multiple remote conflicts (#789) (54ms)
    ✓ Replicate large number of docs (47ms)
    ✓ Ensure checkpoint after deletion (79ms)
    ✓ issue #1001 cb as 3rd argument (166ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (94ms)
    ✓ #3999-1 should not start over if last_seq mismatches (95ms)
    ✓ #3999-2 should start over if no common session is found (89ms)
    ✓ #3999-3 should not start over if common session is found (77ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (85ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (68ms)
    ✓ Report write failures if whole saving fails (#942) (63ms)
    ✓ Test consecutive replications with different query_params (66ms)
    ✓ Test consecutive replications with different query_params and promises (145ms)
    ✓ Test consecutive replications with different doc_ids (133ms)
    ✓ #3962 - Test many attachments (180ms)
    ✓ doc count after multiple replications (131ms)
    ✓ issue #300 rev id unique per doc (50ms)
    ✓ issue #585 Store checkpoint on target db. (79ms)
    ✓ should work with a read only source (47ms)
    ✓ issue #2342 update_seq after replication (78ms)
    ✓ should cancel for live replication (547ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (49ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (46ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (41ms)
    ✓ #3606 - live repl with doc_ids (42ms)
    ✓ #3606 - live repl with view (41ms)
    ✓ #3569 - 409 during replication (100ms)
    ✓ #3270 triggers "change" events with .docs property (50ms)
    ✓ #3543 replication with a ddoc filter (52ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (78ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (113ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON) (42ms)
    ✓ #4293 Triggers extra replication events (212ms)
    ✓ Heartbeat gets passed (56ms)
    ✓ Timeout gets passed (41ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (88ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (110ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (101ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (69ms)
    ✓ Test basic pull replication plain api (76ms)
    ✓ Test basic pull replication plain api 2 (77ms)
    ✓ Test pull replication with many changes (188ms)
    ✓ Test basic pull replication with funny ids (70ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (598ms)
    ✓ Test correct # docs replicated with staggered revs (110ms)
    ✓ Local DB contains documents (75ms)
    ✓ Test basic push replication (68ms)
    ✓ Test basic push replication take 2 (82ms)
    ✓ Test basic push replication sequence tracking (129ms)
    ✓ Test checkpoint (165ms)
    ✓ Test live pull checkpoint (118ms)
    ✓ Test type of progress values (65ms)
    ✓ Test live push checkpoint (100ms)
    ✓ Test checkpoint 2 (108ms)
    ✓ Test checkpoint 3 :) (105ms)
    ✓ Test disable checkpoints on both source and target (66ms)
    ✓ Test write checkpoints on source only (75ms)
    ✓ Test write checkpoints on target only (71ms)
    ✓ Test replication resumes when checkpointing is enabled (98ms)
    ✓ Test replication resumes when checkpointing is disabled (82ms)
    ✓ Test replication resumes when checkpointing on source only (94ms)
    ✓ Test replication resumes when checkpointing on target only (94ms)
    ✓ #3136 open revs returned correctly 1 (224ms)
    ✓ #3136 open revs returned correctly 2 (206ms)
    ✓ #3136 winningRev has a lower seq (138ms)
    ✓ #3136 same changes with style=all_docs (150ms)
    ✓ #3136 style=all_docs with conflicts (137ms)
    ✓ #3136 style=all_docs with conflicts reversed (240ms)
    ✓ Test checkpoint read only 3 :) (104ms)
    ✓ Testing allDocs with some conflicts (issue #468) (115ms)
    ✓ Test basic conflict (72ms)
    ✓ Test _conflicts key (88ms)
    ✓ Test basic live pull replication (92ms)
    ✓ Test basic live push replication (89ms)
    ✓ test-cancel-pull-replication (193ms)
    ✓ Test basic events (70ms)
    ✓ Replication filter (80ms)
    ✓ Replication with different filters (102ms)
    ✓ Replication doc ids (63ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (115ms)
    ✓ Replication with same filters (94ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (98ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (76ms)
    ✓ Replication with deleted doc (68ms)
    ✓ 5904 - replication with deleted doc and value (74ms)
    ✓ Replication notifications (58ms)
    ✓ Replication with remote conflict (145ms)
    ✓ Replicate and modify three times (144ms)
    ✓ live replication, starting offline (54ms)
    ✓ Replicates deleted docs (issue #2636) (72ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (95ms)
    ✓ Replicates deleted docs w/ compaction (114ms)
    ✓ Replicates modified docs (issue #2636) (56ms)
    ✓ Replication of multiple remote conflicts (#789) (71ms)
    ✓ Replicate large number of docs (75ms)
    ✓ Ensure checkpoint after deletion (124ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (76ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (154ms)
    ✓ #3999-1 should not start over if last_seq mismatches (118ms)
    ✓ #3999-2 should start over if no common session is found (103ms)
    ✓ #3999-3 should not start over if common session is found (101ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (109ms)
    ✓ (#1307) - replicate empty database (47ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (99ms)
    ✓ Report write failures if whole saving fails (#942) (94ms)
    ✓ Test consecutive replications with different query_params (101ms)
    ✓ Test consecutive replications with different query_params and promises (110ms)
    ✓ Test consecutive replications with different doc_ids (189ms)
    ✓ #3962 - Test many attachments (164ms)
    ✓ doc count after multiple replications (129ms)
    ✓ issue #300 rev id unique per doc (70ms)
    ✓ issue #585 Store checkpoint on target db. (108ms)
    ✓ should work with a read only source (82ms)
    ✓ issue #2342 update_seq after replication (101ms)
    ✓ should cancel for live replication (555ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (65ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (62ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (64ms)
    ✓ #3606 - live repl with doc_ids (61ms)
    ✓ #3606 - live repl with view (63ms)
    ✓ #3569 - 409 during replication (144ms)
    ✓ #3270 triggers "change" events with .docs property (63ms)
    ✓ #3543 replication with a ddoc filter (122ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (165ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (111ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (47ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (61ms)
    ✓ #4293 Triggers extra replication events (180ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (118ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (134ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (145ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (45ms)
    ✓ Test basic pull replication plain api (44ms)
    ✓ Test basic pull replication plain api 2 (44ms)
    ✓ Test pull replication with many changes (170ms)
    ✓ Test basic pull replication with funny ids (49ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (562ms)
    ✓ Test correct # docs replicated with staggered revs (88ms)
    ✓ Local DB contains documents (96ms)
    ✓ Test basic push replication (65ms)
    ✓ Test basic push replication take 2 (45ms)
    ✓ Test basic push replication sequence tracking (66ms)
    ✓ Test checkpoint (51ms)
    ✓ Test live pull checkpoint (63ms)
    ✓ Test type of progress values (44ms)
    ✓ Test live push checkpoint (62ms)
    ✓ Test checkpoint 2 (57ms)
    ✓ Test checkpoint 3 :) (66ms)
    ✓ Test disable checkpoints on both source and target (40ms)
    ✓ Test write checkpoints on source only (45ms)
    ✓ Test write checkpoints on target only (40ms)
    ✓ Test replication resumes when checkpointing is enabled (70ms)
    ✓ Test replication resumes when checkpointing is disabled (47ms)
    ✓ Test replication resumes when checkpointing on source only (63ms)
    ✓ Test replication resumes when checkpointing on target only (51ms)
    ✓ #3136 open revs returned correctly 1 (211ms)
    ✓ #3136 open revs returned correctly 2 (179ms)
    ✓ #3136 winningRev has a lower seq (90ms)
    ✓ #3136 same changes with style=all_docs (88ms)
    ✓ #3136 style=all_docs with conflicts (88ms)
    ✓ #3136 style=all_docs with conflicts reversed (91ms)
    ✓ Test checkpoint read only 3 :) (58ms)
    ✓ Testing allDocs with some conflicts (issue #468) (71ms)
    ✓ Test basic conflict (45ms)
    ✓ Test _conflicts key (78ms)
    ✓ Test basic live pull replication (65ms)
    ✓ Test basic live push replication (56ms)
    ✓ test-cancel-pull-replication (213ms)
    ✓ Test basic events (51ms)
    ✓ Replication filter (47ms)
    ✓ Replication with different filters (67ms)
    ✓ Replication doc ids (48ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (67ms)
    ✓ Replication with same filters (59ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (66ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (51ms)
    ✓ Replication with deleted doc (53ms)
    ✓ 5904 - replication with deleted doc and value (45ms)
    ✓ Replication notifications (43ms)
    ✓ Replication with remote conflict (86ms)
    ✓ Replicate and modify three times (80ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (50ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (56ms)
    ✓ Replicates deleted docs w/ compaction (69ms)
    ✓ Replicates modified docs (issue #2636) (42ms)
    ✓ Replication of multiple remote conflicts (#789) (54ms)
    ✓ Replicate large number of docs (57ms)
    ✓ Ensure checkpoint after deletion (81ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (178ms)
    ✓ #909 Filtered replication bails at paging limit (69ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (102ms)
    ✓ #3999-1 should not start over if last_seq mismatches (76ms)
    ✓ #3999-2 should start over if no common session is found (102ms)
    ✓ #3999-3 should not start over if common session is found (131ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (73ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (63ms)
    ✓ Report write failures if whole saving fails (#942) (64ms)
    ✓ Test consecutive replications with different query_params (65ms)
    ✓ Test consecutive replications with different query_params and promises (60ms)
    ✓ Test consecutive replications with different doc_ids (77ms)
    ✓ #3962 - Test many attachments (55ms)
    ✓ doc count after multiple replications (89ms)
    ✓ issue #300 rev id unique per doc (49ms)
    ✓ issue #585 Store checkpoint on target db. (72ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication (60ms)
    ✓ should cancel for live replication (530ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (49ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (47ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (48ms)
    ✓ #3606 - live repl with doc_ids (48ms)
    ✓ #3606 - live repl with view (48ms)
    ✓ #3569 - 409 during replication (134ms)
    ✓ #3270 triggers "change" events with .docs property (48ms)
    ✓ #3543 replication with a ddoc filter (52ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (87ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (112ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (201ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (55ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (66ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (74ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (126ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (473ms)
    ✓ Test correct # docs replicated with staggered revs
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (51ms)
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (61ms)
    ✓ #3136 open revs returned correctly 2 (54ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs (42ms)
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed (43ms)
    ✓ Test checkpoint read only 3 :) (53ms)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict (40ms)
    ✓ Test _conflicts key (40ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (123ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (42ms)
    ✓ Ensure checkpoint after deletion (44ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (168ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (65ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (40ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication
    ✓ should cancel for live replication (524ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (122ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (68ms)
    ✓ #3852 Test basic starting with docs (91ms)
    ✓ #5710 Test pending property support (83ms)
    ✓ #3852 Test errors (62ms)
    ✓ #4627 Test no duplicate changes in live replication (2056ms)
    ✓ Test checkpoint events (51ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (130ms)
    ✓ #3852 Test basic starting with docs (143ms)
    ✓ #5710 Test pending property support (99ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2090ms)
    ✓ Test checkpoint events (60ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (153ms)
    ✓ #3852 Test basic starting with docs (156ms)
    ✓ #5710 Test pending property support (73ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2069ms)
    ✓ Test checkpoint events (45ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2029ms)
    ✓ Test checkpoint events (40ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (67ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (99ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (80ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (44ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (84ms)
    ✓ #3687 active event only fired once... (56ms)
    ✓ source doesn't leak "destroyed" event (202ms)
    ✓ target doesn't leak "destroyed" event (176ms)
    ✓ returnValue doesn't leak "complete" event (172ms)
    ✓ returnValue doesn't leak "error" event (169ms)
    ✓ returnValue doesn't leak "paused" event (177ms)
    ✓ returnValue doesn't leak "active" event (214ms)
    ✓ returnValue doesn't leak "change" event (235ms)
    ✓ returnValue doesn't leak "cancel" event (169ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (213ms)
    ✓ retry many times, no leaks on any events (734ms)
    ✓ 4049 retry while starting offline
    ✓ #5157 replicate many docs with live+retry (483ms)
    ✓ 6510 no changes live+retry does not call backoff function (2002ms)

  test.retry.js-http-http
    ✓ retry stuff (111ms)
    ✓ #3687 active event only fired once... (73ms)
    ✓ source doesn't leak "destroyed" event (285ms)
    ✓ target doesn't leak "destroyed" event (356ms)
    ✓ returnValue doesn't leak "complete" event (275ms)
    ✓ returnValue doesn't leak "error" event (278ms)
    ✓ returnValue doesn't leak "paused" event (258ms)
    ✓ returnValue doesn't leak "active" event (298ms)
    ✓ returnValue doesn't leak "change" event (279ms)
    ✓ returnValue doesn't leak "cancel" event (261ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (410ms)
    ✓ retry many times, no leaks on any events (1195ms)
    ✓ 4049 retry while starting offline (53ms)
    ✓ #5157 replicate many docs with live+retry (1301ms)
    ✓ 6510 no changes live+retry does not call backoff function (2000ms)

  test.retry.js-http-local
    ✓ retry stuff (62ms)
************* run test done *************
pouchdb is testing ./VariantsDeps/memdown/variant1/memdown
************* npm unlink module *************

removed 1 package, and audited 1029 packages in 7s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 622ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1031 packages in 3s

64 packages are looking for funding
  run `npm fund` for details

41 vulnerabilities (1 low, 9 moderate, 25 high, 6 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> pouchdb-monorepo@7.0.0-prerelease test
> bash bin/run-test.sh


> pouchdb-monorepo@7.0.0-prerelease build-node
> bash bin/build-node.sh


> pouchdb-monorepo@7.0.0-prerelease build-modules
> node bin/build-modules.js

Building pouchdb...
Building pouchdb-abstract-mapreduce...
Building pouchdb-adapter-http...
Building pouchdb-adapter-idb...
Building pouchdb-adapter-indexeddb...
Building pouchdb-adapter-leveldb...
Building pouchdb-adapter-leveldb-core...
Building pouchdb-adapter-localstorage...
Building pouchdb-adapter-memory...
Building pouchdb-adapter-utils...
Building pouchdb-binary-utils...
Building pouchdb-browser...
Building pouchdb-changes-filter...
Building pouchdb-checkpointer...
Building pouchdb-collate...
Building pouchdb-collections...
Building pouchdb-core...
Building pouchdb-errors...
Building pouchdb-fetch...
Building pouchdb-find...
Building pouchdb-for-coverage...
Building pouchdb-generate-replication-id...
Building pouchdb-json...
Building pouchdb-mapreduce...
Building pouchdb-mapreduce-utils...
Building pouchdb-md5...
Building pouchdb-merge...
Building pouchdb-node...
Building pouchdb-replication...
Building pouchdb-selector-core...
Building pouchdb-utils...
Building sublevel-pouchdb...
  ✓ wrote pouchdb-adapter-memory/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-memory/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-localstorage/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.js in vanilla mode
  ✓ wrote pouchdb-checkpointer/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.js in vanilla mode
  ✓ wrote pouchdb-errors/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.js in vanilla mode
  ✓ wrote pouchdb-generate-replication-id/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-http/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-adapter-leveldb-core/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-fetch/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-md5/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-changes-filter/lib/index.js in node mode
  ✓ wrote pouchdb-changes-filter/lib/index.es.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.js in node mode
  ✓ wrote pouchdb-fetch/lib/index.es.js in node mode
  ✓ wrote pouchdb-collate/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collate/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.js in vanilla mode
  ✓ wrote pouchdb-json/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-mapreduce-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-md5/lib/index.js in node mode
  ✓ wrote pouchdb-md5/lib/index.es.js in node mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.js in vanilla mode
  ✓ wrote pouchdb-abstract-mapreduce/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-idb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-indexeddb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-binary-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-utils/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-utils/lib/index.js in node mode
  ✓ wrote pouchdb-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-adapter-utils/lib/index.js in vanilla mode
  ✓ wrote pouchdb-adapter-utils/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-binary-utils/lib/index.js in node mode
  ✓ wrote pouchdb-binary-utils/lib/index.es.js in node mode
  ✓ wrote pouchdb-collections/lib/index.js in vanilla mode
  ✓ wrote pouchdb-collections/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.js in vanilla mode
  ✓ wrote pouchdb-merge/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-selector-core/lib/index.es.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.js in vanilla mode
  ✓ wrote sublevel-pouchdb/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-mapreduce/lib/index.js in node mode
  ✓ wrote pouchdb-mapreduce/lib/index.es.js in node mode
  ✓ wrote pouchdb-replication/lib/index.js in vanilla mode
  ✓ wrote pouchdb-replication/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.js in vanilla mode
  ✓ wrote pouchdb-core/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-find/lib/index.js in node mode
  ✓ wrote pouchdb-find/lib/index.es.js in node mode
  ✓ wrote pouchdb-find/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-find/lib/index-browser.es.js in browser mode
  ✓ wrote pouchdb-browser/lib/index.js in vanilla mode
  ✓ wrote pouchdb-browser/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.js in vanilla mode
  ✓ wrote pouchdb-node/lib/index.es.js in vanilla mode
  ✓ wrote pouchdb-for-coverage/lib/index.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.js in browser mode
  ✓ wrote pouchdb-for-coverage/lib/index.es.js in node mode
  ✓ wrote pouchdb-for-coverage/lib/index-browser.es.js in browser mode
  ✓ wrote packages/node_modules/pouchdb/lib/index.js
  ✓ wrote packages/node_modules/pouchdb/lib/index.es.js
Waiting for host to start ..
Host started :)
> pouchdb-monorepo@7.0.0-prerelease test-node
> bash bin/test-node.sh

Down server listening on port 3010
Seeded with: 1660236196343


  DB Setup
    ✓ PouchDB has a version
    ✓ PouchDB version matches package.json

  test.active_tasks.js
    ✓ Can add a task
    ✓ Can get tasks by id
    ✓ Can get all tasks
    ✓ Can update a task
    ✓ Can remove a task

  test.all_docs.js-http
    ✓ Testing all docs (147ms)
    ✓ Testing allDocs opts.keys (67ms)
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes (43ms)
    ✓ Testing updating in changes (43ms)
    ✓ Testing include docs
    ✓ Testing conflicts (50ms)
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria (153ms)
    ✓ test total_rows with both skip and limit (38ms)
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false (54ms)
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (250ms)
    ✓ test empty db
    ✓ test after db close
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  test.all_docs.js-local
    ✓ Testing all docs
    ✓ Testing allDocs opts.keys
    ✓ Testing allDocs opts.keys with skip
    ✓ Testing allDocs opts.keys with limit
    ✓ Testing allDocs invalid opts.keys
    ✓ Testing deleting in changes
    ✓ Testing updating in changes
    ✓ Testing include docs
    ✓ Testing conflicts
    ✓ test basic collation
    ✓ 3883 start_key end_key aliases
    ✓ test total_rows with a variety of criteria
    ✓ test total_rows with both skip and limit
    ✓ test limit option and total_rows
    ✓ test escaped startkey/endkey
    ✓ test "key" option
    ✓ test inclusive_end=false
    ✓ test descending with startkey/endkey
    ✓ #3082 test wrong num results returned (188ms)
    ✓ test empty db
    ✓ test after db close
    ✓ test unicode ids and revs
    ✓ 5793 _conflicts should not exist if no conflicts
    ✓ #6230 Test allDocs opts update_seq: false
    ✓ #6230 Test allDocs opts update_seq: true
    ✓ #6230 Test allDocs opts with update_seq missing

  suite2 test.attachments.js-local
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes()
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext
    ✓ putAttachment and getAttachment with png data
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (96ms)
    ✓ #2709 `revpos` with putAttachment
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js-http
    ✓ 3357 Attachment names cant start with _
    ✓ 5736 warning for putAttachment without content_type
    ✓ 5736 warning for bulkDocs attachments without content_type
    ✓ fetch atts with open_revs and missing
    ✓ issue 2803 should throw 412
    ✓ issue 2803 should throw 412 part 2
    ✓ issue 2803 should throw 412 part 3
    ✓ issue 2803 should throw 412 part 4
    ✓ #2858 {binary: true} in get()
    ✓ #2858 {binary: true} in allDocs() 1 (44ms)
    ✓ #2858 {binary: true} in allDocs() 2
    ✓ #2858 {binary: true} in allDocs() 3
    ✓ #2858 {binary: true} in allDocs() 4
    ✓ #2858 {binary: true} in allDocs() 5
    ✓ #2858 {binary: true} in allDocs(), many atts
    ✓ #2858 {binary: true} in allDocs(), mixed atts
    ✓ #2858 {binary: true} in changes() non-live
    ✓ #2858 {binary: true} in changes() non-live, many atts
    ✓ #2858 {binary: true} in changes() non-live, mixed atts
    ✓ #2858 {binary: true} non-live changes, complete event
    ✓ #2858 {binary: true} in live changes
    ✓ #2858 {binary: true} in live changes, mixed atts
    ✓ #2858 {binary: true} in live+retry changes
    ✓ #2858 {binary: true} in live changes, attachments:false
    ✓ #2858 {binary: true} in live changes, include_docs:false
    ✓ #6736 {binary: true} in bulkGet()
    ✓ Measures length correctly after put()
    ✓ #3074 non-live changes() (41ms)
    ✓ #3074 live changes()
    ✓ #3074 non-live changes(), no attachments
    ✓ #3074 live changes(), no attachments
    ✓ #3881 filter extraneous keys from _attachments
    ✓ #2771 allDocs() 1, single attachment
    ✓ #2771 allDocs() 2, many docs same att
    ✓ #2771 allDocs() 3, many docs diff atts
    ✓ #2771 allDocs() 4, mix of atts and no atts
    ✓ #2771 allDocs() 5, no atts
    ✓ #2771 allDocs() 6, no docs
    ✓ #2771 allDocs() 7, revisions and deletions
    ✓ #2771 allDocs() 8, empty attachment
    ✓ No length for non-stubs
    ✓ Test some attachments (77ms)
    ✓ Test getAttachment
    ✓ Test getAttachment with stubs
    ✓ Test get() with binary:true and stubs
    ✓ Test attachments in allDocs/changes
    ✓ Test putAttachment with base64 plaintext
    ✓ Test putAttachment with invalid base64
    ✓ Test getAttachment with empty text
    ✓ Test getAttachment with normal text
    ✓ Test getAttachment with PNG
    ✓ Test getAttachment with PNG using bulkDocs
    ✓ Test getAttachment with PNG using post
    ✓ Test postAttachment with PNG then bulkDocs
    ✓ proper stub behavior
    ✓ Testing with invalid docs
    ✓ Test create attachment and doc in one go
    ✓ Test create attachment and doc in one go without callback
    ✓ Test create attachment without callback (38ms)
    ✓ Test put attachment on a doc without attachments
    ✓ Test put attachment with unencoded name
    ✓ 3963 length property on stubs (46ms)
    ✓ Testing with invalid rev
    ✓ Test put another attachment on a doc with attachments
    ✓ Test get with attachments: true if empty attachments
    ✓ Test delete attachment from a doc (44ms)
    ✓ Test a document with a json string attachment
    ✓ Test remove doc with attachment
    ✓ Try to insert a doc with unencoded attachment
    ✓ Try to get attachment of unexistent doc
    ✓ Test synchronous putAttachment with text data
    ✓ Test synchronous putAttachment with no text data
    ✓ Test put with partial stubs
    ✓ Test put with attachments and new_edits=false
    ✓ Test getAttachment with specific rev (38ms)
    ✓ Test getAttachment with diff revs and content
    ✓ Test stubs (48ms)
    ✓ Try to get unexistent attachment of some doc
    ✓ putAttachment and getAttachment with plaintext (38ms)
    ✓ putAttachment and getAttachment with png data (59ms)
    ✓ putAttachment in new doc with base64
    ✓ #2818 - save same attachment in different revs (74ms)
    ✓ #2818 - save same attachment many times in parallel
    ✓ #2818 - revisions keep attachments (no compaction)
    ✓ #2818 - doesn't throw 409 if same filename
    ✓ #3008 test correct encoding/decoding of \u0000 etc.
    ✓ putAttachment and getAttachment with big png data (129ms)
    ✓ #2709 `revpos` with putAttachment (41ms)
    ✓ #2709 `revpos` with inline attachment
    ✓ #2709 `revpos` with allDocs
    ✓ #7403 {attachments: true, binary: true, include_docs: true} in allDocs with one missing doc

  suite2 test.attachments.js- local:http
    ✓ Attachments replicate back and forth (115ms)
    ✓ Replicate same doc, same atts (109ms)
    ✓ Replicate same doc, same atts 2 (109ms)
    ✓ Attachments replicate (65ms)
    ✓ Attachment types replicate (57ms)
    ✓ Many many attachments replicate (175ms)
    ✓ Many many png attachments replicate (192ms)
    ✓ Multiple attachments replicate (77ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (93ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (68ms)
    ✓ #3932 attachments with tricky revpos (146ms)
    ✓ replication with changing attachments (116ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (130ms)

  suite2 test.attachments.js- http:http
    ✓ Attachments replicate back and forth (168ms)
    ✓ Replicate same doc, same atts (179ms)
    ✓ Replicate same doc, same atts 2 (178ms)
    ✓ Attachments replicate (78ms)
    ✓ Attachment types replicate (116ms)
    ✓ Many many attachments replicate (339ms)
    ✓ Many many png attachments replicate (284ms)
    ✓ Multiple attachments replicate (125ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (118ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (236ms)
    ✓ #3932 attachments with tricky revpos (221ms)
    ✓ replication with changing attachments (149ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (170ms)

  suite2 test.attachments.js- http:local
    ✓ Attachments replicate back and forth (105ms)
    ✓ Replicate same doc, same atts (96ms)
    ✓ Replicate same doc, same atts 2 (95ms)
    ✓ Attachments replicate (51ms)
    ✓ Attachment types replicate (52ms)
    ✓ Many many attachments replicate (151ms)
    ✓ Many many png attachments replicate (176ms)
    ✓ Multiple attachments replicate (172ms)
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698) (79ms)
    ✓ Multiple attachments replicate, different docs png (#2698) (92ms)
    ✓ #3932 attachments with tricky revpos (210ms)
    ✓ replication with changing attachments (97ms)
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication (126ms)

  suite2 test.attachments.js- local:local
    ✓ Attachments replicate back and forth
    ✓ Replicate same doc, same atts
    ✓ Replicate same doc, same atts 2
    ✓ Attachments replicate
    ✓ Attachment types replicate
    ✓ Many many attachments replicate
    ✓ Many many png attachments replicate
    ✓ Multiple attachments replicate
    - #3961 Many attachments on same doc
    ✓ Multiple attachments replicate, different docs (#2698)
    ✓ Multiple attachments replicate, different docs png (#2698)
    ✓ #3932 attachments with tricky revpos
    ✓ replication with changing attachments
    ✓ 3955 race condition in put
    ✓ #8456 bad attachment rev after replication

  test.basics.js-http
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Testing issue #48 (55ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted (53ms)
    ✓ Fail to fetch a doc after db was deleted (53ms)
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes (40ms)
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.basics.js-local
    ✓ Create a pouch without new keyword
    ✓ Name is accessible via instance
    ✓ 4314 Create a pouch with + in name
    ✓ Creating Pouch without name will throw
    ✓ 4314 Create a pouch with urlencoded name
    ✓ 4219 destroy a pouch
    ✓ 4339 throw useful error if method called on stale instance
    ✓ [4595] should reject xhr errors
    ✓ [4595] should emit error event on xhr error
    ✓ Add a doc
    ✓ Get invalid id
    ✓ Missing doc should contain ID in error object
    ✓ PUTed Conflicted doc should contain ID in error object
    ✓ POSTed Conflicted doc should contain ID in error object
    ✓ Add a doc with a promise
    ✓ Add a doc with opts object
    ✓ Modify a doc
    ✓ Modifying a doc that has rewritten content
    ✓ Modify a doc with a promise
    ✓ Read db id
    ✓ Read db id with promise
    ✓ Close db
    ✓ Close db with a promise
    ✓ Read db id after closing Close
    ✓ Modify a doc with incorrect rev
    ✓ Remove doc
    ✓ Remove doc with a promise
    ✓ Remove doc with new syntax
    ✓ Remove doc with new syntax and a promise
    ✓ Doc removal leaves only stub
    ✓ Remove doc twice with specified id
    ✓ Remove doc, no callback
    ✓ Delete document without id
    ✓ Delete document with many args
    ✓ Delete document with many args, callback style
    ✓ Delete doc with id + rev + no opts
    ✓ Delete doc with id + rev + no opts, callback style
    ✓ Delete doc with doc + opts
    ✓ Delete doc with doc + opts, callback style
    ✓ Delete doc with rev in opts
    ✓ Bulk docs
    ✓ Bulk docs with a promise
    ✓ Basic checks
    ✓ update with invalid rev
    ✓ Doc validation
    ✓ Replication fields (#2442)
    ✓ Allows _access field in documents (#8171)
    ✓ Testing issue #48 (50ms)
    ✓ Testing valid id
    ✓ Put doc without _id should fail
    ✓ Put doc with bad reserved id should fail
    ✓ update_seq persists
    ✓ deletions persists
    ✓ #4126 should not store raw Dates
    ✓ Create a db with a reserved name
    ✓ Error when document is not an object
    ✓ Test instance update_seq updates correctly
    ✓ Fail to fetch a doc after db was deleted
    ✓ Fail to fetch a doc after db was deleted
    ✓ Cant add docs with empty ids
    ✓ Test doc with percent in ID
    ✓ db.info should give auto_compaction = false (#2744)
    ✓ db.info should give auto_compaction = true (#2744)
    ✓ db.info should give adapter name (#3567)
    ✓ db.info should give correct doc_count
    ✓ putting returns {ok: true}
    ✓ putting is override-able
    ✓ issue 2779, deleted docs, old revs COUCHDB-292
    ✓ issue 2888, successive deletes and writes
    ✓ 2 invalid puts
    ✓ Docs save "null" value
    ✓ replace PouchDB.destroy() (express-pouchdb#203)
    ✓ 3968, keeps all object fields
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ test info() after db close
    ✓ test get() after db close
    ✓ test close() after db close
    ✓ 7259 should have "this" keyword properly scoped
    ✓ should allow unicode doc ids
    ✓ should have same blob support for 2 dbs
    ✓ 6053, PouchDB.plugin() resets defaults
    ✓ #5471 PouchDB.plugin() should throw error if passed wrong type or empty object

  test.bulk_docs.js-local
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs
    ✓ #2935 new_edits=false correct number
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Deleting _local docs with bulkDocs, not found
    ✓ Deleting _local docs with bulkDocs, wrong rev
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (259ms)
    ✓ 2839 implement revs_limit (193ms)
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false

  test.bulk_docs.js-http
    ✓ Testing bulk docs
    ✓ #6039 test id in bulk docs for conflict
    ✓ No id in bulk docs
    ✓ No _rev and new_edits=false
    ✓ 7829 bare rev 1- with new_edits=false
    ✓ Test empty bulkDocs
    ✓ Test many bulkDocs
    ✓ Test errors on invalid doc id
    ✓ Test two errors on invalid doc id
    ✓ No docs
    ✓ Jira 911
    ✓ Test multiple bulkdocs (63ms)
    ✓ #2935 new_edits=false correct number (52ms)
    ✓ #2935 new_edits=false correct number 2
    ✓ bulk docs update then delete then conflict (48ms)
    ✓ bulk_docs delete then undelete
    ✓ #2935 new_edits=false with single unauthorized
    ✓ Deleting _local docs with bulkDocs
    ✓ Bulk with new_edits=false
    ✓ Testing successive new_edits to the same doc
    ✓ #3062 bulkDocs with staggered seqs
    ✓ Testing successive new_edits to the same doc, different content
    ✓ Testing successive new_edits to two doc
    ✓ Deletion with new_edits=false
    ✓ Deletion with new_edits=false, no history
    ✓ Modification with new_edits=false, no history
    ✓ Deletion with new_edits=false, no history, no revisions
    ✓ Testing new_edits=false in req body
    ✓ 656 regression in handling deleted docs
    ✓ Test quotes in doc ids
    ✓ Bulk docs empty list
    ✓ handles simultaneous writes
    ✓ bulk docs input by array
    ✓ Bulk empty list
    ✓ Bulk docs not an array
    ✓ Bulk docs not an object
    ✓ Bulk docs two different revisions to same document id
    ✓ 4204 respect revs_limit (264ms)
    ✓ 2839 implement revs_limit
    ✓ 4372 revs_limit deletes old revisions of the doc
    ✓ 4372 revs_limit with auto_compaction deletes old revisions of the doc
    ✓ 4712 invalid rev for new doc generates conflict
    ✓ 5793 bulk docs accepts _conflicts when new_edits=false (41ms)

  test.bulk_get.js-http
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.bulk_get.js-local
    ✓ test bulk get with rev specified
    ✓ test bulk get with latest=true
    ✓ test bulk get with no rev specified
    ✓ _revisions is not returned by default
    ✓ #5886 bulkGet with reserved id
    ✓ _revisions is returned when specified
    ✓ _revisions is returned when specified, using implicit rev
    ✓ attachments are not included by default
    ✓ attachments are included when specified
    ✓ attachments are included when specified, using implicit rev

  test.changes.js-http
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter (54ms)
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc (39ms)
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs (64ms)
    ✓ Changes with style = all_docs and a callback for complete (64ms)
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (327ms)
    ✓ #3579 changes firing 1 too many times (71ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly (129ms)
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (102ms)
    ✓ changes are not duplicated (1022ms)
    ✓ supports return_docs=false
    ✓ should respects limit (72ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (204ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  test.changes.js-local
    ✓ All changes
    ✓ Changes with complete callback as param
    ✓ Promise resolved when changes cancelled
    - Live changes should clean listener when cancelled
    ✓ Changes Since
    ✓ Changes Since and limit limit 1
    ✓ Changes Since and limit limit 0
    ✓ Changes limit
    ✓ Changes with filter not present in ddoc
    ✓ Changes with `filters` key not present in ddoc
    ✓ Changes limit and filter
    ✓ Changes with shorthand function name
    ✓ Changes with filter from nonexistent ddoc
    ✓ Changes with view not present in ddoc
    ✓ Changes with `views` key not present in ddoc
    ✓ #4451 Changes with invalid view filter
    ✓ 3356 throw inside a filter
    ✓ Changes with missing param `view` in request
    ✓ Changes limit and view instead of filter
    ✓ #3609 view option implies filter: _view
    ✓ Immediately cancel changes
    ✓ Changes with invalid ddoc view name
    ✓ Changes with invalid ddoc view name 2
    ✓ Changes with style = all_docs
    ✓ Changes with style = all_docs and a callback for complete
    ✓ Changes limit = 0
    ✓ Changes doc
    - Descending many changes
    ✓ live-changes
    ✓ Multiple watchers
    ✓ Continuous changes doc
    ✓ Cancel changes (315ms)
    ✓ #3579 changes firing 1 too many times (64ms)
    ✓ Kill database while listening to live changes
    ✓ #3136 style=all_docs
    ✓ #4191 revs_diff causes endless loop
    ✓ #3136 style=all_docs & include_docs
    ✓ changes-filter with query params
    ✓ Non-live changes filter
    ✓ Non-live changes filter, descending
    ✓ #2569 Non-live doc_ids filter
    ✓ #2569 Big non-live doc_ids filter
    ✓ #2569 Live doc_ids filter
    ✓ #2569 Big live doc_ids filter
    ✓ #2569 Non-live doc_ids filter with filter=_doc_ids
    ✓ #2569 Live doc_ids filter with filter=_doc_ids
    ✓ Changes to same doc are grouped
    ✓ Changes with conflicts are handled correctly
    ✓ Change entry for a deleted doc
    ✓ changes large number of docs
    ✓ Calling db.changes({since: 'now'})
    ✓ Calling db.changes({since: 'latest'})
    ✓ Closing db does not cause a crash if changes cancelled
    ✓ fire-complete-on-cancel (100ms)
    ✓ changes are not duplicated (1039ms)
    ✓ supports return_docs=false
    ✓ should respects limit (67ms)
    ✓ doesn't throw if opts.complete is undefined
    ✓ handle individual changes in live replication (61ms)
    ✓ changes-filter without filter
    ✓ #3539 - Exception in changes is fine
    ✓ Changes with selector
    ✓ Changes with selector, explicit filter
    ✓ Changes with selector and mismatched filter
    ✓ Changes with limit and selector

  changes-standalone
    - Changes reports errors

  test.close.js-local
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  test.close.js-http
    ✓ should emit destroyed even when closed (sync)
    ✓ should emit destroyed even when closed (async)
    ✓ should emit closed even when destroyed (async #2)
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test unref for coverage
    ✓ test double unref for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test close-then-destroyed for coverage
    ✓ test destroy-then-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
    ✓ test destroy-then-close-and-close for coverage
precondition_failed: Database not open
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/packages/node_modules/pouchdb/lib/index.js:614:16)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at commonUtils.loadPouchDBForNode (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:92:17)
    at commonUtils.loadPouchDB (/data/js-variants/multee/Clients/memdown/pouchdb/tests/common-utils.js:78:39)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/tests/integration/node.setup.js:21:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:366:3
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/data/js-variants/multee/Clients/memdown/pouchdb/node_modules/mocha/bin/_mocha:365:10)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47

  suite2 test.compaction.js-http
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (614ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test (61ms)
    ✓ Compact more complicated tree (145ms)
    ✓ Compact two times more complicated tree (102ms)
    ✓ Compact database with at least two documents (164ms)
    ✓ Compact deleted document (40ms)
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807) (44ms)
    ✓ Compaction removes non-leaf revs pt 2 (#2807) (40ms)
    ✓ Compaction removes non-leaf revs pt 3 (#2807) (44ms)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (1377ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (1377ms)

  suite2 test.compaction.js-local
    ✓ #3350 compact should return {ok: true}
    ✓ compact with options object
    ✓ #2913 massively parallel compaction (255ms)
    ✓ Compaction document with no revisions to remove
    ✓ Compation on empty db
    ✓ Compation on empty db with interval option
    ✓ Simple compation test
    ✓ Compact more complicated tree
    ✓ Compact two times more complicated tree
    ✓ Compact database with at least two documents
    ✓ Compact deleted document
    ✓ Compact db with sql-injecty doc id
    ✓ Compaction removes non-leaf revs (#2807)
    ✓ Compaction removes non-leaf revs pt 2 (#2807)
    ✓ Compaction removes non-leaf revs pt 3 (#2807)
    - Compaction removes non-leaf revs pt 4 (#2807)
    ✓ Compaction removes non-leaf revs pt 5 (#2807)
    ✓ #2931 - synchronous putAttachment + compact (279ms)
    ✓ #2931 - synchronous putAttachment + compact 2 (381ms)

  test.conflicts.js-http
    ✓ Testing conflicts (40ms)
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (583ms)
    ✓ 5832 - update losing leaf returns correct rev

  test.conflicts.js-local
    ✓ Testing conflicts
    ✓ Testing conflicts
    ✓ force put ok on 1st level
    ✓ force put ok on 2nd level
    ✓ Conflict resolution 1
    ✓ Conflict resolution 2
    ✓ Conflict resolution 3
    ✓ Conflict resolution 4-a
    ✓ Conflict resolution 4-b
    ✓ Conflict resolution 4-c
    ✓ Conflict resolution 4-d
    ✓ Conflict resolution 4-e
    ✓ Conflict resolution 5-a
    ✓ Conflict resolution 5-b
    ✓ Conflict resolution 5-c
    ✓ #2543 excessive recursion with merging (623ms)
    ✓ 5832 - update losing leaf returns correct rev (50ms)

  constructor errors
    ✓ should error on an undefined name
    ✓ should error on an undefined adapter
    ✓ should error on an undefined view adapter
    ✓ should error on a null name

  defaults
    ✓ should allow prefixes
    ✓ Defaults leaks eventEmitters
    ✓ should allow us to set a prefix by default
    ✓ should allow us to use memdown
    ✓ should allow us to destroy memdown
    ✓ should allow us to use memdown by default
    ✓ should inform us when using memdown
    ✓ constructor emits destroyed when using defaults
    ✓ db emits destroyed when using defaults
    ✓ constructor emits creation event
    ✓ PouchDB emits destroyed when using defaults
    ✓ PouchDB emits created when using defaults
    ✓ should be transitive (#5922)

  test.design_docs.js-http
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (56ms)
    ✓ Indexing event
    ✓ Concurrent queries (43ms)

  test.design_docs.js-local
    ✓ Test writing design doc
    ✓ Changes filter
    ✓ Basic views (45ms)
    ✓ Indexing event (40ms)
    ✓ Concurrent queries

  test.deterministicrevs.js-local
    ✓ deterministic_revs=true so revision for two docs that are the same will be equal
    ✓ deterministic_revs=false so revision for two docs that are the same will be different
    ✓ includes revision in md5 hash
    ✓ replication and then update and delete creates same rev

  test.events.js-local
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (64ms)

  test.events.js-http
    ✓ PouchDB emits creation event
    ✓ PouchDB emits destruction event
    ✓ PouchDB emits destruction event on PouchDB object
    ✓ PouchDB emits destroyed when using {name: foo}
    ✓ db emits destroyed on all DBs
    ✓ 3900 db emits destroyed event
    ✓ 3900 db emits destroyed event 2
    ✓ emit creation event
    ✓ #4168 multiple constructor calls don't leak listeners
    ✓ 4922 Destroyed is not called twice (68ms)

  test.failures.js
    invalid path
      ✓ fails gracefully in first API call
      ✓ fails gracefully in first changes() call
      ✓ fails for all API calls
    error stack
      ✓ INVALID_ID error stack

  test.get.js-http
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev (48ms)
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch (46ms)
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree (44ms)
    ✓ #2951 Parallelized gets with 409s/404s (102ms)
    ✓ #2951 Parallelized _local gets with 409s/404s (61ms)
    ✓ Test get with conflicts (39ms)
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.get.js-local
    ✓ Get doc
    ✓ Get design doc
    ✓ Check error of deleted document
    ✓ Get revisions of removed doc
    ✓ Testing get with rev
    ✓ Testing rev format
    ✓ Test opts.revs=true with rev other than winning
    ✓ Test opts.revs=true return only winning branch
    ✓ Test get with simple revs_info
    ✓ Test get with revs_info on tree
    ✓ #2951 Parallelized gets with 409s/404s
    ✓ #2951 Parallelized _local gets with 409s/404s
    ✓ Test get with conflicts
    ✓ Retrieve old revision
    ✓ Testing get open_revs="all"
    - Testing get with some open_revs
    ✓ Testing get with open_revs and revs
    - Testing get with open_revs on nonexistent doc
    ✓ Testing get with open_revs with wrong params
    ✓ #5883 Testing with duplicate rev hash
    ✓ 5857 - open_revs with latest=true
    ✓ 5857 - multiple open_revs for the same branch with latest=true returns one result
    ✓ 5857 - GET old revision with latest=true
    ✓ 5857 - GET old revision with latest=true, deleted leaf
    ✓ 5857 - GET losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing, old revision with latest=true
    ✓ 5857 - GET open_revs losing and winning branches with latest=true
    - These fail due to COUCHDB-3239 and COUCHDB-3240

  test.http.js
    ✓ Create a pouch without DB setup (skip_setup)
    ✓ Issue 1269 redundant _changes requests
    ✓ handle ddocs with slashes
    ✓ Properly escape url params #4008
    ✓ test url too long error for allDocs()
    ✓ 4358 db.info rejects when server is down (175ms)
    ✓ 4358 db.destroy rejects when server is down (223ms)
    ✓ changes respects seq_interval
    ✓ 5814 Ensure prefix has trailing /

  replication-http-errors:
    ✓ Initial replication is ok if source returns HTTP 404 (501ms)
    ✓ Initial replication is ok if target returns HTTP 404 (500ms)
    ✓ Initial replication is ok if source and target return HTTP 200 (501ms)
    ✓ Initial replication returns err if source returns HTTP 500 (501ms)
    ✓ Initial replication returns err if target returns HTTP 500 (502ms)
    ✓ Initial replication returns err if target and source return HTTP 500 (502ms)
    ✓ Subsequent replication returns err if source return HTTP 500 (502ms)

  test.issue221.js-local-http
    ✓ Testing issue #221 (62ms)
    ✓ Testing issue #221 again (77ms)

  test.issue221.js-http-http
    ✓ Testing issue #221 (82ms)
    ✓ Testing issue #221 again (112ms)

  test.issue221.js-http-local
    ✓ Testing issue #221 (51ms)
    ✓ Testing issue #221 again (73ms)

  test.issue221.js-local-local
    ✓ Testing issue #221
    ✓ Testing issue #221 again

  test.issue2674.js- local-local
    ✓ Should correctly synchronize attachments (#2674) (47ms)

  test.issue2674.js- local-http
    ✓ Should correctly synchronize attachments (#2674) (223ms)

  test.issue2674.js- http-local
    ✓ Should correctly synchronize attachments (#2674) (223ms)

  test.issue2674.js- http-http
    ✓ Should correctly synchronize attachments (#2674) (380ms)

  test.issue3179.js-http-http
    ✓ #3179 conflicts synced, non-live replication (241ms)
    ✓ #3179 conflicts synced, non-live sync (370ms)
    ✓ #3179 conflicts synced, live sync (271ms)
    ✓ #3179 conflicts synced, live repl (271ms)

  test.issue3179.js-http-local
    ✓ #3179 conflicts synced, non-live replication (133ms)
    ✓ #3179 conflicts synced, non-live sync (136ms)
    ✓ #3179 conflicts synced, live sync (173ms)
    ✓ #3179 conflicts synced, live repl (182ms)

  test.issue3179.js-local-http
    ✓ #3179 conflicts synced, non-live replication (136ms)
    ✓ #3179 conflicts synced, non-live sync (132ms)
    ✓ #3179 conflicts synced, live sync (148ms)
    ✓ #3179 conflicts synced, live repl (136ms)

  test.issue3179.js-local-local
    ✓ #3179 conflicts synced, non-live replication (47ms)
    ✓ #3179 conflicts synced, non-live sync
    ✓ #3179 conflicts synced, live sync
    ✓ #3179 conflicts synced, live repl (85ms)

  test.issue3646.js- local
    ✓ Should finish with 0 documents

  test.issue3646.js- http
    ✓ Should finish with 0 documents

  test.issue915.js
    ✓ Put a file in the db, then destroy it

  test.local_docs.js-http
    ✓ local docs - put then get (48ms)
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  test.local_docs.js-local
    ✓ local docs - put then get
    ✓ local docs - put then get w/ revisions
    ✓ local docs - put then remove then get
    ✓ local docs - put after remove
    ✓ local docs - put after remove, check return vals
    ✓ local docs - remove missing
    ✓ local docs - put after put w/ deleted:true
    ✓ local docs - put after remove with a rev
    ✓ local docs - multiple removes
    ✓ local docs - get unknown
    ✓ local docs - put unknown
    ✓ local docs - put new and conflicting
    ✓ local docs - put modified and conflicting

  migration one
    ✓ should work (42ms)

  migration two
    ✓ should work

  #2818 no migration needed for attachments
    ✓ should work

  #3136 no migration needed for overwritten revs
    ✓ should work

  test.prefix.js
    ✓ Test url prefix
    ✓ Test plain prefix

  node test.prefix.js
    ✓ Test path prefix

  suite2 test.replication.js-local-http
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (54ms)
    ✓ Test basic pull replication plain api 2 (58ms)
    ✓ Test pull replication with many changes (169ms)
    ✓ Test basic pull replication with funny ids (49ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (540ms)
    ✓ Test correct # docs replicated with staggered revs (82ms)
    ✓ Local DB contains documents (50ms)
    ✓ Test basic push replication (42ms)
    ✓ Test basic push replication take 2 (56ms)
    ✓ Test basic push replication sequence tracking (70ms)
    ✓ Test checkpoint (68ms)
    ✓ Test live pull checkpoint (128ms)
    ✓ Test type of progress values (51ms)
    ✓ Test live push checkpoint (72ms)
    ✓ Test checkpoint 2 (67ms)
    ✓ Test checkpoint 3 :) (60ms)
    ✓ Test disable checkpoints on both source and target (44ms)
    ✓ Test write checkpoints on source only (43ms)
    ✓ Test write checkpoints on target only (45ms)
    ✓ Test replication resumes when checkpointing is enabled (60ms)
    ✓ Test replication resumes when checkpointing is disabled (50ms)
    ✓ Test replication resumes when checkpointing on source only (48ms)
    ✓ Test replication resumes when checkpointing on target only (64ms)
    ✓ #3136 open revs returned correctly 1 (115ms)
    ✓ #3136 open revs returned correctly 2 (129ms)
    ✓ #3136 winningRev has a lower seq (84ms)
    ✓ #3136 same changes with style=all_docs (111ms)
    ✓ #3136 style=all_docs with conflicts (87ms)
    ✓ #3136 style=all_docs with conflicts reversed (98ms)
    ✓ Test checkpoint read only 3 :) (60ms)
    ✓ Testing allDocs with some conflicts (issue #468) (74ms)
    ✓ Test basic conflict (54ms)
    ✓ Test _conflicts key (61ms)
    ✓ Test basic live pull replication (56ms)
    ✓ Test basic live push replication (60ms)
    ✓ test-cancel-pull-replication (168ms)
    ✓ Test basic events (53ms)
    ✓ Replication filter (45ms)
    ✓ Replication with different filters (62ms)
    ✓ Replication doc ids (82ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (122ms)
    ✓ Replication with same filters (80ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (56ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (57ms)
    ✓ Replication with deleted doc (49ms)
    ✓ 5904 - replication with deleted doc and value (55ms)
    ✓ Replication notifications
    ✓ Replication with remote conflict (142ms)
    ✓ Replicate and modify three times (87ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (41ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (51ms)
    ✓ Replicates deleted docs w/ compaction (61ms)
    ✓ Replicates modified docs (issue #2636) (39ms)
    ✓ Replication of multiple remote conflicts (#789) (50ms)
    ✓ Replicate large number of docs (52ms)
    ✓ Ensure checkpoint after deletion (80ms)
    ✓ issue #1001 cb as 3rd argument (164ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (61ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (87ms)
    ✓ #3999-1 should not start over if last_seq mismatches (92ms)
    ✓ #3999-2 should start over if no common session is found (83ms)
    ✓ #3999-3 should not start over if common session is found (84ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (74ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (67ms)
    ✓ Report write failures if whole saving fails (#942) (63ms)
    ✓ Test consecutive replications with different query_params (149ms)
    ✓ Test consecutive replications with different query_params and promises (90ms)
    ✓ Test consecutive replications with different doc_ids (100ms)
    ✓ #3962 - Test many attachments (163ms)
    ✓ doc count after multiple replications (104ms)
    ✓ issue #300 rev id unique per doc (57ms)
    ✓ issue #585 Store checkpoint on target db. (74ms)
    ✓ should work with a read only source (45ms)
    ✓ issue #2342 update_seq after replication (67ms)
    ✓ should cancel for live replication (544ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (54ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (45ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (40ms)
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view (52ms)
    ✓ #3569 - 409 during replication (121ms)
    ✓ #3270 triggers "change" events with .docs property (53ms)
    ✓ #3543 replication with a ddoc filter (49ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (76ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (80ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (74ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (81ms)
    ✓ #4293 Triggers extra replication events (159ms)
    ✓ Heartbeat gets passed (43ms)
    ✓ Timeout gets passed (38ms)
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (89ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (97ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (95ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-http
    ✓ Test basic pull replication (77ms)
    ✓ Test basic pull replication plain api (71ms)
    ✓ Test basic pull replication plain api 2 (72ms)
    ✓ Test pull replication with many changes (206ms)
    ✓ Test basic pull replication with funny ids (73ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (544ms)
    ✓ Test correct # docs replicated with staggered revs (117ms)
    ✓ Local DB contains documents (70ms)
    ✓ Test basic push replication (70ms)
    ✓ Test basic push replication take 2 (71ms)
    ✓ Test basic push replication sequence tracking (223ms)
    ✓ Test checkpoint (100ms)
    ✓ Test live pull checkpoint (107ms)
    ✓ Test type of progress values (67ms)
    ✓ Test live push checkpoint (95ms)
    ✓ Test checkpoint 2 (109ms)
    ✓ Test checkpoint 3 :) (111ms)
    ✓ Test disable checkpoints on both source and target (65ms)
    ✓ Test write checkpoints on source only (66ms)
    ✓ Test write checkpoints on target only (67ms)
    ✓ Test replication resumes when checkpointing is enabled (92ms)
    ✓ Test replication resumes when checkpointing is disabled (78ms)
    ✓ Test replication resumes when checkpointing on source only (93ms)
    ✓ Test replication resumes when checkpointing on target only (84ms)
    ✓ #3136 open revs returned correctly 1 (220ms)
    ✓ #3136 open revs returned correctly 2 (210ms)
    ✓ #3136 winningRev has a lower seq (150ms)
    ✓ #3136 same changes with style=all_docs (138ms)
    ✓ #3136 style=all_docs with conflicts (139ms)
    ✓ #3136 style=all_docs with conflicts reversed (270ms)
    ✓ Test checkpoint read only 3 :) (93ms)
    ✓ Testing allDocs with some conflicts (issue #468) (115ms)
    ✓ Test basic conflict (76ms)
    ✓ Test _conflicts key (92ms)
    ✓ Test basic live pull replication (95ms)
    ✓ Test basic live push replication (90ms)
    ✓ test-cancel-pull-replication (200ms)
    ✓ Test basic events (73ms)
    ✓ Replication filter (78ms)
    ✓ Replication with different filters (100ms)
    ✓ Replication doc ids (66ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (128ms)
    ✓ Replication with same filters (95ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (93ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (81ms)
    ✓ Replication with deleted doc (71ms)
    ✓ 5904 - replication with deleted doc and value (69ms)
    ✓ Replication notifications (56ms)
    ✓ Replication with remote conflict (141ms)
    ✓ Replicate and modify three times (276ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (67ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (82ms)
    ✓ Replicates deleted docs w/ compaction (110ms)
    ✓ Replicates modified docs (issue #2636) (63ms)
    ✓ Replication of multiple remote conflicts (#789) (69ms)
    ✓ Replicate large number of docs (76ms)
    ✓ Ensure checkpoint after deletion (116ms)
    ✓ issue #1001 cb as 3rd argument (167ms)
    ✓ issue #1001 cb as 4th argument (165ms)
    ✓ #909 Filtered replication bails at paging limit (75ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (145ms)
    ✓ #3999-1 should not start over if last_seq mismatches (118ms)
    ✓ #3999-2 should start over if no common session is found (106ms)
    ✓ #3999-3 should not start over if common session is found (105ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (101ms)
    ✓ (#1307) - replicate empty database (44ms)
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (96ms)
    ✓ Report write failures if whole saving fails (#942) (97ms)
    ✓ Test consecutive replications with different query_params (94ms)
    ✓ Test consecutive replications with different query_params and promises (164ms)
    ✓ Test consecutive replications with different doc_ids (144ms)
    ✓ #3962 - Test many attachments (153ms)
    ✓ doc count after multiple replications (131ms)
    ✓ issue #300 rev id unique per doc (65ms)
    ✓ issue #585 Store checkpoint on target db. (114ms)
    ✓ should work with a read only source (65ms)
    ✓ issue #2342 update_seq after replication (92ms)
    ✓ should cancel for live replication (557ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (66ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (68ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (60ms)
    ✓ #3606 - live repl with doc_ids (62ms)
    ✓ #3606 - live repl with view (73ms)
    ✓ #3569 - 409 during replication (194ms)
    ✓ #3270 triggers "change" events with .docs property (117ms)
    ✓ #3543 replication with a ddoc filter (132ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (106ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (105ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error) (51ms)
    ✓ #7444 can't fetch server uuid (invalid JSON) (50ms)
    ✓ #4293 Triggers extra replication events (178ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (115ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (138ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (138ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-http-local
    ✓ Test basic pull replication (47ms)
    ✓ Test basic pull replication plain api (52ms)
    ✓ Test basic pull replication plain api 2 (57ms)
    ✓ Test pull replication with many changes (168ms)
    ✓ Test basic pull replication with funny ids (58ms)
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (499ms)
    ✓ Test correct # docs replicated with staggered revs (109ms)
    ✓ Local DB contains documents (82ms)
    ✓ Test basic push replication (63ms)
    ✓ Test basic push replication take 2 (47ms)
    ✓ Test basic push replication sequence tracking (72ms)
    ✓ Test checkpoint (60ms)
    ✓ Test live pull checkpoint (61ms)
    ✓ Test type of progress values (49ms)
    ✓ Test live push checkpoint (72ms)
    ✓ Test checkpoint 2 (66ms)
    ✓ Test checkpoint 3 :) (62ms)
    ✓ Test disable checkpoints on both source and target (40ms)
    ✓ Test write checkpoints on source only (46ms)
    ✓ Test write checkpoints on target only (43ms)
    ✓ Test replication resumes when checkpointing is enabled (62ms)
    ✓ Test replication resumes when checkpointing is disabled (52ms)
    ✓ Test replication resumes when checkpointing on source only (110ms)
    ✓ Test replication resumes when checkpointing on target only (50ms)
    ✓ #3136 open revs returned correctly 1 (220ms)
    ✓ #3136 open revs returned correctly 2 (183ms)
    ✓ #3136 winningRev has a lower seq (99ms)
    ✓ #3136 same changes with style=all_docs (90ms)
    ✓ #3136 style=all_docs with conflicts (91ms)
    ✓ #3136 style=all_docs with conflicts reversed (94ms)
    ✓ Test checkpoint read only 3 :) (57ms)
    ✓ Testing allDocs with some conflicts (issue #468) (73ms)
    ✓ Test basic conflict (44ms)
    ✓ Test _conflicts key (71ms)
    ✓ Test basic live pull replication (141ms)
    ✓ Test basic live push replication (82ms)
    ✓ test-cancel-pull-replication (165ms)
    ✓ Test basic events (55ms)
    ✓ Replication filter (52ms)
    ✓ Replication with different filters (63ms)
    ✓ Replication doc ids (52ms)
    ✓ 2204 Invalid doc_ids
    ✓ Replication since (70ms)
    ✓ Replication with same filters (61ms)
    ✓ Replication with filter that leads to some empty batches (#2689) (60ms)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379) (51ms)
    ✓ Replication with deleted doc (50ms)
    ✓ 5904 - replication with deleted doc and value (46ms)
    ✓ Replication notifications (48ms)
    ✓ Replication with remote conflict (84ms)
    ✓ Replicate and modify three times (113ms)
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636) (43ms)
    ✓ Replicates deleted docs w/ delay (issue #2636) (57ms)
    ✓ Replicates deleted docs w/ compaction (72ms)
    ✓ Replicates modified docs (issue #2636) (44ms)
    ✓ Replication of multiple remote conflicts (#789) (48ms)
    ✓ Replicate large number of docs (73ms)
    ✓ Ensure checkpoint after deletion (84ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (168ms)
    ✓ #909 Filtered replication bails at paging limit (59ms)
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate (159ms)
    ✓ #3999-1 should not start over if last_seq mismatches (125ms)
    ✓ #3999-2 should start over if no common session is found (64ms)
    ✓ #3999-3 should not start over if common session is found (66ms)
    ✓ #3999-4 should "upgrade" an old checkpoint (63ms)
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942) (65ms)
    ✓ Report write failures if whole saving fails (#942) (65ms)
    ✓ Test consecutive replications with different query_params (66ms)
    ✓ Test consecutive replications with different query_params and promises (67ms)
    ✓ Test consecutive replications with different doc_ids (69ms)
    ✓ #3962 - Test many attachments (62ms)
    ✓ doc count after multiple replications (91ms)
    ✓ issue #300 rev id unique per doc (54ms)
    ✓ issue #585 Store checkpoint on target db. (72ms)
    ✓ should work with a read only source (46ms)
    ✓ issue #2342 update_seq after replication (58ms)
    ✓ should cancel for live replication (534ms)
    ✓ #2970 replicate database w/ deleted conflicted revs (46ms)
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc (52ms)
    ✓ #3606 - live repl with filtered ddoc+query_params (45ms)
    ✓ #3606 - live repl with doc_ids (44ms)
    ✓ #3606 - live repl with view (52ms)
    ✓ #3569 - 409 during replication (210ms)
    ✓ #3270 triggers "change" events with .docs property (59ms)
    ✓ #3543 replication with a ddoc filter (56ms)
    ✓ #3578 replication with a ddoc filter w/ _deleted=true (70ms)
    ✓ #3578 replication with a ddoc filter w/ remove() (65ms)
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (154ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication (58ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (74ms)
    ✓ #6809 doc_ids dont prevent one-shot replication (73ms)
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-local-local
    ✓ Test basic pull replication
    ✓ Test basic pull replication plain api
    ✓ Test basic pull replication plain api 2
    ✓ Test pull replication with many changes (121ms)
    ✓ Test basic pull replication with funny ids
    - pull replication with many changes + a conflict (#2543)
    ✓ Test pull replication with many conflicts (591ms)
    ✓ Test correct # docs replicated with staggered revs (41ms)
    ✓ Local DB contains documents
    ✓ Test basic push replication
    ✓ Test basic push replication take 2
    ✓ Test basic push replication sequence tracking
    ✓ Test checkpoint
    ✓ Test live pull checkpoint
    ✓ Test type of progress values
    ✓ Test live push checkpoint
    ✓ Test checkpoint 2 (45ms)
    ✓ Test checkpoint 3 :)
    ✓ Test disable checkpoints on both source and target
    ✓ Test write checkpoints on source only
    ✓ Test write checkpoints on target only
    ✓ Test replication resumes when checkpointing is enabled
    ✓ Test replication resumes when checkpointing is disabled
    ✓ Test replication resumes when checkpointing on source only
    ✓ Test replication resumes when checkpointing on target only
    ✓ #3136 open revs returned correctly 1 (142ms)
    ✓ #3136 open revs returned correctly 2 (58ms)
    ✓ #3136 winningRev has a lower seq
    ✓ #3136 same changes with style=all_docs
    ✓ #3136 style=all_docs with conflicts
    ✓ #3136 style=all_docs with conflicts reversed
    ✓ Test checkpoint read only 3 :)
    ✓ Testing allDocs with some conflicts (issue #468)
    ✓ Test basic conflict
    ✓ Test _conflicts key (38ms)
    ✓ Test basic live pull replication
    ✓ Test basic live push replication
    ✓ test-cancel-pull-replication (122ms)
    ✓ Test basic events
    ✓ Replication filter
    ✓ Replication with different filters
    ✓ Replication doc ids
    ✓ 2204 Invalid doc_ids
    ✓ Replication since
    ✓ Replication with same filters
    ✓ Replication with filter that leads to some empty batches (#2689)
    - Empty replication updates checkpoint (#5145)
    ✓ Does not update checkpoint unncessarily (#5379)
    ✓ Replication with deleted doc
    ✓ 5904 - replication with deleted doc and value
    ✓ Replication notifications
    ✓ Replication with remote conflict
    ✓ Replicate and modify three times
    ✓ live replication, starting offline
    ✓ Replicates deleted docs (issue #2636)
    ✓ Replicates deleted docs w/ delay (issue #2636)
    ✓ Replicates deleted docs w/ compaction
    ✓ Replicates modified docs (issue #2636)
    ✓ Replication of multiple remote conflicts (#789)
    ✓ Replicate large number of docs (43ms)
    ✓ Ensure checkpoint after deletion (49ms)
    ✓ issue #1001 cb as 3rd argument (165ms)
    ✓ issue #1001 cb as 4th argument (164ms)
    ✓ #909 Filtered replication bails at paging limit
    ✓ (#4963) Ensure successful docs are saved but seq not updated if single doc fails to replicate
    ✓ #3999-1 should not start over if last_seq mismatches (38ms)
    ✓ #3999-2 should start over if no common session is found
    ✓ #3999-3 should not start over if common session is found
    ✓ #3999-4 should "upgrade" an old checkpoint
    ✓ (#1307) - replicate empty database
    - Syncing should stop if one replication fails (issue 838)
    ✓ Reporting write failures (#942)
    ✓ Report write failures if whole saving fails (#942)
    ✓ Test consecutive replications with different query_params
    ✓ Test consecutive replications with different query_params and promises
    ✓ Test consecutive replications with different doc_ids
    ✓ #3962 - Test many attachments
    ✓ doc count after multiple replications (71ms)
    ✓ issue #300 rev id unique per doc
    ✓ issue #585 Store checkpoint on target db. (43ms)
    ✓ should work with a read only source
    ✓ issue #2342 update_seq after replication (38ms)
    ✓ should cancel for live replication (541ms)
    ✓ #2970 replicate database w/ deleted conflicted revs
    ✓ #2268 dont stop replication if single forbidden
    ✓ #2268 dont stop replication if single unauth
    ✓ #2268 dont stop replication if many unauth
    ✓ #3171 Forbidden validate_doc_update error message
    - Test immediate replication canceling
    ✓ #3171 Unauthorized validate_doc_update error message
    ✓ #3070 Doc IDs with validate_doc_update errors
    ✓ #3270 triggers "denied" events
    ✓ #3606 - live replication with filtered ddoc
    ✓ #3606 - live repl with filtered ddoc+query_params
    ✓ #3606 - live repl with doc_ids
    ✓ #3606 - live repl with view
    ✓ #3569 - 409 during replication
    ✓ #3270 triggers "change" events with .docs property
    ✓ #3543 replication with a ddoc filter
    ✓ #3578 replication with a ddoc filter w/ _deleted=true
    ✓ #3578 replication with a ddoc filter w/ remove()
    ✓ #2454 info() call breaks taskqueue
    ✓ #4094 can't fetch server uuid (HTTP error)
    ✓ #7444 can't fetch server uuid (invalid JSON)
    ✓ #4293 Triggers extra replication events (125ms)
    ✓ Heartbeat gets passed
    ✓ Timeout gets passed
    ✓ #5452 Cleanly fail with no unhandled promises on a bad connection
    ✓ #2426 doc_ids dont prevent replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ #6809 doc_ids dont prevent one-shot replication
    ✓ Replication filter using selector
    ✓ Invalid selector

  suite2 test.replication.js-down-test
    ✓ replicate from down server test

  test.replicationBackoff.js-local-http
    ✓ Issue 5402 should not keep adding event listeners when backoff is firing

  suite2 test.replication_events.js-local-http
    ✓ #3852 Test basic starting empty (68ms)
    ✓ #3852 Test basic starting with docs (89ms)
    ✓ #5710 Test pending property support (82ms)
    ✓ #3852 Test errors (61ms)
    ✓ #4627 Test no duplicate changes in live replication (2061ms)
    ✓ Test checkpoint events (55ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-http
    ✓ #3852 Test basic starting empty (131ms)
    ✓ #3852 Test basic starting with docs (164ms)
    ✓ #5710 Test pending property support (201ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2091ms)
    ✓ Test checkpoint events (80ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-http-local
    ✓ #3852 Test basic starting empty (84ms)
    ✓ #3852 Test basic starting with docs (100ms)
    ✓ #5710 Test pending property support (65ms)
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2064ms)
    ✓ Test checkpoint events (55ms)
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  suite2 test.replication_events.js-local-local
    ✓ #3852 Test basic starting empty
    ✓ #3852 Test basic starting with docs
    ✓ #5710 Test pending property support
    ✓ #3852 Test errors
    ✓ #4627 Test no duplicate changes in live replication (2028ms)
    ✓ Test checkpoint events
    #5172 triggering error when replicating
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication
    #5607 handle uppercase third-party error responses
      ✓ from or to a secured database, using live replication
      ✓ from or to a secured database, using live replication with checkpoint
      ✓ from or to a secured database, using live replication with retrying
      ✓ from or to a secured database, using one-shot replication

  test.reserved.js-local-http
    ✓ test docs with reserved javascript ids (66ms)
    ✓ can create db with reserved name

  test.reserved.js-http-http
    ✓ test docs with reserved javascript ids (94ms)
    ✓ can create db with reserved name

  test.reserved.js-http-local
    ✓ test docs with reserved javascript ids (78ms)
    ✓ can create db with reserved name

  test.reserved.js-local-local
    ✓ test docs with reserved javascript ids (46ms)
    ✓ can create db with reserved name

  test.retry.js-local-http
    ✓ retry stuff (82ms)
    ✓ #3687 active event only fired once... (55ms)
    ✓ source doesn't leak "destroyed" event (171ms)
    ✓ target doesn't leak "destroyed" event (190ms)
    ✓ returnValue doesn't leak "complete" event (174ms)
    ✓ returnValue doesn't leak "error" event (240ms)
    ✓ returnValue doesn't leak "paused" event (213ms)
    ✓ returnValue doesn't leak "active" event (170ms)
    ✓ returnValue doesn't leak "change" event (172ms)
    ✓ returnValue doesn't leak "cancel" event (173ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (178ms)
    ✓ retry many times, no leaks on any events (752ms)
    ✓ 4049 retry while starting offline
    ✓ #5157 replicate many docs with live+retry (468ms)
    ✓ 6510 no changes live+retry does not call backoff function (2001ms)

  test.retry.js-http-http
    ✓ retry stuff (145ms)
    ✓ #3687 active event only fired once... (124ms)
    ✓ source doesn't leak "destroyed" event (337ms)
    ✓ target doesn't leak "destroyed" event (310ms)
    ✓ returnValue doesn't leak "complete" event (280ms)
    ✓ returnValue doesn't leak "error" event (270ms)
    ✓ returnValue doesn't leak "paused" event (272ms)
    ✓ returnValue doesn't leak "active" event (284ms)
    ✓ returnValue doesn't leak "change" event (287ms)
    ✓ returnValue doesn't leak "cancel" event (381ms)
    ✓ returnValue doesn't leak "change" event w/ onChange (342ms)
    ✓ retry many times, no leaks on any events (1196ms)
    ✓ 4049 retry while starting offline (52ms)
    ✓ #5157 replicate many docs with live+retry (1305ms)
************* run test done *************
