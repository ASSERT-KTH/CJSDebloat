variantsDepsNum: 11
/data/js-variants/multee
11
routing-controllers is testing ./VariantsDeps/body-parser/variant11/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 6s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 476ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 417ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant10/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 498ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 395ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant9/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 469ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 427ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant8/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 460ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 408ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant7/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 465ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 413ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant6/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 451ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 398ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    Error: Request failed with status code 415
        at createError (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/createError.js:16:15)
        at settle (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/settle.js:17:12)
        at IncomingMessage.handleStreamEnd (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/adapters/http.js:260:11)
        at IncomingMessage.emit (node:events:539:35)
        at endReadableNT (node:internal/streams/readable:1344:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      config: {
        url: '/default',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          prefinish: [Function: requestOnPrefinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *1],
          [Symbol(async_id_symbol)]: 8088,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: 'POST /default HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Content-Type: application/json;charset=utf-8\r\n' +
          'User-Agent: axios/0.21.1\r\n' +
          'Content-Length: 47\r\n' +
          'Host: localhost:3001\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/default',
        _ended: true,
        res: IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 415,
          statusMessage: 'Unsupported Media Type',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *1],
          responseUrl: 'http://localhost:3001/default',
          redirects: [],
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _writableState: [WritableState],
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 47,
          _requestBodyBuffers: [],
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:3001/default',
          [Symbol(kCapture)]: false
        },
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          'content-type': [Array],
          'user-agent': [Array],
          'content-length': [Array],
          host: [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 415,
        statusText: 'Unsupported Media Type',
        headers: {
          'x-powered-by': 'Express',
          'content-security-policy': "default-src 'none'",
          'x-content-type-options': 'nosniff',
          'content-type': 'text/html; charset=utf-8',
          'content-length': '609',
          date: 'Wed, 10 Aug 2022 10:55:19 GMT',
          connection: 'close'
        },
        config: {
          url: '/default',
          method: 'post',
          data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
          headers: [Object],
          baseURL: 'http://localhost:3001/',
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          adapter: [Function: httpAdapter],
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          validateStatus: [Function: validateStatus]
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /default HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/default',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        data: '<!DOCTYPE html>\n' +
          '<html lang="en">\n' +
          '<head>\n' +
          '<meta charset="utf-8">\n' +
          '<title>Error</title>\n' +
          '</head>\n' +
          '<body>\n' +
          '<pre>UnsupportedMediaTypeError: unsupported charset &quot;UTF-8&quot;<br> &nbsp; &nbsp;at /data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/lib/read.js:85:18<br> &nbsp; &nbsp;at AsyncResource.runInAsyncScope (node:async_hooks:202:9)<br> &nbsp; &nbsp;at invokeCallback (/data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/node_modules/raw-body/index.js:231:16)<br> &nbsp; &nbsp;at processTicksAndRejections (node:internal/process/task_queues:77:11)</pre>\n' +
          '</body>\n' +
          '</html>\n'
      },
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:81:17)

  console.log
    Error: Request failed with status code 415
        at createError (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/createError.js:16:15)
        at settle (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/settle.js:17:12)
        at IncomingMessage.handleStreamEnd (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/adapters/http.js:260:11)
        at IncomingMessage.emit (node:events:539:35)
        at endReadableNT (node:internal/streams/readable:1344:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      config: {
        url: '/transform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          prefinish: [Function: requestOnPrefinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *1],
          [Symbol(async_id_symbol)]: 8130,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: 'POST /transform HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Content-Type: application/json;charset=utf-8\r\n' +
          'User-Agent: axios/0.21.1\r\n' +
          'Content-Length: 47\r\n' +
          'Host: localhost:3001\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/transform',
        _ended: true,
        res: IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 415,
          statusMessage: 'Unsupported Media Type',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *1],
          responseUrl: 'http://localhost:3001/transform',
          redirects: [],
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _writableState: [WritableState],
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 47,
          _requestBodyBuffers: [],
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:3001/transform',
          [Symbol(kCapture)]: false
        },
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          'content-type': [Array],
          'user-agent': [Array],
          'content-length': [Array],
          host: [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 415,
        statusText: 'Unsupported Media Type',
        headers: {
          'x-powered-by': 'Express',
          'content-security-policy': "default-src 'none'",
          'x-content-type-options': 'nosniff',
          'content-type': 'text/html; charset=utf-8',
          'content-length': '609',
          date: 'Wed, 10 Aug 2022 10:55:19 GMT',
          connection: 'close'
        },
        config: {
          url: '/transform',
          method: 'post',
          data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
          headers: [Object],
          baseURL: 'http://localhost:3001/',
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          adapter: [Function: httpAdapter],
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          validateStatus: [Function: validateStatus]
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /transform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/transform',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        data: '<!DOCTYPE html>\n' +
          '<html lang="en">\n' +
          '<head>\n' +
          '<meta charset="utf-8">\n' +
          '<title>Error</title>\n' +
          '</head>\n' +
          '<body>\n' +
          '<pre>UnsupportedMediaTypeError: unsupported charset &quot;UTF-8&quot;<br> &nbsp; &nbsp;at /data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/lib/read.js:85:18<br> &nbsp; &nbsp;at AsyncResource.runInAsyncScope (node:async_hooks:202:9)<br> &nbsp; &nbsp;at invokeCallback (/data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/node_modules/raw-body/index.js:231:16)<br> &nbsp; &nbsp;at processTicksAndRejections (node:internal/process/task_queues:77:11)</pre>\n' +
          '</body>\n' +
          '</html>\n'
      },
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:94:17)

  console.log
    Error: Request failed with status code 415
        at createError (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/createError.js:16:15)
        at settle (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/core/settle.js:17:12)
        at IncomingMessage.handleStreamEnd (/data/js-variants/multee/Clients/body-parser/routing-controllers/node_modules/axios/lib/adapters/http.js:260:11)
        at IncomingMessage.emit (node:events:539:35)
        at endReadableNT (node:internal/streams/readable:1344:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      config: {
        url: '/noTransform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> ClientRequest {
        _events: [Object: null prototype] {
          abort: [Function (anonymous)],
          aborted: [Function (anonymous)],
          connect: [Function (anonymous)],
          error: [Function (anonymous)],
          socket: [Function (anonymous)],
          timeout: [Function (anonymous)],
          prefinish: [Function: requestOnPrefinish]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'localhost',
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *1],
          [Symbol(async_id_symbol)]: 8170,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: 'POST /noTransform HTTP/1.1\r\n' +
          'Accept: application/json, text/plain, */*\r\n' +
          'Content-Type: application/json;charset=utf-8\r\n' +
          'User-Agent: axios/0.21.1\r\n' +
          'Content-Length: 47\r\n' +
          'Host: localhost:3001\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/noTransform',
        _ended: true,
        res: IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 415,
          statusMessage: 'Unsupported Media Type',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *1],
          responseUrl: 'http://localhost:3001/noTransform',
          redirects: [],
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        _redirectable: Writable {
          _writableState: [WritableState],
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _options: [Object],
          _ended: true,
          _ending: true,
          _redirectCount: 0,
          _redirects: [],
          _requestBodyLength: 47,
          _requestBodyBuffers: [],
          _onNativeResponse: [Function (anonymous)],
          _currentRequest: [Circular *1],
          _currentUrl: 'http://localhost:3001/noTransform',
          [Symbol(kCapture)]: false
        },
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          accept: [Array],
          'content-type': [Array],
          'user-agent': [Array],
          'content-length': [Array],
          host: [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      response: {
        status: 415,
        statusText: 'Unsupported Media Type',
        headers: {
          'x-powered-by': 'Express',
          'content-security-policy': "default-src 'none'",
          'x-content-type-options': 'nosniff',
          'content-type': 'text/html; charset=utf-8',
          'content-length': '609',
          date: 'Wed, 10 Aug 2022 10:55:19 GMT',
          connection: 'close'
        },
        config: {
          url: '/noTransform',
          method: 'post',
          data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
          headers: [Object],
          baseURL: 'http://localhost:3001/',
          transformRequest: [Array],
          transformResponse: [Array],
          timeout: 0,
          adapter: [Function: httpAdapter],
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          validateStatus: [Function: validateStatus]
        },
        request: <ref *1> ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /noTransform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/noTransform',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Writable],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        data: '<!DOCTYPE html>\n' +
          '<html lang="en">\n' +
          '<head>\n' +
          '<meta charset="utf-8">\n' +
          '<title>Error</title>\n' +
          '</head>\n' +
          '<body>\n' +
          '<pre>UnsupportedMediaTypeError: unsupported charset &quot;UTF-8&quot;<br> &nbsp; &nbsp;at /data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/lib/read.js:85:18<br> &nbsp; &nbsp;at AsyncResource.runInAsyncScope (node:async_hooks:202:9)<br> &nbsp; &nbsp;at invokeCallback (/data/js-variants/multee/VariantsDeps/body-parser/variant6/body-parser/node_modules/raw-body/index.js:231:16)<br> &nbsp; &nbsp;at processTicksAndRejections (node:internal/process/task_queues:77:11)</pre>\n' +
          '</body>\n' +
          '</html>\n'
      },
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:107:17)

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant5/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 498ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 387ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant4/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 474ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 404ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant3/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 451ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 423ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/default',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/default',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/default'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /default HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/default',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/default',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:81:17)

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/transform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/transform',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/transform'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /transform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/transform',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/transform',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:94:17)

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/noTransform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/noTransform',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/noTransform'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /noTransform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/noTransform',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/noTransform',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:107:17)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant2/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 443ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/default',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/default',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/default'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /default HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/default',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/default',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:81:17)

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/transform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/transform',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/transform'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /transform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/transform',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/transform',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:94:17)

  console.log
    Error: connect ECONNREFUSED 127.0.0.1:3001
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16) {
      errno: -111,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 3001,
      config: {
        url: '/noTransform',
        method: 'post',
        data: '{"firstName":"Umed","lastName":"Khudoiberdiev"}',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json;charset=utf-8',
          'User-Agent': 'axios/0.21.1',
          'Content-Length': 47
        },
        baseURL: 'http://localhost:3001/',
        transformRequest: [ [Function: transformRequest] ],
        transformResponse: [ [Function: transformResponse] ],
        timeout: 0,
        adapter: [Function: httpAdapter],
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN',
        maxContentLength: -1,
        maxBodyLength: -1,
        validateStatus: [Function: validateStatus]
      },
      request: <ref *1> Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'http:',
          path: '/noTransform',
          method: 'POST',
          headers: [Object],
          agent: undefined,
          agents: [Object],
          auth: undefined,
          hostname: 'localhost',
          port: '3001',
          nativeProtocols: [Object],
          pathname: '/noTransform'
        },
        _ended: false,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 47,
        _requestBodyBuffers: [ [Object] ],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /noTransform HTTP/1.1\r\n' +
            'Accept: application/json, text/plain, */*\r\n' +
            'Content-Type: application/json;charset=utf-8\r\n' +
            'User-Agent: axios/0.21.1\r\n' +
            'Content-Length: 47\r\n' +
            'Host: localhost:3001\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/noTransform',
          _ended: false,
          res: null,
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: 'localhost',
          protocol: 'http:',
          _redirectable: [Circular *1],
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        _currentUrl: 'http://localhost:3001/noTransform',
        [Symbol(kCapture)]: false
      },
      response: undefined,
      isAxiosError: true,
      toJSON: [Function: toJSON]
    }

      at Object.<anonymous> (test/functional/controller-options.spec.ts:107:17)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
routing-controllers is testing ./VariantsDeps/body-parser/variant1/body-parser
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1000 packages in 3s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 501ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 412ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

added 1 package, changed 1 package, and audited 1002 packages in 2s

49 packages are looking for funding
  run `npm fund` for details

26 vulnerabilities (9 moderate, 14 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> routing-controllers@0.9.0 test
> jest --verbose --runInBand

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.postMiddleware (test/fakes/global-options/FakeService.ts:30:13)

  console.log
    fake service!

      at FakeService.questionMiddleware (test/fakes/global-options/FakeService.ts:20:13)

  console.log
    fake service!

      at FakeService.questionErrorMiddleware (test/fakes/global-options/FakeService.ts:25:13)

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

  console.warn
    No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.

      at ValidationExecutor.execute (node_modules/src/validation/ValidationExecutor.ts:50:21)
      at Validator.coreValidate (node_modules/src/validation/Validator.ts:30:18)
      at Validator.<anonymous> (node_modules/src/validation/Validator.ts:72:35)
      at step (node_modules/tslib/tslib.js:141:27)
      at Object.next (node_modules/tslib/tslib.js:122:57)
      at node_modules/tslib/tslib.js:115:75

************* run test done *************
