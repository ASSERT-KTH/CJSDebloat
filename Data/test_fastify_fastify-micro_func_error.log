14
FAIL tests/sentry.test.ts (48.69 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5001 ms)
    ✕ Sentry is enabled with a DSN (5001 ms)
    ✕ Sentry report for route errors (5000 ms)
    ✕ Sentry manual reports at app level (5000 ms)
    ✕ Report enrichment in route (5001 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (4999 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant14/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant14/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant14/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant14/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.369 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5000 ms)
    ✕ Custom health check throwing results in 503 (5000 ms)
    ✕ Disabled health monitoring (5000 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.144 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5000 ms)
    ✕ redact log paths (5000 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.572 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant14/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant14/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant14/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant14/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant14/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant13/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.704 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5002 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5003 ms)
    ✕ Report enrichment, global getters (5002 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant13/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant13/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant13/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant13/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.535 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.146 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5002 ms)
    ✕ redact log paths (5000 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.613 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5001 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant13/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant13/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant13/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant13/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant13/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant12/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.517 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5002 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5001 ms)
    ✕ Report enrichment, global getters (5001 ms)
    ✕ User enrichment (5002 ms)
    ✕ 4xx statuses are not reported to Sentry (5001 ms)
    ✕ Schema validation errors are not reported to Sentry (5000 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant12/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant12/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant12/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant12/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.575 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5002 ms)
    ✕ Disabled health monitoring (5000 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.136 s)
  Logger
    ✕ name property (5001 ms)
    ✕ redact environment variables (5000 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5000 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.403 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant12/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant12/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant12/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant12/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant12/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant11/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.707 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5002 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5002 ms)
    ✕ Report enrichment, global getters (5001 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant11/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant11/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant11/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant11/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.55 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.151 s)
  Logger
    ✕ name property (5001 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5000 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.431 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5003 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant11/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant11/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant11/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant11/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant11/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant10/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.735 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5003 ms)
    ✕ Sentry is enabled with a DSN (5001 ms)
    ✕ Sentry report for route errors (5000 ms)
    ✕ Sentry manual reports at app level (5000 ms)
    ✕ Report enrichment in route (5002 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5001 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant10/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant10/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant10/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant10/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.58 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5002 ms)
    ✕ Custom health check throwing results in 503 (5002 ms)
    ✕ Disabled health monitoring (5000 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.174 s)
  Logger
    ✕ name property (5006 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.406 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5002 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant10/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant10/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant10/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant10/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant10/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant9/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.74 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5002 ms)
    ✕ Sentry report for route errors (5002 ms)
    ✕ Sentry manual reports at app level (5000 ms)
    ✕ Report enrichment in route (5000 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5002 ms)
    ✕ Schema validation errors are not reported to Sentry (5002 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant9/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant9/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant9/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant9/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.501 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5001 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5002 ms)
    ✕ Disabled health monitoring (5000 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.146 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5000 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.616 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5001 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant9/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant9/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant9/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant9/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant9/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant8/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.902 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5003 ms)
    ✕ Sentry is enabled with a DSN (5002 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5000 ms)
    ✕ Report enrichment in route (5002 ms)
    ✕ Report enrichment, global getters (5002 ms)
    ✕ User enrichment (5000 ms)
    ✕ 4xx statuses are not reported to Sentry (5001 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant8/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant8/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant8/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant8/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.459 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5002 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.141 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5000 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.584 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5001 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant8/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant8/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant8/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant8/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant8/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore

/data/js-variants/multee/VariantsDeps/fastify/variant7/fastify/fastify.js:620
      err = err != null && AVVIO_ERRORS_MAP[err.code] != null ? appendStackTrace(err, new AVVIO_ERRORS_MAP[err.code](err.message)) : err;
                                                                                      ^
FastifyError [Error] {
  name: 'FastifyError',
  code: 'FST_ERR_PLUGIN_TIMEOUT',
  message: "fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise",
  statusCode: 500,
  cause: AvvioError [Error] {
    code: 'AVV_ERR_READY_TIMEOUT',
    message: "Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise",
    name: 'AvvioError',
    fn: [Function: bound _after]
  }
}

Node.js v18.3.0
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant6/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (56.07 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5000 ms)
    ✕ Sentry report for route errors (5002 ms)
    ✕ Sentry manual reports at app level (5000 ms)
    ✕ Report enrichment in route (5001 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (5002 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5002 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant6/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant6/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant6/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant6/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.578 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5002 ms)
    ✕ Disabled health monitoring (5002 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.148 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.57 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant6/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant6/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant6/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant6/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant6/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant5/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (55.952 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5001 ms)
    ✕ Sentry is enabled with a DSN (5001 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5000 ms)
    ✕ Report enrichment, global getters (5001 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant5/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant5/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant5/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant5/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.571 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5002 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.144 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5000 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.526 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5002 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant5/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant5/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant5/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant5/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant5/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant4/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (56.175 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5001 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5001 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant4/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant4/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant4/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant4/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.569 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5002 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.157 s)
  Logger
    ✕ name property (5001 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.6 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5002 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant4/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant4/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant4/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant4/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant4/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant3/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (56.172 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5003 ms)
    ✕ Sentry is enabled with a DSN (5000 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5003 ms)
    ✕ Report enrichment, global getters (5001 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5000 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant3/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant3/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant3/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant3/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.578 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5001 ms)
    ✕ Custom health check throwing results in 503 (5002 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.155 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.554 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5001 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant3/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant3/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant3/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant3/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant3/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant2/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (56.307 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5000 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5002 ms)
    ✕ Report enrichment in route (5000 ms)
    ✕ Report enrichment, global getters (5000 ms)
    ✕ User enrichment (5001 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5001 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant2/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant2/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant2/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant2/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.539 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5002 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.155 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5001 ms)
    ✕ request ID generator (5000 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.379 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5002 ms)
    ✕ Graceful exit (5002 ms)
    ✕ Graceful exit with a slow onClose hook (5001 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant2/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant2/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant2/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant2/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant2/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/fastify.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/symbols.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/server.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/warnings.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/errors.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/reply.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/hooks.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/handleRequest.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/validation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/wrapThenable.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/logger.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/error-handler.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/schemas.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/error-serializer.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/request.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/decorate.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/contentTypeParser.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/schema-controller.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/reqIdGenFactory.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/route.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/context.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/headRoute.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/fourOhFour.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/initialConfigValidation.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/configValidator.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /data/js-variants/multee/VariantsDeps/fastify/variant1/fastify/lib/noop-set.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL tests/sentry.test.ts (56.595 s)
  Sentry reporting
    ✕ Sentry is disabled without a DSN (5002 ms)
    ✕ Sentry is enabled with a DSN (5000 ms)
    ✕ Sentry report for route errors (5001 ms)
    ✕ Sentry manual reports at app level (5001 ms)
    ✕ Report enrichment in route (5003 ms)
    ✕ Report enrichment, global getters (5001 ms)
    ✕ User enrichment (5002 ms)
    ✕ 4xx statuses are not reported to Sentry (5000 ms)
    ✕ Schema validation errors are not reported to Sentry (5002 ms)

  ● Sentry reporting › Sentry is disabled without a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is disabled without a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      25 |   // --
      26 |
    > 27 |   test('Sentry is disabled without a DSN', async () => {
         |   ^
      28 |     const { testkit, sentryTransport } = sentryTestkit()
      29 |     process.env.NODE_ENV = 'test'
      30 |     process.env.LOG_LEVEL = 'silent'

      at tests/sentry.test.ts:27:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry is enabled with a DSN

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry is enabled with a DSN

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   // --
      44 |
    > 45 |   test('Sentry is enabled with a DSN', async () => {
         |   ^
      46 |     const { testkit, sentryTransport } = sentryTestkit()
      47 |     setupEnv()
      48 |     const server = createServer({

      at tests/sentry.test.ts:45:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry report for route errors

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry report for route errors

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      62 |   // --
      63 |
    > 64 |   test('Sentry report for route errors', async () => {
         |   ^
      65 |     const { testkit, sentryTransport } = sentryTestkit()
      66 |     setupEnv()
      67 |     const server = createServer({

      at tests/sentry.test.ts:64:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Sentry manual reports at app level

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Sentry manual reports at app level

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      86 |   // --
      87 |
    > 88 |   test('Sentry manual reports at app level', async () => {
         |   ^
      89 |     const { testkit, sentryTransport } = sentryTestkit()
      90 |     setupEnv()
      91 |     const server = createServer({

      at tests/sentry.test.ts:88:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment in route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment in route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      105 |   // --
      106 |
    > 107 |   test('Report enrichment in route', async () => {
          |   ^
      108 |     const { testkit, sentryTransport } = sentryTestkit()
      109 |     setupEnv()
      110 |     const server = createServer({

      at tests/sentry.test.ts:107:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Report enrichment, global getters

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Report enrichment, global getters

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      138 |   // --
      139 |
    > 140 |   test('Report enrichment, global getters', async () => {
          |   ^
      141 |     const { testkit, sentryTransport } = sentryTestkit()
      142 |     setupEnv()
      143 |     process.env.COMMIT_ID = 'git-sha1'

      at tests/sentry.test.ts:140:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › User enrichment

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › User enrichment

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      181 |   // --
      182 |
    > 183 |   test('User enrichment', async () => {
          |   ^
      184 |     const { testkit, sentryTransport } = sentryTestkit()
      185 |     setupEnv()
      186 |     const server = createServer({

      at tests/sentry.test.ts:183:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › 4xx statuses are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      212 |   // --
      213 |
    > 214 |   test('4xx statuses are not reported to Sentry', async () => {
          |   ^
      215 |     const { testkit, sentryTransport } = sentryTestkit()
      216 |     setupEnv()
      217 |     const server = createServer({

      at tests/sentry.test.ts:214:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Sentry reporting › Schema validation errors are not reported to Sentry

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      231 |   // --
      232 |
    > 233 |   test('Schema validation errors are not reported to Sentry', async () => {
          |   ^
      234 |     const { testkit, sentryTransport } = sentryTestkit()
      235 |     setupEnv()
      236 |     const server = createServer({

      at tests/sentry.test.ts:233:3
      at Object.<anonymous> (tests/sentry.test.ts:5:1)


ReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/sentry.test.ts.

      105 |    * Do not setup the compiler more than once
      106 |    * @param {object} serverOptions: the fastify server option
    > 107 |    */
          |      ^
      108 |   setupSerializer (serverOption) {
      109 |     const isReady = this.serializerCompiler !== undefined && !this.addedSchemas
      110 |     if (isReady) {

      at new ValidatorCompiler (../../../VariantsDeps/fastify/variant1/fastify/node_modules/@fastify/ajv-compiler/index.js:68:7)
      at buildCompilerFromPool (../../../VariantsDeps/fastify/variant1/fastify/node_modules/@fastify/ajv-compiler/index.js:32:22)
      at SchemaController.setupValidator (../../../VariantsDeps/fastify/variant1/fastify/lib/schema-controller.js:107:56)
      at Boot.<anonymous> (../../../VariantsDeps/fastify/variant1/fastify/lib/route.js:372:32)
FAIL tests/health.test.ts (20.504 s)
  Health checks
    ✕ Default configuration exposes a /_health route (5002 ms)
    ✕ Custom health check handler is called at startup and every 5 seconds (5000 ms)
    ✕ Custom health check throwing results in 503 (5001 ms)
    ✕ Disabled health monitoring (5001 ms)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Default configuration exposes a /_health route

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       6 |   })
       7 |
    >  8 |   test('Default configuration exposes a /_health route', async () => {
         |   ^
       9 |     const server = createServer()
      10 |     await server.ready()
      11 |     const res = await server.inject({ method: 'GET', url: '/_health' })

      at tests/health.test.ts:8:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check handler is called at startup and every 5 seconds

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('Custom health check handler is called at startup and every 5 seconds', async () => {
         |   ^
      17 |     jest.useFakeTimers('legacy')
      18 |     const healthCheck = jest.fn().mockResolvedValue(true)
      19 |     const server = createServer({

      at tests/health.test.ts:16:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Custom health check throwing results in 503

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Health checks › Custom health check throwing results in 503

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      29 |   })
      30 |
    > 31 |   test('Custom health check throwing results in 503', async () => {
         |   ^
      32 |     jest.useFakeTimers('legacy')
      33 |     const healthCheck = jest
      34 |       .fn()

      at tests/health.test.ts:31:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

  ● Health checks › Disabled health monitoring

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)
      at node_modules/@jest/fake-timers/build/legacyFakeTimers.js:558:18

  ● Health checks › Disabled health monitoring

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      63 |   })
      64 |
    > 65 |   test('Disabled health monitoring', async () => {
         |   ^
      66 |     process.env.FASTIFY_MICRO_DISABLE_SERVICE_HEALTH_MONITORING = 'true'
      67 |     jest.useFakeTimers('legacy')
      68 |     const healthCheck = jest.fn().mockResolvedValue(true)

      at tests/health.test.ts:65:3
      at Object.<anonymous> (tests/health.test.ts:3:1)

FAIL tests/logger.test.ts (20.144 s)
  Logger
    ✕ name property (5002 ms)
    ✕ redact environment variables (5001 ms)
    ✕ redact log paths (5000 ms)
    ✕ request ID generator (5001 ms)

  ● Logger › name property

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      2 |
      3 | describe('Logger', () => {
    > 4 |   test('name property', async () => {
        |   ^
      5 |     const [logLine] = await testLogs(logLine => logLine.dataTestID === 'name')
      6 |     expect(logLine.from).toEqual('foo')
      7 |   })

      at tests/logger.test.ts:4:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact environment variables

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

       7 |   })
       8 |
    >  9 |   test('redact environment variables', async () => {
         |   ^
      10 |     const [logLine] = await testLogs(
      11 |       logLine => logLine.dataTestID === 'redact-env'
      12 |     )

      at tests/logger.test.ts:9:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › redact log paths

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      14 |   })
      15 |
    > 16 |   test('redact log paths', async () => {
         |   ^
      17 |     const [logLine] = await testLogs(
      18 |       logLine => logLine.dataTestID === 'redact-path'
      19 |     )

      at tests/logger.test.ts:16:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

  ● Logger › request ID generator

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      21 |   })
      22 |
    > 23 |   test('request ID generator', async () => {
         |   ^
      24 |     type ReqResLog = { reqId: string }
      25 |
      26 |     const [req1, res1, req2, res2, req3, res3, req4, res4] =

      at tests/logger.test.ts:23:3
      at Object.<anonymous> (tests/logger.test.ts:3:1)

FAIL tests/plugins.test.ts (15.573 s)
  Plugins
    ✕ Loading plugins & routes from filesystem (5001 ms)
    ✕ Graceful exit (5001 ms)
    ✕ Graceful exit with a slow onClose hook (5002 ms)

  ● Plugins › Loading plugins & routes from filesystem

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Loading plugins & routes from filesystem

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      11 |   })
      12 |
    > 13 |   test('Loading plugins & routes from filesystem', async () => {
         |   ^
      14 |     const server = createServer({
      15 |       plugins: {
      16 |         dir: path.resolve(__dirname, './jigs/plugins')

      at tests/plugins.test.ts:13:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      27 |   })
      28 |
    > 29 |   test('Graceful exit', async () => {
         |   ^
      30 |     //jest.setTimeout(10000)
      31 |     const key = nanoid()
      32 |     const server = createServer()

      at tests/plugins.test.ts:29:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: fastify-micro:sentry - expected '3.x' fastify version, '4.3.0' is installed

      127 |   if (!name) return
      128 |   this[registeredPlugins].push(name)
    > 129 | }
          |  ^
      130 |
      131 | function registerPlugin (fn) {
      132 |   registerPluginName.call(this, fn)

      at Object.checkVersion (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:129:11)
      at Object.registerPlugin (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginUtils.js:143:16)
      at Boot.override (../../../VariantsDeps/fastify/variant1/fastify/lib/pluginOverride.js:35:57)
      at Plugin.Object.<anonymous>.Plugin.exec (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:79:33)
      at Boot.loadPlugin (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:272:10)

  ● Plugins › Graceful exit with a slow onClose hook

    FastifyError: fastify-plugin: Plugin did not start in time: 'bound _after'. You may have forgotten to call 'done' function or to resolve a Promise

      618 |     // config issue on the load balancer side.
      619 |     this.log.trace({ err }, 'client error')
    > 620 |     // Copying standard node behaviour
          |                                       ^
      621 |     // https://github.com/nodejs/node/blob/6ca23d7846cb47e84fd344543e394e50938540be/lib/_http_server.js#L666
      622 |
      623 |     // If the socket is not writable, there is no reason to try to send data.

      at manageErr (../../../VariantsDeps/fastify/variant1/fastify/fastify.js:620:87)
      at ../../../VariantsDeps/fastify/variant1/fastify/fastify.js:607:11
      at Object._encapsulateThreeParam (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:557:7)
      at Boot.timeoutCall (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:453:5)
      at Boot.callWithCbOrNextTick (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:435:19)
      at release (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:149:16)
      at Object.resume (../../../VariantsDeps/fastify/variant1/fastify/node_modules/fastq/queue.js:82:7)
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/boot.js:174:18
      at ../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:275:7
      at done (../../../VariantsDeps/fastify/variant1/fastify/node_modules/avvio/plugin.js:200:5)

  ● Plugins › Graceful exit with a slow onClose hook

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      43 |   })
      44 |
    > 45 |   test('Graceful exit with a slow onClose hook', async () => {
         |   ^
      46 |     const key = nanoid()
      47 |     const server = createServer()
      48 |     server.get('/', async (_, res) => {

      at tests/plugins.test.ts:45:3
      at Object.<anonymous> (tests/plugins.test.ts:8:1)

