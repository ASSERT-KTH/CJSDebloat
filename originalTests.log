https://github.com/expressjs/compression.git
compression
ad5113b98cafe1382a0ece30bb4673707ac59ce7

added 404 packages, and audited 405 packages in 16s

94 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> compression@1.7.4 test
> mocha --check-leaks --reporter spec --bail



  compression()
    ✔ should skip HEAD
    ✔ should skip unknown accept-encoding
    ✔ should skip if content-encoding already set
    ✔ should set Vary
    ✔ should set Vary even if Accept-Encoding is not set
    ✔ should not set Vary if Content-Type does not pass filter
    ✔ should set Vary for HEAD request
    ✔ should transfer chunked
    ✔ should remove Content-Length for chunked
    ✔ should work with encoding arguments
    ✔ should allow writing after close
    ✔ should back-pressure when compressed
    ✔ should back-pressure when uncompressed
    ✔ should transfer large bodies
    ✔ should transfer large bodies with multiple writes
    threshold
      ✔ should not compress responses below the threshold size
      ✔ should compress responses above the threshold size
      ✔ should compress when streaming without a content-length
      ✔ should not compress when streaming and content-length is lower than threshold
      ✔ should compress when streaming and content-length is larger than threshold
      ✔ should handle writing hex data
      ✔ should consider res.end() as 0 length
      ✔ should work with res.end(null)
    when "Accept-Encoding: gzip"
      ✔ should respond with gzip
      ✔ should return false writing after end
    when "Accept-Encoding: deflate"
      ✔ should respond with deflate
    when "Accept-Encoding: gzip, deflate"
      ✔ should respond with gzip
    when "Accept-Encoding: deflate, gzip"
      ✔ should respond with gzip
    when "Cache-Control: no-transform" response header
      ✔ should not compress response
      ✔ should not set Vary headerh
    .filter
      ✔ should be a function
      ✔ should return false on empty response
      ✔ should return true for "text/plain"
      ✔ should return false for "application/x-bogus"
    res.flush()
      ✔ should always be present
      ✔ should flush the response
      ✔ should flush small chunks for gzip
      ✔ should flush small chunks for deflate


  38 passing (182ms)

----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |     100 |      100 |     100 |     100 |                   
 index.js |     100 |      100 |     100 |     100 |                   
----------|---------|----------|---------|---------|-------------------
https://github.com/expressjs/express.git
express
2c47827053233e707536019a15499ccf5496dc9d

added 415 packages, and audited 416 packages in 11s

48 packages are looking for funding
  run `npm fund` for details

3 high severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
Start Generating test coverage report...

> express@4.18.1 test
> mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/



  Route
    ✔ should work without handlers
    ✔ should not stack overflow with a large sync stack (68ms)
    .all
      ✔ should add handler
      ✔ should handle VERBS
      ✔ should stack
    .VERB
      ✔ should support .get
      ✔ should limit to just .VERB
      ✔ should allow fallthrough
    errors
      ✔ should handle errors via arity 4 functions
      ✔ should handle throw
      ✔ should handle throwing inside error handlers
      ✔ should handle throw in .all
      ✔ should handle single error handler

  Router
    ✔ should return a function with router methods
    ✔ should support .use of other routers
    ✔ should support dynamic routes
    ✔ should handle blank URL
    ✔ should handle missing URL
    ✔ should not stack overflow with many registered routes (137ms)
    ✔ should not stack overflow with a large sync route stack (109ms)
    ✔ should not stack overflow with a large sync middleware stack (100ms)
    .handle
      ✔ should dispatch
    .multiple callbacks
      ✔ should throw if a callback is null
      ✔ should throw if a callback is undefined
      ✔ should throw if a callback is not a function
      ✔ should not throw if all callbacks are functions
    error
      ✔ should skip non error middleware
      ✔ should handle throwing inside routes with params
      ✔ should handle throwing in handler after async param
      ✔ should handle throwing inside error handlers
    FQDN
      ✔ should not obscure FQDNs
      ✔ should ignore FQDN in search
      ✔ should ignore FQDN in path
      ✔ should adjust FQDN req.url
      ✔ should adjust FQDN req.url with multiple handlers
      ✔ should adjust FQDN req.url with multiple routed handlers
    .all
      ✔ should support using .all to capture all http verbs
      ✔ should be called for any URL when "*"
    .use
      ✔ should require middleware
      ✔ should reject string as middleware
      ✔ should reject number as middleware
      ✔ should reject null as middleware
      ✔ should reject Date as middleware
      ✔ should be called for any URL
      ✔ should accept array of middleware
    .param
      ✔ should call param function when routing VERBS
      ✔ should call param function when routing middleware
      ✔ should only call once per request
      ✔ should call when values differ
    parallel requests
      ✔ should not mix requests (51ms)

  app.all()
    ✔ should add a router per method
    ✔ should run the callback for a method just once

  app.del()
    ✔ should alias app.delete()

  app
    .engine(ext, fn)
      ✔ should map a template engine
      ✔ should throw when the callback is missing
      ✔ should work without leading "."
      ✔ should work "view engine" setting
      ✔ should work "view engine" with leading "."

  HEAD
    ✔ should default to GET
    ✔ should output the same headers as GET requests

  app.head()
    ✔ should override

  app
    ✔ should inherit from event emitter
    ✔ should be callable
    ✔ should 404 without routes

  app.parent
    ✔ should return the parent when mounted

  app.mountpath
    ✔ should return the mounted path

  app.router
    ✔ should throw with notice

  app.path()
    ✔ should return the canonical

  in development
    ✔ should disable "view cache"

  in production
    ✔ should enable "view cache"

  without NODE_ENV
    ✔ should default to development

  app.listen()
    ✔ should wrap with an HTTP server

  app
    .locals
      ✔ should default object
      .settings
        ✔ should contain app settings 

  OPTIONS
    ✔ should default to the routes defined
    ✔ should only include each method once
    ✔ should not be affected by app.all
    ✔ should not respond if the path is not defined
    ✔ should forward requests down the middleware chain
    when error occurs in response handler
      ✔ should pass error to callback

  app.options()
    ✔ should override the default behavior

  app
    .param(fn)
      ✔ should map app.param(name, ...) logic
      ✔ should fail if not given fn
    .param(names, fn)
      ✔ should map the array
    .param(name, fn)
      ✔ should map logic for a single param
      ✔ should only call once per request
      ✔ should call when values differ
      ✔ should support altering req.params across routes
      ✔ should not invoke without route handler
      ✔ should work with encoded values
      ✔ should catch thrown error
      ✔ should catch thrown secondary error
      ✔ should defer to next route
      ✔ should defer all the param routes
      ✔ should not call when values differ on error
      ✔ should call when values differ when using "next"

  app
    .render(name, fn)
      ✔ should support absolute paths
      ✔ should support absolute paths with "view engine"
      ✔ should expose app.locals
      ✔ should support index.<engine>
      ✔ should handle render error throws
      when the file does not exist
        ✔ should provide a helpful error
      when an error occurs
        ✔ should invoke the callback
      when an extension is given
        ✔ should render the template
      when "view engine" is given
        ✔ should render the template
      when "views" is given
        ✔ should lookup the file in the path
        when array of paths
          ✔ should lookup the file in the path
          ✔ should lookup in later paths until found
          ✔ should error if file does not exist
      when a "view" constructor is given
        ✔ should create an instance of it
      caching
        ✔ should always lookup view without cache
        ✔ should cache with "view cache" setting
    .render(name, options, fn)
      ✔ should render the template
      ✔ should expose app.locals
      ✔ should give precedence to app.render() locals
      caching
        ✔ should cache with cache option

  app
    .request
      ✔ should extend the request prototype
      ✔ should only extend for the referenced app
      ✔ should inherit to sub apps
      ✔ should allow sub app to override
      ✔ should not pollute parent app

  app
    .response
      ✔ should extend the response prototype
      ✔ should only extend for the referenced app
      ✔ should inherit to sub apps
      ✔ should allow sub app to override
      ✔ should not pollute parent app

  app.route
    ✔ should return a new route
    ✔ should all .VERB after .all
    ✔ should support dynamic routes
    ✔ should not error on empty routes

  app.router
    ✔ should restore req.params after leaving router
    ✔ should be .use()able
    ✔ should allow escaped regexp
    ✔ should allow literal "."
    ✔ should allow rewriting of the url
    ✔ should run in order added
    ✔ should be chainable
    methods
      ✔ should include ACL
      ✔ should reject numbers for app.acl
      ✔ should include BIND
      ✔ should reject numbers for app.bind
      ✔ should include CHECKOUT
      ✔ should reject numbers for app.checkout
      ✔ should include COPY
      ✔ should reject numbers for app.copy
      ✔ should include DELETE
      ✔ should reject numbers for app.delete
      ✔ should include GET
      ✔ should reject numbers for app.get
      ✔ should include HEAD
      ✔ should reject numbers for app.head
      ✔ should include LINK
      ✔ should reject numbers for app.link
      ✔ should include LOCK
      ✔ should reject numbers for app.lock
      ✔ should include M-SEARCH
      ✔ should reject numbers for app.m-search
      ✔ should include MERGE
      ✔ should reject numbers for app.merge
      ✔ should include MKACTIVITY
      ✔ should reject numbers for app.mkactivity
      ✔ should include MKCALENDAR
      ✔ should reject numbers for app.mkcalendar
      ✔ should include MKCOL
      ✔ should reject numbers for app.mkcol
      ✔ should include MOVE
      ✔ should reject numbers for app.move
      ✔ should include NOTIFY
      ✔ should reject numbers for app.notify
      ✔ should include OPTIONS
      ✔ should reject numbers for app.options
      ✔ should include PATCH
      ✔ should reject numbers for app.patch
      ✔ should include POST
      ✔ should reject numbers for app.post
      ✔ should include PROPFIND
      ✔ should reject numbers for app.propfind
      ✔ should include PROPPATCH
      ✔ should reject numbers for app.proppatch
      ✔ should include PURGE
      ✔ should reject numbers for app.purge
      ✔ should include PUT
      ✔ should reject numbers for app.put
      ✔ should include REBIND
      ✔ should reject numbers for app.rebind
      ✔ should include REPORT
      ✔ should reject numbers for app.report
      ✔ should include SEARCH
      ✔ should reject numbers for app.search
      ✔ should include SOURCE
      ✔ should reject numbers for app.source
      ✔ should include SUBSCRIBE
      ✔ should reject numbers for app.subscribe
      ✔ should include TRACE
      ✔ should reject numbers for app.trace
      ✔ should include UNBIND
      ✔ should reject numbers for app.unbind
      ✔ should include UNLINK
      ✔ should reject numbers for app.unlink
      ✔ should include UNLOCK
      ✔ should reject numbers for app.unlock
      ✔ should include UNSUBSCRIBE
      ✔ should reject numbers for app.unsubscribe
      ✔ should include DEL
      ✔ should reject numbers for app.del
      ✔ should re-route when method is altered
    decode params
      ✔ should decode correct params
      ✔ should not accept params in malformed paths
      ✔ should not decode spaces
      ✔ should work with unicode
    when given a regexp
      ✔ should match the pathname only
      ✔ should populate req.params with the captures
      ✔ should ensure regexp matches path prefix
    case sensitivity
      ✔ should be disabled by default
      when "case sensitive routing" is enabled
        ✔ should match identical casing
        ✔ should not match otherwise
    params
      ✔ should overwrite existing req.params by default
      ✔ should allow merging existing req.params
      ✔ should use params from router
      ✔ should merge numeric indices req.params
      ✔ should merge numeric indices req.params when more in parent
      ✔ should merge numeric indices req.params when parent has same number
      ✔ should ignore invalid incoming req.params
      ✔ should restore req.params
    trailing slashes
      ✔ should be optional by default
      when "strict routing" is enabled
        ✔ should match trailing slashes
        ✔ should pass-though middleware
        ✔ should pass-though mounted middleware
        ✔ should match no slashes
        ✔ should match middleware when omitting the trailing slash
        ✔ should match middleware
        ✔ should match middleware when adding the trailing slash
        ✔ should fail when omitting the trailing slash
        ✔ should fail when adding the trailing slash
    *
      ✔ should capture everything
      ✔ should decode the capture
      ✔ should denote a greedy capture group
      ✔ should work with several
      ✔ should work cross-segment
      ✔ should allow naming
      ✔ should not be greedy immediately after param
      ✔ should eat everything after /
      ✔ should span multiple segments
      ✔ should be optional
      ✔ should require a preceding /
      ✔ should keep correct parameter indexes
      ✔ should work within arrays
    :name
      ✔ should denote a capture group
      ✔ should match a single segment only
      ✔ should allow several capture groups
      ✔ should work following a partial capture group
      ✔ should work inside literal parenthesis
      ✔ should work in array of paths
    :name?
      ✔ should denote an optional capture group
      ✔ should populate the capture group
    .:name
      ✔ should denote a format
    .:name?
      ✔ should denote an optional format
    when next() is called
      ✔ should continue lookup
    when next("route") is called
      ✔ should jump to next route
    when next("router") is called
      ✔ should jump out of router
    when next(err) is called
      ✔ should break out of app.router
      ✔ should call handler in same route, if exists

  app
    .VERB()
      ✔ should not get invoked without error handler on error
      ✔ should only call an error handling routing callback when an error is propagated

  app
    ✔ should emit "mount" when mounted
    .use(app)
      ✔ should mount the app
      ✔ should support mount-points
      ✔ should set the child's .parent
      ✔ should support dynamic routes
      ✔ should support mounted app anywhere
    .use(middleware)
      ✔ should accept multiple arguments
      ✔ should invoke middleware for all requests
      ✔ should accept array of middleware
      ✔ should accept multiple arrays of middleware
      ✔ should accept nested arrays of middleware
    .use(path, middleware)
      ✔ should require middleware
      ✔ should reject string as middleware
      ✔ should reject number as middleware
      ✔ should reject null as middleware
      ✔ should reject Date as middleware
      ✔ should strip path from req.url
      ✔ should accept multiple arguments
      ✔ should invoke middleware for all requests starting with path
      ✔ should work if path has trailing slash
      ✔ should accept array of middleware
      ✔ should accept multiple arrays of middleware
      ✔ should accept nested arrays of middleware
      ✔ should support array of paths
      ✔ should support array of paths with middleware array
      ✔ should support regexp path
      ✔ should support empty string path

  config
    .set()
      ✔ should set a value
      ✔ should set prototype values
      ✔ should return the app
      ✔ should return the app when undefined
      ✔ should return set value
      ✔ should return undefined for prototype values
      "etag"
        ✔ should throw on bad value
        ✔ should set "etag fn"
      "trust proxy"
        ✔ should set "trust proxy fn"
    .get()
      ✔ should return undefined when unset
      ✔ should return undefined for prototype values
      ✔ should otherwise return the value
      when mounted
        ✔ should default to the parent app
        ✔ should given precedence to the child
        ✔ should inherit "trust proxy" setting
        ✔ should prefer child "trust proxy" setting
    .enable()
      ✔ should set the value to true
      ✔ should set prototype values
    .disable()
      ✔ should set the value to false
      ✔ should set prototype values
    .enabled()
      ✔ should default to false
      ✔ should return true when set
      ✔ should default to false for prototype values
    .disabled()
      ✔ should default to true
      ✔ should return false when set
      ✔ should default to true for prototype values

  exports
    ✔ should expose Router
    ✔ should expose json middleware
    ✔ should expose raw middleware
    ✔ should expose static middleware
    ✔ should expose text middleware
    ✔ should expose urlencoded middleware
    ✔ should expose the application prototype
    ✔ should expose the request prototype
    ✔ should expose the response prototype
    ✔ should permit modifying the .application prototype
    ✔ should permit modifying the .request prototype
    ✔ should permit modifying the .response prototype
    ✔ should throw on old middlewares

  express.json()
    ✔ should parse JSON
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should handle no message-body
    ✔ should 400 when only whitespace
    ✔ should 400 when invalid content-length
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    when JSON is invalid
      ✔ should 400 for bad token
      ✔ should 400 for incomplete
      ✔ should include original body on error object
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with strict option
      when undefined
        ✔ should 400 on primitives
      when false
        ✔ should parse primitives
      when true
        ✔ should not parse primitives
        ✔ should not parse primitives with leading whitespaces
        ✔ should allow leading whitespaces in JSON
        ✔ should include correct message in stack trace
    with type option
      when "application/vnd.api+json"
        ✔ should parse JSON for custom type
        ✔ should ignore standard type
      when ["application/json", "application/vnd.api+json"]
        ✔ should parse JSON for "application/json"
        ✔ should parse JSON for "application/vnd.api+json"
        ✔ should ignore "application/x-json"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value if function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow custom type
      ✔ should include original body on error object
      ✔ should allow pass-through
      ✔ should work with different charsets
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when parse error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse utf-16
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should fail on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding
      ✔ should 400 on malformed encoding
      ✔ should 413 when inflated value exceeds limit

  express.raw()
    ✔ should parse application/octet-stream
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with type option
      when "application/vnd+octets"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["application/octet-stream", "application/vnd+octets"]
        ✔ should parse "application/octet-stream"
        ✔ should parse "application/vnd+octets"
        ✔ should ignore "application/x-foo"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value is function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow pass-through
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should ignore charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding

  express.static()
    basic operations
      ✔ should require root path
      ✔ should require root path to be string
      ✔ should serve static files
      ✔ should support nesting
      ✔ should set Content-Type
      ✔ should set Last-Modified
      ✔ should default max-age=0
      ✔ should support urlencoded pathnames
      ✔ should not choke on auth-looking URL
      ✔ should support index.html
      ✔ should support ../
      ✔ should support HEAD
      ✔ should skip POST requests
      ✔ should support conditional requests
      ✔ should support precondition checks
      ✔ should serve zero-length files
      ✔ should ignore hidden files
    current dir
      ✔ should be served with "."
    acceptRanges
      when false
        ✔ should not include Accept-Ranges
        ✔ should ignore Rage request header
      when true
        ✔ should include Accept-Ranges
        ✔ should obey Rage request header
    cacheControl
      when false
        ✔ should not include Cache-Control
        ✔ should ignore maxAge
      when true
        ✔ should include Cache-Control
    extensions
      ✔ should be not be enabled by default
      ✔ should be configurable
      ✔ should support disabling extensions
      ✔ should support fallbacks
      ✔ should 404 if nothing found
    fallthrough
      ✔ should default to true
      when true
        ✔ should fall-through when OPTIONS request
        ✔ should fall-through when URL malformed
        ✔ should fall-through when traversing past root
        ✔ should fall-through when URL too long
        with redirect: true
          ✔ should fall-through when directory
          ✔ should redirect when directory without slash
        with redirect: false
          ✔ should fall-through when directory
          ✔ should fall-through when directory without slash
      when false
        ✔ should 405 when OPTIONS request
        ✔ should 400 when URL malformed
        ✔ should 403 when traversing past root
        ✔ should 404 when URL too long
        with redirect: true
          ✔ should 404 when directory
          ✔ should redirect when directory without slash
        with redirect: false
          ✔ should 404 when directory
          ✔ should 404 when directory without slash
    hidden files
      ✔ should be served when dotfiles: "allow" is given
    immutable
      ✔ should default to false
      ✔ should set immutable directive in Cache-Control
    lastModified
      when false
        ✔ should not include Last-Modified
      when true
        ✔ should include Last-Modified
    maxAge
      ✔ should accept string
      ✔ should be reasonable when infinite
    redirect
      ✔ should redirect directories
      ✔ should include HTML link
      ✔ should redirect directories with query string
      ✔ should not redirect to protocol-relative locations
      ✔ should ensure redirect URL is properly encoded
      ✔ should respond with default Content-Security-Policy
      ✔ should not redirect incorrectly
      when false
        ✔ should disable redirect
    setHeaders
      ✔ should reject non-functions
      ✔ should get called when sending file
      ✔ should not get called on 404
      ✔ should not get called on redirect
    when traversing past root
      ✔ should catch urlencoded ../
      ✔ should not allow root path disclosure
    when request has "Range" header
      ✔ should support byte ranges
      ✔ should be inclusive
      ✔ should set Content-Range
      ✔ should support -n
      ✔ should support n-
      ✔ should respond with 206 "Partial Content"
      ✔ should set Content-Length to the # of octets transferred
      when last-byte-pos of the range is greater than current length
        ✔ is taken to be equal to one less than the current length
        ✔ should adapt the Content-Length accordingly
      when the first- byte-pos of the range is greater than the current length
        ✔ should respond with 416
        ✔ should include a Content-Range header of complete length
      when syntactically invalid
        ✔ should respond with 200 and the entire contents
    when index at mount point
      ✔ should redirect correctly
    when mounted
      ✔ should redirect relative to the originalUrl
      ✔ should not choke on auth-looking URL
    when mounted "root" as a file
      ✔ should load the file when on trailing slash
      ✔ should 404 when trailing slash
    when responding non-2xx or 304
      ✔ should not alter the status
    when index file serving disabled
      ✔ should next() on directory
      ✔ should redirect to trailing slash
      ✔ should next() on mount point
      ✔ should redirect to trailing slash mount point

  express.text()
    ✔ should parse text/plain
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    with defaultCharset option
      ✔ should change default charset
      ✔ should honor content-type charset
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating (102ms)
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with type option
      when "text/html"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["text/html", "text/plain"]
        ✔ should parse "text/html"
        ✔ should parse "text/plain"
        ✔ should ignore "text/xml"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value is function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow pass-through
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse codepage charsets
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should 415 on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding

  express.urlencoded()
    ✔ should parse x-www-form-urlencoded
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    ✔ should parse extended syntax
    with extended option
      when false
        ✔ should not parse extended syntax
        ✔ should parse multiple key instances
      when true
        ✔ should parse multiple key instances
        ✔ should parse extended syntax
        ✔ should parse parameters with dots
        ✔ should parse fully-encoded extended syntax
        ✔ should parse array index notation
        ✔ should parse array index notation with large array
        ✔ should parse array of objects syntax
        ✔ should parse deep object
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with parameterLimit option
      with extended: false
        ✔ should reject 0
        ✔ should reject string
        ✔ should 413 if over limit
        ✔ should work when at the limit
        ✔ should work if number is floating point
        ✔ should work with large limit
        ✔ should work with Infinity limit (39ms)
      with extended: true
        ✔ should reject 0
        ✔ should reject string
        ✔ should 413 if over limit
        ✔ should work when at the limit
        ✔ should work if number is floating point
        ✔ should work with large limit (44ms)
        ✔ should work with Infinity limit (105ms)
    with type option
      when "application/vnd.x-www-form-urlencoded"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["urlencoded", "application/x-pairs"]
        ✔ should parse "application/x-www-form-urlencoded"
        ✔ should parse "application/x-pairs"
        ✔ should ignore application/x-foo
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value if function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow custom type
      ✔ should allow pass-through
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should fail on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding

  middleware
    .next()
      ✔ should behave like connect

  throw after .end()
    ✔ should fail gracefully

  req
    ✔ should accept an argument list of type names
    .accepts(type)
      ✔ should return true when Accept is not present
      ✔ should return true when present
      ✔ should return false otherwise
    .accepts(types)
      ✔ should return the first when Accept is not present
      ✔ should return the first acceptable type
      ✔ should return false when no match is made
      ✔ should take quality into account
      ✔ should return the first acceptable type with canonical mime types

  req
    .acceptsCharset(type)
      when Accept-Charset is not present
        ✔ should return true
      when Accept-Charset is present
        ✔ should return true
        ✔ should return false otherwise

  req
    .acceptsCharsets(type)
      when Accept-Charset is not present
        ✔ should return true
      when Accept-Charset is present
        ✔ should return true
        ✔ should return false otherwise

  req
    .acceptsEncoding
      ✔ should return encoding if accepted
      ✔ should be false if encoding not accepted

  req
    .acceptsEncodings
      ✔ should return encoding if accepted
      ✔ should be false if encoding not accepted

  req
    .acceptsLanguage
      ✔ should return language if accepted
      ✔ should be false if language not accepted
      when Accept-Language is not present
        ✔ should always return language

  req
    .acceptsLanguages
      ✔ should return language if accepted
      ✔ should be false if language not accepted
      when Accept-Language is not present
        ✔ should always return language

  req
    .baseUrl
      ✔ should be empty for top-level route
      ✔ should contain lower path
      ✔ should contain full lower path
      ✔ should travel through routers correctly

  req
    .fresh
      ✔ should return true when the resource is not modified
      ✔ should return false when the resource is modified
      ✔ should return false without response headers

  req
    .get(field)
      ✔ should return the header field value
      ✔ should special-case Referer
      ✔ should throw missing header name
      ✔ should throw for non-string header name

  req
    .host
      ✔ should return the Host when present
      ✔ should strip port number
      ✔ should return undefined otherwise
      ✔ should work with IPv6 Host
      ✔ should work with IPv6 Host and port
      when "trust proxy" is enabled
        ✔ should respect X-Forwarded-Host
        ✔ should ignore X-Forwarded-Host if socket addr not trusted
        ✔ should default to Host
        when trusting hop count
          ✔ should respect X-Forwarded-Host
      when "trust proxy" is disabled
        ✔ should ignore X-Forwarded-Host

  req
    .hostname
      ✔ should return the Host when present
      ✔ should strip port number
      ✔ should return undefined otherwise
      ✔ should work with IPv6 Host
      ✔ should work with IPv6 Host and port
      when "trust proxy" is enabled
        ✔ should respect X-Forwarded-Host
        ✔ should ignore X-Forwarded-Host if socket addr not trusted
        ✔ should default to Host
        when multiple X-Forwarded-Host
          ✔ should use the first value
          ✔ should remove OWS around comma
          ✔ should strip port number
      when "trust proxy" is disabled
        ✔ should ignore X-Forwarded-Host

  req
    .ip
      when X-Forwarded-For is present
        when "trust proxy" is enabled
          ✔ should return the client addr
          ✔ should return the addr after trusted proxy based on count
          ✔ should return the addr after trusted proxy based on list
          ✔ should return the addr after trusted proxy, from sub app
        when "trust proxy" is disabled
          ✔ should return the remote address
      when X-Forwarded-For is not present
        ✔ should return the remote address

  req
    .ips
      when X-Forwarded-For is present
        when "trust proxy" is enabled
          ✔ should return an array of the specified addresses
          ✔ should stop at first untrusted
        when "trust proxy" is disabled
          ✔ should return an empty array
      when X-Forwarded-For is not present
        ✔ should return []

  req.is()
    when given a mime type
      ✔ should return the type when matching
      ✔ should return false when not matching
      ✔ should ignore charset
    when content-type is not present
      ✔ should return false
    when given an extension
      ✔ should lookup the mime type
    when given */subtype
      ✔ should return the full type when matching
      ✔ should return false when not matching
      ✔ should ignore charset
    when given type/*
      ✔ should return the full type when matching
      ✔ should return false when not matching
      ✔ should ignore charset

  req
    .param(name, default)
      ✔ should use the default value unless defined
    .param(name)
      ✔ should check req.query
      ✔ should check req.body
      ✔ should check req.params

  req
    .path
      ✔ should return the parsed pathname

  req
    .protocol
      ✔ should return the protocol string
      when "trust proxy" is enabled
        ✔ should respect X-Forwarded-Proto
        ✔ should default to the socket addr if X-Forwarded-Proto not present
        ✔ should ignore X-Forwarded-Proto if socket addr not trusted
        ✔ should default to http
        when trusting hop count
          ✔ should respect X-Forwarded-Proto
      when "trust proxy" is disabled
        ✔ should ignore X-Forwarded-Proto

  req
    .query
      ✔ should default to {}
      ✔ should default to parse complex keys
      when "query parser" is extended
        ✔ should parse complex keys
        ✔ should parse parameters with dots
      when "query parser" is simple
        ✔ should not parse complex keys
      when "query parser" is a function
        ✔ should parse using function
      when "query parser" disabled
        ✔ should not parse query
      when "query parser" enabled
        ✔ should not parse complex keys
      when "query parser fn" is missing
        ✔ should act like "extended"
      when "query parser" an unknown value
        ✔ should throw

  req
    .range(size)
      ✔ should return parsed ranges
      ✔ should cap to the given size
      ✔ should cap to the given size when open-ended
      ✔ should have a .type
      ✔ should accept any type
      ✔ should return undefined if no range
    .range(size, options)
      with "combine: true" option
        ✔ should return combined ranges

  req
    .route
      ✔ should be the executed Route

  req
    .secure
      when X-Forwarded-Proto is missing
        ✔ should return false when http
    .secure
      when X-Forwarded-Proto is present
        ✔ should return false when http
        ✔ should return true when "trust proxy" is enabled
        ✔ should return false when initial proxy is http
        ✔ should return true when initial proxy is https
        when "trust proxy" trusting hop count
          ✔ should respect X-Forwarded-Proto

  req
    .signedCookies
      ✔ should return a signed JSON cookie

  req
    .stale
      ✔ should return false when the resource is not modified
      ✔ should return true when the resource is modified
      ✔ should return true without response headers

  req
    .subdomains
      when present
        ✔ should return an array
        ✔ should work with IPv4 address
        ✔ should work with IPv6 address
      otherwise
        ✔ should return an empty array
      with no host
        ✔ should return an empty array
      with trusted X-Forwarded-Host
        ✔ should return an array
      when subdomain offset is set
        when subdomain offset is zero
          ✔ should return an array with the whole domain
          ✔ should return an array with the whole IPv4
          ✔ should return an array with the whole IPv6
        when present
          ✔ should return an array
        otherwise
          ✔ should return an empty array

  req
    .xhr
      ✔ should return true when X-Requested-With is xmlhttprequest
      ✔ should case-insensitive
      ✔ should return false otherwise
      ✔ should return false when not present

  res
    .append(field, val)
      ✔ should append multiple headers
      ✔ should accept array of values
      ✔ should get reset by res.set(field, val)
      ✔ should work with res.set(field, val) first
      ✔ should work together with res.cookie

  res
    .attachment()
      ✔ should Content-Disposition to attachment
    .attachment(filename)
      ✔ should add the filename param
      ✔ should set the Content-Type
    .attachment(utf8filename)
      ✔ should add the filename and filename* params
      ✔ should set the Content-Type

  res
    .clearCookie(name)
      ✔ should set a cookie passed expiry
    .clearCookie(name, options)
      ✔ should set the given params

  res
    .cookie(name, object)
      ✔ should generate a JSON cookie
    .cookie(name, string)
      ✔ should set a cookie
      ✔ should allow multiple calls
    .cookie(name, string, options)
      ✔ should set params
      expires
        ✔ should throw on invalid date
      maxAge
        ✔ should set relative expires
        ✔ should set max-age
        ✔ should not mutate the options object
        ✔ should not throw on null
        ✔ should not throw on undefined
        ✔ should throw an error with invalid maxAge
      priority
        ✔ should set low priority
        ✔ should set medium priority
        ✔ should set high priority
        ✔ should throw with invalid priority
      signed
        ✔ should generate a signed JSON cookie
      signed without secret
        ✔ should throw an error
      .signedCookie(name, string)
        ✔ should set a signed cookie

  res
    .download(path)
      ✔ should transfer as an attachment
      ✔ should accept range requests
      ✔ should respond with requested byte range
    .download(path, filename)
      ✔ should provide an alternate filename
    .download(path, fn)
      ✔ should invoke the callback
      async local storage
        ✔ should presist store
        ✔ should presist store on error
    .download(path, options)
      ✔ should allow options to res.sendFile()
      with "headers" option
        ✔ should set headers on response
        ✔ should use last header when duplicated
        ✔ should override Content-Type
        ✔ should not set headers on 404
        when headers contains Content-Disposition
          ✔ should be ignored
          ✔ should be ignored case-insensitively
      with "root" option
        ✔ should allow relative path
        ✔ should allow up within root
        ✔ should reject up outside root
        ✔ should reject reading outside root
    .download(path, filename, fn)
      ✔ should invoke the callback
    .download(path, filename, options, fn)
      ✔ should invoke the callback
      ✔ should allow options to res.sendFile()
      when options.headers contains Content-Disposition
        ✔ should be ignored
        ✔ should be ignored case-insensitively
    on failure
      ✔ should invoke the callback
      ✔ should remove Content-Disposition

  res
    .format(obj)
      with canonicalized mime types
        ✔ should utilize qvalues in negotiation
        ✔ should allow wildcard type/subtypes
        ✔ should default the Content-Type
        ✔ should set the correct charset for the Content-Type
        ✔ should Vary: Accept
        when Accept is not present
          ✔ should invoke the first callback
        when no match is made
          ✔ should should respond with 406 not acceptable
      with extnames
        ✔ should utilize qvalues in negotiation
        ✔ should allow wildcard type/subtypes
        ✔ should default the Content-Type
        ✔ should set the correct charset for the Content-Type
        ✔ should Vary: Accept
        when Accept is not present
          ✔ should invoke the first callback
        when no match is made
          ✔ should should respond with 406 not acceptable
      with parameters
        ✔ should utilize qvalues in negotiation
        ✔ should allow wildcard type/subtypes
        ✔ should default the Content-Type
        ✔ should set the correct charset for the Content-Type
        ✔ should Vary: Accept
        when Accept is not present
          ✔ should invoke the first callback
        when no match is made
          ✔ should should respond with 406 not acceptable
      given .default
        ✔ should be invoked instead of auto-responding
        ✔ should work when only .default is provided
        ✔ should be able to invoke other formatter
      in router
        ✔ should utilize qvalues in negotiation
        ✔ should allow wildcard type/subtypes
        ✔ should default the Content-Type
        ✔ should set the correct charset for the Content-Type
        ✔ should Vary: Accept
        when Accept is not present
          ✔ should invoke the first callback
        when no match is made
          ✔ should should respond with 406 not acceptable
      in router
        ✔ should utilize qvalues in negotiation
        ✔ should allow wildcard type/subtypes
        ✔ should default the Content-Type
        ✔ should set the correct charset for the Content-Type
        ✔ should Vary: Accept
        when Accept is not present
          ✔ should invoke the first callback
        when no match is made
          ✔ should should respond with 406 not acceptable

  res
    .get(field)
      ✔ should get the response header field

  res
    .json(object)
      ✔ should not support jsonp callbacks
      ✔ should not override previous Content-Types
      when given primitives
        ✔ should respond with json for null
        ✔ should respond with json for Number
        ✔ should respond with json for String
      when given an array
        ✔ should respond with json
      when given an object
        ✔ should respond with json
      "json escape" setting
        ✔ should be undefined by default
        ✔ should unicode escape HTML-sniffing characters
        ✔ should not break undefined escape
      "json replacer" setting
        ✔ should be passed to JSON.stringify()
      "json spaces" setting
        ✔ should be undefined by default
        ✔ should be passed to JSON.stringify()
    .json(status, object)
      ✔ should respond with json and set the .statusCode
    .json(object, status)
      ✔ should respond with json and set the .statusCode for backwards compat
      ✔ should use status as second number for backwards compat

  res
    ✔ should not override previous Content-Types
    .jsonp(object)
      ✔ should respond with jsonp
      ✔ should use first callback parameter with jsonp
      ✔ should ignore object callback parameter with jsonp
      ✔ should allow renaming callback
      ✔ should allow []
      ✔ should disallow arbitrary js
      ✔ should escape utf whitespace
      ✔ should not escape utf whitespace for json fallback
      ✔ should include security header and prologue
      ✔ should not override previous Content-Types with no callback
      ✔ should override previous Content-Types with callback
      when given undefined
        ✔ should invoke callback with no arguments
      when given null
        ✔ should invoke callback with null
      when given a string
        ✔ should invoke callback with a string
      when given a number
        ✔ should invoke callback with a number
      when given an array
        ✔ should invoke callback with an array
      when given an object
        ✔ should invoke callback with an object
      "json escape" setting
        ✔ should be undefined by default
        ✔ should unicode escape HTML-sniffing characters
        ✔ should not break undefined escape
      "json replacer" setting
        ✔ should be passed to JSON.stringify()
      "json spaces" setting
        ✔ should be undefined by default
        ✔ should be passed to JSON.stringify()
    .jsonp(status, object)
      ✔ should respond with json and set the .statusCode
    .jsonp(object, status)
      ✔ should respond with json and set the .statusCode for backwards compat
      ✔ should use status as second number for backwards compat

  res
    .links(obj)
      ✔ should set Link header field
      ✔ should set Link header field for multiple calls

  res
    ✔ should work when mounted
    .locals
      ✔ should be empty by default

  res
    .location(url)
      ✔ should set the header
      ✔ should encode "url"
      ✔ should not touch already-encoded sequences in "url"
      when url is "back"
        ✔ should set location from "Referer" header
        ✔ should set location from "Referrer" header
        ✔ should prefer "Referrer" header
        ✔ should set the header to "/" without referrer

  res
    .redirect(url)
      ✔ should default to a 302 redirect
      ✔ should encode "url"
      ✔ should not touch already-encoded sequences in "url"
    .redirect(status, url)
      ✔ should set the response status
    .redirect(url, status)
      ✔ should set the response status
    when the request method is HEAD
      ✔ should ignore the body
    when accepting html
      ✔ should respond with html
      ✔ should escape the url
      ✔ should include the redirect type
    when accepting text
      ✔ should respond with text
      ✔ should encode the url
      ✔ should include the redirect type
    when accepting neither text or html
      ✔ should respond with an empty body

  res
    .render(name)
      ✔ should support absolute paths
      ✔ should support absolute paths with "view engine"
      ✔ should error without "view engine" set and file extension to a non-engine module
      ✔ should error without "view engine" set and no file extension
      ✔ should expose app.locals
      ✔ should expose app.locals with `name` property
      ✔ should support index.<engine>
      when an error occurs
        ✔ should next(err)
      when "view engine" is given
        ✔ should render the template
      when "views" is given
        ✔ should lookup the file in the path
        when array of paths
          ✔ should lookup the file in the path
          ✔ should lookup in later paths until found
    .render(name, option)
      ✔ should render the template
      ✔ should expose app.locals
      ✔ should expose res.locals
      ✔ should give precedence to res.locals over app.locals
      ✔ should give precedence to res.render() locals over res.locals
      ✔ should give precedence to res.render() locals over app.locals
    .render(name, options, fn)
      ✔ should pass the resulting string
    .render(name, fn)
      ✔ should pass the resulting string
      when an error occurs
        ✔ should pass it to the callback

  res
    ✔ should always check regardless of length
    ✔ should respond with 304 Not Modified when fresh
    ✔ should not perform freshness check unless 2xx or 304
    ✔ should not support jsonp callbacks
    ✔ should be chainable
    .send()
      ✔ should set body to ""
    .send(null)
      ✔ should set body to ""
    .send(undefined)
      ✔ should set body to ""
    .send(code)
      ✔ should set .statusCode
    .send(code, body)
      ✔ should set .statusCode and body
    .send(body, code)
      ✔ should be supported for backwards compat
    .send(code, number)
      ✔ should send number as json
    .send(String)
      ✔ should send as html
      ✔ should set ETag
      ✔ should not override Content-Type
      ✔ should override charset in Content-Type
      ✔ should keep charset in Content-Type for Buffers
    .send(Buffer)
      ✔ should send as octet-stream
      ✔ should set ETag
      ✔ should not override Content-Type
      ✔ should not override ETag
    .send(Object)
      ✔ should send as application/json
    when the request method is HEAD
      ✔ should ignore the body
    when .statusCode is 204
      ✔ should strip Content-* fields, Transfer-Encoding field, and body
    when .statusCode is 205
      ✔ should strip Transfer-Encoding field and body, set Content-Length
    when .statusCode is 304
      ✔ should strip Content-* fields, Transfer-Encoding field, and body
    "etag" setting
      when enabled
        ✔ should send ETag
        ✔ should send ETag in response to ACL request
        ✔ should send ETag in response to BIND request
        ✔ should send ETag in response to CHECKOUT request
        ✔ should send ETag in response to COPY request
        ✔ should send ETag in response to DELETE request
        ✔ should send ETag in response to GET request
        ✔ should send ETag in response to HEAD request
        ✔ should send ETag in response to LINK request
        ✔ should send ETag in response to LOCK request
        ✔ should send ETag in response to M-SEARCH request
        ✔ should send ETag in response to MERGE request
        ✔ should send ETag in response to MKACTIVITY request
        ✔ should send ETag in response to MKCALENDAR request
        ✔ should send ETag in response to MKCOL request
        ✔ should send ETag in response to MOVE request
        ✔ should send ETag in response to NOTIFY request
        ✔ should send ETag in response to OPTIONS request
        ✔ should send ETag in response to PATCH request
        ✔ should send ETag in response to POST request
        ✔ should send ETag in response to PROPFIND request
        ✔ should send ETag in response to PROPPATCH request
        ✔ should send ETag in response to PURGE request
        ✔ should send ETag in response to PUT request
        ✔ should send ETag in response to REBIND request
        ✔ should send ETag in response to REPORT request
        ✔ should send ETag in response to SEARCH request
        ✔ should send ETag in response to SOURCE request
        ✔ should send ETag in response to SUBSCRIBE request
        ✔ should send ETag in response to TRACE request
        ✔ should send ETag in response to UNBIND request
        ✔ should send ETag in response to UNLINK request
        ✔ should send ETag in response to UNLOCK request
        ✔ should send ETag in response to UNSUBSCRIBE request
        ✔ should send ETag for empty string response
        ✔ should send ETag for long response
        ✔ should not override ETag when manually set
        ✔ should not send ETag for res.send()
      when disabled
        ✔ should send no ETag
        ✔ should send ETag when manually set
      when "strong"
        ✔ should send strong ETag
      when "weak"
        ✔ should send weak ETag
      when a function
        ✔ should send custom ETag
        ✔ should not send falsy ETag

  res
    .sendFile(path)
      ✔ should error missing path
      ✔ should error for non-string path
      ✔ should error for non-absolute path
      ✔ should transfer a file
      ✔ should transfer a file with special characters in string
      ✔ should include ETag
      ✔ should 304 when ETag matches
      ✔ should 404 for directory
      ✔ should 404 when not found
      ✔ should send cache-control by default
      ✔ should not serve dotfiles by default
      ✔ should not override manual content-types
      ✔ should not error if the client aborts
    .sendFile(path, fn)
      ✔ should invoke the callback when complete
      ✔ should invoke the callback when client aborts
      ✔ should invoke the callback when client already aborted
      ✔ should invoke the callback without error when HEAD
      ✔ should invoke the callback without error when 304
      ✔ should invoke the callback on 404
      async local storage
        ✔ should presist store
        ✔ should presist store on error
    .sendFile(path, options)
      ✔ should pass options to send module
      with "acceptRanges" option
        when true
          ✔ should advertise byte range accepted
          ✔ should respond to range request
        when false
          ✔ should not advertise accept-ranges
          ✔ should not honor range requests
      with "cacheControl" option
        when true
          ✔ should send cache-control header
        when false
          ✔ should not send cache-control header
      with "dotfiles" option
        when "allow"
          ✔ should allow dotfiles
        when "deny"
          ✔ should deny dotfiles
        when "ignore"
          ✔ should ignore dotfiles
      with "headers" option
        ✔ should set headers on response
        ✔ should use last header when duplicated
        ✔ should override Content-Type
        ✔ should not set headers on 404
      with "immutable" option
        when true
          ✔ should send cache-control header with immutable
        when false
          ✔ should not send cache-control header with immutable
      with "lastModified" option
        when true
          ✔ should send last-modified header
          ✔ should conditionally respond with if-modified-since
        when false
          ✔ should not have last-modified header
          ✔ should not honor if-modified-since
      with "maxAge" option
        ✔ should set cache-control max-age to milliseconds
        ✔ should cap cache-control max-age to 1 year
        ✔ should min cache-control max-age to 0
        ✔ should floor cache-control max-age
        when cacheControl: false
          ✔ should not send cache-control
        when string
          ✔ should accept plain number as milliseconds
          ✔ should accept suffix "s" for seconds
          ✔ should accept suffix "m" for minutes
          ✔ should accept suffix "d" for days
      with "root" option
        ✔ should allow relative path
        ✔ should allow up within root
        ✔ should reject up outside root
        ✔ should reject reading outside root
    .sendfile(path, fn)
      ✔ should invoke the callback when complete
      ✔ should utilize the same options as express.static()
      ✔ should invoke the callback when client aborts
      ✔ should invoke the callback when client already aborted
      ✔ should invoke the callback without error when HEAD
      ✔ should invoke the callback without error when 304
      ✔ should invoke the callback on 404
      ✔ should not override manual content-types
      ✔ should invoke the callback on 403
      ✔ should invoke the callback on socket error
      async local storage
        ✔ should presist store
        ✔ should presist store on error
    .sendfile(path)
      ✔ should not serve dotfiles
      ✔ should accept dotfiles option
      ✔ should accept headers option
      ✔ should ignore headers option on 404
      ✔ should transfer a file
      ✔ should transfer a directory index file
      ✔ should 404 for directory without trailing slash
      ✔ should transfer a file with urlencoded name
      ✔ should not error if the client aborts
      with an absolute path
        ✔ should transfer the file
      with a relative path
        ✔ should transfer the file
        ✔ should serve relative to "root"
        ✔ should consider ../ malicious when "root" is not set
        ✔ should allow ../ when "root" is set
        ✔ should disallow requesting out of "root"
        ✔ should next(404) when not found
        with non-GET
          ✔ should still serve
    .sendfile(path, options)
      ✔ should pass options to send module

  res
    .sendStatus(statusCode)
      ✔ should send the status code and message as body
      ✔ should work with unknown code

  res
    .set(field, value)
      ✔ should set the response header field
      ✔ should coerce to a string
    .set(field, values)
      ✔ should set multiple response header fields
      ✔ should coerce to an array of strings
      ✔ should not set a charset of one is already set
      ✔ should throw when Content-Type is an array
    .set(object)
      ✔ should set multiple fields
      ✔ should coerce to a string

  res
    .status(code)
      when "code" is undefined
        ✔ should raise error for invalid status code
      when "code" is null
        ✔ should raise error for invalid status code
      when "code" is 201
        ✔ should set the response status code to 201
      when "code" is 302
        ✔ should set the response status code to 302
      when "code" is 403
        ✔ should set the response status code to 403
      when "code" is 501
        ✔ should set the response status code to 501
      when "code" is "410"
        ✔ should set the response status code to 410
      when "code" is 410.1
        ✔ should set the response status code to 410
      when "code" is 1000
        ✔ should raise error for invalid status code
      when "code" is 99
        ✔ should raise error for invalid status code
      when "code" is -401
        ✔ should raise error for invalid status code

  res
    .type(str)
      ✔ should set the Content-Type based on a filename
      ✔ should default to application/octet-stream
      ✔ should set the Content-Type with type/subtype

  res.vary()
    with no arguments
      ✔ should not set Vary
    with an empty array
      ✔ should not set Vary
    with an array
      ✔ should set the values
    with a string
      ✔ should set the value
    when the value is present
      ✔ should not add it again

  utils.etag(body, encoding)
    ✔ should support strings
    ✔ should support utf8 strings
    ✔ should support buffer
    ✔ should support empty string

  utils.setCharset(type, charset)
    ✔ should do anything without type
    ✔ should return type if not given charset
    ✔ should keep charset if not given charset
    ✔ should set charset
    ✔ should override charset

  utils.wetag(body, encoding)
    ✔ should support strings
    ✔ should support utf8 strings
    ✔ should support buffer
    ✔ should support empty string

  utils.isAbsolute()
    ✔ should support windows
    ✔ should support windows unc
    ✔ should support unices

  utils.flatten(arr)
    ✔ should flatten an array

  auth
    GET /
      ✔ should redirect to /login
    GET /login
      ✔ should render login form
      ✔ should display login error for bad user
      ✔ should display login error for bad password
    GET /logout
      ✔ should redirect to /
    GET /restricted
      ✔ should redirect to /login without cookie
      ✔ should succeed with proper cookie
    POST /login
      ✔ should fail without proper username
      ✔ should fail without proper password
      ✔ should succeed with proper credentials

  content-negotiation
    GET /
      ✔ should default to text/html
      ✔ should accept to text/plain
      ✔ should accept to application/json
    GET /users
      ✔ should default to text/html
      ✔ should accept to text/plain
      ✔ should accept to application/json

  cookie-sessions
    GET /
      ✔ should display no views
      ✔ should set a session cookie
      ✔ should display 1 view on revisit

  cookies
    GET /
      ✔ should have a form
      ✔ should respond with no cookies
      ✔ should respond to cookie
    GET /forget
      ✔ should clear cookie
    POST /
      ✔ should set a cookie
      ✔ should no set cookie w/o reminder

  downloads
    GET /
      ✔ should have a link to amazing.txt
    GET /files/notes/groceries.txt
      ✔ should have a download header
    GET /files/amazing.txt
      ✔ should have a download header
    GET /files/missing.txt
      ✔ should respond with 404
    GET /files/../index.js
      ✔ should respond with 403

  ejs
    GET /
      ✔ should respond with html

  error-pages
    GET /
      ✔ should respond with page list
    Accept: text/html
      GET /403
        ✔ should respond with 403
      GET /404
        ✔ should respond with 404
      GET /500
        ✔ should respond with 500
    Accept: application/json
      GET /403
        ✔ should respond with 403
      GET /404
        ✔ should respond with 404
      GET /500
        ✔ should respond with 500
    Accept: text/plain
      GET /403
        ✔ should respond with 403
      GET /404
        ✔ should respond with 404
      GET /500
        ✔ should respond with 500

  error
    GET /
      ✔ should respond with 500
    GET /next
      ✔ should respond with 500
    GET /missing
      ✔ should respond with 404

  hello-world
    GET /
      ✔ should respond with hello world
    GET /missing
      ✔ should respond with 404

  markdown
    GET /
      ✔ should respond with html
    GET /fail
      ✔ should respond with an error

  multi-router
    GET /
      ✔ should respond with root handler
    GET /api/v1/
      ✔ should respond with APIv1 root handler
    GET /api/v1/users
      ✔ should respond with users from APIv1
    GET /api/v2/
      ✔ should respond with APIv2 root handler
    GET /api/v2/users
      ✔ should respond with users from APIv2

  mvc
    GET /
      ✔ should redirect to /users
    GET /pet/0
      ✔ should get pet
    GET /pet/0/edit
      ✔ should get pet edit page
    PUT /pet/2
      ✔ should update the pet
    GET /users
      ✔ should display a list of users (71ms)
    GET /user/:id
      when present
        ✔ should display the user
        ✔ should display the users pets
      when not present
        ✔ should 404
    GET /user/:id/edit
      ✔ should display the edit form
    PUT /user/:id
      ✔ should 500 on error
      ✔ should update the user
    POST /user/:id/pet
      ✔ should create a pet for user

  params
    GET /
      ✔ should respond with instructions
    GET /user/0
      ✔ should respond with a user
    GET /user/9
      ✔ should fail to find user
    GET /users/0-2
      ✔ should respond with three users
    GET /users/foo-bar
      ✔ should fail integer parsing

  resource
    GET /
      ✔ should respond with instructions
    GET /users
      ✔ should respond with all users
    GET /users/1
      ✔ should respond with user 1
    GET /users/9
      ✔ should respond with error
    GET /users/1..3
      ✔ should respond with users 1 through 3
    DELETE /users/1
      ✔ should delete user 1
    DELETE /users/9
      ✔ should fail
    GET /users/1..3.json
      ✔ should respond with users 2 and 3 as json

  route-map
    GET /users
      ✔ should respond with users
    DELETE /users
      ✔ should delete users
    GET /users/:id
      ✔ should get a user
    GET /users/:id/pets
      ✔ should get a users pets
    GET /users/:id/pets/:pid
      ✔ should get a users pet

  route-separation
    GET /
      ✔ should respond with index
    GET /users
      ✔ should list users
    GET /user/:id
      ✔ should get a user
      ✔ should 404 on missing user
    GET /user/:id/view
      ✔ should get a user
      ✔ should 404 on missing user
    GET /user/:id/edit
      ✔ should get a user to edit
    PUT /user/:id/edit
      ✔ should edit a user
    POST /user/:id/edit?_method=PUT
      ✔ should edit a user
    GET /posts
      ✔ should get a list of posts

  vhost
    example.com
      GET /
        ✔ should say hello
      GET /foo
        ✔ should say foo
    foo.example.com
      GET /
        ✔ should redirect to /foo
    bar.example.com
      GET /
        ✔ should redirect to /bar

  web-service
    GET /api/users
      without an api key
        ✔ should respond with 400 bad request
      with an invalid api key
        ✔ should respond with 401 unauthorized
      with a valid api key
        ✔ should respond users json
    GET /api/repos
      without an api key
        ✔ should respond with 400 bad request
      with an invalid api key
        ✔ should respond with 401 unauthorized
      with a valid api key
        ✔ should respond repos json
    GET /api/user/:name/repos
      without an api key
        ✔ should respond with 400 bad request
      with an invalid api key
        ✔ should respond with 401 unauthorized
      with a valid api key
        ✔ should respond user repos json
        ✔ should 404 with unknown user
    when requesting an invalid route
      ✔ should respond with 404 json


  1261 passing (4s)

---------------------------------------|---------|----------|---------|---------|-------------------
File                                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
---------------------------------------|---------|----------|---------|---------|-------------------
All files                              |   98.71 |    94.27 |     100 |     100 |                   
 express                               |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/auth                 |   93.44 |       80 |     100 |     100 |                   
  index.js                             |   93.44 |       80 |     100 |     100 | 51-61,69,106      
 express/examples/content-negotiation  |     100 |      100 |     100 |     100 |                   
  db.js                                |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
  users.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/cookie-sessions      |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/cookies              |      95 |    83.33 |     100 |     100 |                   
  index.js                             |      95 |    83.33 |     100 |     100 | 13                
 express/examples/downloads            |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/ejs                  |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/error                |    87.5 |       50 |     100 |     100 |                   
  index.js                             |    87.5 |       50 |     100 |     100 | 12-22             
 express/examples/error-pages          |   96.66 |    66.66 |     100 |     100 |                   
  index.js                             |   96.66 |    66.66 |     100 |     100 | 24-26             
 express/examples/hello-world          |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/markdown             |   94.73 |       50 |     100 |     100 |                   
  index.js                             |   94.73 |       50 |     100 |     100 | 19-21             
 express/examples/multi-router         |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 .../examples/multi-router/controllers |     100 |      100 |     100 |     100 |                   
  api_v1.js                            |     100 |      100 |     100 |     100 |                   
  api_v2.js                            |     100 |      100 |     100 |     100 |                   
 express/examples/mvc                  |   95.12 |       75 |     100 |     100 |                   
  db.js                                |     100 |      100 |     100 |     100 |                   
  index.js                             |   93.75 |       75 |     100 |     100 | 34,80             
 express/examples/mvc/controllers/main |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/mvc/controllers/pet  |   94.11 |       50 |     100 |     100 |                   
  index.js                             |   94.11 |       50 |     100 |     100 | 13                
 express/examples/mvc/controllers/user |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 .../examples/mvc/controllers/user-pet |   92.85 |       50 |     100 |     100 |                   
  index.js                             |   92.85 |       50 |     100 |     100 | 16                
 express/examples/mvc/lib              |   97.91 |       80 |     100 |     100 |                   
  boot.js                              |   97.91 |       80 |     100 |     100 | 16-17,36,73-76    
 express/examples/params               |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
 express/examples/resource             |     100 |    85.71 |     100 |     100 |                   
  index.js                             |     100 |    85.71 |     100 |     100 | 55                
 express/examples/route-map            |   95.45 |    83.33 |     100 |     100 |                   
  index.js                             |   95.45 |    83.33 |     100 |     100 | 24                
 express/examples/route-separation     |     100 |      100 |     100 |     100 |                   
  index.js                             |     100 |      100 |     100 |     100 |                   
  post.js                              |     100 |      100 |     100 |     100 |                   
  site.js                              |     100 |      100 |     100 |     100 |                   
  user.js                              |     100 |      100 |     100 |     100 |                   
 express/examples/vhost                |   88.88 |       50 |     100 |     100 |                   
  index.js                             |   88.88 |       50 |     100 |     100 | 23-38             
 express/examples/web-service          |     100 |     87.5 |     100 |     100 |                   
  index.js                             |     100 |     87.5 |     100 |     100 | 101               
 express/lib                           |   99.31 |    97.07 |     100 |     100 |                   
  application.js                       |     100 |      100 |     100 |     100 |                   
  express.js                           |     100 |      100 |     100 |     100 |                   
  request.js                           |     100 |    95.31 |     100 |     100 | 236,238,282       
  response.js                          |   98.46 |    96.35 |     100 |     100 | ...1049-1088,1098 
  utils.js                             |     100 |      100 |     100 |     100 |                   
  view.js                              |     100 |    95.83 |     100 |     100 | 53                
 express/lib/middleware                |     100 |      100 |     100 |     100 |                   
  init.js                              |     100 |      100 |     100 |     100 |                   
  query.js                             |     100 |      100 |     100 |     100 |                   
 express/lib/router                    |   99.75 |    96.69 |     100 |     100 |                   
  index.js                             |   99.62 |    97.22 |     100 |     100 | 116,303,552       
  layer.js                             |     100 |       90 |     100 |     100 | 39,113,174        
  route.js                             |     100 |      100 |     100 |     100 |                   
---------------------------------------|---------|----------|---------|---------|-------------------
https://github.com/expressjs/body-parser.git
body-parser
1f6f58e1f8dc222f2b6cfc7eb3a3bf5145ff2b56

added 413 packages, and audited 414 packages in 5s

94 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> body-parser@1.20.0 test
> mocha --require test/support/env --reporter spec --check-leaks --bail test/



  bodyParser()
    ✔ should default to {}
    ✔ should parse JSON
    ✔ should parse x-www-form-urlencoded
    ✔ should handle duplicated middleware
    http methods
      ✔ should support ACL requests
      ✔ should support BIND requests
      ✔ should support CHECKOUT requests
      ✔ should support COPY requests
      ✔ should support DELETE requests
      ✔ should support GET requests
      ✔ should support HEAD requests
      ✔ should support LINK requests
      ✔ should support LOCK requests
      ✔ should support M-SEARCH requests
      ✔ should support MERGE requests
      ✔ should support MKACTIVITY requests
      ✔ should support MKCALENDAR requests
      ✔ should support MKCOL requests
      ✔ should support MOVE requests
      ✔ should support NOTIFY requests
      ✔ should support OPTIONS requests
      ✔ should support PATCH requests
      ✔ should support POST requests
      ✔ should support PROPFIND requests
      ✔ should support PROPPATCH requests
      ✔ should support PURGE requests
      ✔ should support PUT requests
      ✔ should support REBIND requests
      ✔ should support REPORT requests
      ✔ should support SEARCH requests
      ✔ should support SOURCE requests
      ✔ should support SUBSCRIBE requests
      ✔ should support TRACE requests
      ✔ should support UNBIND requests
      ✔ should support UNLINK requests
      ✔ should support UNLOCK requests
      ✔ should support UNSUBSCRIBE requests
    with type option
      ✔ should parse JSON
      ✔ should parse x-www-form-urlencoded
    with verify option
      ✔ should apply to json
      ✔ should apply to urlencoded

  bodyParser.json()
    ✔ should parse JSON
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should handle no message-body
    ✔ should 400 when only whitespace
    ✔ should 400 when invalid content-length
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    when JSON is invalid
      ✔ should 400 for bad token
      ✔ should 400 for incomplete
      ✔ should include original body on error object
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with strict option
      when undefined
        ✔ should 400 on primitives
      when false
        ✔ should parse primitives
      when true
        ✔ should not parse primitives
        ✔ should not parse primitives with leading whitespaces
        ✔ should allow leading whitespaces in JSON
        ✔ should include correct message in stack trace
    with type option
      when "application/vnd.api+json"
        ✔ should parse JSON for custom type
        ✔ should ignore standard type
      when ["application/json", "application/vnd.api+json"]
        ✔ should parse JSON for "application/json"
        ✔ should parse JSON for "application/vnd.api+json"
        ✔ should ignore "application/x-json"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value if function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow custom type
      ✔ should include original body on error object
      ✔ should allow pass-through
      ✔ should work with different charsets
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when parse error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse utf-16
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should fail on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding
      ✔ should 400 on malformed encoding
      ✔ should 413 when inflated value exceeds limit

  bodyParser.raw()
    ✔ should parse application/octet-stream
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with type option
      when "application/vnd+octets"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["application/octet-stream", "application/vnd+octets"]
        ✔ should parse "application/octet-stream"
        ✔ should parse "application/vnd+octets"
        ✔ should ignore "application/x-foo"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value is function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow pass-through
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should ignore charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding

  bodyParser.text()
    ✔ should parse text/plain
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    with defaultCharset option
      ✔ should change default charset
      ✔ should honor content-type charset
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating (102ms)
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with type option
      when "text/html"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["text/html", "text/plain"]
        ✔ should parse "text/html"
        ✔ should parse "text/plain"
        ✔ should ignore "text/xml"
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value is function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow pass-through
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse codepage charsets
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should 415 on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding

  bodyParser.urlencoded()
    ✔ should parse x-www-form-urlencoded
    ✔ should 400 when invalid content-length
    ✔ should handle Content-Length: 0
    ✔ should handle empty message-body
    ✔ should 500 if stream not readable
    ✔ should handle duplicated middleware
    ✔ should parse extended syntax
    with extended option
      when false
        ✔ should not parse extended syntax
        ✔ should parse multiple key instances
      when true
        ✔ should parse multiple key instances
        ✔ should parse extended syntax
        ✔ should parse parameters with dots
        ✔ should parse fully-encoded extended syntax
        ✔ should parse array index notation
        ✔ should parse array index notation with large array
        ✔ should parse array of objects syntax
        ✔ should parse deep object
    with inflate option
      when false
        ✔ should not accept content-encoding
      when true
        ✔ should accept content-encoding
    with limit option
      ✔ should 413 when over limit with Content-Length
      ✔ should 413 when over limit with chunked encoding
      ✔ should 413 when inflated body over limit
      ✔ should accept number of bytes
      ✔ should not change when options altered
      ✔ should not hang response
      ✔ should not error when inflating
    with parameterLimit option
      with extended: false
        ✔ should reject 0
        ✔ should reject string
        ✔ should 413 if over limit
        ✔ should work when at the limit
        ✔ should work if number is floating point
        ✔ should work with large limit
        ✔ should work with Infinity limit (40ms)
      with extended: true
        ✔ should reject 0
        ✔ should reject string
        ✔ should 413 if over limit
        ✔ should work when at the limit
        ✔ should work if number is floating point
        ✔ should work with large limit (44ms)
        ✔ should work with Infinity limit (92ms)
    with type option
      when "application/vnd.x-www-form-urlencoded"
        ✔ should parse for custom type
        ✔ should ignore standard type
      when ["urlencoded", "application/x-pairs"]
        ✔ should parse "application/x-www-form-urlencoded"
        ✔ should parse "application/x-pairs"
        ✔ should ignore application/x-foo
      when a function
        ✔ should parse when truthy value returned
        ✔ should work without content-type
        ✔ should not invoke without a body
    with verify option
      ✔ should assert value if function
      ✔ should error from verify
      ✔ should allow custom codes
      ✔ should allow custom type
      ✔ should allow pass-through
      ✔ should 415 on unknown charset prior to verify
    async local storage
      ✔ should presist store
      ✔ should presist store when unmatched content-type
      ✔ should presist store when inflated
      ✔ should presist store when inflate error
      ✔ should presist store when limit exceeded
    charset
      ✔ should parse utf-8
      ✔ should parse when content-length != char length
      ✔ should default to utf-8
      ✔ should fail on unknown charset
    encoding
      ✔ should parse without encoding
      ✔ should support identity encoding
      ✔ should support gzip encoding
      ✔ should support deflate encoding
      ✔ should be case-insensitive
      ✔ should 415 on unknown encoding


  256 passing (1s)

-----------------------|---------|----------|---------|---------|-------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------|---------|----------|---------|---------|-------------------
All files              |    99.7 |    99.52 |     100 |    99.7 |                   
 body-parser           |     100 |      100 |     100 |     100 |                   
  index.js             |     100 |      100 |     100 |     100 |                   
 body-parser/lib       |     100 |      100 |     100 |     100 |                   
  read.js              |     100 |      100 |     100 |     100 |                   
 body-parser/lib/types |   99.57 |    99.38 |     100 |   99.57 |                   
  json.js              |   98.59 |    97.82 |     100 |   98.57 | 214               
  raw.js               |     100 |      100 |     100 |     100 |                   
  text.js              |     100 |      100 |     100 |     100 |                   
  urlencoded.js        |     100 |      100 |     100 |     100 |                   
-----------------------|---------|----------|---------|---------|-------------------
https://github.com/sindresorhus/execa.git
execa
d9ca38420a85e554c100df50e99b60cce3dec82a

added 691 packages, and audited 743 packages in 26s

192 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> execa@6.1.0 test
> xo && c8 ava && tsd


  ✔ error › stdout/stderr/all on process errors, in sync mode (4.3s)
  ✔ error › result.killed is false if not killed, in sync mode (3.9s)
  ✔ error › result.killed is false on process error, in sync mode (549ms)
  ✔ error › Original error.message is kept (4.2s)
  ✔ error › error.code is defined on failure if applicable
  ✔ error › result.killed is false on process error (647ms)
  ✔ error › stdout/stderr/all on process errors (4.4s)
  ✔ error › stdout/stderr/all available on errors (4.5s)
  ✔ error › exitCode is 0 on success (4.4s)
  ✔ error › exitCode is 2 (4.4s)
  ✔ error › exitCode is 3 (4.4s)
  ✔ error › exitCode is 4 (4.4s)
  ✔ error › error.message contains the command (4.4s)
  ✔ error › error.message contains stdout/stderr if available (4.3s)
  ✔ error › error.message does not contain stdout/stderr if not available (4.3s)
  ✔ error › error.shortMessage does not contain stdout/stderr (4.3s)
  ✔ error › failed is false on success (4.3s)
  ✔ error › failed is true on failure (4.2s)
  ✔ error › error.killed is true if process was killed directly (4.1s)
  ✔ error › error.killed is false if process was killed indirectly (4.1s)
  ✔ error › result.killed is false if not killed (4.1s)
  ✔ error › error.signal is SIGINT (600ms)
  ✔ error › error.signalDescription is defined (491ms)
  ✔ error › error.signal is SIGTERM (427ms)
  ✔ error › exitCode is undefined on signal termination (345ms)
  ✔ error › custom error.signal (412ms)
  ✔ command › execaCommandSync() (2.9s)
  ✔ error › result.signal is undefined if process failed, but was not killed (1.1s)
  ✔ error › result.signal is undefined for successful execution (1.1s)
  ✔ error › result.signalDescription is undefined for successful execution (1.1s)
  ✔ error › error.code is undefined on success (1.1s)
  ✔ command › allow commands with spaces and no array arguments (5.9s)
  ✔ command › allow commands with spaces and array arguments (5.9s)
  ✔ command › execaCommand() (5.8s)
  ✔ command › execaCommand() ignores consecutive spaces (5.7s)
  ✔ command › execaCommand() allows escaping spaces in commands (5.6s)
  ✔ command › execaCommand() allows escaping spaces in arguments (5.6s)
  ✔ command › execaCommand() escapes other whitespaces (5.5s)
  ✔ command › execaCommand() trims (5.4s)
  ✔ command › command is: " foo bar" (6.4s)
  ✔ command › command is: " baz quz" (6.3s)
  ✔ command › command is: "" (6.2s)
  ✔ command › escapedCommand is: "foo bar" (6.5s)
  ✔ command › escapedCommand is: "\"foo bar\"" (6.8s)
  ✔ command › escapedCommand is: "\"\\\"foo\\\"\"" (7.1s)
  ✔ command › escapedCommand is: "\"*\"" (8.6s)
  ✔ kill › `forceKillAfterTimeout` should not be NaN (7.3s)
  ✔ kill › `forceKillAfterTimeout` should not be negative (7.3s)
  ✔ kill › execa() returns a promise with kill() (7.3s)
  ✔ kill › timedOut is false if timeout is undefined and exit code is 0 in sync mode (7s)
  ✔ kill › cancel method kills the subprocess (5.3s)
  ✔ kill › result.isCanceled is false when spawned.cancel() isn't called in sync mode (success) (5.2s)
  ✔ kill › result.isCanceled is false when spawned.cancel() isn't called in sync mode (failure) (2.3s)
  ✔ kill › timeout kills the process if it times out, in sync mode (7.2s)
  ✔ kill › timeout must not be negative (7.1s)
  ✔ kill › timeout must be an integer (7.1s)
  ✔ kill › calling abort after cancel should show the same behaviour as only calling cancel
  ✔ kill › calling cancel after abort should show the same behaviour as only calling cancel
  ✔ kill › calling abort twice should show the same behaviour as calling it once (117ms)
  ✔ kill › calling abort throws an error with message "Command was canceled" (140ms)
  ✔ kill › `forceKillAfterTimeout: false` should not kill after a timeout (7.4s)
  ✔ kill › timeout does not kill the process if it does not time out (7.3s)
  ✔ kill › timedOut is false if timeout is undefined (7.2s)
  ✔ kill › timedOut is false if timeout is 0 (7.2s)
  ✔ kill › spawnAndExit (5.8s)
  ✔ kill › spawnAndExit cleanup (5.8s)
  ✔ kill › spawnAndExit detached (5.8s)
  ✔ kill › spawnAndExit cleanup detached (5.8s)
  ✔ kill › spawnAndKill SIGKILL (5.8s)
  ✔ kill › spawnAndKill cleanup SIGKILL (5.7s)
  ✔ kill › spawnAndKill detached SIGKILL (5.7s)
  ✔ kill › spawnAndKill cleanup detached SIGKILL (5.6s)
  ✔ kill › removes exit handler on exit (5.6s)
  ✔ kill › result.isCanceled is false when spawned.cancel() isn't called (success) (5.4s)
  ✔ kill › result.isCanceled is false when spawned.cancel() isn't called (failure) (5.4s)
  ✔ kill › calling cancel method throws an error with message "Command was canceled" (367ms)
  ✔ kill › error.isCanceled is true when cancel method is used (344ms)
  ✔ kill › error.isCanceled is false when kill method is used (329ms)
  ✔ kill › calling cancel method twice should show the same behaviour as calling it once (314ms)
  ✔ kill › calling cancel method on a process which has been killed does not make error.isCanceled true (288ms)
  ✔ kill › timeout kills the process if it times out (7.4s)
  ✔ kill › kill("SIGKILL") should terminate cleanly (7.6s)
  ✔ kill › `forceKillAfterTimeout: number` should kill after a timeout (7.6s)
  ✔ kill › spawnAndKill SIGTERM (5.9s)
  ✔ kill › spawnAndKill detached SIGTERM (5.8s)
  ✔ kill › spawnAndKill cleanup detached SIGTERM (5.8s)
  ✔ kill › spawnAndKill cleanup SIGTERM (5.9s)
  ✔ kill › calling cancel method on a successfully completed process does not make result.isCanceled true (590ms)
  ✔ kill › calling abort on a successfully completed process does not make result.isCanceled true (601ms)
  ✔ node › node removes --inspect from nodeOptions when defined by parent process (199ms)
  ✔ node › node removes --inspect=9222 from nodeOptions when defined by parent process (199ms)
  ✔ node › node removes --inspect-brk from nodeOptions when defined by parent process (233ms)
  ✔ node › node removes --inspect-brk=9222 from nodeOptions when defined by parent process (179ms)
  ✔ node › node should not remove --inspect when passed through nodeOptions (172ms)
  ✔ node › node correctly use nodePath
  ✔ node › node() (354ms)
  ✔ node › node pass on nodeOptions (511ms)
  ✔ node › node's forked script has a communication channel (500ms)
  ✔ node › node pipe stdout (545ms)
  ✔ override-promise › should work with third-party Promise (215ms)
  ✔ promise › promise methods are not enumerable
  ✔ promise › finally function is executed on success (607ms)
  ✔ promise › finally function is executed on failure (655ms)
  ✔ kill › `forceKillAfterTimeout: true` should kill after a timeout (12.4s)
  ✔ kill › kill() with no arguments should kill after a timeout (12.4s)
  ✔ promise › throw in finally bubbles up on error (644ms)
  ✔ promise › throw in finally function bubbles up on success (699ms)
  ✔ stdio › execa() undefined
  ✔ stdio › execa() null
  ✔ stdio › execa() { stdio: 'inherit' }
  ✔ stdio › execa() { stdio: 'pipe' }
  ✔ stdio › execa() { stdio: 'ignore' }
  ✔ stdio › execa() { stdio: [ 0, 1, 2 ] }
  ✔ stdio › execa() {}
  ✔ stdio › execa() { stdio: [] }
  ✔ stdio › execa() { stdin: 'pipe' }
  ✔ stdio › execa() { stdout: 'ignore' }
  ✔ stdio › execa() { stderr: 'inherit' }
  ✔ stdio › execa() { stdin: 'pipe', stdout: 'ignore', stderr: 'inherit' }
  ✔ stdio › execa() { stdin: 'pipe', stdout: 'ignore' }
  ✔ stdio › execa() { stdin: 'pipe', stderr: 'inherit' }
  ✔ stdio › execa() { stdout: 'ignore', stderr: 'inherit' }
  ✔ stdio › execa() { stdin: 0, stdout: 1, stderr: 2 }
  ✔ stdio › execa() { stdin: 0, stdout: 1 }
  ✔ stdio › execa() { stdin: 0, stderr: 2 }
  ✔ stdio › execa() { stdout: 1, stderr: 2 }
  ✔ stdio › execa() { stdio: { foo: 'bar' } }
  ✔ stdio › execa() { stdin: 'inherit', stdio: 'pipe' }
  ✔ stdio › execa() { stdin: 'inherit', stdio: [ 'pipe' ] }
  ✔ stdio › execa() { stdin: 'inherit', stdio: [ undefined, 'pipe' ] }
  ✔ stdio › execa() { stdin: 0, stdio: 'pipe' }
  ✔ stdio › execaNode() undefined
  ✔ stdio › execaNode() { stdio: 'ignore' }
  ✔ stdio › execaNode() { stdio: 'ipc' }
  ✔ stdio › execaNode() { stdio: [ 0, 1, 2 ] }
  ✔ stdio › execaNode() { stdio: [ 0, 1, 2, 3 ] }
  ✔ stdio › execaNode() { stdio: [ 0, 1, 2, 'ipc' ] }
  ✔ stdio › execaNode() { stdio: [ 0, 1, undefined ] }
  ✔ stdio › execaNode() { stdio: [ 0, 1, 2, undefined ] }
  ✔ stdio › execaNode() { stdout: 'ignore' }
  ✔ stdio › execaNode() { stdout: 'ignore', stderr: 'ignore' }
  ✔ stdio › execaNode() { stdio: { foo: 'bar' } }
  ✔ stdio › execaNode() { stdin: 'inherit', stdio: 'pipe' }
  ✔ stream › result.all shows both `stdout` and `stderr` intermixed (1.3s)
  ✔ stream › buffer: false > promise does not resolve when output is big and is not read (1s)
  ✔ stream › buffer: false > promise does not resolve when output is big and "all" is used but not read (1s)
  ✔ test › execaSync() (2.5s)
  ✔ test › execaSync() throws error if written to stderr (2.2s)
  ✔ test › skip throwing when using reject option in sync mode (2.2s)
  ✔ test › stripFinalNewline in sync mode (1.9s)
  ✔ test › stripFinalNewline in sync mode on failure (1.2s)
  ✔ test › execa() returns a promise with pid (1s)
  ✔ test › child_process.spawn() propagated errors have correct shape (1s)
  ✔ test › child_process.spawnSync() errors are propagated with a correct shape (965ms)
  ✔ test › child_process.spawn() errors are propagated (1s)
  ✔ test › execa() rejects with correct error and doesn't throw if running non-executable with input (1s)
  ✔ test › execa() rejects if running non-executable (1.1s)
  ✔ test › preferLocal: undefined (1.4s)
  ✔ test › preferLocal: false (1.4s)
  ✔ test › child process errors rejects promise right away (1.3s)
  ✔ test › child process errors are handled (1.4s)
  ✔ test › stdin errors are handled (1.4s)
  ✔ test › execa() (3.1s)
  ✔ test › skip throwing when using reject option (2.8s)
  ✔ test › stripFinalNewline: true (2.5s)
  ✔ test › stripFinalNewline: false (2.5s)
  ✔ test › stripFinalNewline on failure (2.5s)
  ✔ test › localDir option (1.6s)
  ✔ test › write to fast-exit process (1.3s)
  ✔ test › localDir option can be a URL (1s)
  ✔ test › use extend environment with `extendEnv: true` and `shell: true` (809ms)
  ✔ test › execPath option (3s)
  ✔ test › do not try to consume streams twice (2.9s)
  ✔ test › use relative path with '..' chars (2.8s)
  ✔ test › use environment variables by default (2.8s)
  ✔ test › do not extend environment with `extendEnv: false` (2.7s)
  ✔ test › can use `options.cwd` as a string (2.7s)
  ✔ test › can use `options.cwd` as a URL (2.6s)
  ✔ test › extend environment variables by default (2.9s)
  ✔ test › can use `options.shell: string` (2.5s)
  ✔ test › can use `options.shell: true` (2.7s)
  ✔ test › detach child process (3.1s)
  ✔ stream › stdout/stderr/all are undefined if ignored in sync mode (4.6s)
  ✔ stream › input option can be a String - sync (1.6s)
  ✔ stream › input option can be a Buffer - sync (759ms)
  ✔ stream › helpful error trying to provide an input stream in sync mode (434ms)
  ✔ stream › buffer (5s)
  ✔ stream › pass `stdout` to a file descriptor (5s)
  ✔ stream › pass `stderr` to a file descriptor (4.9s)
  ✔ stream › result.all is undefined unless opts.all is true (4.8s)
  ✔ stream › stdout/stderr/all are undefined if ignored (4.8s)
  ✔ stream › you can write to child.stdin (2.1s)
  ✔ stream › input option can be a String (2.2s)
  ✔ stream › input can be a Stream (2.1s)
  ✔ stream › input option can be a Buffer (2.2s)
  ✔ stream › opts.stdout:ignore - stdout will not collect data (2s)
  ✔ stream › do not buffer stdout when `buffer` set to `false` (2s)
  ✔ stream › do not buffer when streaming (2s)
  ✔ stream › do not buffer stderr when `buffer` set to `false` (2s)
  ✔ stream › buffer: false > promise resolves (2.1s)
  ✔ stream › buffer: false > promise rejects when process returns non-zero (2s)
  ✔ stream › buffer: false > promise resolves when output is big and is read (2.1s)
  ✔ stream › buffer: false > promise resolves when output is big but is not pipable (2.2s)
  ✔ stream › buffer: false > promise resolves when output is big and "all" is used and is read (2.2s)
  ✔ stream › can use all: true with stdout: ignore (2.1s)
  ✔ stream › can use all: true with stderr: ignore (2.1s)
  ✔ stream › maxBuffer affects stderr (2.5s)
  ✔ stream › maxBuffer affects stdout (2.6s)
  ✔ test › preferLocal: true (7.5s)
  ─

  209 tests passed
-------------|---------|----------|---------|---------|-------------------
File         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------|---------|----------|---------|---------|-------------------
All files    |   99.54 |    99.06 |     100 |   99.54 |                   
 execa       |   98.87 |    96.15 |     100 |   98.87 |                   
  index.js   |   98.87 |    96.15 |     100 |   98.87 | 55-57             
 execa/lib   |     100 |      100 |     100 |     100 |                   
  command.js |     100 |      100 |     100 |     100 |                   
  error.js   |     100 |      100 |     100 |     100 |                   
  kill.js    |     100 |      100 |     100 |     100 |                   
  promise.js |     100 |      100 |     100 |     100 |                   
  stdio.js   |     100 |      100 |     100 |     100 |                   
  stream.js  |     100 |      100 |     100 |     100 |                   
-------------|---------|----------|---------|---------|-------------------
----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |       0 |        0 |       0 |       0 |                   
----------|---------|----------|---------|---------|-------------------
https://github.com/sindresorhus/meow.git
meow
85dc1e9c35f7844941690740c68b839691bd515f

added 655 packages, and audited 707 packages in 11s

173 packages are looking for funding
  run `npm fund` for details

5 moderate severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
Start Generating test coverage report...

> meow@10.1.3 test
> xo && ava && tsd


  ✔ allow-unkonwn-flags › spawn CLI and test specifying unknown flags (3.4s)
  ✔ is-required-flag › spawn cli and test not specifying required flags (3.9s)
  ✔ allow-unkonwn-flags › spawn CLI and test specifying known flags (4.1s)
  ✔ is-required-flag › spawn cli and test specifying required string flag with an empty string as value (4.1s)
  ✔ is-required-flag › spawn cli and test setting isRequired as a function and not specifying any flags (4.1s)
  ✔ is-required-flag › spawn cli and test specifying required number flag without a number (4.1s)
  ✔ is-required-flag › spawn cli and test setting isRequired as a function and specifying both the flags (4.1s)
  ✔ is-required-flag › spawn cli and test setting isRequired as a function and check if returning a non-boolean value throws an error (4.1s)
  ✔ is-required-flag › spawn cli and test specifying all required flags (4.2s)
  ✔ is-required-flag › spawn cli and test isRequired with isMultiple giving no values, but flag is given (4s)
  ✔ is-required-flag › spawn cli and test setting isRequired as a function and specifying only the flag that activates the isRequired condition for the other flag (4.2s)
  ✔ is-required-flag › spawn cli and test isRequired with isMultiple giving a single value (4.1s)
  ✔ is-required-flag › spawn cli and test isRequired with isMultiple giving multiple values (4.1s)
  ✔ is-required-flag › spawn cli and test isRequire function that returns false with isMultiple given no values, but flag is not given (4.1s)
  ✔ is-required-flag › spawn cli and test isRequired with isMultiple giving no values, but flag is not given (4.1s)
  ✔ test › pkg.bin as a string should work
  ✔ test › invalid package url (442ms)
  ✔ test › return object (438ms)
  ✔ test › support help shortcut (424ms)
  ✔ test › single character flag casing should be preserved (356ms)
  ✔ test › flag declared in kebab-case is an error (353ms)
  ✔ test › type inference (352ms)
  ✔ test › booleanDefault: undefined, filter out unset boolean args (308ms)
  ✔ test › boolean args are false by default (290ms)
  ✔ test › enforces boolean flag type (288ms)
  ✔ test › accept help and options (262ms)
  ✔ test › grouped short-flags work (260ms)
  ✔ test › grouped flags work (237ms)
  ✔ test › disable autoVersion/autoHelp if `cli.input.length > 0` (237ms)
  ✔ test › supports `number` flag type (216ms)
  ✔ test › supports `number` flag type - flag but no value (192ms)
  ✔ test › supports `number` flag type - flag but no value but default (191ms)
  ✔ test › supports `number` flag type - no flag but default (179ms)
  ✔ test › supports `number` flag type - throws on incorrect default value (179ms)
  ✔ test › isMultiple - unset flag returns empty array (178ms)
  ✔ test › isMultiple - flag set once returns array (156ms)
  ✔ test › isMultiple - flag set multiple times (154ms)
  ✔ test › isMultiple - flag with space separated values (153ms)
  ✔ test › isMultiple - flag with comma separated values (135ms)
  ✔ test › single flag set more than once => throws (134ms)
  ✔ test › isMultiple - default to type string (133ms)
  ✔ test › isMultiple - boolean flag (111ms)
  ✔ test › isMultiple - boolean flag is false by default (110ms)
  ✔ test › isMultiple - number flag (109ms)
  ✔ test › isMultiple - flag default values
  ✔ test › isMultiple - multiple flag default values
  ✔ test › isMultiple - handles multi-word flag name
  ✔ test › spawn cli and disabled autoHelp (2.6s)
  ✔ test › spawn cli and disabled autoVersion and autoHelp (2.7s)
  ✔ test › spawn cli and not show version (2.7s)
  ✔ test › spawn cli and disabled autoVersion (2.7s)
  ✔ test › spawn cli and not show help (2.7s)
  ✔ test › spawn cli and show help screen (2.7s)
  ✔ test › spawn cli and test input flag (2.7s)
  ✔ test › spawn cli and test input (2.8s)
  ✔ test › supports es modules (2.5s)
  ✔ test › spawn cli and show version (2.9s)
  ─

  57 tests passed
----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |       0 |        0 |       0 |       0 |                   
----------|---------|----------|---------|---------|-------------------
https://github.com/expressjs/session.git
session
1010fadc2f071ddf2add94235d72224cf65159c6

added 394 packages, and audited 395 packages in 4s

61 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> express-session@1.17.3 test
> mocha --require test/support/env --check-leaks --bail --no-exit --reporter spec test/



  new Cookie()
    ✔ should create a new cookie object
    ✔ should default expires to null
    ✔ should default httpOnly to true
    ✔ should default path to "/"
    ✔ should default maxAge to null
    with options
      ✔ should create a new cookie object
      ✔ should reject non-objects
      ✔ should ignore "data" option
      expires
        ✔ should set expires
        ✔ should set maxAge
      httpOnly
        ✔ should set httpOnly
      maxAge
        ✔ should set expires
        ✔ should set maxAge
        ✔ should accept Date object
        ✔ should reject invalid types
      path
        ✔ should set path

  session()
    ✔ should export constructors
    ✔ should do nothing if req.session exists
    ✔ should error without secret
    ✔ should get secret from req.secret
    ✔ should create a new session
    ✔ should load session from cookie sid
    ✔ should pass session fetch error
    ✔ should treat ENOENT session fetch error as not found
    ✔ should create multiple sessions
    ✔ should handle empty req.url
    ✔ should handle multiple res.end calls
    ✔ should handle res.end(null) calls
    ✔ should handle reserved properties in storage
    ✔ should only have session data enumerable (and cookie)
    ✔ should not save with bogus req.sessionID
    ✔ should update cookie expiration when slow write (1335ms)
    when response ended
      ✔ should have saved session (202ms)
      ✔ should have saved session even with empty response (203ms)
      ✔ should have saved session even with multi-write (202ms)
      ✔ should have saved session even with non-chunked response (203ms)
      ✔ should have saved session with updated cookie expiration (989ms)
    when sid not in store
      ✔ should create a new session
      ✔ should have a new sid
    when sid not properly signed
      ✔ should generate new session
      ✔ should not attempt fetch from store
    when session expired in store
      ✔ should create a new session
      ✔ should have a new sid
      ✔ should not exist in store
    when session without cookie property in store
      ✔ should pass error from inflate
    proxy option
      when enabled
        ✔ should trust X-Forwarded-Proto when string
        ✔ should trust X-Forwarded-Proto when comma-separated list
        ✔ should work when no header
      when disabled
        ✔ should not trust X-Forwarded-Proto
        ✔ should ignore req.secure
      when unspecified
        ✔ should not trust X-Forwarded-Proto
        ✔ should use req.secure
    cookie option
      when "path" set to "/foo/bar"
        ✔ should not set cookie for "/" request
        ✔ should not set cookie for "http://foo/bar" request
        ✔ should set cookie for "/foo/bar" request
        ✔ should set cookie for "/foo/bar/baz" request
        when mounted at "/foo"
          ✔ should set cookie for "/foo/bar" request
          ✔ should not set cookie for "/foo/foo/bar" request
      when "secure" set to "auto"
        when "proxy" is "true"
          ✔ should set secure when X-Forwarded-Proto is https
        when "proxy" is "false"
          ✔ should not set secure when X-Forwarded-Proto is https
        when "proxy" is undefined
          ✔ should set secure if req.secure = true
          ✔ should not set secure if req.secure = false
    genid option
      ✔ should reject non-function values
      ✔ should provide default generator
      ✔ should allow custom function
      ✔ should encode unsafe chars
      ✔ should provide req argument
    key option
      ✔ should default to "connect.sid"
      ✔ should allow overriding
    name option
      ✔ should default to "connect.sid"
      ✔ should set the cookie name
    rolling option
      ✔ should default to false
      ✔ should force cookie on unmodified session
      ✔ should not force cookie on uninitialized session if saveUninitialized option is set to false
      ✔ should force cookie and save uninitialized session if saveUninitialized option is set to true
      ✔ should force cookie and save modified session even if saveUninitialized option is set to false
    resave option
      ✔ should default to true
      when true
        ✔ should force save on unmodified session
      when false
        ✔ should prevent save on unmodified session
        ✔ should still save modified session
        ✔ should detect a "cookie" property as modified
        ✔ should pass session touch error
    saveUninitialized option
      ✔ should default to true
      ✔ should force save of uninitialized session
      ✔ should prevent save of uninitialized session
      ✔ should still save modified session
      ✔ should pass session save error
      ✔ should prevent uninitialized session from being touched
    secret option
      ✔ should reject empty arrays
      when an array
        ✔ should sign cookies
        ✔ should sign cookies with first element
        ✔ should read cookies using all elements
    unset option
      ✔ should reject unknown values
      ✔ should default to keep
      ✔ should allow destroy on req.session = null
      ✔ should not set cookie if initial session destroyed
      ✔ should pass session destroy error
    res.end patch
      ✔ should correctly handle res.end/res.write patched prior
      ✔ should correctly handle res.end/res.write patched after
      ✔ should error when res.end is called twice
    req.session
      ✔ should persist
      ✔ should only set-cookie when modified
      ✔ should not have enumerable methods
      ✔ should not be set if store is disconnected
      ✔ should be set when store reconnects
      .destroy()
        ✔ should destroy the previous session
      .regenerate()
        ✔ should destroy/replace the previous session
      .reload()
        ✔ should reload session from store
        ✔ should error is session missing
        ✔ should not override an overriden `reload` in case of errors
      .save()
        ✔ should save session to store
        ✔ should prevent end-of-request save
        ✔ should prevent end-of-request save on reloaded session
        when saveUninitialized is false
          ✔ should prevent end-of-request save
      .touch()
        ✔ should reset session expiration (103ms)
      .cookie
        .*
          ✔ should serialize as parameters
          ✔ should default to a browser-session length cookie
          ✔ should Set-Cookie only once for browser-session cookies
          ✔ should override defaults
          ✔ should preserve cookies set before writeHead is called
          ✔ should preserve cookies set in writeHead
        .originalMaxAge
          ✔ should equal original maxAge
          ✔ should equal original maxAge for all requests (104ms)
          ✔ should equal original maxAge for all requests (104ms)
        .secure
          ✔ should set cookie when secure
          ✔ should not set-cookie when insecure
        .maxAge
          ✔ should set cookie expires relative to maxAge
          ✔ should modify cookie expires when changed
          ✔ should modify cookie expires when changed to large value
        .expires
          when given a Date
            ✔ should set absolute
          when null
            ✔ should be a browser-session cookie
            ✔ should not reset cookie
            ✔ should not reset cookie when modified
    synchronous store
      ✔ should respond correctly on save
      ✔ should respond correctly on destroy
    cookieParser()
      ✔ should read from req.cookies
      ✔ should reject unsigned from req.cookies
      ✔ should reject invalid signature from req.cookies
      ✔ should read from req.signedCookies


  139 passing (4s)

-----------------|---------|----------|---------|---------|-------------------
File             | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------|---------|----------|---------|---------|-------------------
All files        |      99 |     96.8 |    98.5 |     100 |                   
 session         |     100 |    98.37 |     100 |     100 |                   
  index.js       |     100 |    98.37 |     100 |     100 | 88,288-293        
 session/session |   97.12 |     92.3 |   97.05 |     100 |                   
  cookie.js      |     100 |      100 |     100 |     100 |                   
  memory.js      |   97.91 |    96.15 |     100 |     100 | 133               
  session.js     |   97.05 |    83.33 |      90 |     100 | 72-93             
  store.js       |   93.33 |    66.66 |     100 |     100 | 70-71             
-----------------|---------|----------|---------|---------|-------------------
https://github.com/lovell/sharp.git
sharp
e40a881ab4a5e7b0e37ba17e31b3b186aef8cbf6

> sharp@0.30.7 install
> (node install/libvips && node install/dll-copy && prebuild-install) || (node install/can-compile && node-gyp rebuild && node install/dll-copy)

sharp: Using cached /home/liu-yuxin/.npm/_libvips/libvips-8.12.2-linux-x64.tar.br
sharp: Integrity check passed for linux-x64

added 1203 packages, and audited 1204 packages in 41s

172 packages are looking for funding
  run `npm fund` for details

13 high severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
Start Generating test coverage report...

> sharp@0.30.7 test
> npm run test-lint && npm run test-unit && npm run test-licensing


> sharp@0.30.7 test-lint
> semistandard && cpplint


> sharp@0.30.7 test-unit
> nyc --reporter=lcov --branches=99 mocha --slow=1000 --timeout=60000 ./test/unit/*.js



  Affine transform
    ✔ Applies identity matrix
    ✔ Applies resize affine matrix
    ✔ Resizes and applies affine transform
    ✔ Extracts and applies affine transform
    ✔ Rotates and applies affine transform
    ✔ Extracts, rotates and applies affine transform
    ✔ Applies affine transform with background color
    ✔ Applies affine transform with background color and output offsets
    ✔ Applies affine transform with background color and all offsets
    ✔ Animated image rejects
    Invalid input
      ✔ Missing matrix
      ✔ Invalid 1d matrix
      ✔ Invalid 2d matrix
      ✔ Invalid options parameter type
      ✔ Invalid background color
      ✔ Invalid idx offset type
      ✔ Invalid idy offset type
      ✔ Invalid odx offset type
      ✔ Invalid ody offset type
      ✔ Invalid interpolator
    Interpolations
      ✔ Performs 2x upscale with nearest interpolation
      ✔ Performs 2x upscale with bilinear interpolation
      ✔ Performs 2x upscale with bicubic interpolation
      ✔ Performs 2x upscale with locallyBoundedBicubic interpolation
      ✔ Performs 2x upscale with nohalo interpolation
      ✔ Performs 2x upscale with vertexSplitQuadraticBasisSpline interpolation

  HTTP agent
    ✔ Without proxy
    ✔ HTTPS proxy with auth from HTTPS_PROXY
    ✔ HTTPS proxy with auth from HTTPS_PROXY using credentials containing special characters
    ✔ HTTP proxy without auth from npm_config_proxy

  Alpha transparency
    ✔ Flatten to black
    ✔ Flatten to RGB orange
    ✔ Flatten to CSS/hex orange
    ✔ Flatten 16-bit PNG with transparency to orange
    ✔ Do not flatten
    ✔ Ignored for JPEG
    ✔ Flatten with options but without colour does not throw
    ✔ Flatten to invalid colour throws
    ✔ Enlargement with non-nearest neighbor interpolation shouldn’t cause dark edges (1092ms)
    ✔ Reduction with non-nearest neighbor interpolation shouldn’t cause dark edges
    ✔ Removes alpha from fixtures with transparency, ignores those without
    ✔ Ensures alpha from fixtures without transparency, ignores those with
    ✔ Valid ensureAlpha value used for alpha channel
    ✔ Invalid ensureAlpha value throws

  AVIF
    ✔ called without options does not throw an error
    ✔ can convert AVIF to JPEG
    ✔ can convert JPEG to AVIF
    ✔ can passthrough AVIF
    ✔ can convert animated GIF to non-animated AVIF

  Bandbool per-channel boolean operations
    ✔ and operation
    ✔ or operation
    ✔ eor operation
    ✔ sRGB image retains 3 channels
    ✔ Invalid operation
    ✔ Missing operation

  Blur
    ✔ specific radius 1
    ✔ specific radius 10
    ✔ specific radius 0.3
    ✔ mild blur
    ✔ invalid radius
    ✔ blurred image is smaller than non-blurred

  Boolean operation between two images
    ✔ and operation, file
    ✔ and operation, buffer
    ✔ and operation, raw
    ✔ or operation, file
    ✔ or operation, buffer
    ✔ or operation, raw
    ✔ eor operation, file
    ✔ eor operation, buffer
    ✔ eor operation, raw
    ✔ Invalid operation
    ✔ Invalid operation, non-string
    ✔ Missing input

  Clahe
    ✔ width 5 width 5 maxSlope 0
    ✔ width 5 width 5 maxSlope 5
    ✔ width 11 width 25 maxSlope 14
    ✔ width 50 width 50 maxSlope 0
    ✔ width 50 width 50 maxSlope 14
    ✔ width 100 width 50 maxSlope 3
    ✔ width 100 width 100 maxSlope 0
    ✔ invalid maxSlope
    ✔ invalid width
    ✔ invalid height
    ✔ invalid options object
    ✔ uses default maxSlope of 3

  Clone
    ✔ Read from Stream and write to multiple Streams
    ✔ Stream-based input attaches finish event listener to original
    ✔ Non Stream-based input does not attach finish event listeners

  Colour space conversion
    ✔ To greyscale
    ✔ To greyscale with gamma correction
    ✔ Not to greyscale
    ✔ Greyscale with single channel output
    ✔ From 1-bit TIFF to sRGB WebP
    ✔ From CMYK to sRGB
    ✔ From CMYK to sRGB with white background, not yellow
    ✔ From profile-less CMYK to sRGB
    ✔ From sRGB with RGB16 pipeline, resize with gamma, to sRGB
    ✔ Convert P3 to sRGB
    ✔ Passthrough P3
    ✔ Invalid pipelineColourspace input
    ✔ Invalid toColourspace input

  composite
    ✔ blend over
    ✔ blend xor
    ✔ blend saturate
    ✔ blend dest-over
    ✔ premultiplied true
    ✔ premultiplied false
    ✔ premultiplied absent
    ✔ multiple
    ✔ zero offset
    ✔ offset and gravity
    ✔ negative offset and gravity
    ✔ offset, gravity and tile
    ✔ offset and tile
    ✔ centre gravity should replicate correct number of tiles
    ✔ cutout via dest-in
    ✔ Allow offset beyond bottom/right edge
    ✔ Ensure tiled composition works with resized fit=outside
    numeric gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    string gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    tile and gravity
      ✔ center
      ✔ centre
      ✔ north
      ✔ east
      ✔ south
      ✔ west
      ✔ northeast
      ✔ southeast
      ✔ southwest
      ✔ northwest
    validation
      ✔ missing images
      ✔ invalid images
      ✔ missing input
      ✔ invalid blend
      ✔ invalid tile
      ✔ invalid premultiplied
      ✔ invalid left
      ✔ invalid top
      ✔ left but no top
      ✔ top but no left
      ✔ invalid gravity

  Convolve
    ✔ specific convolution kernel 1
    ✔ specific convolution kernel 2
    ✔ horizontal Sobel operator
    invalid kernel specification
      ✔ missing
      ✔ incorrect data format
      ✔ incorrect dimensions

  Extend
    ✔ extend all sides equally with RGB
    ✔ extend sides unequally with RGBA
    ✔ missing parameter fails
    ✔ negative fails
    ✔ invalid top fails
    ✔ invalid bottom fails
    ✔ invalid left fails
    ✔ invalid right fails
    ✔ can set all edges apart from right
    ✔ should add alpha channel before extending with a transparent Background
    ✔ PNG with 2 channels
    ✔ Premultiply background when compositing
    extend all sides equally via a single value
      ✔ JPEG
      ✔ Animated WebP

  Partial image extraction
    ✔ JPEG
    ✔ PNG
    ✔ WebP
    ✔ TIFF
    ✔ Before resize
    ✔ After resize and crop
    ✔ Before and after resize and crop
    ✔ Extract then rotate
    ✔ Rotate then extract
    ✔ Extract then rotate non-90 anagle
    ✔ Rotate then extract non-90 angle
    Animated WebP
      ✔ Before resize
      ✔ After resize
    Apply exif orientation and mirroring then extract
      ✔ EXIF-1
      ✔ EXIF-2
      ✔ EXIF-3
      ✔ EXIF-4
      ✔ EXIF-5
      ✔ EXIF-6
      ✔ EXIF-7
      ✔ EXIF-8
    Invalid parameters
      ✔ Undefined
      ✔ String top
      ✔ Non-integral left
      ✔ Negative width - negative
      ✔ Null height
      ✔ Bad image area
      using the legacy extract(top,left,width,height) syntax
        ✔ String top
        ✔ Non-integral left
        ✔ Negative width - negative
        ✔ Null height

  Image channel extraction
    ✔ Red channel
    ✔ Green channel
    ✔ Blue channel
    ✔ Blue channel by number
    ✔ With colorspace conversion
    ✔ Alpha from 16-bit PNG
    ✔ Alpha from 2-channel input
    ✔ Invalid channel number
    ✔ No arguments
    ✔ Non-existent channel

  failOn
    ✔ handles truncated JPEG
    ✔ handles truncated PNG, emits warnings
    ✔ throws for invalid options
    ✔ deprecated failOnError
    ✔ returns errors to callback for truncated JPEG
    ✔ returns errors to callback for truncated PNG
    ✔ rejects promises for truncated JPEG
    ✔ handles stream-based input

  Test fixtures
    assertMaxColourDistance
      ✔ should throw an Error when images have a different number of channels
      ✔ should throw an Error when images have different dimensions
      ✔ should accept a zero threshold when comparing an image to itself (879ms)
      ✔ should accept a numeric threshold for two different images (905ms)

  Gamma correction
    ✔ value of 0.0 (disabled)
    ✔ value of 2.2 (default)
    ✔ value of 3.0
    ✔ input value of 2.2, output value of 3.0
    ✔ alpha transparency
    ✔ invalid first parameter value
    ✔ invalid second parameter value

  GIF input
    ✔ GIF Buffer to JPEG Buffer
    ✔ 2 channel GIF file to PNG Buffer
    ✔ Animated GIF first page to PNG
    ✔ Animated GIF all pages to PNG "toilet roll"
    ✔ GIF with reduced colours, no dither, low effort reduces file size
    ✔ invalid loop throws
    ✔ invalid delay throws
    ✔ invalid colour throws
    ✔ invalid effort throws
    ✔ invalid dither throws
    ✔ should work with streams when only animated is set
    ✔ should work with streams when only pages is set

  HEIF
    ✔ called without options does not throw an error
    ✔ valid quality does not throw an error
    ✔ invalid quality should throw an error
    ✔ non-numeric quality should throw an error
    ✔ valid lossless does not throw an error
    ✔ non-boolean lossless should throw an error
    ✔ valid compression does not throw an error
    ✔ unknown compression should throw an error
    ✔ invalid compression should throw an error
    ✔ valid effort does not throw an error
    ✔ out of range effort should throw an error
    ✔ invalid effort should throw an error
    ✔ valid speed does not throw an error
    ✔ out of range speed should throw an error
    ✔ invalid speed should throw an error
    ✔ invalid chromaSubsampling should throw an error
    ✔ valid chromaSubsampling does not throw an error

  Input/output
    ✔ Read from File and write to Stream
    ✔ Read from Buffer and write to Stream
    ✔ Read from Stream and write to File
    ✔ Read from Stream and write to Buffer
    ✔ Read from Stream and write to Buffer via Promise resolved with Buffer
    ✔ Read from Stream and write to Buffer via Promise resolved with Object
    ✔ Read from File and write to Buffer via Promise resolved with Buffer
    ✔ Read from File and write to Buffer via Promise resolved with Object
    ✔ Read from Stream and write to Stream
    ✔ Read from Uint8Array and write to Buffer
    ✔ Read from Uint8ClampedArray and output to Buffer
    ✔ Read from Uint8ClampedArray with byteOffset and output to Buffer
    ✔ Stream should emit info event
    ✔ Stream should emit close event
    ✔ Handle Stream to Stream error 
    ✔ Handle File to Stream error
    ✔ Readable side of Stream can start flowing after Writable side has finished
    ✔ Invalid sequential read option throws
    ✔ Sequential read, force JPEG
    ✔ Not sequential read, force JPEG
    ✔ Support output to jpg format
    ✔ Support output to tif format
    ✔ Allow use of toBuffer and toFile with same instance
    ✔ Fail when output File is input File
    ✔ Fail when output File is input File via Promise
    ✔ Fail when output File is input File (relative output, absolute input)
    ✔ Fail when output File is input File via Promise (relative output, absolute input)
    ✔ Fail when output File is input File (relative input, absolute output)
    ✔ Fail when output File is input File via Promise (relative input, absolute output)
    ✔ Fail when output File is empty
    ✔ Fail when output File is empty via Promise
    ✔ Fail when input is invalid Buffer
    ✔ Fail when input file path is missing
    ✔ Promises/A+
    ✔ Invalid output format
    ✔ File input with corrupt header fails gracefully
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Stream input with corrupt header fails gracefully
    ✔ Input and output formats match when not forcing
    ✔ Can force output format with output chaining
    ✔ toFormat=JPEG takes precedence over WebP extension
    ✔ toFormat=WebP takes precedence over JPEG extension (680ms)
    ✔ Load Vips V file
    ✔ Save Vips V file
    ✔ Fails when writing to missing directory
    ✔ Queue length change events
    ✔ Info event data
    Fail for unsupported input
      ✔ Undefined
      ✔ Null
      ✔ Numeric
      ✔ Boolean
      ✔ Error Object
    Output filename with unknown extension
      ✔ Match JPEG input
      ✔ Match PNG input
      ✔ Match WebP input
      ✔ Match TIFF input
      ✔ Force JPEG format for PNG input
    Switch off safety limits for PNG/SVG input
      ✔ Valid
      ✔ Invalid
    Limit pixel count of input image
      ✔ Invalid fails - negative
      ✔ Invalid fails - float
      ✔ Invalid fails - integer overflow
      ✔ Invalid fails - string
      ✔ Same size as input works
      ✔ Disabling limit works
      ✔ Enabling default limit works and fails with a large image
      ✔ Smaller than input fails
    Input options
      ✔ Option-less
      ✔ Ignore unknown attribute
      ✔ undefined with options fails
      ✔ null with options fails
      ✔ Non-Object options fails
      ✔ Invalid density: string
      ✔ Setting animated property updates pages property
      ✔ Invalid animated property throws
      ✔ Invalid page property throws
      ✔ Invalid pages property throws
      ✔ Valid level property
      ✔ Invalid level property (string) throws
      ✔ Invalid level property (negative) throws
      ✔ Valid subifd property
      ✔ Invalid subifd property (string) throws
      ✔ Invalid subifd property (float) throws
    create new image
      ✔ RGB
      ✔ RGBA
      ✔ Invalid channels
      ✔ Missing background

  Image channel insertion
    ✔ Grayscale to RGB, buffer
    ✔ Grayscale to RGB, file
    ✔ Grayscale to RGBA, buffer
    ✔ Grayscale to RGBA, file
    ✔ Grayscale to CMYK, buffers
    ✔ Join raw buffers to RGB
    ✔ Grayscale to RGBA, files, two arrays
    ✔ Invalid raw buffer description
    ✔ Invalid input
    ✔ No arguments

  JP2 output
    ✔ JP2 output should fail due to missing OpenJPEG
    ✔ JP2 file output should fail due to missing OpenJPEG

  JPEG
    ✔ JPEG quality
    ✔ Progressive JPEG image
    ✔ Without chroma subsampling generates larger file
    ✔ Invalid JPEG chromaSubsampling value throws error
    ✔ Trellis quantisation
    ✔ Overshoot deringing
    ✔ Optimise scans generates different output length
    ✔ Optimise coding generates smaller output length
    ✔ Specifying quantisation table provides different JPEG
    ✔ Specifying quantization table provides different JPEG
    ✔ Can use mozjpeg defaults
    ✔ Invalid mozjpeg value throws error
    Invalid JPEG quality
      ✔ -1
      ✔ 88.2
      ✔ test
    Invalid JPEG quantisation table
      ✔ -1
      ✔ 88.2
      ✔ test

  libvips binaries
    Windows platform
      ✔ pkgConfigPath returns empty string
      ✔ globalLibvipsVersion returns empty string
      ✔ globalLibvipsVersion is always false
    non-Windows platforms
      ✔ pkgConfigPath returns a string (973ms)
      ✔ globalLibvipsVersion returns a string (895ms)
      ✔ globalLibvipsVersion returns a boolean (879ms)
    platform agnostic
      ✔ minimumLibvipsVersion returns a valid semver
      ✔ hasVendoredLibvips returns a boolean
      ✔ useGlobalLibvips can be ignored via an env var
      ✔ cachePath returns a valid path ending with _libvips
    integrity
      ✔ reads value from environment variable
      ✔ reads value from package.json
    safe directory creation
    logger
      ✔ logs an info message
      ✔ logs an error message

  Linear adjustment
    ✔ applies linear levels adjustment w/o alpha ch
    ✔ applies slope level adjustment w/o alpha ch
    ✔ applies offset level adjustment w/o alpha ch
    ✔ applies linear levels adjustment w alpha ch
    ✔ applies slope level adjustment w alpha ch
    ✔ applies offset level adjustment w alpha ch
    ✔ Invalid linear arguments

  Median filter
    ✔ 1x1 window
    ✔ 3x3 window
    ✔ 7x7 window
    ✔ default window (3x3)
    ✔ invalid radius

  Image metadata
    ✔ JPEG
    ✔ JPEG with EXIF/ICC
    ✔ JPEG with IPTC/XMP
    ✔ TIFF
    ✔ Multipage TIFF
    ✔ PNG
    ✔ Transparent PNG
    ✔ WebP
    ✔ Animated WebP
    ✔ Animated WebP with all pages
    ✔ Animated WebP with limited looping
    ✔ GIF
    ✔ GIF grey+alpha
    ✔ Animated GIF
    ✔ Animated GIF with limited looping
    ✔ vips
    ✔ File in, Promise out
    ✔ Non-existent file in, Promise out
    ✔ Stream in, Promise out
    ✔ Stream in, rejected Promise out
    ✔ Stream
    ✔ Resize to half width using metadata
    ✔ Keep EXIF metadata and add sRGB profile after a resize
    ✔ Apply CMYK output ICC profile
    ✔ Apply custom output ICC profile
    ✔ Include metadata in output, enabled via empty object
    ✔ Remove EXIF metadata after a resize
    ✔ Remove metadata from PNG output
    ✔ Add EXIF metadata to JPEG
    ✔ Set density of JPEG
    ✔ Set density of PNG
    ✔ chromaSubsampling 4:4:4:4 CMYK JPEG
    ✔ chromaSubsampling 4:4:4 RGB JPEG
    ✔ isProgressive JPEG
    ✔ isProgressive PNG
    ✔ 16-bit TIFF with TIFFTAG_PHOTOSHOP metadata
    ✔ AVIF
    ✔ File input with corrupt header fails gracefully
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Unsupported lossless JPEG passes underlying error message
    Invalid withMetadata parameters
      ✔ String orientation
      ✔ Negative orientation
      ✔ Zero orientation
      ✔ Too large orientation
      ✔ Non-numeric density
      ✔ Negative density
      ✔ Non string icc
      ✔ Non object exif
      ✔ Non string value in object exif
      ✔ Non string value in nested object exif

  Modulate
    ✔ should be able to hue-rotate
    ✔ should be able to brighten
    ✔ should be able to darken
    ✔ should be able to saturate
    ✔ should be able to desaturate
    ✔ should be able to lighten
    ✔ should be able to modulate all channels
    ✔ should be able to use linear and modulate together
    Invalid options
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
      ✔ should throw
    hue-rotate
      ✔ should hue rotate by 30 deg
      ✔ should hue rotate by 60 deg
      ✔ should hue rotate by 90 deg
      ✔ should hue rotate by 120 deg
      ✔ should hue rotate by 150 deg
      ✔ should hue rotate by 180 deg
      ✔ should hue rotate by 210 deg
      ✔ should hue rotate by 240 deg
      ✔ should hue rotate by 270 deg
      ✔ should hue rotate by 300 deg
      ✔ should hue rotate by 330 deg
      ✔ should hue rotate by 360 deg

  Negate
    ✔ negate (jpeg)
    ✔ negate (png)
    ✔ negate (png, trans)
    ✔ negate (png, alpha)
    ✔ negate (webp)
    ✔ negate (webp, trans)
    ✔ negate (true)
    ✔ negate (false)
    ✔ negate ({alpha: true})
    ✔ negate non-alpha channels (png)
    ✔ negate non-alpha channels (png, trans)
    ✔ negate non-alpha channels (png, alpha)
    ✔ negate non-alpha channels (webp)
    ✔ negate non-alpha channels (webp, trans)
    ✔ negate create
    ✔ invalid alpha value

  Gaussian noise
    ✔ generate single-channel gaussian noise
    ✔ generate 3-channels gaussian noise
    ✔ overlay 3-channels gaussian noise over image
    ✔ overlay strong single-channel (sRGB) gaussian noise with 25% transparency over transparent png image (545ms)
    ✔ no create object properties specified
    ✔ invalid noise object
    ✔ unknown type of noise
    ✔ gaussian noise, invalid amount of channels
    ✔ gaussian noise, invalid mean
    ✔ gaussian noise, invalid sigma

  Normalization
    ✔ spreads rgb image values between 0 and 255
    ✔ spreads grayscaled image values between 0 and 255
    ✔ stretches greyscale images with alpha channel
    ✔ keeps an existing alpha channel
    ✔ keeps the alpha channel of greyscale images intact
    ✔ does not alter images with only one color
    ✔ works with 16-bit RGBA images

  Platform-detection
    ✔ Can override arch with npm_config_arch
    ✔ Can override platform with npm_config_platform
    ✔ Can override ARM version via --arm-version
    ✔ Can override ARM64 version via --arm-version
    ✔ Defaults to ARMv6 for 32-bit
    ✔ Defaults to ARMv8 for 64-bit
    ✔ Can ensure version ARMv7 if electron version is present
    ✔ Can override libc if platform is linux
    ✔ Handles libc value "glibc" as default linux
    ✔ Discards libc value on non-linux platform

  PNG
    ✔ compression level is valid
    ✔ compression level is invalid
    ✔ default compressionLevel generates smaller file than compressionLevel=0
    ✔ without adaptiveFiltering generates smaller file
    ✔ Invalid PNG adaptiveFiltering value throws error
    ✔ Progressive PNG image
    ✔ 16-bit grey+alpha PNG identity transform
    ✔ 16-bit grey+alpha PNG roundtrip
    ✔ palette decode/encode roundtrip
    ✔ Valid PNG libimagequant palette value does not throw error
    ✔ Invalid PNG libimagequant palette value throws error
    ✔ Valid PNG libimagequant quality value produces image of same size or smaller
    ✔ Invalid PNG libimagequant quality value throws error
    ✔ Invalid effort value throws error
    ✔ Valid PNG libimagequant colours value produces image of same size or smaller
    ✔ Invalid PNG libimagequant colours value throws error
    ✔ Invalid PNG libimagequant colors value throws error
    ✔ Valid PNG libimagequant dither value produces image of same size or smaller
    ✔ Invalid PNG libimagequant dither value throws error

  Raw pixel data
    Raw pixel input
      ✔ Empty data
      ✔ Missing options
      ✔ Incomplete options
      ✔ Invalid channels
      ✔ Invalid height
      ✔ Invalid width
      ✔ RGB
      ✔ RGBA
      ✔ RGBA premultiplied
      ✔ JPEG to raw Stream and back again
    Output raw, uncompressed image data
      ✔ 1 channel greyscale image
      ✔ 3 channel colour image without transparency
      ✔ 4 channel colour image with transparency
      ✔ Extract A from RGBA
    Raw pixel depths
      ✔ Invalid depth
      ✔ Uint8Array
      ✔ Uint8Array
      ✔ Uint8ClampedArray
      ✔ Int8Array
      ✔ Uint16Array
      ✔ Int16Array
      ✔ Uint32Array
      ✔ Int32Array
      ✔ Float32Array
      ✔ Float64Array

  Recomb
    ✔ applies a sepia filter using recomb
    ✔ applies a sepia filter using recomb to an PNG with Alpha
    ✔ recomb with a single channel input
    ✔ applies a different sepia filter using recomb
    ✔ increases the saturation of the image
    invalid matrix specification
      ✔ missing
      ✔ incorrect flat data
      ✔ incorrect sub size
      ✔ incorrect top size

  Resize fit=contain
    ✔ Allows specifying the position as a string
    ✔ JPEG within PNG, no alpha channel
    ✔ JPEG within WebP, to include alpha channel
    ✔ PNG with alpha channel
    ✔ 16-bit PNG with alpha channel
    ✔ 16-bit PNG with alpha channel onto RGBA
    ✔ PNG with 2 channels
    ✔ TIFF in LAB colourspace onto RGBA background
    ✔ Enlarge
    ✔ Invalid position values should fail
    ✔ Position horizontal top
    ✔ Position horizontal right top
    ✔ Position horizontal right
    ✔ Position horizontal right bottom
    ✔ Position horizontal bottom
    ✔ Position horizontal left bottom
    ✔ Position horizontal left
    ✔ Position horizontal left top
    ✔ Position horizontal north
    ✔ Position horizontal northeast
    ✔ Position horizontal east
    ✔ Position horizontal southeast
    ✔ Position horizontal south
    ✔ Position horizontal southwest
    ✔ Position horizontal west
    ✔ Position horizontal northwest
    ✔ Position horizontal center
    ✔ Position vertical top
    ✔ Position vertical right top
    ✔ Position vertical right
    ✔ Position vertical right bottom
    ✔ Position vertical bottom
    ✔ Position vertical left bottom
    ✔ Position vertical left
    ✔ Position vertical left top
    ✔ Position vertical north
    ✔ Position vertical northeast
    ✔ Position vertical east
    ✔ Position vertical southeast
    ✔ Position vertical south
    ✔ Position vertical southwest
    ✔ Position vertical west
    ✔ Position vertical northwest
    ✔ Position vertical center
    Animated WebP
      ✔ Width only
      ✔ Height only

  Resize fit=cover
    ✔ Position: top
    ✔ Position: right
    ✔ Position: bottom
    ✔ Position: left
    ✔ Position: right top (top)
    ✔ Position: right top (right)
    ✔ Position: right bottom (bottom)
    ✔ Position: right bottom (right)
    ✔ Position: left bottom (bottom)
    ✔ Position: left bottom (left)
    ✔ Position: left top (top)
    ✔ Position: left top (left)
    ✔ Gravity: north
    ✔ Gravity: east
    ✔ Gravity: south
    ✔ Gravity: west
    ✔ Gravity: center
    ✔ Gravity: centre
    ✔ Default (centre)
    ✔ Gravity: northeast (north)
    ✔ Gravity: northeast (east)
    ✔ Gravity: southeast (south)
    ✔ Gravity: southeast (east)
    ✔ Gravity: southwest (south)
    ✔ Gravity: southwest (west)
    ✔ Gravity: northwest (north)
    ✔ Gravity: northwest (west)
    ✔ Allows specifying the gravity as a string
    ✔ Invalid position values fail
    ✔ Uses default value when none specified
    ✔ Skip crop when post-resize dimensions are at target
    Animated WebP
      ✔ Width only
      ✔ Height only
    Entropy-based strategy
      ✔ JPEG
      ✔ PNG
      ✔ supports the strategy passed as a string
      ✔ Animated image rejects
    Attention strategy
      ✔ JPEG
      ✔ PNG
      ✔ supports the strategy passed as a string
      ✔ Animated image rejects

  Resize dimensions
    ✔ Exact crop
    ✔ Fixed width
    ✔ Fixed height
    ✔ Identity transform
    ✔ Upscale
    ✔ Invalid width - NaN
    ✔ Invalid height - NaN
    ✔ Invalid width - float
    ✔ Invalid height - float
    ✔ Invalid width - via options
    ✔ Invalid height - via options
    ✔ Invalid width - too large
    ✔ Invalid height - too large
    ✔ Webp resize then extract large image
    ✔ WebP shrink-on-load rounds to zero, ensure recalculation is correct
    ✔ JPEG shrink-on-load with 90 degree rotation, ensure recalculation is correct
    ✔ TIFF embed known to cause rounding errors
    ✔ TIFF known to cause rounding errors
    ✔ fit=inside, portrait
    ✔ fit=outside, portrait
    ✔ fit=inside, landscape
    ✔ fit=outside, landscape
    ✔ fit=inside, provide only one dimension
    ✔ fit=outside, provide only one dimension
    ✔ Do not enlarge when input width is already less than output width
    ✔ Do not enlarge when input height is already less than output height
    ✔ Do crop when fit = cover and withoutEnlargement = true and width >= outputWidth, and height < outputHeight
    ✔ Do crop when fit = cover and withoutEnlargement = true and width < outputWidth, and height >= outputHeight
    ✔ Do enlarge when input width is less than output width
    ✔ Do enlarge when input width is less than output width
    ✔ Do enlarge when input height is less than output height
    ✔ Do enlarge when input width is less than output width
    ✔ Do not resize when both withoutEnlargement and withoutReduction are true
    ✔ Do not reduce size when fit = outside and withoutReduction are true and height > outputHeight and width > outputWidth
    ✔ Do resize when fit = outside and withoutReduction are true and input height > height and input width > width  (557ms)
    ✔ fit=fill, downscale width and height
    ✔ fit=fill, downscale width
    ✔ fit=fill, downscale height
    ✔ fit=fill, upscale width and height
    ✔ fit=fill, upscale width
    ✔ fit=fill, upscale height
    ✔ fit=fill, downscale width, upscale height
    ✔ fit=fill, upscale width, downscale height
    ✔ fit=fill, identity transform
    ✔ Dimensions that result in differing even shrinks on each axis
    ✔ Dimensions that result in differing odd shrinks on each axis
    ✔ fastShrinkOnLoad: true does not causes image shifts
    ✔ fastShrinkOnLoad: false does not causes image shifts
    ✔ kernel nearest
    ✔ kernel cubic
    ✔ kernel mitchell
    ✔ kernel lanczos2
    ✔ kernel lanczos3
    ✔ nearest upsampling with integral factor
    ✔ Ensure shortest edge (height) is at least 1 pixel
    ✔ Ensure shortest edge (width) is at least 1 pixel
    ✔ Ensure embedded shortest edge (height) is at least 1 pixel
    ✔ Ensure embedded shortest edge (width) is at least 1 pixel
    ✔ Skip shrink-on-load where one dimension <4px
    ✔ Skip JPEG shrink-on-load for known libjpeg rounding errors
    ✔ unknown kernel throws
    ✔ unknown fit throws
    ✔ unknown position throws

  Rotation
    ✔ Input image has Orientation EXIF tag value of (1), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (2), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (3), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (4), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (5), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (6), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (7), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (8), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (1), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (2), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (3), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (4), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (5), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (6), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (7), auto-rotate
    ✔ Input image has Orientation EXIF tag value of (8), auto-rotate
    ✔ Rotate by 30 degrees with semi-transparent background
    ✔ Rotate by 30 degrees with solid background
    ✔ Rotate by 90 degrees, respecting output input size
    ✔ Rotate by 30 degrees, respecting output input size
    ✔ Rotate by any 90-multiple angle (-3690deg)
    ✔ Rotate by any 90-multiple angle (-450deg)
    ✔ Rotate by any 90-multiple angle (-90deg)
    ✔ Rotate by any 90-multiple angle (90deg)
    ✔ Rotate by any 90-multiple angle (450deg)
    ✔ Rotate by any 90-multiple angle (3690deg)
    ✔ Rotate by any 30-multiple angle (-3750deg)
    ✔ Rotate by any 30-multiple angle (-510deg)
    ✔ Rotate by any 30-multiple angle (-150deg)
    ✔ Rotate by any 30-multiple angle (30deg)
    ✔ Rotate by any 30-multiple angle (390deg)
    ✔ Rotate by any 30-multiple angle (3630deg)
    ✔ Rotate by any 180-multiple angle (-3780deg)
    ✔ Rotate by any 180-multiple angle (-540deg)
    ✔ Rotate by any 180-multiple angle (0deg)
    ✔ Rotate by any 180-multiple angle (180deg)
    ✔ Rotate by any 180-multiple angle (540deg)
    ✔ Rotate by any 180-multiple angle (3780deg)
    ✔ Rotate by 270 degrees, square output ignoring aspect ratio
    ✔ Rotate by 315 degrees, square output ignoring aspect ratio
    ✔ Rotate by 270 degrees, rectangular output ignoring aspect ratio
    ✔ Rotate by 30 degrees, rectangular output ignoring aspect ratio
    ✔ Input image has Orientation EXIF tag but do not rotate output
    ✔ Input image has Orientation EXIF tag value of 8 (270 degrees), auto-rotate
    ✔ Override EXIF Orientation tag metadata after auto-rotate
    ✔ Input image has Orientation EXIF tag value of 5 (270 degrees + flip), auto-rotate
    ✔ Attempt to auto-rotate using image that has no EXIF
    ✔ Attempt to auto-rotate image format without EXIF support
    ✔ Rotate with a string argument, should fail
    ✔ Animated image rotate-then-extract rejects
    ✔ Animated image extract-then-rotate rejects
    ✔ Flip - vertical
    ✔ Flop - horizontal
    ✔ Flip and flop
    ✔ Neither flip nor flop
    ✔ Auto-rotate and flip
    ✔ Auto-rotate and flop

  Sharpen
    ✔ specific radius 10 (sigma 6)
    ✔ specific radius 3 (sigma 1.5) and levels 0.5, 2.5
    ✔ specific radius 5 (sigma 3.5) and levels 2, 4
    ✔ sigma=3.5, m1=2, m2=4
    ✔ sigma=3.5, m1=2, m2=4, x1=2, y2=5, y3=25
    ✔ specific radius/levels with alpha channel
    ✔ mild sharpen
    ✔ invalid sigma
    ✔ invalid flat
    ✔ invalid jagged
    ✔ invalid options.sigma
    ✔ invalid options.m1
    ✔ invalid options.m2
    ✔ invalid options.x1
    ✔ invalid options.y2
    ✔ invalid options.y3
    ✔ sharpened image is larger than non-sharpened

  Image Stats
    ✔ JPEG
    ✔ PNG without transparency
    ✔ PNG with transparency
    ✔ PNG fully transparent
    ✔ Tiff
    ✔ WebP
    ✔ GIF
    ✔ Grayscale GIF with alpha
    ✔ CMYK input without profile
    ✔ Dominant colour
    ✔ Entropy and sharpness of 1x1 input are zero
    ✔ Stream in, Callback out
    ✔ Stream in, Promise out
    ✔ File in, Promise out
    ✔ Blurred image has lower sharpness than original (946ms)
    ✔ File input with corrupt header fails gracefully
    ✔ File input with corrupt header fails gracefully, Promise out
    ✔ File input with corrupt header fails gracefully, Stream In, Promise Out
    ✔ Buffer input with corrupt header fails gracefully
    ✔ Non-existent file in, Promise out

  SVG input
    ✔ Convert SVG to PNG at default 72DPI
    ✔ Convert SVG to PNG at 1200DPI
    ✔ Convert SVG to PNG at DPI larger than 2400
    ✔ Convert SVG to PNG utilizing scale-on-load
    ✔ Convert SVG to PNG at 14.4DPI
    ✔ Convert SVG with embedded images to PNG, respecting dimensions, autoconvert to PNG
    ✔ Converts SVG with truncated embedded PNG
    ✔ Fails to render SVG larger than 32767x32767
    ✔ Fails to render scaled SVG larger than 32767x32767
    ✔ Detects SVG passed as a string

  Threshold
    ✔ threshold 1 jpeg
    ✔ threshold 40 jpeg
    ✔ threshold 128
    ✔ threshold true (=128)
    ✔ threshold false (=0)
    ✔ threshold grayscale: true (=128)
    ✔ threshold default jpeg
    ✔ threshold default png transparency
    ✔ threshold default png alpha
    ✔ threshold default webp transparency
    ✔ color threshold
    ✔ invalid threshold -1
    ✔ invalid threshold 256

  TIFF
    ✔ Load TIFF from Buffer
    ✔ Load multi-page TIFF from file
    ✔ Load multi-page TIFF from Buffer
    ✔ Save TIFF to Buffer
    ✔ Increasing TIFF quality increases file size
    ✔ Invalid TIFF quality throws error
    ✔ Missing TIFF quality does not throw error
    ✔ Not squashing TIFF to a bit depth of 1 should not change the file size
    ✔ Squashing TIFF to a bit depth of 1 should significantly reduce file size
    ✔ Invalid TIFF bitdepth value throws error
    ✔ TIFF setting xres and yres on file
    ✔ TIFF setting xres and yres on buffer
    ✔ TIFF imputes xres and yres from withMetadataDensity if not explicitly provided
    ✔ TIFF uses xres and yres over withMetadataDensity if explicitly provided
    ✔ TIFF invalid xres value should throw an error
    ✔ TIFF invalid yres value should throw an error
    ✔ TIFF lzw compression with horizontal predictor shrinks test file
    ✔ TIFF LZW RGBA toFile
    ✔ TIFF LZW RGBA toBuffer
    ✔ TIFF ccittfax4 compression shrinks b-w test file
    ✔ TIFF resolutionUnit of inch (default)
    ✔ TIFF resolutionUnit of inch
    ✔ TIFF resolutionUnit of cm
    ✔ TIFF deflate compression with horizontal predictor shrinks test file
    ✔ TIFF deflate compression with float predictor shrinks test file
    ✔ TIFF deflate compression without predictor shrinks test file
    ✔ TIFF jpeg compression shrinks test file
    ✔ TIFF none compression does not throw error
    ✔ TIFF lzw compression does not throw error
    ✔ TIFF deflate compression does not throw error
    ✔ TIFF invalid compression option throws
    ✔ TIFF invalid compression option throws
    ✔ TIFF invalid predictor option throws
    ✔ TIFF invalid resolutionUnit option throws
    ✔ TIFF horizontal predictor does not throw error
    ✔ TIFF float predictor does not throw error
    ✔ TIFF none predictor does not throw error
    ✔ TIFF tiled pyramid image without compression enlarges test file
    ✔ TIFF pyramid true value does not throw error
    ✔ Invalid TIFF pyramid value throws error
    ✔ Invalid TIFF tile value throws error
    ✔ TIFF tile true value does not throw error
    ✔ Valid TIFF tileHeight value does not throw error
    ✔ Valid TIFF tileWidth value does not throw error
    ✔ Invalid TIFF tileHeight value throws error
    ✔ Invalid TIFF tileWidth value throws error
    ✔ Invalid TIFF tileHeight value throws error
    ✔ Invalid TIFF tileWidth value throws error
    ✔ TIFF file input with invalid page fails gracefully
    ✔ TIFF buffer input with invalid page fails gracefully

  Tile
    ✔ Valid size values pass
    ✔ Invalid size values fail
    ✔ Valid overlap values pass
    ✔ Invalid overlap values fail
    ✔ Valid container values pass
    ✔ Invalid container values fail
    ✔ Valid layout values pass
    ✔ Invalid layout values fail
    ✔ Valid formats pass
    ✔ Invalid formats fail
    ✔ Valid depths pass
    ✔ Invalid depths fail
    ✔ Prevent larger overlap than default size
    ✔ Prevent larger overlap than provided size
    ✔ Valid rotation angle values pass
    ✔ Invalid rotation angle values fail
    ✔ Valid skipBlanks threshold values pass
    ✔ InvalidskipBlanks threshold values fail
    ✔ Invalid center parameter value fail
    ✔ Valid id parameter value passes
    ✔ Invalid id parameter value fails
    ✔ Deep Zoom layout
    ✔ Deep Zoom layout with custom size+overlap
    ✔ Deep Zoom layout with custom size+angle
    ✔ Deep Zoom layout with depth of one
    ✔ Deep Zoom layout with depth of onepixel
    ✔ Deep Zoom layout with depth of onetile
    ✔ Deep Zoom layout with skipBlanks
    ✔ Zoomify layout
    ✔ Zoomify layout with depth one
    ✔ Zoomify layout with depth onetile
    ✔ Zoomify layout with depth onepixel
    ✔ Zoomify layout with skip blanks
    ✔ Google layout (501ms)
    ✔ Google layout with jpeg format
    ✔ Google layout with png format
    ✔ Google layout with webp format (641ms)
    ✔ Google layout with depth one
    ✔ Google layout with depth onepixel (505ms)
    ✔ Google layout with depth onetile
    ✔ Google layout with default skip Blanks
    ✔ Google layout with center image in tile (620ms)
    ✔ Google layout with center image in tile centre (635ms)
    ✔ IIIFv2 layout
    ✔ IIIFv3 layout
    ✔ Write to ZIP container using file extension (594ms)
    ✔ Write to ZIP container using container tile option (559ms)

  Timeout
    ✔ Will timeout after 1s when performing slow blur operation (1054ms)
    ✔ invalid object
    ✔ invalid seconds

  Tint
    ✔ tints rgb image red
    ✔ tints rgb image green
    ✔ tints rgb image blue
    ✔ tints rgb image with sepia tone
    ✔ tints rgb image with sepia tone with rgb colour
    ✔ tints rgb image with alpha channel
    ✔ tints cmyk image red

  toBuffer
    ✔ reusing same sharp object does not reset previously passed parameters to toBuffer
    ✔ correctly process animated webp with height > 16383

  toFormat
    ✔ accepts upper case characters as format parameter (string)
    ✔ accepts upper case characters as format parameter (object)

  Trim borders
    ✔ Threshold default
    ✔ Skip shrink-on-load
    ✔ single colour PNG where alpha channel provides the image
    ✔ 16-bit PNG with alpha channel
    ✔ Attempt to trim 2x2 pixel image fails
    ✔ should rotate before trim
    ✔ Animated image rejects
    Invalid thresholds
      ✔ -1
      ✔ "fail"
      ✔ {}

  Utilities
    Cache
      ✔ Can be disabled
      ✔ Can be enabled with defaults
      ✔ Can be set to zero
      ✔ Can be set to a maximum of 10MB, 100 files and 1000 items
      ✔ Ignores invalid values
    Concurrency
      ✔ Can be set to use 16 threads
      ✔ Can be reset to default
      ✔ Ignores invalid values
    Counters
      ✔ Have zero value at rest
    SIMD
      ✔ Can get current state
      ✔ Can disable
      ✔ Can attempt to enable
    Format
      ✔ Contains expected attributes
      ✔ Raw file=false, buffer=true, stream=true
      ✔ vips format supports filesystem only
    Versions
      ✔ Contains expected attributes
    Vendor
      ✔ Contains expected attributes

  WebP
    ✔ WebP output
    ✔ Invalid WebP quality throws error
    ✔ Invalid WebP alpha quality throws error
    ✔ should work for webp alpha quality
    ✔ should work for webp lossless
    ✔ should work for webp near-lossless
    ✔ should use near-lossless when both lossless and nearLossless are specified
    ✔ should produce a larger file size using smartSubsample
    ✔ invalid smartSubsample throws
    ✔ should produce a smaller file size with increased effort
    ✔ invalid effort throws
    ✔ invalid reductionEffort (deprecated) throws
    ✔ out of range effort throws
    ✔ should set effort to 0
    ✔ invalid loop throws
    ✔ invalid delay throws
    ✔ should repeat a single delay for all frames
    ✔ should limit animation loop
    ✔ should change delay between frames
    ✔ should preserve delay between frames
    ✔ should work with streams when only animated is set
    ✔ should work with streams when only pages is set
    ✔ should resize animated image to page height
    ✔ should take page parameter into account when animated is set


  1022 passing (57s)


> sharp@0.30.7 test-licensing
> license-checker --production --summary --onlyAllow="Apache-2.0;BSD;ISC;MIT"

├─ MIT: 32
├─ ISC: 8
├─ Apache-2.0: 3
├─ (MIT OR WTFPL): 1
├─ BSD-3-Clause: 1
└─ (BSD-2-Clause OR MIT OR Apache-2.0): 1

----------------|---------|----------|---------|---------|-------------------
File            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------|---------|----------|---------|---------|-------------------
All files       |     100 |      100 |     100 |     100 |                   
 agent.js       |     100 |      100 |     100 |     100 |                   
 channel.js     |     100 |      100 |     100 |     100 |                   
 colour.js      |     100 |      100 |     100 |     100 |                   
 composite.js   |     100 |      100 |     100 |     100 |                   
 constructor.js |     100 |      100 |     100 |     100 |                   
 index.js       |     100 |      100 |     100 |     100 |                   
 input.js       |     100 |      100 |     100 |     100 |                   
 is.js          |     100 |      100 |     100 |     100 |                   
 libvips.js     |     100 |      100 |     100 |     100 |                   
 operation.js   |     100 |      100 |     100 |     100 |                   
 output.js      |     100 |      100 |     100 |     100 |                   
 platform.js    |     100 |      100 |     100 |     100 |                   
 resize.js      |     100 |      100 |     100 |     100 |                   
 sharp.js       |     100 |      100 |     100 |     100 |                   
 utility.js     |     100 |      100 |     100 |     100 |                   
----------------|---------|----------|---------|---------|-------------------
https://github.com/Level/levelup.git
levelup
d31652d30a96b0132841bc4814b1f6a444f76e34

added 1094 packages, and audited 1095 packages in 49s

239 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Start Generating test coverage report...

> levelup@5.1.1 test
> standard && hallmark && (nyc -s node test/self.js | faucet) && nyc report

  /data/js-variants/multee/Original/levelup/test/common.js:15:5: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/Original/levelup/test/common.js:16:5: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/Original/levelup/test/self.js:11:3: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/Original/levelup/test/self.js:23:3: Expected property shorthand. (object-shorthand) (warning)

# db has manifest[K

  ok [1m[32m1[0m manifest is object[K
  ok [1m[32m2[0m additionalMethods is object[K
  ok [1m[32m3[0m truthy: bufferKeys[K
  ok [1m[32m4[0m truthy: snapshots[K
  ok [1m[32m5[0m false: permanence[K
  ok [1m[32m6[0m truthy: seek[K
  ok [1m[32m7[0m truthy: clear[K
  ok [1m[32m8[0m truthy: getMany[K
  ok [1m[32m9[0m truthy: status[K
  ok [1m[32m10[0m false: keyIterator[K
  ok [1m[32m11[0m false: valueIterator[K
  ok [1m[32m12[0m false: iteratorNextv[K
  ok [1m[32m13[0m false: iteratorAll[K
  ok [1m[32m14[0m false: idempotentOpen[K
  ok [1m[32m15[0m false: passiveOpen[K
  ok [1m[32m16[0m false: serialize[K
  ok [1m[32m17[0m false: createIfMissing[K
  ok [1m[32m18[0m false: errorIfExists[K
  ok [1m[32m19[0m truthy: deferredOpen[K
  ok [1m[32m20[0m truthy: openCallback[K
  ok [1m[32m21[0m truthy: promises[K
  ok [1m[32m22[0m truthy: streams[K
  ok [1m[32m23[0m truthy: encodings[K
  ok [1m[32m24[0m false: events[K
  ok [1m[32m25[0m truthy: additionalMethods[K
  ok [1m[32m26[0m manifest has unique identity[K
  ok [1m[32m27[0m manifest.encodings has unique identity[K
  ok [1m[32m28[0m manifest.additionalMethods has unique identity[K
  ok [1m[32m29[0m no open error[K
  ok [1m[32m30[0m manifest did not change after open[K
  ok [1m[32m31[0m no close error[K
  ok [1m[32m32[0m manifest did not change after close[K
[1A[1G[1m[32m✓ db has manifest[0m[1B[1G
# manifest has expected properties[K

  ok [1m[32m33[0m should be strictly equal[K
  ok [1m[32m34[0m should be strictly equal[K
  ok [1m[32m35[0m should be strictly equal[K
  ok [1m[32m36[0m should be strictly equal[K
  ok [1m[32m37[0m should be strictly equal[K
[1A[1G[1m[32m✓ manifest has expected properties[0m[1B[1G
# array-form batch(): multiple puts[K

  ok [1m[32m38[0m undefined[K
  ok [1m[32m39[0m null[K
  ok [1m[32m40[0m should be strictly equal[K
  ok [1m[32m41[0m null[K
  ok [1m[32m42[0m should be strictly equal[K
  ok [1m[32m43[0m null[K
  ok [1m[32m44[0m should be strictly equal[K
  ok [1m[32m45[0m no test error[K
  ok [1m[32m46[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): multiple puts[0m[1B[1G
# array-form batch(): promise interface[K

  ok [1m[32m47[0m null[K
  ok [1m[32m48[0m should be strictly equal[K
  ok [1m[32m49[0m null[K
  ok [1m[32m50[0m should be strictly equal[K
  ok [1m[32m51[0m null[K
  ok [1m[32m52[0m should be strictly equal[K
  ok [1m[32m53[0m no test error[K
  ok [1m[32m54[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): promise interface[0m[1B[1G
# array-form batch(): multiple operations[K

  ok [1m[32m55[0m null[K
  ok [1m[32m56[0m should be truthy[K
  ok [1m[32m57[0m null[K
  ok [1m[32m58[0m should be truthy[K
  ok [1m[32m59[0m null[K
  ok [1m[32m60[0m should be truthy[K
  ok [1m[32m61[0m null[K
  ok [1m[32m62[0m should be truthy[K
  ok [1m[32m63[0m should be truthy[K
  ok [1m[32m64[0m should be truthy[K
  ok [1m[32m65[0m should be strictly equal[K
  ok [1m[32m66[0m should be truthy[K
  ok [1m[32m67[0m should be truthy[K
  ok [1m[32m68[0m should be strictly equal[K
  ok [1m[32m69[0m no test error[K
  ok [1m[32m70[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): multiple operations[0m[1B[1G
# chained batch(): multiple operations[K

  ok [1m[32m71[0m undefined[K
  ok [1m[32m72[0m undefined[K
  ok [1m[32m73[0m should be truthy[K
  ok [1m[32m74[0m should be truthy[K
  ok [1m[32m75[0m should be truthy[K
  ok [1m[32m76[0m null[K
  ok [1m[32m77[0m should be truthy[K
  ok [1m[32m78[0m no test error[K
  ok [1m[32m79[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): multiple operations[0m[1B[1G
# chained batch(): options[K

  ok [1m[32m80[0m should be deeply equivalent[K
  ok [1m[32m81[0m undefined[K
  ok [1m[32m82[0m no test error[K
  ok [1m[32m83[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): options[0m[1B[1G
# chained batch(): promise interface - options[K

  ok [1m[32m84[0m should be deeply equivalent[K
  ok [1m[32m85[0m no test error[K
  ok [1m[32m86[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): promise interface - options[0m[1B[1G
# chained batch(): promise interface[K

  ok [1m[32m87[0m undefined[K
  ok [1m[32m88[0m should be truthy[K
  ok [1m[32m89[0m should be truthy[K
  ok [1m[32m90[0m should be truthy[K
  ok [1m[32m91[0m null[K
  ok [1m[32m92[0m should be truthy[K
  ok [1m[32m93[0m no test error[K
  ok [1m[32m94[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): promise interface[0m[1B[1G
# chained batch(): exposes ops queue length[K

  ok [1m[32m95[0m should be strictly equal[K
  ok [1m[32m96[0m should be strictly equal[K
  ok [1m[32m97[0m should be strictly equal[K
  ok [1m[32m98[0m no test error[K
  ok [1m[32m99[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): exposes ops queue length[0m[1B[1G
# array-form batch(): can overwrite data from put()[K

  ok [1m[32m100[0m null[K
  ok [1m[32m101[0m should be truthy[K
  ok [1m[32m102[0m null[K
  ok [1m[32m103[0m should be truthy[K
  ok [1m[32m104[0m null[K
  ok [1m[32m105[0m should be truthy[K
  ok [1m[32m106[0m null[K
  ok [1m[32m107[0m should be truthy[K
  ok [1m[32m108[0m should be truthy[K
  ok [1m[32m109[0m should be truthy[K
  ok [1m[32m110[0m should be strictly equal[K
  ok [1m[32m111[0m should be truthy[K
  ok [1m[32m112[0m should be truthy[K
  ok [1m[32m113[0m should be strictly equal[K
  ok [1m[32m114[0m no test error[K
  ok [1m[32m115[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): can overwrite data from put()[0m[1B[1G
# array-form batch(): data can be read with get() and del()[K

  ok [1m[32m116[0m null[K
  ok [1m[32m117[0m should be truthy[K
  ok [1m[32m118[0m null[K
  ok [1m[32m119[0m should be truthy[K
  ok [1m[32m120[0m should be truthy[K
  ok [1m[32m121[0m should be truthy[K
  ok [1m[32m122[0m should be strictly equal[K
  ok [1m[32m123[0m no test error[K
  ok [1m[32m124[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): data can be read with get() and del()[0m[1B[1G
# chained batch() arguments[K

[1A[1G[1m[32m✓ chained batch() arguments[0m[1B[1G
# chained batch() arguments: batch#put() with missing `value`[K

  ok [1m[32m125[0m should be strictly equal[K
  ok [1m[32m126[0m should be strictly equal[K
  ok [1m[32m127[0m should be strictly equal[K
  ok [1m[32m128[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `value`[0m[1B[1G
# chained batch() arguments: batch#put() with missing `key`[K

  ok [1m[32m129[0m should be strictly equal[K
  ok [1m[32m130[0m should be strictly equal[K
  ok [1m[32m131[0m should be strictly equal[K
  ok [1m[32m132[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `key`[0m[1B[1G
# chained batch() arguments: batch#put() with missing `key` and `value`[K

  ok [1m[32m133[0m should be strictly equal[K
  ok [1m[32m134[0m should be strictly equal[K
  ok [1m[32m135[0m should be strictly equal[K
  ok [1m[32m136[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `key` and `value`[0m[1B[1G
# chained batch() arguments: batch#del() with missing `key`[K

  ok [1m[32m137[0m should be strictly equal[K
  ok [1m[32m138[0m should be strictly equal[K
  ok [1m[32m139[0m should be strictly equal[K
  ok [1m[32m140[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#del() with missing `key`[0m[1B[1G
# chained batch() arguments: teardown[K

  ok [1m[32m141[0m no test error[K
[1A[1G[1m[32m✓ chained batch() arguments: teardown[0m[1B[1G
# chained batch(): rejects operations after write()[K

  ok [1m[32m142[0m no close error[K
  ok [1m[32m143[0m no batch error[K
  ok [1m[32m144[0m should be strictly equal[K
  ok [1m[32m145[0m should be strictly equal[K
  ok [1m[32m146[0m should be strictly equal[K
  ok [1m[32m147[0m should be strictly equal[K
  ok [1m[32m148[0m should be strictly equal[K
  ok [1m[32m149[0m should be strictly equal[K
  ok [1m[32m150[0m no test error[K
  ok [1m[32m151[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): rejects operations after write()[0m[1B[1G
# test put() and get() with binary value {valueEncoding:binary}[K

  ok [1m[32m152[0m undefined[K
  ok [1m[32m153[0m null[K
  ok [1m[32m154[0m should be truthy[K
  ok [1m[32m155[0m should be truthy[K
  ok [1m[32m156[0m no test error[K
  ok [1m[32m157[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary value {valueEncoding:binary}[0m[1B[1G
# test put() and get() with binary value {valueEncoding:binary} in factory[K

  ok [1m[32m158[0m undefined[K
  ok [1m[32m159[0m null[K
  ok [1m[32m160[0m should be truthy[K
  ok [1m[32m161[0m should be truthy[K
  ok [1m[32m162[0m no test error[K
  ok [1m[32m163[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary value {valueEncoding:binary} in factory[0m[1B[1G
# test put() and get() with binary key {valueEncoding:binary}[K

  ok [1m[32m164[0m undefined[K
  ok [1m[32m165[0m null[K
  ok [1m[32m166[0m value is buffer[K
  ok [1m[32m167[0m should be strictly equal[K
  ok [1m[32m168[0m no test error[K
  ok [1m[32m169[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary key {valueEncoding:binary}[0m[1B[1G
# test put() and get() with binary value {keyEncoding:utf8,valueEncoding:binary}[K

  ok [1m[32m170[0m undefined[K
  ok [1m[32m171[0m null[K
  ok [1m[32m172[0m should be truthy[K
  ok [1m[32m173[0m should be truthy[K
  ok [1m[32m174[0m no test error[K
  ok [1m[32m175[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary value {keyEncoding:utf8,valueEncoding:binary}[0m[1B[1G
# test put() and get() with binary value {keyEncoding:utf8,valueEncoding:binary} in factory[K

  ok [1m[32m176[0m undefined[K
  ok [1m[32m177[0m null[K
  ok [1m[32m178[0m should be truthy[K
  ok [1m[32m179[0m should be truthy[K
  ok [1m[32m180[0m no test error[K
  ok [1m[32m181[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary value {keyEncoding:utf8,valueEncoding:binary} in factory[0m[1B[1G
# test put() and get() with binary key {keyEncoding:binary,valueEncoding:utf8}[K

  ok [1m[32m182[0m undefined[K
  ok [1m[32m183[0m null[K
  ok [1m[32m184[0m should be strictly equal[K
  ok [1m[32m185[0m no test error[K
  ok [1m[32m186[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary key {keyEncoding:binary,valueEncoding:utf8}[0m[1B[1G
# test put() and get() with binary key & value {valueEncoding:binary}[K

  ok [1m[32m187[0m undefined[K
  ok [1m[32m188[0m null[K
  ok [1m[32m189[0m should be truthy[K
  ok [1m[32m190[0m no test error[K
  ok [1m[32m191[0m no close error[K
[1A[1G[1m[32m✓ test put() and get() with binary key & value {valueEncoding:binary}[0m[1B[1G
# test put() and del() and get() with binary key {valueEncoding:binary}[K

  ok [1m[32m192[0m undefined[K
  ok [1m[32m193[0m undefined[K
  ok [1m[32m194[0m should be truthy[K
  ok [1m[32m195[0m should be falsy[K
  ok [1m[32m196[0m no test error[K
  ok [1m[32m197[0m no close error[K
[1A[1G[1m[32m✓ test put() and del() and get() with binary key {valueEncoding:binary}[0m[1B[1G
# batch() with multiple puts[K

  ok [1m[32m198[0m undefined[K
  ok [1m[32m199[0m null[K
  ok [1m[32m200[0m should be truthy[K
  ok [1m[32m201[0m null[K
  ok [1m[32m202[0m should be truthy[K
  ok [1m[32m203[0m null[K
  ok [1m[32m204[0m value is buffer[K
  ok [1m[32m205[0m should be strictly equal[K
  ok [1m[32m206[0m no test error[K
  ok [1m[32m207[0m no close error[K
[1A[1G[1m[32m✓ batch() with multiple puts[0m[1B[1G
# clear()[K

[1A[1G[1m[32m✓ clear()[0m[1B[1G
# clear() without encoding, without deferred-open[K

  ok [1m[32m208[0m no open error[K
  ok [1m[32m209[0m no batch error[K
  ok [1m[32m210[0m no close error[K
  ok [1m[32m211[0m null[K
  ok [1m[32m212[0m no clear error[K
  ok [1m[32m213[0m no concat error[K
  ok [1m[32m214[0m got expected keys[K
[1A[1G[1m[32m✓ clear() without encoding, without deferred-open[0m[1B[1G
# clear() without encoding, with deferred-open[K

  ok [1m[32m215[0m no open error[K
  ok [1m[32m216[0m no batch error[K
  ok [1m[32m217[0m no close error[K
  ok [1m[32m218[0m no clear error[K
  ok [1m[32m219[0m no concat error[K
  ok [1m[32m220[0m got expected keys[K
[1A[1G[1m[32m✓ clear() without encoding, with deferred-open[0m[1B[1G
# clear() with encoding, with deferred-open[K

  ok [1m[32m221[0m no open error[K
  ok [1m[32m222[0m no batch error[K
  ok [1m[32m223[0m no close error[K
  ok [1m[32m224[0m no clear error[K
  ok [1m[32m225[0m no concat error[K
  ok [1m[32m226[0m got expected keys[K
[1A[1G[1m[32m✓ clear() with encoding, with deferred-open[0m[1B[1G
# clear() with encoding, without deferred-open[K

  ok [1m[32m227[0m no open error[K
  ok [1m[32m228[0m no batch error[K
  ok [1m[32m229[0m no close error[K
  ok [1m[32m230[0m null[K
  ok [1m[32m231[0m no clear error[K
  ok [1m[32m232[0m no concat error[K
  ok [1m[32m233[0m got expected keys[K
[1A[1G[1m[32m✓ clear() with encoding, without deferred-open[0m[1B[1G
# readStream before put, encode, deferred open, delayed put[K

  ok [1m[32m234[0m no error[K
  ok [1m[32m235[0m got 0 items from snaphot[K
  ok [1m[32m236[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, deferred open, delayed put[0m[1B[1G
# readStream before put, encode, deferred open[K

  ok [1m[32m237[0m no error[K
  ok [1m[32m238[0m got 0 items from snaphot[K
  ok [1m[32m239[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, deferred open[0m[1B[1G
# readStream before put, encode, delayed put[K

  ok [1m[32m240[0m no open error[K
  ok [1m[32m241[0m no error[K
  ok [1m[32m242[0m got 0 items from snaphot[K
  ok [1m[32m243[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, delayed put[0m[1B[1G
# readStream before put, encode[K

  ok [1m[32m244[0m no open error[K
  ok [1m[32m245[0m no error[K
  ok [1m[32m246[0m got 0 items from snaphot[K
  ok [1m[32m247[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode[0m[1B[1G
# readStream before put, deferred open, delayed put[K

  ok [1m[32m248[0m no error[K
  ok [1m[32m249[0m got 0 items from snaphot[K
  ok [1m[32m250[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, deferred open, delayed put[0m[1B[1G
# readStream before put, deferred open[K

  ok [1m[32m251[0m no error[K
  ok [1m[32m252[0m got 0 items from snaphot[K
  ok [1m[32m253[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, deferred open[0m[1B[1G
# readStream before put, delayed put[K

  ok [1m[32m254[0m no open error[K
  ok [1m[32m255[0m no error[K
  ok [1m[32m256[0m got 0 items from snaphot[K
  ok [1m[32m257[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, delayed put[0m[1B[1G
# readStream before put[K

  ok [1m[32m258[0m no open error[K
  ok [1m[32m259[0m no error[K
  ok [1m[32m260[0m got 0 items from snaphot[K
  ok [1m[32m261[0m no close error[K
[1A[1G[1m[32m✓ readStream before put[0m[1B[1G
# deferred open(): put() and get() on new database[K

  ok [1m[32m262[0m should be strictly equal[K
  ok [1m[32m263[0m null[K
  ok [1m[32m264[0m should be strictly equal[K
  ok [1m[32m265[0m null[K
  ok [1m[32m266[0m should be strictly equal[K
  ok [1m[32m267[0m null[K
  ok [1m[32m268[0m should be strictly equal[K
  ok [1m[32m269[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): put() and get() on new database[0m[1B[1G
# deferred open(): put() and get() on reopened database[K

  ok [1m[32m270[0m should be strictly equal[K
  ok [1m[32m271[0m should be strictly equal[K
  ok [1m[32m272[0m should be strictly equal[K
  ok [1m[32m273[0m should be strictly equal[K
[1A[1G[1m[32m✓ deferred open(): put() and get() on reopened database[0m[1B[1G
# deferred open(): batch() on new database[K

  ok [1m[32m274[0m should be strictly equal[K
  ok [1m[32m275[0m null[K
  ok [1m[32m276[0m should be strictly equal[K
  ok [1m[32m277[0m null[K
  ok [1m[32m278[0m should be strictly equal[K
  ok [1m[32m279[0m null[K
  ok [1m[32m280[0m should be strictly equal[K
  ok [1m[32m281[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): batch() on new database[0m[1B[1G
# deferred open(): chained batch() on new database[K

  ok [1m[32m282[0m should be strictly equal[K
  ok [1m[32m283[0m null[K
  ok [1m[32m284[0m should be strictly equal[K
  ok [1m[32m285[0m null[K
  ok [1m[32m286[0m should be strictly equal[K
  ok [1m[32m287[0m null[K
  ok [1m[32m288[0m should be strictly equal[K
  ok [1m[32m289[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): chained batch() on new database[0m[1B[1G
# deferred open(): test deferred ReadStream[K

  ok [1m[32m290[0m undefined[K
  ok [1m[32m291[0m no error[K
  ok [1m[32m292[0m should be truthy[K
  ok [1m[32m293[0m no open error[K
  ok [1m[32m294[0m ReadStream emitted single "end" event[K
  ok [1m[32m295[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m296[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m297[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m298[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m299[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m300[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m301[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m302[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m303[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m304[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m305[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m306[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m307[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m308[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m309[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m310[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m311[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m312[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m313[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m314[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m315[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m316[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m317[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m318[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m319[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m320[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m321[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m322[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m323[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m324[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m325[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m326[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m327[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m328[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m329[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m330[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m331[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m332[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m333[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m334[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m335[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m336[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m337[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m338[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m339[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m340[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m341[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m342[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m343[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m344[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m345[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m346[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m347[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m348[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m349[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m350[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m351[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m352[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m353[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m354[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m355[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m356[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m357[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m358[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m359[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m360[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m361[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m362[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m363[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m364[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m365[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m366[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m367[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m368[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m369[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m370[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m371[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m372[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m373[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m374[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m375[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m376[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m377[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m378[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m379[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m380[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m381[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m382[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m383[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m384[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m385[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m386[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m387[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m388[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m389[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m390[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m391[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m392[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m393[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m394[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m395[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m396[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m397[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m398[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m399[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m400[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m401[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m402[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m403[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m404[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m405[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m406[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m407[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m408[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m409[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m410[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m411[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m412[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m413[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m414[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m415[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m416[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m417[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m418[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m419[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m420[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m421[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m422[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m423[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m424[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m425[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m426[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m427[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m428[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m429[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m430[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m431[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m432[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m433[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m434[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m435[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m436[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m437[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m438[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m439[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m440[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m441[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m442[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m443[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m444[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m445[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m446[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m447[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m448[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m449[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m450[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m451[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m452[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m453[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m454[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m455[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m456[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m457[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m458[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m459[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m460[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m461[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m462[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m463[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m464[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m465[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m466[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m467[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m468[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m469[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m470[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m471[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m472[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m473[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m474[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m475[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m476[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m477[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m478[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m479[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m480[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m481[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m482[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m483[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m484[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m485[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m486[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m487[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m488[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m489[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m490[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m491[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m492[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m493[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m494[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m495[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m496[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m497[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m498[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m499[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m500[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m501[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m502[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m503[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m504[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m505[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m506[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m507[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m508[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m509[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m510[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m511[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m512[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m513[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m514[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m515[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m516[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m517[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m518[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m519[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m520[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m521[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m522[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m523[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m524[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m525[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m526[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m527[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m528[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m529[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m530[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m531[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m532[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m533[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m534[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m535[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m536[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m537[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m538[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m539[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m540[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m541[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m542[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m543[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m544[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m545[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m546[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m547[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m548[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m549[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m550[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m551[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m552[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m553[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m554[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m555[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m556[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m557[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m558[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m559[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m560[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m561[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m562[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m563[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m564[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m565[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m566[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m567[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m568[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m569[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m570[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m571[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m572[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m573[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m574[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m575[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m576[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m577[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m578[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m579[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m580[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m581[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m582[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m583[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m584[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m585[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m586[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m587[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m588[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m589[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m590[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m591[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m592[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m593[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m594[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m595[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m596[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m597[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m598[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m599[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m600[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m601[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m602[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m603[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m604[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m605[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m606[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m607[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m608[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m609[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m610[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m611[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m612[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m613[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m614[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m615[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m616[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m617[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m618[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m619[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m620[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m621[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m622[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m623[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m624[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m625[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m626[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m627[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m628[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m629[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m630[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m631[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m632[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m633[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m634[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m635[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m636[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m637[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m638[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m639[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m640[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m641[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m642[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m643[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m644[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m645[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m646[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m647[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m648[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m649[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m650[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m651[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m652[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m653[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m654[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m655[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m656[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m657[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m658[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m659[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m660[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m661[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m662[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m663[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m664[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m665[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m666[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m667[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m668[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m669[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m670[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m671[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m672[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m673[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m674[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m675[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m676[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m677[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m678[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m679[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m680[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m681[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m682[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m683[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m684[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m685[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m686[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m687[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m688[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m689[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m690[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m691[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m692[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m693[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m694[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m695[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m696[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m697[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m698[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m699[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m700[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m701[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m702[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m703[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m704[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m705[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m706[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m707[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m708[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m709[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m710[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m711[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m712[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m713[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m714[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m715[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m716[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m717[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m718[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m719[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m720[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m721[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m722[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m723[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m724[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m725[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m726[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m727[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m728[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m729[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m730[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m731[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m732[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m733[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m734[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m735[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m736[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m737[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m738[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m739[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m740[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m741[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m742[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m743[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m744[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m745[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m746[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m747[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m748[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m749[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m750[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m751[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m752[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m753[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m754[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m755[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m756[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m757[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m758[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m759[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m760[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m761[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m762[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m763[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m764[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m765[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m766[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m767[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m768[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m769[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m770[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m771[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m772[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m773[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m774[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m775[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m776[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m777[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m778[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m779[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m780[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m781[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m782[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m783[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m784[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m785[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m786[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m787[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m788[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m789[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m790[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m791[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m792[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m793[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m794[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m795[0m ReadStream "data" event #99 argument has correct "value"[K
[1A[1G[1m[32m✓ deferred open(): test deferred ReadStream[0m[1B[1G
# deferred open(): no maxListeners warning[K

  ok [1m[32m796[0m undefined[K
  ok [1m[32m797[0m undefined[K
  ok [1m[32m798[0m undefined[K
  ok [1m[32m799[0m undefined[K
  ok [1m[32m800[0m undefined[K
  ok [1m[32m801[0m undefined[K
  ok [1m[32m802[0m undefined[K
  ok [1m[32m803[0m undefined[K
  ok [1m[32m804[0m undefined[K
  ok [1m[32m805[0m undefined[K
  ok [1m[32m806[0m undefined[K
[1A[1G[1m[32m✓ deferred open(): no maxListeners warning[0m[1B[1G
# deferred open(): value of queued operation is not serialized[K

  ok [1m[32m807[0m undefined[K
  ok [1m[32m808[0m null[K
  ok [1m[32m809[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ deferred open(): value of queued operation is not serialized[0m[1B[1G
# deferred open(): key of queued operation is not serialized[K

  ok [1m[32m810[0m undefined[K
  ok [1m[32m811[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ deferred open(): key of queued operation is not serialized[0m[1B[1G
# get() / put() / del(): get() on empty database causes error[K

  ok [1m[32m812[0m should be falsy[K
  ok [1m[32m813[0m should be truthy[K
  ok [1m[32m814[0m should be truthy[K
  ok [1m[32m815[0m should be truthy[K
  ok [1m[32m816[0m err.notFound is `true`[K
  ok [1m[32m817[0m err.status is 404[K
  ok [1m[32m818[0m should be truthy[K
  ok [1m[32m819[0m no test error[K
  ok [1m[32m820[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): get() on empty database causes error[0m[1B[1G
# get() / put() / del(): get() on empty database causes error (promise)[K

  ok [1m[32m821[0m should be truthy[K
  ok [1m[32m822[0m should be truthy[K
  ok [1m[32m823[0m should be truthy[K
  ok [1m[32m824[0m err.notFound is `true`[K
  ok [1m[32m825[0m err.status is 404[K
  ok [1m[32m826[0m should be truthy[K
  ok [1m[32m827[0m no test error[K
  ok [1m[32m828[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): get() on empty database causes error (promise)[0m[1B[1G
# get() / put() / del(): put() and get() simple string entries[K

  ok [1m[32m829[0m undefined[K
  ok [1m[32m830[0m null[K
  ok [1m[32m831[0m should be strictly equal[K
  ok [1m[32m832[0m no test error[K
  ok [1m[32m833[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): put() and get() simple string entries[0m[1B[1G
# get() / put() / del(): put() and get() simple string entries (promise)[K

  ok [1m[32m834[0m should be strictly equal[K
  ok [1m[32m835[0m no test error[K
  ok [1m[32m836[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): put() and get() simple string entries (promise)[0m[1B[1G
# get() / put() / del(): can del() on empty database[K

  ok [1m[32m837[0m undefined[K
  ok [1m[32m838[0m no test error[K
  ok [1m[32m839[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): can del() on empty database[0m[1B[1G
# get() / put() / del(): can del() on empty database (promise)[K

  ok [1m[32m840[0m no test error[K
  ok [1m[32m841[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): can del() on empty database (promise)[0m[1B[1G
# get() / put() / del(): del() works on real entries[K

  ok [1m[32m842[0m null[K
  ok [1m[32m843[0m should be truthy[K
  ok [1m[32m844[0m should be truthy[K
  ok [1m[32m845[0m should be falsy[K
  ok [1m[32m846[0m null[K
  ok [1m[32m847[0m should be truthy[K
  ok [1m[32m848[0m no test error[K
  ok [1m[32m849[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): del() works on real entries[0m[1B[1G
# call open twice, should emit "open" once[K

  ok [1m[32m850[0m callback should fire only once[K
  ok [1m[32m851[0m callback should fire only once[K
  ok [1m[32m852[0m should be strictly equal[K
  ok [1m[32m853[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ call open twice, should emit "open" once[0m[1B[1G
# Init & open(): levelup()[K

  ok [1m[32m854[0m should be strictly equal[K
  ok [1m[32m855[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): levelup()[0m[1B[1G
# Init & open(): open and close statuses[K

  ok [1m[32m856[0m no error[K
  ok [1m[32m857[0m should be strictly equal[K
  ok [1m[32m858[0m undefined[K
  ok [1m[32m859[0m should be strictly equal[K
  ok [1m[32m860[0m should be strictly equal[K
  ok [1m[32m861[0m null[K
  ok [1m[32m862[0m should be truthy[K
[1A[1G[1m[32m✓ Init & open(): open and close statuses[0m[1B[1G
# Init & open(): without callback[K

  ok [1m[32m863[0m should be truthy[K
  ok [1m[32m864[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): without callback[0m[1B[1G
# Init & open(): error with callback[K

  ok [1m[32m865[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): error with callback[0m[1B[1G
# Init & open(): error without callback[K

  ok [1m[32m866[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): error without callback[0m[1B[1G
# Init & open(): validate abstract-leveldown[K

  ok [1m[32m867[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): validate abstract-leveldown[0m[1B[1G
# Init & open(): support open options[K

  ok [1m[32m868[0m no error[K
  ok [1m[32m869[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): support open options[0m[1B[1G
# custom encoding: simple-object values in "json" encoding[K

  ok [1m[32m870[0m undefined[K
  ok [1m[32m871[0m null[K
  ok [1m[32m872[0m should be deeply equivalent[K
  ok [1m[32m873[0m null[K
  ok [1m[32m874[0m should be deeply equivalent[K
  ok [1m[32m875[0m null[K
  ok [1m[32m876[0m should be deeply equivalent[K
  ok [1m[32m877[0m null[K
  ok [1m[32m878[0m should be deeply equivalent[K
  ok [1m[32m879[0m null[K
  ok [1m[32m880[0m should be deeply equivalent[K
  ok [1m[32m881[0m no test error[K
  ok [1m[32m882[0m no close error[K
[1A[1G[1m[32m✓ custom encoding: simple-object values in "json" encoding[0m[1B[1G
# custom encoding: simple-object keys in "json" encoding[K

  ok [1m[32m883[0m undefined[K
  ok [1m[32m884[0m null[K
  ok [1m[32m885[0m should be deeply equivalent[K
  ok [1m[32m886[0m null[K
  ok [1m[32m887[0m should be deeply equivalent[K
  ok [1m[32m888[0m null[K
  ok [1m[32m889[0m should be deeply equivalent[K
  ok [1m[32m890[0m null[K
  ok [1m[32m891[0m should be deeply equivalent[K
  ok [1m[32m892[0m null[K
  ok [1m[32m893[0m should be deeply equivalent[K
  ok [1m[32m894[0m no test error[K
  ok [1m[32m895[0m no close error[K
[1A[1G[1m[32m✓ custom encoding: simple-object keys in "json" encoding[0m[1B[1G
# custom encoding: complex-object values in "json" encoding[K

  ok [1m[32m896[0m undefined[K
  ok [1m[32m897[0m null[K
  ok [1m[32m898[0m should be deeply equivalent[K
  ok [1m[32m899[0m no test error[K
  ok [1m[32m900[0m no close error[K
[1A[1G[1m[32m✓ custom encoding: complex-object values in "json" encoding[0m[1B[1G
# custom encoding: complex-object keys in "json" encoding[K

  ok [1m[32m901[0m undefined[K
  ok [1m[32m902[0m null[K
  ok [1m[32m903[0m should be deeply equivalent[K
  ok [1m[32m904[0m null[K
  ok [1m[32m905[0m should be deeply equivalent[K
  ok [1m[32m906[0m no test error[K
  ok [1m[32m907[0m no close error[K
[1A[1G[1m[32m✓ custom encoding: complex-object keys in "json" encoding[0m[1B[1G
# json encoding: simple-object values in "json" encoding[K

  ok [1m[32m908[0m undefined[K
  ok [1m[32m909[0m null[K
  ok [1m[32m910[0m should be deeply equivalent[K
  ok [1m[32m911[0m null[K
  ok [1m[32m912[0m should be deeply equivalent[K
  ok [1m[32m913[0m null[K
  ok [1m[32m914[0m should be deeply equivalent[K
  ok [1m[32m915[0m null[K
  ok [1m[32m916[0m should be deeply equivalent[K
  ok [1m[32m917[0m null[K
  ok [1m[32m918[0m should be deeply equivalent[K
  ok [1m[32m919[0m should be deeply equivalent[K
  ok [1m[32m920[0m undefined[K
  ok [1m[32m921[0m should be deeply equivalent[K
  ok [1m[32m922[0m undefined[K
  ok [1m[32m923[0m no test error[K
  ok [1m[32m924[0m no close error[K
[1A[1G[1m[32m✓ json encoding: simple-object values in "json" encoding[0m[1B[1G
# json encoding: simple-object keys in "json" encoding[K

  ok [1m[32m925[0m undefined[K
  ok [1m[32m926[0m null[K
  ok [1m[32m927[0m should be deeply equivalent[K
  ok [1m[32m928[0m null[K
  ok [1m[32m929[0m should be deeply equivalent[K
  ok [1m[32m930[0m null[K
  ok [1m[32m931[0m should be deeply equivalent[K
  ok [1m[32m932[0m null[K
  ok [1m[32m933[0m should be deeply equivalent[K
  ok [1m[32m934[0m null[K
  ok [1m[32m935[0m should be deeply equivalent[K
  ok [1m[32m936[0m should be deeply equivalent[K
  ok [1m[32m937[0m undefined[K
  ok [1m[32m938[0m should be deeply equivalent[K
  ok [1m[32m939[0m undefined[K
  ok [1m[32m940[0m no test error[K
  ok [1m[32m941[0m no close error[K
[1A[1G[1m[32m✓ json encoding: simple-object keys in "json" encoding[0m[1B[1G
# json encoding: complex-object values in "json" encoding[K

  ok [1m[32m942[0m undefined[K
  ok [1m[32m943[0m null[K
  ok [1m[32m944[0m should be deeply equivalent[K
  ok [1m[32m945[0m should be deeply equivalent[K
  ok [1m[32m946[0m undefined[K
  ok [1m[32m947[0m should be deeply equivalent[K
  ok [1m[32m948[0m undefined[K
  ok [1m[32m949[0m no test error[K
  ok [1m[32m950[0m no close error[K
[1A[1G[1m[32m✓ json encoding: complex-object values in "json" encoding[0m[1B[1G
# json encoding: complex-object keys in "json" encoding[K

  ok [1m[32m951[0m undefined[K
  ok [1m[32m952[0m null[K
  ok [1m[32m953[0m should be deeply equivalent[K
  ok [1m[32m954[0m should be deeply equivalent[K
  ok [1m[32m955[0m undefined[K
  ok [1m[32m956[0m should be deeply equivalent[K
  ok [1m[32m957[0m undefined[K
  ok [1m[32m958[0m no test error[K
  ok [1m[32m959[0m no close error[K
[1A[1G[1m[32m✓ json encoding: complex-object keys in "json" encoding[0m[1B[1G
# chained batch with per-operation options[K

  ok [1m[32m960[0m no write error[K
  ok [1m[32m961[0m should be deeply equivalent[K
  ok [1m[32m962[0m undefined[K
  ok [1m[32m963[0m should be deeply equivalent[K
  ok [1m[32m964[0m no test error[K
  ok [1m[32m965[0m no close error[K
[1A[1G[1m[32m✓ chained batch with per-operation options[0m[1B[1G
# key and value streams: keyStream()[K

  ok [1m[32m966[0m undefined[K
  ok [1m[32m967[0m stream emitted single "end" event[K
  ok [1m[32m968[0m stream emitted correct number of "data" events[K
  ok [1m[32m969[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m970[0m stream correct "data" event #0: 00[K
  ok [1m[32m971[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m972[0m stream correct "data" event #1: 01[K
  ok [1m[32m973[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m974[0m stream correct "data" event #2: 02[K
  ok [1m[32m975[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m976[0m stream correct "data" event #3: 03[K
  ok [1m[32m977[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m978[0m stream correct "data" event #4: 04[K
  ok [1m[32m979[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m980[0m stream correct "data" event #5: 05[K
  ok [1m[32m981[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m982[0m stream correct "data" event #6: 06[K
  ok [1m[32m983[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m984[0m stream correct "data" event #7: 07[K
  ok [1m[32m985[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m986[0m stream correct "data" event #8: 08[K
  ok [1m[32m987[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m988[0m stream correct "data" event #9: 09[K
  ok [1m[32m989[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m990[0m stream correct "data" event #10: 10[K
  ok [1m[32m991[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m992[0m stream correct "data" event #11: 11[K
  ok [1m[32m993[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m994[0m stream correct "data" event #12: 12[K
  ok [1m[32m995[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m996[0m stream correct "data" event #13: 13[K
  ok [1m[32m997[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m998[0m stream correct "data" event #14: 14[K
  ok [1m[32m999[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m1000[0m stream correct "data" event #15: 15[K
  ok [1m[32m1001[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m1002[0m stream correct "data" event #16: 16[K
  ok [1m[32m1003[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m1004[0m stream correct "data" event #17: 17[K
  ok [1m[32m1005[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m1006[0m stream correct "data" event #18: 18[K
  ok [1m[32m1007[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m1008[0m stream correct "data" event #19: 19[K
  ok [1m[32m1009[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m1010[0m stream correct "data" event #20: 20[K
  ok [1m[32m1011[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m1012[0m stream correct "data" event #21: 21[K
  ok [1m[32m1013[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m1014[0m stream correct "data" event #22: 22[K
  ok [1m[32m1015[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m1016[0m stream correct "data" event #23: 23[K
  ok [1m[32m1017[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m1018[0m stream correct "data" event #24: 24[K
  ok [1m[32m1019[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m1020[0m stream correct "data" event #25: 25[K
  ok [1m[32m1021[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m1022[0m stream correct "data" event #26: 26[K
  ok [1m[32m1023[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m1024[0m stream correct "data" event #27: 27[K
  ok [1m[32m1025[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m1026[0m stream correct "data" event #28: 28[K
  ok [1m[32m1027[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m1028[0m stream correct "data" event #29: 29[K
  ok [1m[32m1029[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m1030[0m stream correct "data" event #30: 30[K
  ok [1m[32m1031[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m1032[0m stream correct "data" event #31: 31[K
  ok [1m[32m1033[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m1034[0m stream correct "data" event #32: 32[K
  ok [1m[32m1035[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m1036[0m stream correct "data" event #33: 33[K
  ok [1m[32m1037[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m1038[0m stream correct "data" event #34: 34[K
  ok [1m[32m1039[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m1040[0m stream correct "data" event #35: 35[K
  ok [1m[32m1041[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m1042[0m stream correct "data" event #36: 36[K
  ok [1m[32m1043[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m1044[0m stream correct "data" event #37: 37[K
  ok [1m[32m1045[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m1046[0m stream correct "data" event #38: 38[K
  ok [1m[32m1047[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m1048[0m stream correct "data" event #39: 39[K
  ok [1m[32m1049[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m1050[0m stream correct "data" event #40: 40[K
  ok [1m[32m1051[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m1052[0m stream correct "data" event #41: 41[K
  ok [1m[32m1053[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m1054[0m stream correct "data" event #42: 42[K
  ok [1m[32m1055[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m1056[0m stream correct "data" event #43: 43[K
  ok [1m[32m1057[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m1058[0m stream correct "data" event #44: 44[K
  ok [1m[32m1059[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m1060[0m stream correct "data" event #45: 45[K
  ok [1m[32m1061[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m1062[0m stream correct "data" event #46: 46[K
  ok [1m[32m1063[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m1064[0m stream correct "data" event #47: 47[K
  ok [1m[32m1065[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m1066[0m stream correct "data" event #48: 48[K
  ok [1m[32m1067[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m1068[0m stream correct "data" event #49: 49[K
  ok [1m[32m1069[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m1070[0m stream correct "data" event #50: 50[K
  ok [1m[32m1071[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m1072[0m stream correct "data" event #51: 51[K
  ok [1m[32m1073[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m1074[0m stream correct "data" event #52: 52[K
  ok [1m[32m1075[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m1076[0m stream correct "data" event #53: 53[K
  ok [1m[32m1077[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m1078[0m stream correct "data" event #54: 54[K
  ok [1m[32m1079[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m1080[0m stream correct "data" event #55: 55[K
  ok [1m[32m1081[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m1082[0m stream correct "data" event #56: 56[K
  ok [1m[32m1083[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m1084[0m stream correct "data" event #57: 57[K
  ok [1m[32m1085[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m1086[0m stream correct "data" event #58: 58[K
  ok [1m[32m1087[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m1088[0m stream correct "data" event #59: 59[K
  ok [1m[32m1089[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m1090[0m stream correct "data" event #60: 60[K
  ok [1m[32m1091[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m1092[0m stream correct "data" event #61: 61[K
  ok [1m[32m1093[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m1094[0m stream correct "data" event #62: 62[K
  ok [1m[32m1095[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m1096[0m stream correct "data" event #63: 63[K
  ok [1m[32m1097[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m1098[0m stream correct "data" event #64: 64[K
  ok [1m[32m1099[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m1100[0m stream correct "data" event #65: 65[K
  ok [1m[32m1101[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m1102[0m stream correct "data" event #66: 66[K
  ok [1m[32m1103[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m1104[0m stream correct "data" event #67: 67[K
  ok [1m[32m1105[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m1106[0m stream correct "data" event #68: 68[K
  ok [1m[32m1107[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m1108[0m stream correct "data" event #69: 69[K
  ok [1m[32m1109[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m1110[0m stream correct "data" event #70: 70[K
  ok [1m[32m1111[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m1112[0m stream correct "data" event #71: 71[K
  ok [1m[32m1113[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m1114[0m stream correct "data" event #72: 72[K
  ok [1m[32m1115[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m1116[0m stream correct "data" event #73: 73[K
  ok [1m[32m1117[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m1118[0m stream correct "data" event #74: 74[K
  ok [1m[32m1119[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m1120[0m stream correct "data" event #75: 75[K
  ok [1m[32m1121[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m1122[0m stream correct "data" event #76: 76[K
  ok [1m[32m1123[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m1124[0m stream correct "data" event #77: 77[K
  ok [1m[32m1125[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m1126[0m stream correct "data" event #78: 78[K
  ok [1m[32m1127[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m1128[0m stream correct "data" event #79: 79[K
  ok [1m[32m1129[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m1130[0m stream correct "data" event #80: 80[K
  ok [1m[32m1131[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m1132[0m stream correct "data" event #81: 81[K
  ok [1m[32m1133[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m1134[0m stream correct "data" event #82: 82[K
  ok [1m[32m1135[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m1136[0m stream correct "data" event #83: 83[K
  ok [1m[32m1137[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m1138[0m stream correct "data" event #84: 84[K
  ok [1m[32m1139[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m1140[0m stream correct "data" event #85: 85[K
  ok [1m[32m1141[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m1142[0m stream correct "data" event #86: 86[K
  ok [1m[32m1143[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m1144[0m stream correct "data" event #87: 87[K
  ok [1m[32m1145[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m1146[0m stream correct "data" event #88: 88[K
  ok [1m[32m1147[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m1148[0m stream correct "data" event #89: 89[K
  ok [1m[32m1149[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m1150[0m stream correct "data" event #90: 90[K
  ok [1m[32m1151[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m1152[0m stream correct "data" event #91: 91[K
  ok [1m[32m1153[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m1154[0m stream correct "data" event #92: 92[K
  ok [1m[32m1155[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m1156[0m stream correct "data" event #93: 93[K
  ok [1m[32m1157[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m1158[0m stream correct "data" event #94: 94[K
  ok [1m[32m1159[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m1160[0m stream correct "data" event #95: 95[K
  ok [1m[32m1161[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m1162[0m stream correct "data" event #96: 96[K
  ok [1m[32m1163[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m1164[0m stream correct "data" event #97: 97[K
  ok [1m[32m1165[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m1166[0m stream correct "data" event #98: 98[K
  ok [1m[32m1167[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m1168[0m stream correct "data" event #99: 99[K
  ok [1m[32m1169[0m no test error[K
  ok [1m[32m1170[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: keyStream()[0m[1B[1G
# key and value streams: readStream({keys:true,values:false})[K

  ok [1m[32m1171[0m undefined[K
  ok [1m[32m1172[0m stream emitted single "end" event[K
  ok [1m[32m1173[0m stream emitted correct number of "data" events[K
  ok [1m[32m1174[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m1175[0m stream correct "data" event #0: 00[K
  ok [1m[32m1176[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m1177[0m stream correct "data" event #1: 01[K
  ok [1m[32m1178[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m1179[0m stream correct "data" event #2: 02[K
  ok [1m[32m1180[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m1181[0m stream correct "data" event #3: 03[K
  ok [1m[32m1182[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m1183[0m stream correct "data" event #4: 04[K
  ok [1m[32m1184[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m1185[0m stream correct "data" event #5: 05[K
  ok [1m[32m1186[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m1187[0m stream correct "data" event #6: 06[K
  ok [1m[32m1188[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m1189[0m stream correct "data" event #7: 07[K
  ok [1m[32m1190[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m1191[0m stream correct "data" event #8: 08[K
  ok [1m[32m1192[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m1193[0m stream correct "data" event #9: 09[K
  ok [1m[32m1194[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m1195[0m stream correct "data" event #10: 10[K
  ok [1m[32m1196[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m1197[0m stream correct "data" event #11: 11[K
  ok [1m[32m1198[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m1199[0m stream correct "data" event #12: 12[K
  ok [1m[32m1200[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m1201[0m stream correct "data" event #13: 13[K
  ok [1m[32m1202[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m1203[0m stream correct "data" event #14: 14[K
  ok [1m[32m1204[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m1205[0m stream correct "data" event #15: 15[K
  ok [1m[32m1206[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m1207[0m stream correct "data" event #16: 16[K
  ok [1m[32m1208[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m1209[0m stream correct "data" event #17: 17[K
  ok [1m[32m1210[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m1211[0m stream correct "data" event #18: 18[K
  ok [1m[32m1212[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m1213[0m stream correct "data" event #19: 19[K
  ok [1m[32m1214[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m1215[0m stream correct "data" event #20: 20[K
  ok [1m[32m1216[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m1217[0m stream correct "data" event #21: 21[K
  ok [1m[32m1218[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m1219[0m stream correct "data" event #22: 22[K
  ok [1m[32m1220[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m1221[0m stream correct "data" event #23: 23[K
  ok [1m[32m1222[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m1223[0m stream correct "data" event #24: 24[K
  ok [1m[32m1224[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m1225[0m stream correct "data" event #25: 25[K
  ok [1m[32m1226[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m1227[0m stream correct "data" event #26: 26[K
  ok [1m[32m1228[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m1229[0m stream correct "data" event #27: 27[K
  ok [1m[32m1230[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m1231[0m stream correct "data" event #28: 28[K
  ok [1m[32m1232[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m1233[0m stream correct "data" event #29: 29[K
  ok [1m[32m1234[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m1235[0m stream correct "data" event #30: 30[K
  ok [1m[32m1236[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m1237[0m stream correct "data" event #31: 31[K
  ok [1m[32m1238[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m1239[0m stream correct "data" event #32: 32[K
  ok [1m[32m1240[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m1241[0m stream correct "data" event #33: 33[K
  ok [1m[32m1242[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m1243[0m stream correct "data" event #34: 34[K
  ok [1m[32m1244[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m1245[0m stream correct "data" event #35: 35[K
  ok [1m[32m1246[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m1247[0m stream correct "data" event #36: 36[K
  ok [1m[32m1248[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m1249[0m stream correct "data" event #37: 37[K
  ok [1m[32m1250[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m1251[0m stream correct "data" event #38: 38[K
  ok [1m[32m1252[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m1253[0m stream correct "data" event #39: 39[K
  ok [1m[32m1254[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m1255[0m stream correct "data" event #40: 40[K
  ok [1m[32m1256[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m1257[0m stream correct "data" event #41: 41[K
  ok [1m[32m1258[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m1259[0m stream correct "data" event #42: 42[K
  ok [1m[32m1260[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m1261[0m stream correct "data" event #43: 43[K
  ok [1m[32m1262[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m1263[0m stream correct "data" event #44: 44[K
  ok [1m[32m1264[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m1265[0m stream correct "data" event #45: 45[K
  ok [1m[32m1266[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m1267[0m stream correct "data" event #46: 46[K
  ok [1m[32m1268[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m1269[0m stream correct "data" event #47: 47[K
  ok [1m[32m1270[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m1271[0m stream correct "data" event #48: 48[K
  ok [1m[32m1272[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m1273[0m stream correct "data" event #49: 49[K
  ok [1m[32m1274[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m1275[0m stream correct "data" event #50: 50[K
  ok [1m[32m1276[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m1277[0m stream correct "data" event #51: 51[K
  ok [1m[32m1278[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m1279[0m stream correct "data" event #52: 52[K
  ok [1m[32m1280[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m1281[0m stream correct "data" event #53: 53[K
  ok [1m[32m1282[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m1283[0m stream correct "data" event #54: 54[K
  ok [1m[32m1284[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m1285[0m stream correct "data" event #55: 55[K
  ok [1m[32m1286[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m1287[0m stream correct "data" event #56: 56[K
  ok [1m[32m1288[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m1289[0m stream correct "data" event #57: 57[K
  ok [1m[32m1290[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m1291[0m stream correct "data" event #58: 58[K
  ok [1m[32m1292[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m1293[0m stream correct "data" event #59: 59[K
  ok [1m[32m1294[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m1295[0m stream correct "data" event #60: 60[K
  ok [1m[32m1296[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m1297[0m stream correct "data" event #61: 61[K
  ok [1m[32m1298[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m1299[0m stream correct "data" event #62: 62[K
  ok [1m[32m1300[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m1301[0m stream correct "data" event #63: 63[K
  ok [1m[32m1302[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m1303[0m stream correct "data" event #64: 64[K
  ok [1m[32m1304[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m1305[0m stream correct "data" event #65: 65[K
  ok [1m[32m1306[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m1307[0m stream correct "data" event #66: 66[K
  ok [1m[32m1308[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m1309[0m stream correct "data" event #67: 67[K
  ok [1m[32m1310[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m1311[0m stream correct "data" event #68: 68[K
  ok [1m[32m1312[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m1313[0m stream correct "data" event #69: 69[K
  ok [1m[32m1314[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m1315[0m stream correct "data" event #70: 70[K
  ok [1m[32m1316[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m1317[0m stream correct "data" event #71: 71[K
  ok [1m[32m1318[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m1319[0m stream correct "data" event #72: 72[K
  ok [1m[32m1320[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m1321[0m stream correct "data" event #73: 73[K
  ok [1m[32m1322[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m1323[0m stream correct "data" event #74: 74[K
  ok [1m[32m1324[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m1325[0m stream correct "data" event #75: 75[K
  ok [1m[32m1326[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m1327[0m stream correct "data" event #76: 76[K
  ok [1m[32m1328[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m1329[0m stream correct "data" event #77: 77[K
  ok [1m[32m1330[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m1331[0m stream correct "data" event #78: 78[K
  ok [1m[32m1332[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m1333[0m stream correct "data" event #79: 79[K
  ok [1m[32m1334[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m1335[0m stream correct "data" event #80: 80[K
  ok [1m[32m1336[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m1337[0m stream correct "data" event #81: 81[K
  ok [1m[32m1338[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m1339[0m stream correct "data" event #82: 82[K
  ok [1m[32m1340[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m1341[0m stream correct "data" event #83: 83[K
  ok [1m[32m1342[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m1343[0m stream correct "data" event #84: 84[K
  ok [1m[32m1344[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m1345[0m stream correct "data" event #85: 85[K
  ok [1m[32m1346[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m1347[0m stream correct "data" event #86: 86[K
  ok [1m[32m1348[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m1349[0m stream correct "data" event #87: 87[K
  ok [1m[32m1350[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m1351[0m stream correct "data" event #88: 88[K
  ok [1m[32m1352[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m1353[0m stream correct "data" event #89: 89[K
  ok [1m[32m1354[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m1355[0m stream correct "data" event #90: 90[K
  ok [1m[32m1356[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m1357[0m stream correct "data" event #91: 91[K
  ok [1m[32m1358[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m1359[0m stream correct "data" event #92: 92[K
  ok [1m[32m1360[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m1361[0m stream correct "data" event #93: 93[K
  ok [1m[32m1362[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m1363[0m stream correct "data" event #94: 94[K
  ok [1m[32m1364[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m1365[0m stream correct "data" event #95: 95[K
  ok [1m[32m1366[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m1367[0m stream correct "data" event #96: 96[K
  ok [1m[32m1368[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m1369[0m stream correct "data" event #97: 97[K
  ok [1m[32m1370[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m1371[0m stream correct "data" event #98: 98[K
  ok [1m[32m1372[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m1373[0m stream correct "data" event #99: 99[K
  ok [1m[32m1374[0m no test error[K
  ok [1m[32m1375[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: readStream({keys:true,values:false})[0m[1B[1G
# key and value streams: valueStream()[K

  ok [1m[32m1376[0m undefined[K
  ok [1m[32m1377[0m stream emitted single "end" event[K
  ok [1m[32m1378[0m stream emitted correct number of "data" events[K
  ok [1m[32m1379[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m1380[0m stream correct "data" event #0: 0.12572362652314695[K
  ok [1m[32m1381[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m1382[0m stream correct "data" event #1: 0.8067300270825231[K
  ok [1m[32m1383[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m1384[0m stream correct "data" event #2: 0.1076669642840149[K
  ok [1m[32m1385[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m1386[0m stream correct "data" event #3: 0.29212899499777967[K
  ok [1m[32m1387[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m1388[0m stream correct "data" event #4: 0.1524822070819205[K
  ok [1m[32m1389[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m1390[0m stream correct "data" event #5: 0.011363319662279103[K
  ok [1m[32m1391[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m1392[0m stream correct "data" event #6: 0.23816050124737798[K
  ok [1m[32m1393[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m1394[0m stream correct "data" event #7: 0.8126949377061448[K
  ok [1m[32m1395[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m1396[0m stream correct "data" event #8: 0.4281341440193236[K
  ok [1m[32m1397[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m1398[0m stream correct "data" event #9: 0.6318264138713758[K
  ok [1m[32m1399[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m1400[0m stream correct "data" event #10: 0.02340743404638035[K
  ok [1m[32m1401[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m1402[0m stream correct "data" event #11: 0.6459606891087015[K
  ok [1m[32m1403[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m1404[0m stream correct "data" event #12: 0.11501499909063684[K
  ok [1m[32m1405[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m1406[0m stream correct "data" event #13: 0.4075389879145972[K
  ok [1m[32m1407[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m1408[0m stream correct "data" event #14: 0.6182397507967146[K
  ok [1m[32m1409[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m1410[0m stream correct "data" event #15: 0.6024247911563343[K
  ok [1m[32m1411[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m1412[0m stream correct "data" event #16: 0.3920133561596928[K
  ok [1m[32m1413[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m1414[0m stream correct "data" event #17: 0.5035619132894438[K
  ok [1m[32m1415[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m1416[0m stream correct "data" event #18: 0.7135006571554277[K
  ok [1m[32m1417[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m1418[0m stream correct "data" event #19: 0.8481684846030826[K
  ok [1m[32m1419[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m1420[0m stream correct "data" event #20: 0.9433179641984402[K
  ok [1m[32m1421[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m1422[0m stream correct "data" event #21: 0.49451939331651107[K
  ok [1m[32m1423[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m1424[0m stream correct "data" event #22: 0.7894641486919833[K
  ok [1m[32m1425[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m1426[0m stream correct "data" event #23: 0.31360756083870167[K
  ok [1m[32m1427[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m1428[0m stream correct "data" event #24: 0.6705020898744756[K
  ok [1m[32m1429[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m1430[0m stream correct "data" event #25: 0.602183387509958[K
  ok [1m[32m1431[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m1432[0m stream correct "data" event #26: 0.49270979299868745[K
  ok [1m[32m1433[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m1434[0m stream correct "data" event #27: 0.6232894042134141[K
  ok [1m[32m1435[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m1436[0m stream correct "data" event #28: 0.9745977040485247[K
  ok [1m[32m1437[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m1438[0m stream correct "data" event #29: 0.4765416528358182[K
  ok [1m[32m1439[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m1440[0m stream correct "data" event #30: 0.14843400078481106[K
  ok [1m[32m1441[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m1442[0m stream correct "data" event #31: 0.26526619489815495[K
  ok [1m[32m1443[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m1444[0m stream correct "data" event #32: 0.48564053805144414[K
  ok [1m[32m1445[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m1446[0m stream correct "data" event #33: 0.4568052642491931[K
  ok [1m[32m1447[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m1448[0m stream correct "data" event #34: 0.1733207874877154[K
  ok [1m[32m1449[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m1450[0m stream correct "data" event #35: 0.5750772708990941[K
  ok [1m[32m1451[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m1452[0m stream correct "data" event #36: 0.33520304162994985[K
  ok [1m[32m1453[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m1454[0m stream correct "data" event #37: 0.34227103805629633[K
  ok [1m[32m1455[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m1456[0m stream correct "data" event #38: 0.3593855343360661[K
  ok [1m[32m1457[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m1458[0m stream correct "data" event #39: 0.29297545581328244[K
  ok [1m[32m1459[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m1460[0m stream correct "data" event #40: 0.9658512921356277[K
  ok [1m[32m1461[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m1462[0m stream correct "data" event #41: 0.5826323225142931[K
  ok [1m[32m1463[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m1464[0m stream correct "data" event #42: 0.3766001472496079[K
  ok [1m[32m1465[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m1466[0m stream correct "data" event #43: 0.5151920871219318[K
  ok [1m[32m1467[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m1468[0m stream correct "data" event #44: 0.6805088882080921[K
  ok [1m[32m1469[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m1470[0m stream correct "data" event #45: 0.1469582357848127[K
  ok [1m[32m1471[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m1472[0m stream correct "data" event #46: 0.628991862146016[K
  ok [1m[32m1473[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m1474[0m stream correct "data" event #47: 0.6220934520739836[K
  ok [1m[32m1475[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m1476[0m stream correct "data" event #48: 0.6373363274260437[K
  ok [1m[32m1477[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m1478[0m stream correct "data" event #49: 0.15842450638479888[K
  ok [1m[32m1479[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m1480[0m stream correct "data" event #50: 0.20282002924566966[K
  ok [1m[32m1481[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m1482[0m stream correct "data" event #51: 0.5154367203670476[K
  ok [1m[32m1483[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m1484[0m stream correct "data" event #52: 0.9592974509786734[K
  ok [1m[32m1485[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m1486[0m stream correct "data" event #53: 0.40553236832771633[K
  ok [1m[32m1487[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m1488[0m stream correct "data" event #54: 0.5714315176253675[K
  ok [1m[32m1489[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m1490[0m stream correct "data" event #55: 0.07677470438344614[K
  ok [1m[32m1491[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m1492[0m stream correct "data" event #56: 0.6883448594486008[K
  ok [1m[32m1493[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m1494[0m stream correct "data" event #57: 0.2395503068176299[K
  ok [1m[32m1495[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m1496[0m stream correct "data" event #58: 0.7071267628970301[K
  ok [1m[32m1497[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m1498[0m stream correct "data" event #59: 0.16551800167199837[K
  ok [1m[32m1499[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m1500[0m stream correct "data" event #60: 0.4487777863295668[K
  ok [1m[32m1501[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m1502[0m stream correct "data" event #61: 0.7111165443055611[K
  ok [1m[32m1503[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m1504[0m stream correct "data" event #62: 0.5524975404127501[K
  ok [1m[32m1505[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m1506[0m stream correct "data" event #63: 0.006102589403188752[K
  ok [1m[32m1507[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m1508[0m stream correct "data" event #64: 0.8456193602274751[K
  ok [1m[32m1509[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m1510[0m stream correct "data" event #65: 0.748426961912563[K
  ok [1m[32m1511[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m1512[0m stream correct "data" event #66: 0.13939777217054816[K
  ok [1m[32m1513[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m1514[0m stream correct "data" event #67: 0.5567120400730405[K
  ok [1m[32m1515[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m1516[0m stream correct "data" event #68: 0.6228432889797835[K
  ok [1m[32m1517[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m1518[0m stream correct "data" event #69: 0.49351339769948943[K
  ok [1m[32m1519[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m1520[0m stream correct "data" event #70: 0.7093327436668284[K
  ok [1m[32m1521[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m1522[0m stream correct "data" event #71: 0.038559700985786316[K
  ok [1m[32m1523[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m1524[0m stream correct "data" event #72: 0.6127061995572847[K
  ok [1m[32m1525[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m1526[0m stream correct "data" event #73: 0.7735529332467632[K
  ok [1m[32m1527[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m1528[0m stream correct "data" event #74: 0.7524662737201633[K
  ok [1m[32m1529[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m1530[0m stream correct "data" event #75: 0.018813134387094532[K
  ok [1m[32m1531[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m1532[0m stream correct "data" event #76: 0.29371840471880306[K
  ok [1m[32m1533[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m1534[0m stream correct "data" event #77: 0.3456266036283382[K
  ok [1m[32m1535[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m1536[0m stream correct "data" event #78: 0.7223236167954483[K
  ok [1m[32m1537[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m1538[0m stream correct "data" event #79: 0.10060238527089571[K
  ok [1m[32m1539[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m1540[0m stream correct "data" event #80: 0.8626301875304192[K
  ok [1m[32m1541[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m1542[0m stream correct "data" event #81: 0.8094469356070677[K
  ok [1m[32m1543[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m1544[0m stream correct "data" event #82: 0.21659340176868636[K
  ok [1m[32m1545[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m1546[0m stream correct "data" event #83: 0.26358267443557537[K
  ok [1m[32m1547[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m1548[0m stream correct "data" event #84: 0.8663901881137155[K
  ok [1m[32m1549[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m1550[0m stream correct "data" event #85: 0.23668868939869037[K
  ok [1m[32m1551[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m1552[0m stream correct "data" event #86: 0.305740914819409[K
  ok [1m[32m1553[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m1554[0m stream correct "data" event #87: 0.6913448284202053[K
  ok [1m[32m1555[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m1556[0m stream correct "data" event #88: 0.09128319187012202[K
  ok [1m[32m1557[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m1558[0m stream correct "data" event #89: 0.38556906816910463[K
  ok [1m[32m1559[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m1560[0m stream correct "data" event #90: 0.9148513823047006[K
  ok [1m[32m1561[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m1562[0m stream correct "data" event #91: 0.5439332740941636[K
  ok [1m[32m1563[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m1564[0m stream correct "data" event #92: 0.8968721053495057[K
  ok [1m[32m1565[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m1566[0m stream correct "data" event #93: 0.38402784472019724[K
  ok [1m[32m1567[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m1568[0m stream correct "data" event #94: 0.5243197688530392[K
  ok [1m[32m1569[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m1570[0m stream correct "data" event #95: 0.6038463706566615[K
  ok [1m[32m1571[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m1572[0m stream correct "data" event #96: 0.2907840417986032[K
  ok [1m[32m1573[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m1574[0m stream correct "data" event #97: 0.5002560992540919[K
  ok [1m[32m1575[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m1576[0m stream correct "data" event #98: 0.1024988667870923[K
  ok [1m[32m1577[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m1578[0m stream correct "data" event #99: 0.46977304035468004[K
  ok [1m[32m1579[0m no test error[K
  ok [1m[32m1580[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: valueStream()[0m[1B[1G
# key and value streams: readStream({keys:false,values:true})[K

  ok [1m[32m1581[0m undefined[K
  ok [1m[32m1582[0m stream emitted single "end" event[K
  ok [1m[32m1583[0m stream emitted correct number of "data" events[K
  ok [1m[32m1584[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m1585[0m stream correct "data" event #0: 0.37743604317393853[K
  ok [1m[32m1586[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m1587[0m stream correct "data" event #1: 0.018110884583247833[K
  ok [1m[32m1588[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m1589[0m stream correct "data" event #2: 0.8924618364637746[K
  ok [1m[32m1590[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m1591[0m stream correct "data" event #3: 0.5728107031777905[K
  ok [1m[32m1592[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m1593[0m stream correct "data" event #4: 0.37217535526179524[K
  ok [1m[32m1594[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m1595[0m stream correct "data" event #5: 0.16421078514494236[K
  ok [1m[32m1596[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m1597[0m stream correct "data" event #6: 0.10216324748797878[K
  ok [1m[32m1598[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m1599[0m stream correct "data" event #7: 0.48278621385010156[K
  ok [1m[32m1600[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m1601[0m stream correct "data" event #8: 0.9496832576969585[K
  ok [1m[32m1602[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m1603[0m stream correct "data" event #9: 0.13040586277852095[K
  ok [1m[32m1604[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m1605[0m stream correct "data" event #10: 0.504988351477933[K
  ok [1m[32m1606[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m1607[0m stream correct "data" event #11: 0.6544412410249534[K
  ok [1m[32m1608[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m1609[0m stream correct "data" event #12: 0.26530306280876315[K
  ok [1m[32m1610[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m1611[0m stream correct "data" event #13: 0.043947569625339744[K
  ok [1m[32m1612[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m1613[0m stream correct "data" event #14: 0.7921312462494416[K
  ok [1m[32m1614[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m1615[0m stream correct "data" event #15: 0.1673134469244102[K
  ok [1m[32m1616[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m1617[0m stream correct "data" event #16: 0.34332057461094023[K
  ok [1m[32m1618[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m1619[0m stream correct "data" event #17: 0.03459840543945947[K
  ok [1m[32m1620[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m1621[0m stream correct "data" event #18: 0.6414346671909634[K
  ok [1m[32m1622[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m1623[0m stream correct "data" event #19: 0.06820747144253558[K
  ok [1m[32m1624[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m1625[0m stream correct "data" event #20: 0.9060857681149808[K
  ok [1m[32m1626[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m1627[0m stream correct "data" event #21: 0.9591599716965122[K
  ok [1m[32m1628[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m1629[0m stream correct "data" event #22: 0.8628084429650771[K
  ok [1m[32m1630[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m1631[0m stream correct "data" event #23: 0.9752012271426105[K
  ok [1m[32m1632[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m1633[0m stream correct "data" event #24: 0.5384331553088513[K
  ok [1m[32m1634[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m1635[0m stream correct "data" event #25: 0.9297269128485783[K
  ok [1m[32m1636[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m1637[0m stream correct "data" event #26: 0.4520552253480019[K
  ok [1m[32m1638[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m1639[0m stream correct "data" event #27: 0.7388315352712849[K
  ok [1m[32m1640[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m1641[0m stream correct "data" event #28: 0.2750396174186285[K
  ok [1m[32m1642[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m1643[0m stream correct "data" event #29: 0.37438912904216903[K
  ok [1m[32m1644[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m1645[0m stream correct "data" event #30: 0.9211783345914699[K
  ok [1m[32m1646[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m1647[0m stream correct "data" event #31: 0.3170912140796627[K
  ok [1m[32m1648[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m1649[0m stream correct "data" event #32: 0.529341607114526[K
  ok [1m[32m1650[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m1651[0m stream correct "data" event #33: 0.6777012924789161[K
  ok [1m[32m1652[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m1653[0m stream correct "data" event #34: 0.14184716354796256[K
  ok [1m[32m1654[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m1655[0m stream correct "data" event #35: 0.198084450943663[K
  ok [1m[32m1656[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m1657[0m stream correct "data" event #36: 0.8445436725482549[K
  ok [1m[32m1658[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m1659[0m stream correct "data" event #37: 0.5082614908982608[K
  ok [1m[32m1660[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m1661[0m stream correct "data" event #38: 0.5625531422742391[K
  ok [1m[32m1662[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m1663[0m stream correct "data" event #39: 0.4538403033238767[K
  ok [1m[32m1664[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m1665[0m stream correct "data" event #40: 0.6217178679163426[K
  ok [1m[32m1666[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m1667[0m stream correct "data" event #41: 0.10854684599287956[K
  ok [1m[32m1668[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m1669[0m stream correct "data" event #42: 0.47762250837043463[K
  ok [1m[32m1670[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m1671[0m stream correct "data" event #43: 0.5418702267143023[K
  ok [1m[32m1672[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m1673[0m stream correct "data" event #44: 0.9390414955997275[K
  ok [1m[32m1674[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m1675[0m stream correct "data" event #45: 0.3189857208421274[K
  ok [1m[32m1676[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m1677[0m stream correct "data" event #46: 0.8399379806550533[K
  ok [1m[32m1678[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m1679[0m stream correct "data" event #47: 0.784966505301691[K
  ok [1m[32m1680[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m1681[0m stream correct "data" event #48: 0.45707957957092593[K
  ok [1m[32m1682[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m1683[0m stream correct "data" event #49: 0.8695679173922912[K
  ok [1m[32m1684[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m1685[0m stream correct "data" event #50: 0.7056956436554729[K
  ok [1m[32m1686[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m1687[0m stream correct "data" event #51: 0.1507274269285923[K
  ok [1m[32m1688[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m1689[0m stream correct "data" event #52: 0.06796771443707916[K
  ok [1m[32m1690[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m1691[0m stream correct "data" event #53: 0.8390602922244996[K
  ok [1m[32m1692[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m1693[0m stream correct "data" event #54: 0.143222914544487[K
  ok [1m[32m1694[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m1695[0m stream correct "data" event #55: 0.07531283848434334[K
  ok [1m[32m1696[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m1697[0m stream correct "data" event #56: 0.19948375457300904[K
  ok [1m[32m1698[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m1699[0m stream correct "data" event #57: 0.2152589668072249[K
  ok [1m[32m1700[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m1701[0m stream correct "data" event #58: 0.6154477119117778[K
  ok [1m[32m1702[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m1703[0m stream correct "data" event #59: 0.4727765114830178[K
  ok [1m[32m1704[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m1705[0m stream correct "data" event #60: 0.0912790241789534[K
  ok [1m[32m1706[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m1707[0m stream correct "data" event #61: 0.42941832715500117[K
  ok [1m[32m1708[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m1709[0m stream correct "data" event #62: 0.7244291025058454[K
  ok [1m[32m1710[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m1711[0m stream correct "data" event #63: 0.5570240439905754[K
  ok [1m[32m1712[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m1713[0m stream correct "data" event #64: 0.6347151499096937[K
  ok [1m[32m1714[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m1715[0m stream correct "data" event #65: 0.24532295119021708[K
  ok [1m[32m1716[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m1717[0m stream correct "data" event #66: 0.8932135664365977[K
  ok [1m[32m1718[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m1719[0m stream correct "data" event #67: 0.7354265926994619[K
  ok [1m[32m1720[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m1721[0m stream correct "data" event #68: 0.13059800561265833[K
  ok [1m[32m1722[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m1723[0m stream correct "data" event #69: 0.648157742237919[K
  ok [1m[32m1724[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m1725[0m stream correct "data" event #70: 0.22283682112336267[K
  ok [1m[32m1726[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m1727[0m stream correct "data" event #71: 0.1615584742936853[K
  ok [1m[32m1728[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m1729[0m stream correct "data" event #72: 0.8633651497462413[K
  ok [1m[32m1730[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m1731[0m stream correct "data" event #73: 0.6215690873828394[K
  ok [1m[32m1732[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m1733[0m stream correct "data" event #74: 0.053478516483188576[K
  ok [1m[32m1734[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m1735[0m stream correct "data" event #75: 0.6072701261612468[K
  ok [1m[32m1736[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m1737[0m stream correct "data" event #76: 0.2794101020588926[K
  ok [1m[32m1738[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m1739[0m stream correct "data" event #77: 0.1990375435072167[K
  ok [1m[32m1740[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m1741[0m stream correct "data" event #78: 0.6595879633269948[K
  ok [1m[32m1742[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m1743[0m stream correct "data" event #79: 0.8203548529060483[K
  ok [1m[32m1744[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m1745[0m stream correct "data" event #80: 0.02170020310972043[K
  ok [1m[32m1746[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m1747[0m stream correct "data" event #81: 0.8333232416046432[K
  ok [1m[32m1748[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m1749[0m stream correct "data" event #82: 0.7131370782349677[K
  ok [1m[32m1750[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m1751[0m stream correct "data" event #83: 0.7111490768318636[K
  ok [1m[32m1752[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m1753[0m stream correct "data" event #84: 0.7123967068079822[K
  ok [1m[32m1754[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m1755[0m stream correct "data" event #85: 0.25955227116441115[K
  ok [1m[32m1756[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m1757[0m stream correct "data" event #86: 0.6673130239229956[K
  ok [1m[32m1758[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m1759[0m stream correct "data" event #87: 0.2446198268882107[K
  ok [1m[32m1760[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m1761[0m stream correct "data" event #88: 0.2897111020877965[K
  ok [1m[32m1762[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m1763[0m stream correct "data" event #89: 0.9226475472232594[K
  ok [1m[32m1764[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m1765[0m stream correct "data" event #90: 0.7508906601618537[K
  ok [1m[32m1766[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m1767[0m stream correct "data" event #91: 0.05463029535287611[K
  ok [1m[32m1768[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m1769[0m stream correct "data" event #92: 0.4920911417572642[K
  ok [1m[32m1770[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m1771[0m stream correct "data" event #93: 0.6084988022981073[K
  ok [1m[32m1772[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m1773[0m stream correct "data" event #94: 0.23025785237656882[K
  ok [1m[32m1774[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m1775[0m stream correct "data" event #95: 0.19692916579718545[K
  ok [1m[32m1776[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m1777[0m stream correct "data" event #96: 0.4161708811624727[K
  ok [1m[32m1778[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m1779[0m stream correct "data" event #97: 0.543449381360092[K
  ok [1m[32m1780[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m1781[0m stream correct "data" event #98: 0.893170919389461[K
  ok [1m[32m1782[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m1783[0m stream correct "data" event #99: 0.30796754124423353[K
  ok [1m[32m1784[0m no test error[K
  ok [1m[32m1785[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: readStream({keys:false,values:true})[0m[1B[1G
# maybeError() should be called async: put()[K

  ok [1m[32m1786[0m db is closed[K
  ok [1m[32m1787[0m .put cb called asynchronously[K
  ok [1m[32m1788[0m no test error[K
  ok [1m[32m1789[0m should be truthy[K
  ok [1m[32m1790[0m should be strictly equal[K
  ok [1m[32m1791[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: put()[0m[1B[1G
# maybeError() should be called async: get()[K

  ok [1m[32m1792[0m undefined[K
  ok [1m[32m1793[0m db is closed[K
  ok [1m[32m1794[0m .get cb called asynchronously[K
  ok [1m[32m1795[0m no test error[K
  ok [1m[32m1796[0m should be truthy[K
  ok [1m[32m1797[0m should be strictly equal[K
  ok [1m[32m1798[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: get()[0m[1B[1G
# maybeError() should be called async: del()[K

  ok [1m[32m1799[0m undefined[K
  ok [1m[32m1800[0m db is closed[K
  ok [1m[32m1801[0m .del cb called asynchronously[K
  ok [1m[32m1802[0m no test error[K
  ok [1m[32m1803[0m should be truthy[K
  ok [1m[32m1804[0m should be strictly equal[K
  ok [1m[32m1805[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: del()[0m[1B[1G
# maybeError() should be called async: batch()[K

  ok [1m[32m1806[0m db is closed[K
  ok [1m[32m1807[0m .batch cb called asynchronously[K
  ok [1m[32m1808[0m no test error[K
  ok [1m[32m1809[0m should be truthy[K
  ok [1m[32m1810[0m should be strictly equal[K
  ok [1m[32m1811[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: batch()[0m[1B[1G
# maybeError() should be called async: getMany()[K

  ok [1m[32m1812[0m db is closed[K
  ok [1m[32m1813[0m .getMany cb called asynchronously[K
  ok [1m[32m1814[0m should be strictly equal[K
  ok [1m[32m1815[0m no test error[K
  ok [1m[32m1816[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: getMany()[0m[1B[1G
# without encoding-down: serializes key[K

  ok [1m[32m1817[0m undefined[K
  ok [1m[32m1818[0m null[K
  ok [1m[32m1819[0m should be strictly equal[K
[1A[1G[1m[32m✓ without encoding-down: serializes key[0m[1B[1G
# without encoding-down: serializes value[K

  ok [1m[32m1820[0m undefined[K
  ok [1m[32m1821[0m null[K
  ok [1m[32m1822[0m should be strictly equal[K
[1A[1G[1m[32m✓ without encoding-down: serializes value[0m[1B[1G
# null & undefined keys & values: cause error[K

  ok [1m[32m1823[0m should be strictly equal[K
  ok [1m[32m1824[0m should be strictly equal[K
  ok [1m[32m1825[0m should be strictly equal[K
  ok [1m[32m1826[0m should be strictly equal[K
  ok [1m[32m1827[0m should be strictly equal[K
  ok [1m[32m1828[0m should be strictly equal[K
  ok [1m[32m1829[0m should be strictly equal[K
  ok [1m[32m1830[0m should be strictly equal[K
  ok [1m[32m1831[0m should be strictly equal[K
  ok [1m[32m1832[0m should be strictly equal[K
  ok [1m[32m1833[0m should be strictly equal[K
  ok [1m[32m1834[0m should be strictly equal[K
  ok [1m[32m1835[0m no test error[K
  ok [1m[32m1836[0m no close error[K
[1A[1G[1m[32m✓ null & undefined keys & values: cause error[0m[1B[1G
# deferred open() is patch-safe: put() on new database[K

  ok [1m[32m1837[0m should be strictly equal[K
  ok [1m[32m1838[0m should be strictly equal[K
  ok [1m[32m1839[0m should be strictly equal[K
  ok [1m[32m1840[0m should be strictly equal[K
  ok [1m[32m1841[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: put() on new database[0m[1B[1G
# deferred open() is patch-safe: del() on new database[K

  ok [1m[32m1842[0m should be strictly equal[K
  ok [1m[32m1843[0m should be strictly equal[K
  ok [1m[32m1844[0m should be strictly equal[K
  ok [1m[32m1845[0m should be strictly equal[K
  ok [1m[32m1846[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: del() on new database[0m[1B[1G
# deferred open() is patch-safe: batch() on new database[K

  ok [1m[32m1847[0m should be strictly equal[K
  ok [1m[32m1848[0m should be strictly equal[K
  ok [1m[32m1849[0m should be strictly equal[K
  ok [1m[32m1850[0m should be strictly equal[K
  ok [1m[32m1851[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: batch() on new database[0m[1B[1G
# ReadStream: simple ReadStream[K

  ok [1m[32m1852[0m undefined[K
  ok [1m[32m1853[0m ReadStream emitted single "end" event[K
  ok [1m[32m1854[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m1855[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m1856[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m1857[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m1858[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m1859[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m1860[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m1861[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m1862[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m1863[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m1864[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m1865[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m1866[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m1867[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m1868[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m1869[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m1870[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m1871[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m1872[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m1873[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m1874[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m1875[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m1876[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m1877[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m1878[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m1879[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m1880[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m1881[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m1882[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m1883[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m1884[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m1885[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m1886[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m1887[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m1888[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m1889[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m1890[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m1891[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m1892[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m1893[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m1894[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m1895[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m1896[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m1897[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m1898[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m1899[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m1900[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m1901[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m1902[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m1903[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m1904[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m1905[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m1906[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m1907[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m1908[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m1909[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m1910[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m1911[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m1912[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m1913[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m1914[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m1915[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m1916[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m1917[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m1918[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m1919[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m1920[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m1921[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m1922[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m1923[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m1924[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m1925[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m1926[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m1927[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m1928[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m1929[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m1930[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m1931[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m1932[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m1933[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m1934[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m1935[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m1936[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m1937[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m1938[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m1939[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m1940[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m1941[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m1942[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m1943[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m1944[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m1945[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m1946[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m1947[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m1948[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m1949[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m1950[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m1951[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m1952[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m1953[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m1954[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m1955[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m1956[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m1957[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m1958[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m1959[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m1960[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m1961[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m1962[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m1963[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m1964[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m1965[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m1966[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m1967[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m1968[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m1969[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m1970[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m1971[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m1972[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m1973[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m1974[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m1975[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m1976[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m1977[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m1978[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m1979[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m1980[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m1981[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m1982[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m1983[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m1984[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m1985[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m1986[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m1987[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m1988[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m1989[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m1990[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m1991[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m1992[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m1993[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m1994[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m1995[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m1996[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m1997[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m1998[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m1999[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m2000[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m2001[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m2002[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m2003[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m2004[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m2005[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m2006[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m2007[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m2008[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m2009[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m2010[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m2011[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m2012[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m2013[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m2014[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m2015[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m2016[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m2017[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m2018[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m2019[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m2020[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m2021[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m2022[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m2023[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m2024[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m2025[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m2026[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m2027[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m2028[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m2029[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m2030[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m2031[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m2032[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m2033[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m2034[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m2035[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m2036[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m2037[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m2038[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m2039[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m2040[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m2041[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m2042[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m2043[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m2044[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m2045[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m2046[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m2047[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m2048[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m2049[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m2050[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m2051[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m2052[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m2053[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m2054[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m2055[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m2056[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m2057[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m2058[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m2059[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m2060[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m2061[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m2062[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m2063[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m2064[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m2065[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m2066[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m2067[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m2068[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m2069[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m2070[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m2071[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m2072[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m2073[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m2074[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m2075[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m2076[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m2077[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m2078[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m2079[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m2080[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m2081[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m2082[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m2083[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m2084[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m2085[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m2086[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m2087[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m2088[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m2089[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m2090[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m2091[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m2092[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m2093[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m2094[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m2095[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m2096[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m2097[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m2098[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m2099[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m2100[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m2101[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m2102[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m2103[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m2104[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m2105[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m2106[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m2107[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m2108[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m2109[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m2110[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m2111[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m2112[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m2113[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m2114[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m2115[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m2116[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m2117[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m2118[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m2119[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m2120[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m2121[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m2122[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m2123[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m2124[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m2125[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m2126[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m2127[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m2128[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m2129[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m2130[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m2131[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m2132[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m2133[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m2134[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m2135[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m2136[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m2137[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m2138[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m2139[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m2140[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m2141[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m2142[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m2143[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m2144[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m2145[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m2146[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m2147[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m2148[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m2149[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m2150[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m2151[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m2152[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m2153[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m2154[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m2155[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m2156[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m2157[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m2158[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m2159[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m2160[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m2161[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m2162[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m2163[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m2164[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m2165[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m2166[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m2167[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m2168[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m2169[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m2170[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m2171[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m2172[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m2173[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m2174[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m2175[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m2176[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m2177[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m2178[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m2179[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m2180[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m2181[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m2182[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m2183[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m2184[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m2185[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m2186[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m2187[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m2188[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m2189[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m2190[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m2191[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m2192[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m2193[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m2194[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m2195[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m2196[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m2197[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m2198[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m2199[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m2200[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m2201[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m2202[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m2203[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m2204[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m2205[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m2206[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m2207[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m2208[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m2209[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m2210[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m2211[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m2212[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m2213[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m2214[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m2215[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m2216[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m2217[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m2218[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m2219[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m2220[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m2221[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m2222[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m2223[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m2224[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m2225[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m2226[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m2227[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m2228[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m2229[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m2230[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m2231[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m2232[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m2233[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m2234[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m2235[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m2236[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m2237[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m2238[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m2239[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m2240[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m2241[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m2242[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m2243[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m2244[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m2245[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m2246[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m2247[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m2248[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m2249[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m2250[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m2251[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m2252[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m2253[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m2254[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m2255[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m2256[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m2257[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m2258[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m2259[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m2260[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m2261[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m2262[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m2263[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m2264[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m2265[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m2266[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m2267[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m2268[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m2269[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m2270[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m2271[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m2272[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m2273[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m2274[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m2275[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m2276[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m2277[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m2278[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m2279[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m2280[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m2281[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m2282[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m2283[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m2284[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m2285[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m2286[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m2287[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m2288[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m2289[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m2290[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m2291[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m2292[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m2293[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m2294[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m2295[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m2296[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m2297[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m2298[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m2299[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m2300[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m2301[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m2302[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m2303[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m2304[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m2305[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m2306[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m2307[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m2308[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m2309[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m2310[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m2311[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m2312[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m2313[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m2314[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m2315[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m2316[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m2317[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m2318[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m2319[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m2320[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m2321[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m2322[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m2323[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m2324[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m2325[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m2326[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m2327[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m2328[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m2329[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m2330[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m2331[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m2332[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m2333[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m2334[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m2335[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m2336[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m2337[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m2338[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m2339[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m2340[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m2341[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m2342[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m2343[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m2344[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m2345[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m2346[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m2347[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m2348[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m2349[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m2350[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m2351[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m2352[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m2353[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m2354[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m2355[0m no test error[K
  ok [1m[32m2356[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: simple ReadStream[0m[1B[1G
# ReadStream: pausing[K

  ok [1m[32m2357[0m undefined[K
  ok [1m[32m2358[0m stream should still be paused[K
  ok [1m[32m2359[0m onData was used in test[K
  ok [1m[32m2360[0m pauseVerify was used in test[K
  ok [1m[32m2361[0m ReadStream emitted single "end" event[K
  ok [1m[32m2362[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m2363[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m2364[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m2365[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m2366[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m2367[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m2368[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m2369[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m2370[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m2371[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m2372[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m2373[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m2374[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m2375[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m2376[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m2377[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m2378[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m2379[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m2380[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m2381[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m2382[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m2383[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m2384[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m2385[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m2386[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m2387[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m2388[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m2389[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m2390[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m2391[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m2392[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m2393[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m2394[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m2395[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m2396[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m2397[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m2398[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m2399[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m2400[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m2401[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m2402[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m2403[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m2404[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m2405[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m2406[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m2407[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m2408[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m2409[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m2410[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m2411[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m2412[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m2413[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m2414[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m2415[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m2416[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m2417[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m2418[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m2419[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m2420[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m2421[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m2422[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m2423[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m2424[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m2425[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m2426[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m2427[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m2428[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m2429[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m2430[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m2431[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m2432[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m2433[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m2434[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m2435[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m2436[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m2437[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m2438[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m2439[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m2440[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m2441[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m2442[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m2443[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m2444[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m2445[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m2446[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m2447[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m2448[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m2449[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m2450[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m2451[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m2452[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m2453[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m2454[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m2455[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m2456[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m2457[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m2458[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m2459[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m2460[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m2461[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m2462[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m2463[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m2464[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m2465[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m2466[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m2467[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m2468[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m2469[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m2470[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m2471[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m2472[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m2473[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m2474[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m2475[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m2476[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m2477[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m2478[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m2479[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m2480[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m2481[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m2482[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m2483[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m2484[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m2485[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m2486[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m2487[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m2488[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m2489[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m2490[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m2491[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m2492[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m2493[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m2494[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m2495[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m2496[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m2497[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m2498[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m2499[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m2500[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m2501[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m2502[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m2503[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m2504[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m2505[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m2506[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m2507[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m2508[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m2509[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m2510[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m2511[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m2512[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m2513[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m2514[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m2515[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m2516[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m2517[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m2518[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m2519[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m2520[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m2521[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m2522[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m2523[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m2524[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m2525[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m2526[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m2527[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m2528[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m2529[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m2530[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m2531[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m2532[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m2533[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m2534[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m2535[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m2536[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m2537[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m2538[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m2539[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m2540[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m2541[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m2542[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m2543[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m2544[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m2545[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m2546[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m2547[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m2548[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m2549[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m2550[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m2551[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m2552[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m2553[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m2554[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m2555[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m2556[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m2557[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m2558[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m2559[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m2560[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m2561[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m2562[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m2563[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m2564[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m2565[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m2566[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m2567[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m2568[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m2569[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m2570[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m2571[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m2572[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m2573[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m2574[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m2575[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m2576[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m2577[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m2578[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m2579[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m2580[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m2581[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m2582[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m2583[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m2584[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m2585[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m2586[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m2587[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m2588[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m2589[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m2590[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m2591[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m2592[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m2593[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m2594[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m2595[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m2596[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m2597[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m2598[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m2599[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m2600[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m2601[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m2602[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m2603[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m2604[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m2605[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m2606[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m2607[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m2608[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m2609[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m2610[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m2611[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m2612[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m2613[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m2614[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m2615[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m2616[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m2617[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m2618[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m2619[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m2620[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m2621[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m2622[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m2623[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m2624[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m2625[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m2626[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m2627[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m2628[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m2629[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m2630[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m2631[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m2632[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m2633[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m2634[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m2635[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m2636[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m2637[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m2638[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m2639[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m2640[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m2641[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m2642[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m2643[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m2644[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m2645[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m2646[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m2647[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m2648[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m2649[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m2650[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m2651[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m2652[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m2653[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m2654[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m2655[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m2656[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m2657[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m2658[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m2659[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m2660[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m2661[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m2662[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m2663[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m2664[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m2665[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m2666[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m2667[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m2668[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m2669[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m2670[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m2671[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m2672[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m2673[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m2674[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m2675[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m2676[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m2677[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m2678[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m2679[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m2680[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m2681[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m2682[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m2683[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m2684[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m2685[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m2686[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m2687[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m2688[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m2689[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m2690[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m2691[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m2692[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m2693[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m2694[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m2695[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m2696[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m2697[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m2698[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m2699[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m2700[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m2701[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m2702[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m2703[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m2704[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m2705[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m2706[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m2707[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m2708[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m2709[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m2710[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m2711[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m2712[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m2713[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m2714[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m2715[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m2716[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m2717[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m2718[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m2719[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m2720[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m2721[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m2722[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m2723[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m2724[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m2725[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m2726[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m2727[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m2728[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m2729[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m2730[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m2731[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m2732[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m2733[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m2734[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m2735[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m2736[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m2737[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m2738[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m2739[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m2740[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m2741[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m2742[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m2743[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m2744[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m2745[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m2746[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m2747[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m2748[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m2749[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m2750[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m2751[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m2752[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m2753[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m2754[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m2755[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m2756[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m2757[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m2758[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m2759[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m2760[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m2761[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m2762[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m2763[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m2764[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m2765[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m2766[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m2767[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m2768[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m2769[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m2770[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m2771[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m2772[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m2773[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m2774[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m2775[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m2776[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m2777[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m2778[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m2779[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m2780[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m2781[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m2782[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m2783[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m2784[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m2785[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m2786[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m2787[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m2788[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m2789[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m2790[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m2791[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m2792[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m2793[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m2794[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m2795[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m2796[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m2797[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m2798[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m2799[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m2800[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m2801[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m2802[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m2803[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m2804[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m2805[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m2806[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m2807[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m2808[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m2809[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m2810[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m2811[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m2812[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m2813[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m2814[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m2815[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m2816[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m2817[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m2818[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m2819[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m2820[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m2821[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m2822[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m2823[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m2824[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m2825[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m2826[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m2827[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m2828[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m2829[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m2830[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m2831[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m2832[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m2833[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m2834[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m2835[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m2836[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m2837[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m2838[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m2839[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m2840[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m2841[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m2842[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m2843[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m2844[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m2845[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m2846[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m2847[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m2848[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m2849[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m2850[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m2851[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m2852[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m2853[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m2854[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m2855[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m2856[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m2857[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m2858[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m2859[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m2860[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m2861[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m2862[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m2863[0m no test error[K
  ok [1m[32m2864[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: pausing[0m[1B[1G
# ReadStream: destroy() immediately[K

  ok [1m[32m2865[0m undefined[K
  ok [1m[32m2866[0m "data" event was not fired[K
  ok [1m[32m2867[0m "end" event was not fired[K
  ok [1m[32m2868[0m no test error[K
  ok [1m[32m2869[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() immediately[0m[1B[1G
# ReadStream: destroy() after close[K

  ok [1m[32m2870[0m undefined[K
  ok [1m[32m2871[0m no test error[K
  ok [1m[32m2872[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() after close[0m[1B[1G
# ReadStream: destroy() after closing db[K

  ok [1m[32m2873[0m undefined[K
  ok [1m[32m2874[0m undefined[K
  ok [1m[32m2875[0m no test error[K
  ok [1m[32m2876[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() after closing db[0m[1B[1G
# ReadStream: destroy() twice[K

  ok [1m[32m2877[0m undefined[K
  ok [1m[32m2878[0m no test error[K
  ok [1m[32m2879[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() twice[0m[1B[1G
# ReadStream: destroy() half way through[K

  ok [1m[32m2880[0m undefined[K
  ok [1m[32m2881[0m ReadStream emitted correct number of "data" events (5)[K
  ok [1m[32m2882[0m should be truthy[K
  ok [1m[32m2883[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m2884[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m2885[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m2886[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m2887[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m2888[0m should be truthy[K
  ok [1m[32m2889[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m2890[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m2891[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m2892[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m2893[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m2894[0m should be truthy[K
  ok [1m[32m2895[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m2896[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m2897[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m2898[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m2899[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m2900[0m should be truthy[K
  ok [1m[32m2901[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m2902[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m2903[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m2904[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m2905[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m2906[0m should be truthy[K
  ok [1m[32m2907[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m2908[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m2909[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m2910[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m2911[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m2912[0m no test error[K
  ok [1m[32m2913[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() half way through[0m[1B[1G
# ReadStream: readStream() with "reverse=true"[K

  ok [1m[32m2914[0m undefined[K
  ok [1m[32m2915[0m ReadStream emitted single "end" event[K
  ok [1m[32m2916[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m2917[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m2918[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m2919[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m2920[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m2921[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m2922[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m2923[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m2924[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m2925[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m2926[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m2927[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m2928[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m2929[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m2930[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m2931[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m2932[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m2933[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m2934[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m2935[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m2936[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m2937[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m2938[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m2939[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m2940[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m2941[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m2942[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m2943[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m2944[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m2945[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m2946[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m2947[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m2948[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m2949[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m2950[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m2951[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m2952[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m2953[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m2954[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m2955[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m2956[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m2957[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m2958[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m2959[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m2960[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m2961[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m2962[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m2963[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m2964[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m2965[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m2966[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m2967[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m2968[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m2969[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m2970[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m2971[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m2972[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m2973[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m2974[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m2975[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m2976[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m2977[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m2978[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m2979[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m2980[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m2981[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m2982[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m2983[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m2984[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m2985[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m2986[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m2987[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m2988[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m2989[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m2990[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m2991[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m2992[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m2993[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m2994[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m2995[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m2996[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m2997[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m2998[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m2999[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m3000[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m3001[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m3002[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m3003[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m3004[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m3005[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m3006[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m3007[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m3008[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m3009[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m3010[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m3011[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m3012[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m3013[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m3014[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m3015[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m3016[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m3017[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m3018[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m3019[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m3020[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m3021[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m3022[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m3023[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m3024[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m3025[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m3026[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m3027[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m3028[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m3029[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m3030[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m3031[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m3032[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m3033[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m3034[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m3035[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m3036[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m3037[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m3038[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m3039[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m3040[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m3041[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m3042[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m3043[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m3044[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m3045[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m3046[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m3047[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m3048[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m3049[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m3050[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m3051[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m3052[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m3053[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m3054[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m3055[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m3056[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m3057[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m3058[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m3059[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m3060[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m3061[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m3062[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m3063[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m3064[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m3065[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m3066[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m3067[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m3068[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m3069[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m3070[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m3071[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m3072[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m3073[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m3074[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m3075[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m3076[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m3077[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m3078[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m3079[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m3080[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m3081[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m3082[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m3083[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m3084[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m3085[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m3086[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m3087[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m3088[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m3089[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m3090[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m3091[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m3092[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m3093[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m3094[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m3095[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m3096[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m3097[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m3098[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m3099[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m3100[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m3101[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m3102[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m3103[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m3104[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m3105[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m3106[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m3107[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m3108[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m3109[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m3110[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m3111[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m3112[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m3113[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m3114[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m3115[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m3116[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m3117[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m3118[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m3119[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m3120[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m3121[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m3122[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m3123[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m3124[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m3125[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m3126[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m3127[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m3128[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m3129[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m3130[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m3131[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m3132[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m3133[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m3134[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m3135[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m3136[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m3137[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m3138[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m3139[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m3140[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m3141[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m3142[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m3143[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m3144[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m3145[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m3146[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m3147[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m3148[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m3149[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m3150[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m3151[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m3152[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m3153[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m3154[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m3155[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m3156[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m3157[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m3158[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m3159[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m3160[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m3161[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m3162[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m3163[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m3164[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m3165[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m3166[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m3167[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m3168[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m3169[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m3170[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m3171[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m3172[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m3173[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m3174[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m3175[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m3176[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m3177[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m3178[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m3179[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m3180[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m3181[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m3182[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m3183[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m3184[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m3185[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m3186[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m3187[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m3188[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m3189[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m3190[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m3191[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m3192[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m3193[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m3194[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m3195[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m3196[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m3197[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m3198[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m3199[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m3200[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m3201[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m3202[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m3203[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m3204[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m3205[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m3206[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m3207[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m3208[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m3209[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m3210[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m3211[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m3212[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m3213[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m3214[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m3215[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m3216[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m3217[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m3218[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m3219[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m3220[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m3221[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m3222[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m3223[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m3224[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m3225[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m3226[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m3227[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m3228[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m3229[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m3230[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m3231[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m3232[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m3233[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m3234[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m3235[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m3236[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m3237[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m3238[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m3239[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m3240[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m3241[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m3242[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m3243[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m3244[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m3245[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m3246[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m3247[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m3248[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m3249[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m3250[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m3251[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m3252[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m3253[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m3254[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m3255[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m3256[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m3257[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m3258[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m3259[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m3260[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m3261[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m3262[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m3263[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m3264[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m3265[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m3266[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m3267[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m3268[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m3269[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m3270[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m3271[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m3272[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m3273[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m3274[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m3275[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m3276[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m3277[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m3278[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m3279[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m3280[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m3281[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m3282[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m3283[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m3284[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m3285[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m3286[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m3287[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m3288[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m3289[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m3290[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m3291[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m3292[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m3293[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m3294[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m3295[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m3296[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m3297[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m3298[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m3299[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m3300[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m3301[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m3302[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m3303[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m3304[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m3305[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m3306[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m3307[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m3308[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m3309[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m3310[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m3311[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m3312[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m3313[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m3314[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m3315[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m3316[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m3317[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m3318[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m3319[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m3320[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m3321[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m3322[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m3323[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m3324[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m3325[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m3326[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m3327[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m3328[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m3329[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m3330[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m3331[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m3332[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m3333[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m3334[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m3335[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m3336[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m3337[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m3338[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m3339[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m3340[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m3341[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m3342[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m3343[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m3344[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m3345[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m3346[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m3347[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m3348[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m3349[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m3350[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m3351[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m3352[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m3353[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m3354[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m3355[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m3356[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m3357[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m3358[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m3359[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m3360[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m3361[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m3362[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m3363[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m3364[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m3365[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m3366[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m3367[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m3368[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m3369[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m3370[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m3371[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m3372[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m3373[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m3374[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m3375[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m3376[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m3377[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m3378[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m3379[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m3380[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m3381[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m3382[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m3383[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m3384[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m3385[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m3386[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m3387[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m3388[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m3389[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m3390[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m3391[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m3392[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m3393[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m3394[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m3395[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m3396[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m3397[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m3398[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m3399[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m3400[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m3401[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m3402[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m3403[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m3404[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m3405[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m3406[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m3407[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m3408[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m3409[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m3410[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m3411[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m3412[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m3413[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m3414[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m3415[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m3416[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m3417[0m no test error[K
  ok [1m[32m3418[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte"[K

  ok [1m[32m3419[0m undefined[K
  ok [1m[32m3420[0m ReadStream emitted single "end" event[K
  ok [1m[32m3421[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m3422[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m3423[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m3424[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m3425[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m3426[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m3427[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m3428[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m3429[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m3430[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m3431[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m3432[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m3433[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m3434[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m3435[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m3436[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m3437[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m3438[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m3439[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m3440[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m3441[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m3442[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m3443[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m3444[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m3445[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m3446[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m3447[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m3448[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m3449[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m3450[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m3451[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m3452[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m3453[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m3454[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m3455[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m3456[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m3457[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m3458[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m3459[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m3460[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m3461[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m3462[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m3463[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m3464[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m3465[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m3466[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m3467[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m3468[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m3469[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m3470[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m3471[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m3472[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m3473[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m3474[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m3475[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m3476[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m3477[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m3478[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m3479[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m3480[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m3481[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m3482[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m3483[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m3484[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m3485[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m3486[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m3487[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m3488[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m3489[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m3490[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m3491[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m3492[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m3493[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m3494[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m3495[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m3496[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m3497[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m3498[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m3499[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m3500[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m3501[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m3502[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m3503[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m3504[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m3505[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m3506[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m3507[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m3508[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m3509[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m3510[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m3511[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m3512[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m3513[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m3514[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m3515[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m3516[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m3517[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m3518[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m3519[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m3520[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m3521[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m3522[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m3523[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m3524[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m3525[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m3526[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m3527[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m3528[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m3529[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m3530[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m3531[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m3532[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m3533[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m3534[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m3535[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m3536[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m3537[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m3538[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m3539[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m3540[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m3541[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m3542[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m3543[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m3544[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m3545[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m3546[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m3547[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m3548[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m3549[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m3550[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m3551[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m3552[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m3553[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m3554[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m3555[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m3556[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m3557[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m3558[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m3559[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m3560[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m3561[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m3562[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m3563[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m3564[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m3565[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m3566[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m3567[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m3568[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m3569[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m3570[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m3571[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m3572[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m3573[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m3574[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m3575[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m3576[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m3577[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m3578[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m3579[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m3580[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m3581[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m3582[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m3583[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m3584[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m3585[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m3586[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m3587[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m3588[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m3589[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m3590[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m3591[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m3592[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m3593[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m3594[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m3595[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m3596[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m3597[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m3598[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m3599[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m3600[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m3601[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m3602[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m3603[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m3604[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m3605[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m3606[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m3607[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m3608[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m3609[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m3610[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m3611[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m3612[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m3613[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m3614[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m3615[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m3616[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m3617[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m3618[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m3619[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m3620[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m3621[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m3622[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m3623[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m3624[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m3625[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m3626[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m3627[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m3628[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m3629[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m3630[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m3631[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m3632[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m3633[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m3634[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m3635[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m3636[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m3637[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m3638[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m3639[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m3640[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m3641[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m3642[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m3643[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m3644[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m3645[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m3646[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m3647[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m3648[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m3649[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m3650[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m3651[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m3652[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m3653[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m3654[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m3655[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m3656[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m3657[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m3658[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m3659[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m3660[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m3661[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m3662[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m3663[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m3664[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m3665[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m3666[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m3667[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m3668[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m3669[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m3670[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m3671[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m3672[0m no test error[K
  ok [1m[32m3673[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte"[0m[1B[1G
# ReadStream: readStream() with "lte" and "reverse=true"[K

  ok [1m[32m3674[0m undefined[K
  ok [1m[32m3675[0m ReadStream emitted single "end" event[K
  ok [1m[32m3676[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m3677[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m3678[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m3679[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m3680[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m3681[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m3682[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m3683[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m3684[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m3685[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m3686[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m3687[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m3688[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m3689[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m3690[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m3691[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m3692[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m3693[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m3694[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m3695[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m3696[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m3697[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m3698[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m3699[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m3700[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m3701[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m3702[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m3703[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m3704[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m3705[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m3706[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m3707[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m3708[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m3709[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m3710[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m3711[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m3712[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m3713[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m3714[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m3715[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m3716[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m3717[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m3718[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m3719[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m3720[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m3721[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m3722[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m3723[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m3724[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m3725[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m3726[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m3727[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m3728[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m3729[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m3730[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m3731[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m3732[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m3733[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m3734[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m3735[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m3736[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m3737[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m3738[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m3739[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m3740[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m3741[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m3742[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m3743[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m3744[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m3745[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m3746[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m3747[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m3748[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m3749[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m3750[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m3751[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m3752[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m3753[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m3754[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m3755[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m3756[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m3757[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m3758[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m3759[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m3760[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m3761[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m3762[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m3763[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m3764[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m3765[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m3766[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m3767[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m3768[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m3769[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m3770[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m3771[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m3772[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m3773[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m3774[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m3775[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m3776[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m3777[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m3778[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m3779[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m3780[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m3781[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m3782[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m3783[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m3784[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m3785[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m3786[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m3787[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m3788[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m3789[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m3790[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m3791[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m3792[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m3793[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m3794[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m3795[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m3796[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m3797[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m3798[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m3799[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m3800[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m3801[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m3802[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m3803[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m3804[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m3805[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m3806[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m3807[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m3808[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m3809[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m3810[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m3811[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m3812[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m3813[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m3814[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m3815[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m3816[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m3817[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m3818[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m3819[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m3820[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m3821[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m3822[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m3823[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m3824[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m3825[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m3826[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m3827[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m3828[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m3829[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m3830[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m3831[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m3832[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m3833[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m3834[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m3835[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m3836[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m3837[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m3838[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m3839[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m3840[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m3841[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m3842[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m3843[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m3844[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m3845[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m3846[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m3847[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m3848[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m3849[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m3850[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m3851[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m3852[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m3853[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m3854[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m3855[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m3856[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m3857[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m3858[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m3859[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m3860[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m3861[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m3862[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m3863[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m3864[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m3865[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m3866[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m3867[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m3868[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m3869[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m3870[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m3871[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m3872[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m3873[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m3874[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m3875[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m3876[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m3877[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m3878[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m3879[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m3880[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m3881[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m3882[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m3883[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m3884[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m3885[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m3886[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m3887[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m3888[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m3889[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m3890[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m3891[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m3892[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m3893[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m3894[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m3895[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m3896[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m3897[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m3898[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m3899[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m3900[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m3901[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m3902[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m3903[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m3904[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m3905[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m3906[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m3907[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m3908[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m3909[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m3910[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m3911[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m3912[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m3913[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m3914[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m3915[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m3916[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m3917[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m3918[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m3919[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m3920[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m3921[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m3922[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m3923[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m3924[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m3925[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m3926[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m3927[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m3928[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m3929[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m3930[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m3931[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m3932[0m no test error[K
  ok [1m[32m3933[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (float)[K

  ok [1m[32m3934[0m undefined[K
  ok [1m[32m3935[0m ReadStream emitted single "end" event[K
  ok [1m[32m3936[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m3937[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m3938[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m3939[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m3940[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m3941[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m3942[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m3943[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m3944[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m3945[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m3946[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m3947[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m3948[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m3949[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m3950[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m3951[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m3952[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m3953[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m3954[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m3955[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m3956[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m3957[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m3958[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m3959[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m3960[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m3961[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m3962[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m3963[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m3964[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m3965[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m3966[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m3967[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m3968[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m3969[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m3970[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m3971[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m3972[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m3973[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m3974[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m3975[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m3976[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m3977[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m3978[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m3979[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m3980[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m3981[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m3982[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m3983[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m3984[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m3985[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m3986[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m3987[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m3988[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m3989[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m3990[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m3991[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m3992[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m3993[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m3994[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m3995[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m3996[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m3997[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m3998[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m3999[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m4000[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m4001[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m4002[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m4003[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m4004[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m4005[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m4006[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m4007[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m4008[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m4009[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m4010[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m4011[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m4012[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m4013[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m4014[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m4015[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m4016[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m4017[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m4018[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m4019[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m4020[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m4021[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m4022[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m4023[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m4024[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m4025[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m4026[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m4027[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m4028[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m4029[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m4030[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m4031[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m4032[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m4033[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m4034[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m4035[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m4036[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m4037[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m4038[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m4039[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m4040[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m4041[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m4042[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m4043[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m4044[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m4045[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m4046[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m4047[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m4048[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m4049[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m4050[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m4051[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m4052[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m4053[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m4054[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m4055[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m4056[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m4057[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m4058[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m4059[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m4060[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m4061[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m4062[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m4063[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m4064[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m4065[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m4066[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m4067[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m4068[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m4069[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m4070[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m4071[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m4072[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m4073[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m4074[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m4075[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m4076[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m4077[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m4078[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m4079[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m4080[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m4081[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m4082[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m4083[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m4084[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m4085[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m4086[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m4087[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m4088[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m4089[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m4090[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m4091[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m4092[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m4093[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m4094[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m4095[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m4096[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m4097[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m4098[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m4099[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m4100[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m4101[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m4102[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m4103[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m4104[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m4105[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m4106[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m4107[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m4108[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m4109[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m4110[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m4111[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m4112[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m4113[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m4114[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m4115[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m4116[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m4117[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m4118[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m4119[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m4120[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m4121[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m4122[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m4123[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m4124[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m4125[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m4126[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m4127[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m4128[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m4129[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m4130[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m4131[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m4132[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m4133[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m4134[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m4135[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m4136[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m4137[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m4138[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m4139[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m4140[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m4141[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m4142[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m4143[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m4144[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m4145[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m4146[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m4147[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m4148[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m4149[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m4150[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m4151[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m4152[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m4153[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m4154[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m4155[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m4156[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m4157[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m4158[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m4159[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m4160[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m4161[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m4162[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m4163[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m4164[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m4165[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m4166[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m4167[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m4168[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m4169[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m4170[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m4171[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m4172[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m4173[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m4174[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m4175[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m4176[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m4177[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m4178[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m4179[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m4180[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m4181[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m4182[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m4183[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m4184[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m4185[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m4186[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m4187[0m no test error[K
  ok [1m[32m4188[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (float)[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (float) and "reverse=true"[K

  ok [1m[32m4189[0m undefined[K
  ok [1m[32m4190[0m ReadStream emitted single "end" event[K
  ok [1m[32m4191[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m4192[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m4193[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m4194[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m4195[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m4196[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m4197[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m4198[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m4199[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m4200[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m4201[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m4202[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m4203[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m4204[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m4205[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m4206[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m4207[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m4208[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m4209[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m4210[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m4211[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m4212[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m4213[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m4214[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m4215[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m4216[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m4217[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m4218[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m4219[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m4220[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m4221[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m4222[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m4223[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m4224[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m4225[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m4226[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m4227[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m4228[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m4229[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m4230[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m4231[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m4232[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m4233[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m4234[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m4235[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m4236[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m4237[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m4238[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m4239[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m4240[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m4241[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m4242[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m4243[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m4244[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m4245[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m4246[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m4247[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m4248[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m4249[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m4250[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m4251[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m4252[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m4253[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m4254[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m4255[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m4256[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m4257[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m4258[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m4259[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m4260[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m4261[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m4262[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m4263[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m4264[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m4265[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m4266[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m4267[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m4268[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m4269[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m4270[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m4271[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m4272[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m4273[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m4274[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m4275[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m4276[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m4277[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m4278[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m4279[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m4280[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m4281[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m4282[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m4283[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m4284[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m4285[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m4286[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m4287[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m4288[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m4289[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m4290[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m4291[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m4292[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m4293[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m4294[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m4295[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m4296[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m4297[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m4298[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m4299[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m4300[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m4301[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m4302[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m4303[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m4304[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m4305[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m4306[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m4307[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m4308[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m4309[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m4310[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m4311[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m4312[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m4313[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m4314[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m4315[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m4316[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m4317[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m4318[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m4319[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m4320[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m4321[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m4322[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m4323[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m4324[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m4325[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m4326[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m4327[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m4328[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m4329[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m4330[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m4331[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m4332[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m4333[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m4334[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m4335[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m4336[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m4337[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m4338[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m4339[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m4340[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m4341[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m4342[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m4343[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m4344[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m4345[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m4346[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m4347[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m4348[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m4349[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m4350[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m4351[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m4352[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m4353[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m4354[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m4355[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m4356[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m4357[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m4358[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m4359[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m4360[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m4361[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m4362[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m4363[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m4364[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m4365[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m4366[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m4367[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m4368[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m4369[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m4370[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m4371[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m4372[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m4373[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m4374[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m4375[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m4376[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m4377[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m4378[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m4379[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m4380[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m4381[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m4382[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m4383[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m4384[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m4385[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m4386[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m4387[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m4388[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m4389[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m4390[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m4391[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m4392[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m4393[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m4394[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m4395[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m4396[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m4397[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m4398[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m4399[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m4400[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m4401[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m4402[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m4403[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m4404[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m4405[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m4406[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m4407[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m4408[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m4409[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m4410[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m4411[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m4412[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m4413[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m4414[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m4415[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m4416[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m4417[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m4418[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m4419[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m4420[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m4421[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m4422[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m4423[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m4424[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m4425[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m4426[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m4427[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m4428[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m4429[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m4430[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m4431[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m4432[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m4433[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m4434[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m4435[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m4436[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m4437[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m4438[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m4439[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m4440[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m4441[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m4442[0m no test error[K
  ok [1m[32m4443[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (float) and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (string)[K

  ok [1m[32m4444[0m undefined[K
  ok [1m[32m4445[0m ReadStream emitted single "end" event[K
  ok [1m[32m4446[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m4447[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m4448[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m4449[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m4450[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m4451[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m4452[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m4453[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m4454[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m4455[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m4456[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m4457[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m4458[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m4459[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m4460[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m4461[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m4462[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m4463[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m4464[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m4465[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m4466[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m4467[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m4468[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m4469[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m4470[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m4471[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m4472[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m4473[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m4474[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m4475[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m4476[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m4477[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m4478[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m4479[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m4480[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m4481[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m4482[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m4483[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m4484[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m4485[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m4486[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m4487[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m4488[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m4489[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m4490[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m4491[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m4492[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m4493[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m4494[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m4495[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m4496[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m4497[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m4498[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m4499[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m4500[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m4501[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m4502[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m4503[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m4504[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m4505[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m4506[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m4507[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m4508[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m4509[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m4510[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m4511[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m4512[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m4513[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m4514[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m4515[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m4516[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m4517[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m4518[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m4519[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m4520[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m4521[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m4522[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m4523[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m4524[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m4525[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m4526[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m4527[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m4528[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m4529[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m4530[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m4531[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m4532[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m4533[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m4534[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m4535[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m4536[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m4537[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m4538[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m4539[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m4540[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m4541[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m4542[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m4543[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m4544[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m4545[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m4546[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m4547[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m4548[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m4549[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m4550[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m4551[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m4552[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m4553[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m4554[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m4555[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m4556[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m4557[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m4558[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m4559[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m4560[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m4561[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m4562[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m4563[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m4564[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m4565[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m4566[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m4567[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m4568[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m4569[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m4570[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m4571[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m4572[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m4573[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m4574[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m4575[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m4576[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m4577[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m4578[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m4579[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m4580[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m4581[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m4582[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m4583[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m4584[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m4585[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m4586[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m4587[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m4588[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m4589[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m4590[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m4591[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m4592[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m4593[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m4594[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m4595[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m4596[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m4597[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m4598[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m4599[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m4600[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m4601[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m4602[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m4603[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m4604[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m4605[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m4606[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m4607[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m4608[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m4609[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m4610[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m4611[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m4612[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m4613[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m4614[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m4615[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m4616[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m4617[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m4618[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m4619[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m4620[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m4621[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m4622[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m4623[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m4624[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m4625[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m4626[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m4627[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m4628[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m4629[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m4630[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m4631[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m4632[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m4633[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m4634[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m4635[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m4636[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m4637[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m4638[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m4639[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m4640[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m4641[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m4642[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m4643[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m4644[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m4645[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m4646[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m4647[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m4648[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m4649[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m4650[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m4651[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m4652[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m4653[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m4654[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m4655[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m4656[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m4657[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m4658[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m4659[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m4660[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m4661[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m4662[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m4663[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m4664[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m4665[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m4666[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m4667[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m4668[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m4669[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m4670[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m4671[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m4672[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m4673[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m4674[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m4675[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m4676[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m4677[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m4678[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m4679[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m4680[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m4681[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m4682[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m4683[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m4684[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m4685[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m4686[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m4687[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m4688[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m4689[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m4690[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m4691[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m4692[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m4693[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m4694[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m4695[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m4696[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m4697[0m no test error[K
  ok [1m[32m4698[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (string)[0m[1B[1G
# ReadStream: readStream() with "lte"[K

  ok [1m[32m4699[0m undefined[K
  ok [1m[32m4700[0m ReadStream emitted single "end" event[K
  ok [1m[32m4701[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m4702[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m4703[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m4704[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m4705[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m4706[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m4707[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m4708[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m4709[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m4710[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m4711[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m4712[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m4713[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m4714[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m4715[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m4716[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m4717[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m4718[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m4719[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m4720[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m4721[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m4722[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m4723[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m4724[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m4725[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m4726[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m4727[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m4728[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m4729[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m4730[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m4731[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m4732[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m4733[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m4734[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m4735[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m4736[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m4737[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m4738[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m4739[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m4740[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m4741[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m4742[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m4743[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m4744[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m4745[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m4746[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m4747[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m4748[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m4749[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m4750[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m4751[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m4752[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m4753[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m4754[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m4755[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m4756[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m4757[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m4758[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m4759[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m4760[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m4761[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m4762[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m4763[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m4764[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m4765[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m4766[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m4767[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m4768[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m4769[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m4770[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m4771[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m4772[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m4773[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m4774[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m4775[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m4776[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m4777[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m4778[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m4779[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m4780[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m4781[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m4782[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m4783[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m4784[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m4785[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m4786[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m4787[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m4788[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m4789[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m4790[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m4791[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m4792[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m4793[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m4794[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m4795[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m4796[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m4797[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m4798[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m4799[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m4800[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m4801[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m4802[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m4803[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m4804[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m4805[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m4806[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m4807[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m4808[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m4809[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m4810[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m4811[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m4812[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m4813[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m4814[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m4815[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m4816[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m4817[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m4818[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m4819[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m4820[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m4821[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m4822[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m4823[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m4824[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m4825[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m4826[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m4827[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m4828[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m4829[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m4830[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m4831[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m4832[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m4833[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m4834[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m4835[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m4836[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m4837[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m4838[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m4839[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m4840[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m4841[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m4842[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m4843[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m4844[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m4845[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m4846[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m4847[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m4848[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m4849[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m4850[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m4851[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m4852[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m4853[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m4854[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m4855[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m4856[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m4857[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m4858[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m4859[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m4860[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m4861[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m4862[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m4863[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m4864[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m4865[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m4866[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m4867[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m4868[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m4869[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m4870[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m4871[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m4872[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m4873[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m4874[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m4875[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m4876[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m4877[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m4878[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m4879[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m4880[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m4881[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m4882[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m4883[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m4884[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m4885[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m4886[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m4887[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m4888[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m4889[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m4890[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m4891[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m4892[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m4893[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m4894[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m4895[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m4896[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m4897[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m4898[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m4899[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m4900[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m4901[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m4902[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m4903[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m4904[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m4905[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m4906[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m4907[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m4908[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m4909[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m4910[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m4911[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m4912[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m4913[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m4914[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m4915[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m4916[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m4917[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m4918[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m4919[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m4920[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m4921[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m4922[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m4923[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m4924[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m4925[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m4926[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m4927[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m4928[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m4929[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m4930[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m4931[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m4932[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m4933[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m4934[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m4935[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m4936[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m4937[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m4938[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m4939[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m4940[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m4941[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m4942[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m4943[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m4944[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m4945[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m4946[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m4947[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m4948[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m4949[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m4950[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m4951[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m4952[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m4953[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m4954[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m4955[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m4956[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m4957[0m no test error[K
  ok [1m[32m4958[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte"[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (float)[K

  ok [1m[32m4959[0m undefined[K
  ok [1m[32m4960[0m ReadStream emitted single "end" event[K
  ok [1m[32m4961[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m4962[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m4963[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m4964[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m4965[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m4966[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m4967[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m4968[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m4969[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m4970[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m4971[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m4972[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m4973[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m4974[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m4975[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m4976[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m4977[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m4978[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m4979[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m4980[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m4981[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m4982[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m4983[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m4984[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m4985[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m4986[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m4987[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m4988[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m4989[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m4990[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m4991[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m4992[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m4993[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m4994[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m4995[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m4996[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m4997[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m4998[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m4999[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m5000[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m5001[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m5002[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m5003[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m5004[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m5005[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m5006[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m5007[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m5008[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m5009[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m5010[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m5011[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m5012[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m5013[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m5014[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m5015[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m5016[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m5017[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m5018[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m5019[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m5020[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m5021[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m5022[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m5023[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m5024[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m5025[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m5026[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m5027[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m5028[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m5029[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m5030[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m5031[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m5032[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m5033[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m5034[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m5035[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m5036[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m5037[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m5038[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m5039[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m5040[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m5041[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m5042[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m5043[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m5044[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m5045[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m5046[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m5047[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m5048[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m5049[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m5050[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m5051[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m5052[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m5053[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m5054[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m5055[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m5056[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m5057[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m5058[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m5059[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m5060[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m5061[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m5062[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m5063[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m5064[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m5065[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m5066[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m5067[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m5068[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m5069[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m5070[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m5071[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m5072[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m5073[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m5074[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m5075[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m5076[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m5077[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m5078[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m5079[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m5080[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m5081[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m5082[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m5083[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m5084[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m5085[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m5086[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m5087[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m5088[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m5089[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m5090[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m5091[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m5092[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m5093[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m5094[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m5095[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m5096[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m5097[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m5098[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m5099[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m5100[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m5101[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m5102[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m5103[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m5104[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m5105[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m5106[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m5107[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m5108[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m5109[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m5110[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m5111[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m5112[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m5113[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m5114[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m5115[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m5116[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m5117[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m5118[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m5119[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m5120[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m5121[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m5122[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m5123[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m5124[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m5125[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m5126[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m5127[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m5128[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m5129[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m5130[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m5131[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m5132[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m5133[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m5134[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m5135[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m5136[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m5137[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m5138[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m5139[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m5140[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m5141[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m5142[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m5143[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m5144[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m5145[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m5146[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m5147[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m5148[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m5149[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m5150[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m5151[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m5152[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m5153[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m5154[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m5155[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m5156[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m5157[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m5158[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m5159[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m5160[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m5161[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m5162[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m5163[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m5164[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m5165[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m5166[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m5167[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m5168[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m5169[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m5170[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m5171[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m5172[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m5173[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m5174[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m5175[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m5176[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m5177[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m5178[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m5179[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m5180[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m5181[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m5182[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m5183[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m5184[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m5185[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m5186[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m5187[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m5188[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m5189[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m5190[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m5191[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m5192[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m5193[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m5194[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m5195[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m5196[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m5197[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m5198[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m5199[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m5200[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m5201[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m5202[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m5203[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m5204[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m5205[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m5206[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m5207[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m5208[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m5209[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m5210[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m5211[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m5212[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m5213[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m5214[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m5215[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m5216[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m5217[0m no test error[K
  ok [1m[32m5218[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (float)[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (string)[K

  ok [1m[32m5219[0m undefined[K
  ok [1m[32m5220[0m ReadStream emitted single "end" event[K
  ok [1m[32m5221[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m5222[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m5223[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m5224[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m5225[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m5226[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m5227[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m5228[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m5229[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m5230[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m5231[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m5232[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m5233[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m5234[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m5235[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m5236[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m5237[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m5238[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m5239[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m5240[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m5241[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m5242[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m5243[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m5244[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m5245[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m5246[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m5247[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m5248[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m5249[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m5250[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m5251[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m5252[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m5253[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m5254[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m5255[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m5256[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m5257[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m5258[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m5259[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m5260[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m5261[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m5262[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m5263[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m5264[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m5265[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m5266[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m5267[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m5268[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m5269[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m5270[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m5271[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m5272[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m5273[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m5274[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m5275[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m5276[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m5277[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m5278[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m5279[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m5280[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m5281[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m5282[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m5283[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m5284[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m5285[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m5286[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m5287[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m5288[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m5289[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m5290[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m5291[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m5292[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m5293[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m5294[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m5295[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m5296[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m5297[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m5298[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m5299[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m5300[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m5301[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m5302[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m5303[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m5304[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m5305[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m5306[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m5307[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m5308[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m5309[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m5310[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m5311[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m5312[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m5313[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m5314[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m5315[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m5316[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m5317[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m5318[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m5319[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m5320[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m5321[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m5322[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m5323[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m5324[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m5325[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m5326[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m5327[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m5328[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m5329[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m5330[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m5331[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m5332[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m5333[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m5334[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m5335[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m5336[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m5337[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m5338[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m5339[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m5340[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m5341[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m5342[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m5343[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m5344[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m5345[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m5346[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m5347[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m5348[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m5349[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m5350[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m5351[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m5352[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m5353[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m5354[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m5355[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m5356[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m5357[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m5358[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m5359[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m5360[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m5361[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m5362[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m5363[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m5364[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m5365[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m5366[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m5367[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m5368[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m5369[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m5370[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m5371[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m5372[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m5373[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m5374[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m5375[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m5376[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m5377[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m5378[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m5379[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m5380[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m5381[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m5382[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m5383[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m5384[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m5385[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m5386[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m5387[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m5388[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m5389[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m5390[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m5391[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m5392[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m5393[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m5394[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m5395[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m5396[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m5397[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m5398[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m5399[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m5400[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m5401[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m5402[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m5403[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m5404[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m5405[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m5406[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m5407[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m5408[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m5409[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m5410[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m5411[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m5412[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m5413[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m5414[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m5415[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m5416[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m5417[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m5418[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m5419[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m5420[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m5421[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m5422[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m5423[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m5424[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m5425[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m5426[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m5427[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m5428[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m5429[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m5430[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m5431[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m5432[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m5433[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m5434[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m5435[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m5436[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m5437[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m5438[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m5439[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m5440[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m5441[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m5442[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m5443[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m5444[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m5445[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m5446[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m5447[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m5448[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m5449[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m5450[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m5451[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m5452[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m5453[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m5454[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m5455[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m5456[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m5457[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m5458[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m5459[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m5460[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m5461[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m5462[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m5463[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m5464[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m5465[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m5466[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m5467[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m5468[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m5469[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m5470[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m5471[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m5472[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m5473[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m5474[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m5475[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m5476[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m5477[0m no test error[K
  ok [1m[32m5478[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (string)[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (float) and "reverse=true"[K

  ok [1m[32m5479[0m undefined[K
  ok [1m[32m5480[0m ReadStream emitted single "end" event[K
  ok [1m[32m5481[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m5482[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m5483[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m5484[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m5485[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m5486[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m5487[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m5488[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m5489[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m5490[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m5491[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m5492[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m5493[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m5494[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m5495[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m5496[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m5497[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m5498[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m5499[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m5500[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m5501[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m5502[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m5503[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m5504[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m5505[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m5506[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m5507[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m5508[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m5509[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m5510[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m5511[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m5512[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m5513[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m5514[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m5515[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m5516[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m5517[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m5518[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m5519[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m5520[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m5521[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m5522[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m5523[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m5524[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m5525[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m5526[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m5527[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m5528[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m5529[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m5530[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m5531[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m5532[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m5533[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m5534[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m5535[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m5536[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m5537[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m5538[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m5539[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m5540[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m5541[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m5542[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m5543[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m5544[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m5545[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m5546[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m5547[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m5548[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m5549[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m5550[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m5551[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m5552[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m5553[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m5554[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m5555[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m5556[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m5557[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m5558[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m5559[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m5560[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m5561[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m5562[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m5563[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m5564[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m5565[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m5566[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m5567[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m5568[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m5569[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m5570[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m5571[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m5572[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m5573[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m5574[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m5575[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m5576[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m5577[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m5578[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m5579[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m5580[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m5581[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m5582[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m5583[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m5584[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m5585[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m5586[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m5587[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m5588[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m5589[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m5590[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m5591[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m5592[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m5593[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m5594[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m5595[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m5596[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m5597[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m5598[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m5599[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m5600[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m5601[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m5602[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m5603[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m5604[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m5605[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m5606[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m5607[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m5608[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m5609[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m5610[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m5611[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m5612[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m5613[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m5614[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m5615[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m5616[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m5617[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m5618[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m5619[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m5620[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m5621[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m5622[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m5623[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m5624[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m5625[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m5626[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m5627[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m5628[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m5629[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m5630[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m5631[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m5632[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m5633[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m5634[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m5635[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m5636[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m5637[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m5638[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m5639[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m5640[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m5641[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m5642[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m5643[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m5644[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m5645[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m5646[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m5647[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m5648[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m5649[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m5650[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m5651[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m5652[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m5653[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m5654[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m5655[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m5656[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m5657[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m5658[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m5659[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m5660[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m5661[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m5662[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m5663[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m5664[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m5665[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m5666[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m5667[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m5668[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m5669[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m5670[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m5671[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m5672[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m5673[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m5674[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m5675[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m5676[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m5677[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m5678[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m5679[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m5680[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m5681[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m5682[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m5683[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m5684[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m5685[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m5686[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m5687[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m5688[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m5689[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m5690[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m5691[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m5692[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m5693[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m5694[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m5695[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m5696[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m5697[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m5698[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m5699[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m5700[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m5701[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m5702[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m5703[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m5704[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m5705[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m5706[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m5707[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m5708[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m5709[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m5710[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m5711[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m5712[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m5713[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m5714[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m5715[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m5716[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m5717[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m5718[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m5719[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m5720[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m5721[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m5722[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m5723[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m5724[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m5725[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m5726[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m5727[0m no test error[K
  ok [1m[32m5728[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (float) and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with both "gte" and "lte"[K

  ok [1m[32m5729[0m undefined[K
  ok [1m[32m5730[0m ReadStream emitted single "end" event[K
  ok [1m[32m5731[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m5732[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m5733[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m5734[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m5735[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m5736[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m5737[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m5738[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m5739[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m5740[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m5741[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m5742[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m5743[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m5744[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m5745[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m5746[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m5747[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m5748[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m5749[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m5750[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m5751[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m5752[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m5753[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m5754[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m5755[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m5756[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m5757[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m5758[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m5759[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m5760[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m5761[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m5762[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m5763[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m5764[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m5765[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m5766[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m5767[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m5768[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m5769[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m5770[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m5771[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m5772[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m5773[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m5774[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m5775[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m5776[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m5777[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m5778[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m5779[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m5780[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m5781[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m5782[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m5783[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m5784[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m5785[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m5786[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m5787[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m5788[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m5789[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m5790[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m5791[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m5792[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m5793[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m5794[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m5795[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m5796[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m5797[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m5798[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m5799[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m5800[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m5801[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m5802[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m5803[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m5804[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m5805[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m5806[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m5807[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m5808[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m5809[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m5810[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m5811[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m5812[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m5813[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m5814[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m5815[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m5816[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m5817[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m5818[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m5819[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m5820[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m5821[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m5822[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m5823[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m5824[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m5825[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m5826[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m5827[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m5828[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m5829[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m5830[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m5831[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m5832[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m5833[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m5834[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m5835[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m5836[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m5837[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m5838[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m5839[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m5840[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m5841[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m5842[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m5843[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m5844[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m5845[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m5846[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m5847[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m5848[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m5849[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m5850[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m5851[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m5852[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m5853[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m5854[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m5855[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m5856[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m5857[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m5858[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m5859[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m5860[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m5861[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m5862[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m5863[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m5864[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m5865[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m5866[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m5867[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m5868[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m5869[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m5870[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m5871[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m5872[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m5873[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m5874[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m5875[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m5876[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m5877[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m5878[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m5879[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m5880[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m5881[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m5882[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m5883[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m5884[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m5885[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m5886[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m5887[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m5888[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m5889[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m5890[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m5891[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m5892[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m5893[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m5894[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m5895[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m5896[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m5897[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m5898[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m5899[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m5900[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m5901[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m5902[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m5903[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m5904[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m5905[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m5906[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m5907[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m5908[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m5909[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m5910[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m5911[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m5912[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m5913[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m5914[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m5915[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m5916[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m5917[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m5918[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m5919[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m5920[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m5921[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m5922[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m5923[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m5924[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m5925[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m5926[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m5927[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m5928[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m5929[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m5930[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m5931[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m5932[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m5933[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m5934[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m5935[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m5936[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m5937[0m no test error[K
  ok [1m[32m5938[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with both "gte" and "lte"[0m[1B[1G
# ReadStream: readStream() with both "gte" and "lte" and "reverse=true"[K

  ok [1m[32m5939[0m undefined[K
  ok [1m[32m5940[0m ReadStream emitted single "end" event[K
  ok [1m[32m5941[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m5942[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m5943[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m5944[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m5945[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m5946[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m5947[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m5948[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m5949[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m5950[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m5951[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m5952[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m5953[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m5954[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m5955[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m5956[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m5957[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m5958[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m5959[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m5960[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m5961[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m5962[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m5963[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m5964[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m5965[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m5966[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m5967[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m5968[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m5969[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m5970[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m5971[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m5972[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m5973[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m5974[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m5975[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m5976[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m5977[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m5978[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m5979[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m5980[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m5981[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m5982[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m5983[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m5984[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m5985[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m5986[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m5987[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m5988[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m5989[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m5990[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m5991[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m5992[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m5993[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m5994[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m5995[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m5996[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m5997[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m5998[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m5999[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m6000[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m6001[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m6002[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m6003[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m6004[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m6005[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m6006[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m6007[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m6008[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m6009[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m6010[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m6011[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m6012[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m6013[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m6014[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m6015[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m6016[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m6017[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m6018[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m6019[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m6020[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m6021[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m6022[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m6023[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m6024[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m6025[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m6026[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m6027[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m6028[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m6029[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m6030[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m6031[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m6032[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m6033[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m6034[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m6035[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m6036[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m6037[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m6038[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m6039[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m6040[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m6041[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m6042[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m6043[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m6044[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m6045[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m6046[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m6047[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m6048[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m6049[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m6050[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m6051[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m6052[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m6053[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m6054[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m6055[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m6056[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m6057[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m6058[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m6059[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m6060[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m6061[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m6062[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m6063[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m6064[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m6065[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m6066[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m6067[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m6068[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m6069[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m6070[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m6071[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m6072[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m6073[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m6074[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m6075[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m6076[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m6077[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m6078[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m6079[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m6080[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m6081[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m6082[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m6083[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m6084[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m6085[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m6086[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m6087[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m6088[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m6089[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m6090[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m6091[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m6092[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m6093[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m6094[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m6095[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m6096[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m6097[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m6098[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m6099[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m6100[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m6101[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m6102[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m6103[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m6104[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m6105[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m6106[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m6107[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m6108[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m6109[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m6110[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m6111[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m6112[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m6113[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m6114[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m6115[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m6116[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m6117[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m6118[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m6119[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m6120[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m6121[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m6122[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m6123[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m6124[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m6125[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m6126[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m6127[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m6128[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m6129[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m6130[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m6131[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m6132[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m6133[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m6134[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m6135[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m6136[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m6137[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m6138[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m6139[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m6140[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m6141[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m6142[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m6143[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m6144[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m6145[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m6146[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m6147[0m no test error[K
  ok [1m[32m6148[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with both "gte" and "lte" and "reverse=true"[0m[1B[1G
# ReadStream: hex encoding[K

  ok [1m[32m6149[0m undefined[K
  ok [1m[32m6150[0m should be strictly equal[K
  ok [1m[32m6151[0m no test error[K
  ok [1m[32m6152[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: hex encoding[0m[1B[1G
# ReadStream: readStream() "reverse=true" not sticky (issue #6)[K

  ok [1m[32m6153[0m undefined[K
  ok [1m[32m6154[0m ReadStream emitted single "end" event[K
  ok [1m[32m6155[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m6156[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m6157[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m6158[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m6159[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m6160[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m6161[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m6162[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m6163[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m6164[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m6165[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m6166[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m6167[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m6168[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m6169[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m6170[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m6171[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m6172[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m6173[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m6174[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m6175[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m6176[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m6177[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m6178[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m6179[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m6180[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m6181[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m6182[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m6183[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m6184[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m6185[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m6186[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m6187[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m6188[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m6189[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m6190[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m6191[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m6192[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m6193[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m6194[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m6195[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m6196[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m6197[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m6198[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m6199[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m6200[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m6201[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m6202[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m6203[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m6204[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m6205[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m6206[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m6207[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m6208[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m6209[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m6210[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m6211[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m6212[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m6213[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m6214[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m6215[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m6216[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m6217[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m6218[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m6219[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m6220[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m6221[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m6222[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m6223[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m6224[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m6225[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m6226[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m6227[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m6228[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m6229[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m6230[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m6231[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m6232[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m6233[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m6234[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m6235[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m6236[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m6237[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m6238[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m6239[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m6240[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m6241[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m6242[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m6243[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m6244[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m6245[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m6246[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m6247[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m6248[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m6249[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m6250[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m6251[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m6252[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m6253[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m6254[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m6255[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m6256[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m6257[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m6258[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m6259[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m6260[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m6261[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m6262[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m6263[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m6264[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m6265[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m6266[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m6267[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m6268[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m6269[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m6270[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m6271[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m6272[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m6273[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m6274[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m6275[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m6276[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m6277[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m6278[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m6279[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m6280[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m6281[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m6282[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m6283[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m6284[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m6285[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m6286[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m6287[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m6288[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m6289[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m6290[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m6291[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m6292[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m6293[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m6294[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m6295[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m6296[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m6297[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m6298[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m6299[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m6300[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m6301[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m6302[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m6303[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m6304[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m6305[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m6306[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m6307[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m6308[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m6309[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m6310[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m6311[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m6312[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m6313[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m6314[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m6315[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m6316[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m6317[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m6318[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m6319[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m6320[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m6321[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m6322[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m6323[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m6324[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m6325[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m6326[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m6327[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m6328[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m6329[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m6330[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m6331[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m6332[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m6333[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m6334[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m6335[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m6336[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m6337[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m6338[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m6339[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m6340[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m6341[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m6342[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m6343[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m6344[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m6345[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m6346[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m6347[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m6348[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m6349[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m6350[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m6351[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m6352[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m6353[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m6354[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m6355[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m6356[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m6357[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m6358[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m6359[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m6360[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m6361[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m6362[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m6363[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m6364[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m6365[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m6366[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m6367[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m6368[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m6369[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m6370[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m6371[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m6372[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m6373[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m6374[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m6375[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m6376[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m6377[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m6378[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m6379[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m6380[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m6381[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m6382[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m6383[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m6384[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m6385[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m6386[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m6387[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m6388[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m6389[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m6390[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m6391[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m6392[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m6393[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m6394[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m6395[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m6396[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m6397[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m6398[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m6399[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m6400[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m6401[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m6402[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m6403[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m6404[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m6405[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m6406[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m6407[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m6408[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m6409[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m6410[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m6411[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m6412[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m6413[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m6414[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m6415[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m6416[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m6417[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m6418[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m6419[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m6420[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m6421[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m6422[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m6423[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m6424[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m6425[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m6426[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m6427[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m6428[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m6429[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m6430[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m6431[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m6432[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m6433[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m6434[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m6435[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m6436[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m6437[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m6438[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m6439[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m6440[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m6441[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m6442[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m6443[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m6444[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m6445[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m6446[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m6447[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m6448[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m6449[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m6450[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m6451[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m6452[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m6453[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m6454[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m6455[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m6456[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m6457[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m6458[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m6459[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m6460[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m6461[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m6462[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m6463[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m6464[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m6465[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m6466[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m6467[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m6468[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m6469[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m6470[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m6471[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m6472[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m6473[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m6474[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m6475[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m6476[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m6477[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m6478[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m6479[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m6480[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m6481[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m6482[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m6483[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m6484[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m6485[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m6486[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m6487[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m6488[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m6489[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m6490[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m6491[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m6492[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m6493[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m6494[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m6495[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m6496[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m6497[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m6498[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m6499[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m6500[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m6501[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m6502[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m6503[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m6504[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m6505[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m6506[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m6507[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m6508[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m6509[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m6510[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m6511[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m6512[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m6513[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m6514[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m6515[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m6516[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m6517[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m6518[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m6519[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m6520[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m6521[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m6522[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m6523[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m6524[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m6525[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m6526[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m6527[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m6528[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m6529[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m6530[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m6531[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m6532[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m6533[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m6534[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m6535[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m6536[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m6537[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m6538[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m6539[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m6540[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m6541[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m6542[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m6543[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m6544[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m6545[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m6546[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m6547[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m6548[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m6549[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m6550[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m6551[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m6552[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m6553[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m6554[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m6555[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m6556[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m6557[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m6558[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m6559[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m6560[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m6561[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m6562[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m6563[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m6564[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m6565[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m6566[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m6567[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m6568[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m6569[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m6570[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m6571[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m6572[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m6573[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m6574[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m6575[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m6576[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m6577[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m6578[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m6579[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m6580[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m6581[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m6582[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m6583[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m6584[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m6585[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m6586[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m6587[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m6588[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m6589[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m6590[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m6591[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m6592[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m6593[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m6594[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m6595[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m6596[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m6597[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m6598[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m6599[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m6600[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m6601[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m6602[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m6603[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m6604[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m6605[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m6606[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m6607[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m6608[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m6609[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m6610[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m6611[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m6612[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m6613[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m6614[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m6615[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m6616[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m6617[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m6618[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m6619[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m6620[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m6621[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m6622[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m6623[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m6624[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m6625[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m6626[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m6627[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m6628[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m6629[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m6630[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m6631[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m6632[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m6633[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m6634[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m6635[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m6636[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m6637[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m6638[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m6639[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m6640[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m6641[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m6642[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m6643[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m6644[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m6645[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m6646[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m6647[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m6648[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m6649[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m6650[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m6651[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m6652[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m6653[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m6654[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m6655[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m6656[0m no test error[K
  ok [1m[32m6657[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() "reverse=true" not sticky (issue #6)[0m[1B[1G
# ReadStream: ReadStream, gte=0[K

  ok [1m[32m6658[0m undefined[K
  ok [1m[32m6659[0m ReadStream emitted single "end" event[K
  ok [1m[32m6660[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m6661[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m6662[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m6663[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m6664[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m6665[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m6666[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m6667[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m6668[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m6669[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m6670[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m6671[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m6672[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m6673[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m6674[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m6675[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m6676[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m6677[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m6678[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m6679[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m6680[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m6681[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m6682[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m6683[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m6684[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m6685[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m6686[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m6687[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m6688[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m6689[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m6690[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m6691[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m6692[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m6693[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m6694[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m6695[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m6696[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m6697[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m6698[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m6699[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m6700[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m6701[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m6702[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m6703[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m6704[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m6705[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m6706[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m6707[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m6708[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m6709[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m6710[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m6711[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m6712[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m6713[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m6714[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m6715[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m6716[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m6717[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m6718[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m6719[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m6720[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m6721[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m6722[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m6723[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m6724[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m6725[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m6726[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m6727[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m6728[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m6729[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m6730[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m6731[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m6732[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m6733[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m6734[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m6735[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m6736[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m6737[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m6738[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m6739[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m6740[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m6741[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m6742[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m6743[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m6744[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m6745[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m6746[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m6747[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m6748[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m6749[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m6750[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m6751[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m6752[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m6753[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m6754[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m6755[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m6756[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m6757[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m6758[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m6759[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m6760[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m6761[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m6762[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m6763[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m6764[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m6765[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m6766[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m6767[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m6768[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m6769[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m6770[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m6771[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m6772[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m6773[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m6774[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m6775[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m6776[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m6777[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m6778[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m6779[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m6780[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m6781[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m6782[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m6783[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m6784[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m6785[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m6786[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m6787[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m6788[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m6789[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m6790[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m6791[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m6792[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m6793[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m6794[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m6795[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m6796[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m6797[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m6798[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m6799[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m6800[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m6801[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m6802[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m6803[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m6804[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m6805[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m6806[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m6807[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m6808[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m6809[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m6810[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m6811[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m6812[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m6813[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m6814[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m6815[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m6816[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m6817[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m6818[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m6819[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m6820[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m6821[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m6822[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m6823[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m6824[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m6825[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m6826[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m6827[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m6828[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m6829[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m6830[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m6831[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m6832[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m6833[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m6834[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m6835[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m6836[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m6837[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m6838[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m6839[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m6840[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m6841[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m6842[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m6843[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m6844[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m6845[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m6846[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m6847[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m6848[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m6849[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m6850[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m6851[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m6852[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m6853[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m6854[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m6855[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m6856[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m6857[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m6858[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m6859[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m6860[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m6861[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m6862[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m6863[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m6864[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m6865[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m6866[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m6867[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m6868[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m6869[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m6870[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m6871[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m6872[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m6873[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m6874[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m6875[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m6876[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m6877[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m6878[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m6879[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m6880[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m6881[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m6882[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m6883[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m6884[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m6885[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m6886[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m6887[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m6888[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m6889[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m6890[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m6891[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m6892[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m6893[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m6894[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m6895[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m6896[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m6897[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m6898[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m6899[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m6900[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m6901[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m6902[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m6903[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m6904[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m6905[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m6906[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m6907[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m6908[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m6909[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m6910[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m6911[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m6912[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m6913[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m6914[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m6915[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m6916[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m6917[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m6918[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m6919[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m6920[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m6921[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m6922[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m6923[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m6924[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m6925[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m6926[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m6927[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m6928[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m6929[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m6930[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m6931[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m6932[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m6933[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m6934[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m6935[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m6936[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m6937[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m6938[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m6939[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m6940[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m6941[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m6942[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m6943[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m6944[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m6945[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m6946[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m6947[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m6948[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m6949[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m6950[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m6951[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m6952[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m6953[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m6954[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m6955[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m6956[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m6957[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m6958[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m6959[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m6960[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m6961[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m6962[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m6963[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m6964[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m6965[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m6966[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m6967[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m6968[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m6969[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m6970[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m6971[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m6972[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m6973[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m6974[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m6975[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m6976[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m6977[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m6978[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m6979[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m6980[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m6981[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m6982[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m6983[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m6984[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m6985[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m6986[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m6987[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m6988[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m6989[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m6990[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m6991[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m6992[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m6993[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m6994[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m6995[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m6996[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m6997[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m6998[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m6999[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m7000[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m7001[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m7002[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m7003[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m7004[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m7005[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m7006[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m7007[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m7008[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m7009[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m7010[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m7011[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m7012[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m7013[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m7014[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m7015[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m7016[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m7017[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m7018[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m7019[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m7020[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m7021[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m7022[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m7023[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m7024[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m7025[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m7026[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m7027[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m7028[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m7029[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m7030[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m7031[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m7032[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m7033[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m7034[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m7035[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m7036[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m7037[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m7038[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m7039[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m7040[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m7041[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m7042[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m7043[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m7044[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m7045[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m7046[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m7047[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m7048[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m7049[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m7050[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m7051[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m7052[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m7053[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m7054[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m7055[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m7056[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m7057[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m7058[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m7059[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m7060[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m7061[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m7062[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m7063[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m7064[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m7065[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m7066[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m7067[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m7068[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m7069[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m7070[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m7071[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m7072[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m7073[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m7074[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m7075[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m7076[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m7077[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m7078[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m7079[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m7080[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m7081[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m7082[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m7083[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m7084[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m7085[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m7086[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m7087[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m7088[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m7089[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m7090[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m7091[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m7092[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m7093[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m7094[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m7095[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m7096[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m7097[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m7098[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m7099[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m7100[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m7101[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m7102[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m7103[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m7104[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m7105[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m7106[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m7107[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m7108[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m7109[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m7110[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m7111[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m7112[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m7113[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m7114[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m7115[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m7116[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m7117[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m7118[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m7119[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m7120[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m7121[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m7122[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m7123[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m7124[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m7125[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m7126[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m7127[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m7128[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m7129[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m7130[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m7131[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m7132[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m7133[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m7134[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m7135[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m7136[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m7137[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m7138[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m7139[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m7140[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m7141[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m7142[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m7143[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m7144[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m7145[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m7146[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m7147[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m7148[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m7149[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m7150[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m7151[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m7152[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m7153[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m7154[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m7155[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m7156[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m7157[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m7158[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m7159[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m7160[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m7161[0m no test error[K
  ok [1m[32m7162[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: ReadStream, gte=0[0m[1B[1G
# ReadStream: ReadStream, lte=0[K

  ok [1m[32m7163[0m undefined[K
  ok [1m[32m7164[0m ReadStream emitted single "end" event[K
  ok [1m[32m7165[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7166[0m no test error[K
  ok [1m[32m7167[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: ReadStream, lte=0[0m[1B[1G
# ReadStream: deferred ReadStream on new db[K

  ok [1m[32m7168[0m undefined[K
  ok [1m[32m7169[0m undefined[K
  ok [1m[32m7170[0m should be strictly equal[K
  ok [1m[32m7171[0m should be strictly equal[K
  ok [1m[32m7172[0m should be truthy[K
  ok [1m[32m7173[0m no open error[K
  ok [1m[32m7174[0m ReadStream emitted single "end" event[K
  ok [1m[32m7175[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7176[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m7177[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m7178[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m7179[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m7180[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m7181[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m7182[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m7183[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m7184[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m7185[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m7186[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m7187[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m7188[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m7189[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m7190[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m7191[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m7192[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m7193[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m7194[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m7195[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m7196[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m7197[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m7198[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m7199[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m7200[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m7201[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m7202[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m7203[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m7204[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m7205[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m7206[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m7207[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m7208[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m7209[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m7210[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m7211[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m7212[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m7213[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m7214[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m7215[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m7216[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m7217[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m7218[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m7219[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m7220[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m7221[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m7222[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m7223[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m7224[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m7225[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m7226[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m7227[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m7228[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m7229[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m7230[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m7231[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m7232[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m7233[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m7234[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m7235[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m7236[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m7237[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m7238[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m7239[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m7240[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m7241[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m7242[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m7243[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m7244[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m7245[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m7246[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m7247[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m7248[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m7249[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m7250[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m7251[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m7252[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m7253[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m7254[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m7255[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m7256[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m7257[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m7258[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m7259[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m7260[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m7261[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m7262[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m7263[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m7264[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m7265[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m7266[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m7267[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m7268[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m7269[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m7270[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m7271[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m7272[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m7273[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m7274[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m7275[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m7276[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m7277[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m7278[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m7279[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m7280[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m7281[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m7282[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m7283[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m7284[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m7285[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m7286[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m7287[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m7288[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m7289[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m7290[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m7291[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m7292[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m7293[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m7294[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m7295[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m7296[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m7297[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m7298[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m7299[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m7300[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m7301[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m7302[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m7303[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m7304[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m7305[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m7306[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m7307[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m7308[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m7309[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m7310[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m7311[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m7312[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m7313[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m7314[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m7315[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m7316[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m7317[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m7318[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m7319[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m7320[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m7321[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m7322[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m7323[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m7324[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m7325[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m7326[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m7327[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m7328[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m7329[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m7330[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m7331[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m7332[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m7333[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m7334[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m7335[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m7336[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m7337[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m7338[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m7339[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m7340[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m7341[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m7342[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m7343[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m7344[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m7345[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m7346[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m7347[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m7348[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m7349[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m7350[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m7351[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m7352[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m7353[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m7354[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m7355[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m7356[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m7357[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m7358[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m7359[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m7360[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m7361[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m7362[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m7363[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m7364[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m7365[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m7366[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m7367[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m7368[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m7369[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m7370[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m7371[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m7372[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m7373[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m7374[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m7375[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m7376[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m7377[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m7378[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m7379[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m7380[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m7381[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m7382[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m7383[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m7384[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m7385[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m7386[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m7387[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m7388[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m7389[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m7390[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m7391[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m7392[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m7393[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m7394[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m7395[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m7396[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m7397[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m7398[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m7399[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m7400[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m7401[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m7402[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m7403[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m7404[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m7405[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m7406[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m7407[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m7408[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m7409[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m7410[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m7411[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m7412[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m7413[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m7414[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m7415[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m7416[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m7417[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m7418[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m7419[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m7420[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m7421[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m7422[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m7423[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m7424[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m7425[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m7426[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m7427[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m7428[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m7429[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m7430[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m7431[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m7432[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m7433[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m7434[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m7435[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m7436[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m7437[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m7438[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m7439[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m7440[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m7441[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m7442[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m7443[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m7444[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m7445[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m7446[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m7447[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m7448[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m7449[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m7450[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m7451[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m7452[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m7453[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m7454[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m7455[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m7456[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m7457[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m7458[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m7459[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m7460[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m7461[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m7462[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m7463[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m7464[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m7465[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m7466[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m7467[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m7468[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m7469[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m7470[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m7471[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m7472[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m7473[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m7474[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m7475[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m7476[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m7477[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m7478[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m7479[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m7480[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m7481[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m7482[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m7483[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m7484[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m7485[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m7486[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m7487[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m7488[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m7489[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m7490[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m7491[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m7492[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m7493[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m7494[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m7495[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m7496[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m7497[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m7498[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m7499[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m7500[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m7501[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m7502[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m7503[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m7504[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m7505[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m7506[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m7507[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m7508[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m7509[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m7510[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m7511[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m7512[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m7513[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m7514[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m7515[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m7516[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m7517[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m7518[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m7519[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m7520[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m7521[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m7522[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m7523[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m7524[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m7525[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m7526[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m7527[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m7528[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m7529[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m7530[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m7531[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m7532[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m7533[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m7534[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m7535[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m7536[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m7537[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m7538[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m7539[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m7540[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m7541[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m7542[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m7543[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m7544[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m7545[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m7546[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m7547[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m7548[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m7549[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m7550[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m7551[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m7552[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m7553[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m7554[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m7555[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m7556[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m7557[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m7558[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m7559[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m7560[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m7561[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m7562[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m7563[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m7564[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m7565[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m7566[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m7567[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m7568[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m7569[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m7570[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m7571[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m7572[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m7573[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m7574[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m7575[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m7576[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m7577[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m7578[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m7579[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m7580[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m7581[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m7582[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m7583[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m7584[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m7585[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m7586[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m7587[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m7588[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m7589[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m7590[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m7591[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m7592[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m7593[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m7594[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m7595[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m7596[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m7597[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m7598[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m7599[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m7600[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m7601[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m7602[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m7603[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m7604[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m7605[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m7606[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m7607[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m7608[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m7609[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m7610[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m7611[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m7612[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m7613[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m7614[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m7615[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m7616[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m7617[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m7618[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m7619[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m7620[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m7621[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m7622[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m7623[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m7624[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m7625[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m7626[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m7627[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m7628[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m7629[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m7630[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m7631[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m7632[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m7633[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m7634[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m7635[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m7636[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m7637[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m7638[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m7639[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m7640[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m7641[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m7642[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m7643[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m7644[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m7645[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m7646[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m7647[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m7648[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m7649[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m7650[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m7651[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m7652[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m7653[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m7654[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m7655[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m7656[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m7657[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m7658[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m7659[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m7660[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m7661[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m7662[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m7663[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m7664[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m7665[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m7666[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m7667[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m7668[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m7669[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m7670[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m7671[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m7672[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m7673[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m7674[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m7675[0m ReadStream "data" event #99 argument has correct "value"[K
[1A[1G[1m[32m✓ ReadStream: deferred ReadStream on new db[0m[1B[1G
# ReadStream: readStream() with "limit"[K

  ok [1m[32m7676[0m undefined[K
  ok [1m[32m7677[0m ReadStream emitted single "end" event[K
  ok [1m[32m7678[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7679[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m7680[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m7681[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m7682[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m7683[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m7684[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m7685[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m7686[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m7687[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m7688[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m7689[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m7690[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m7691[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m7692[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m7693[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m7694[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m7695[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m7696[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m7697[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m7698[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m7699[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m7700[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m7701[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m7702[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m7703[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m7704[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m7705[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m7706[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m7707[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m7708[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m7709[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m7710[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m7711[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m7712[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m7713[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m7714[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m7715[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m7716[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m7717[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m7718[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m7719[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m7720[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m7721[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m7722[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m7723[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m7724[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m7725[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m7726[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m7727[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m7728[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m7729[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m7730[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m7731[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m7732[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m7733[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m7734[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m7735[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m7736[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m7737[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m7738[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m7739[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m7740[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m7741[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m7742[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m7743[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m7744[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m7745[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m7746[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m7747[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m7748[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m7749[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m7750[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m7751[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m7752[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m7753[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m7754[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m7755[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m7756[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m7757[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m7758[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m7759[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m7760[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m7761[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m7762[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m7763[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m7764[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m7765[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m7766[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m7767[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m7768[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m7769[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m7770[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m7771[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m7772[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m7773[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m7774[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m7775[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m7776[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m7777[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m7778[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m7779[0m no test error[K
  ok [1m[32m7780[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "limit"[0m[1B[1G
# ReadStream: readStream() with "gte" and "limit"[K

  ok [1m[32m7781[0m undefined[K
  ok [1m[32m7782[0m ReadStream emitted single "end" event[K
  ok [1m[32m7783[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7784[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m7785[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m7786[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m7787[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m7788[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m7789[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m7790[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m7791[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m7792[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m7793[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m7794[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m7795[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m7796[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m7797[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m7798[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m7799[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m7800[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m7801[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m7802[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m7803[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m7804[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m7805[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m7806[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m7807[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m7808[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m7809[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m7810[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m7811[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m7812[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m7813[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m7814[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m7815[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m7816[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m7817[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m7818[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m7819[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m7820[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m7821[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m7822[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m7823[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m7824[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m7825[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m7826[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m7827[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m7828[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m7829[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m7830[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m7831[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m7832[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m7833[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m7834[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m7835[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m7836[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m7837[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m7838[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m7839[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m7840[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m7841[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m7842[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m7843[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m7844[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m7845[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m7846[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m7847[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m7848[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m7849[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m7850[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m7851[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m7852[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m7853[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m7854[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m7855[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m7856[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m7857[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m7858[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m7859[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m7860[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m7861[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m7862[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m7863[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m7864[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m7865[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m7866[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m7867[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m7868[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m7869[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m7870[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m7871[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m7872[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m7873[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m7874[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m7875[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m7876[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m7877[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m7878[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m7879[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m7880[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m7881[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m7882[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m7883[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m7884[0m no test error[K
  ok [1m[32m7885[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" and "limit"[0m[1B[1G
# ReadStream: readStream() with "lte" after "limit"[K

  ok [1m[32m7886[0m undefined[K
  ok [1m[32m7887[0m ReadStream emitted single "end" event[K
  ok [1m[32m7888[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7889[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m7890[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m7891[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m7892[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m7893[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m7894[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m7895[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m7896[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m7897[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m7898[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m7899[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m7900[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m7901[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m7902[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m7903[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m7904[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m7905[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m7906[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m7907[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m7908[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m7909[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m7910[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m7911[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m7912[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m7913[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m7914[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m7915[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m7916[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m7917[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m7918[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m7919[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m7920[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m7921[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m7922[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m7923[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m7924[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m7925[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m7926[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m7927[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m7928[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m7929[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m7930[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m7931[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m7932[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m7933[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m7934[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m7935[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m7936[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m7937[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m7938[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m7939[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m7940[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m7941[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m7942[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m7943[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m7944[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m7945[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m7946[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m7947[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m7948[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m7949[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m7950[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m7951[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m7952[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m7953[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m7954[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m7955[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m7956[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m7957[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m7958[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m7959[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m7960[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m7961[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m7962[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m7963[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m7964[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m7965[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m7966[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m7967[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m7968[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m7969[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m7970[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m7971[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m7972[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m7973[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m7974[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m7975[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m7976[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m7977[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m7978[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m7979[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m7980[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m7981[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m7982[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m7983[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m7984[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m7985[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m7986[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m7987[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m7988[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m7989[0m no test error[K
  ok [1m[32m7990[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" after "limit"[0m[1B[1G
# ReadStream: readStream() with "lte" before "limit"[K

  ok [1m[32m7991[0m undefined[K
  ok [1m[32m7992[0m ReadStream emitted single "end" event[K
  ok [1m[32m7993[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m7994[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m7995[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m7996[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m7997[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m7998[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m7999[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m8000[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m8001[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m8002[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m8003[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m8004[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m8005[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m8006[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m8007[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m8008[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m8009[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m8010[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m8011[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m8012[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m8013[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m8014[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m8015[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m8016[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m8017[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m8018[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m8019[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m8020[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m8021[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m8022[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m8023[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m8024[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m8025[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m8026[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m8027[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m8028[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m8029[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m8030[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m8031[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m8032[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m8033[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m8034[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m8035[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m8036[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m8037[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m8038[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m8039[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m8040[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m8041[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m8042[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m8043[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m8044[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m8045[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m8046[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m8047[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m8048[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m8049[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m8050[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m8051[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m8052[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m8053[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m8054[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m8055[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m8056[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m8057[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m8058[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m8059[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m8060[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m8061[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m8062[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m8063[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m8064[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m8065[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m8066[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m8067[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m8068[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m8069[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m8070[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m8071[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m8072[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m8073[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m8074[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m8075[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m8076[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m8077[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m8078[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m8079[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m8080[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m8081[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m8082[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m8083[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m8084[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m8085[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m8086[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m8087[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m8088[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m8089[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m8090[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m8091[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m8092[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m8093[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m8094[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m8095[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m8096[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m8097[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m8098[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m8099[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m8100[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m8101[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m8102[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m8103[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m8104[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m8105[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m8106[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m8107[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m8108[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m8109[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m8110[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m8111[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m8112[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m8113[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m8114[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m8115[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m8116[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m8117[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m8118[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m8119[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m8120[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m8121[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m8122[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m8123[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m8124[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m8125[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m8126[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m8127[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m8128[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m8129[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m8130[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m8131[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m8132[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m8133[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m8134[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m8135[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m8136[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m8137[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m8138[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m8139[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m8140[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m8141[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m8142[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m8143[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m8144[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m8145[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m8146[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m8147[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m8148[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m8149[0m no test error[K
  ok [1m[32m8150[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" before "limit"[0m[1B[1G
# ReadStream: iterator next/end race condition[K

  ok [1m[32m8151[0m undefined[K
  ok [1m[32m8152[0m no test error[K
  ok [1m[32m8153[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: iterator next/end race condition[0m[1B[1G
# ReadStream: can only end once[K

  ok [1m[32m8154[0m undefined[K
  ok [1m[32m8155[0m no test error[K
  ok [1m[32m8156[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: can only end once[0m[1B[1G
# ReadStream implicit snapshot[K

  ok [1m[32m8157[0m no batch error[K
  ok [1m[32m8158[0m no batch error[K
  ok [1m[32m8159[0m ReadStream emitted single "end" event[K
  ok [1m[32m8160[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m8161[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m8162[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m8163[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m8164[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m8165[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m8166[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m8167[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m8168[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m8169[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m8170[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m8171[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m8172[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m8173[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m8174[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m8175[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m8176[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m8177[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m8178[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m8179[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m8180[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m8181[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m8182[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m8183[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m8184[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m8185[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m8186[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m8187[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m8188[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m8189[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m8190[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m8191[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m8192[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m8193[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m8194[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m8195[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m8196[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m8197[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m8198[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m8199[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m8200[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m8201[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m8202[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m8203[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m8204[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m8205[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m8206[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m8207[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m8208[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m8209[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m8210[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m8211[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m8212[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m8213[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m8214[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m8215[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m8216[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m8217[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m8218[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m8219[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m8220[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m8221[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m8222[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m8223[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m8224[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m8225[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m8226[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m8227[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m8228[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m8229[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m8230[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m8231[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m8232[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m8233[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m8234[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m8235[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m8236[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m8237[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m8238[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m8239[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m8240[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m8241[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m8242[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m8243[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m8244[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m8245[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m8246[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m8247[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m8248[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m8249[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m8250[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m8251[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m8252[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m8253[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m8254[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m8255[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m8256[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m8257[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m8258[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m8259[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m8260[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m8261[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m8262[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m8263[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m8264[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m8265[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m8266[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m8267[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m8268[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m8269[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m8270[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m8271[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m8272[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m8273[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m8274[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m8275[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m8276[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m8277[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m8278[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m8279[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m8280[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m8281[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m8282[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m8283[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m8284[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m8285[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m8286[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m8287[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m8288[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m8289[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m8290[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m8291[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m8292[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m8293[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m8294[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m8295[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m8296[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m8297[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m8298[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m8299[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m8300[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m8301[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m8302[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m8303[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m8304[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m8305[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m8306[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m8307[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m8308[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m8309[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m8310[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m8311[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m8312[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m8313[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m8314[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m8315[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m8316[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m8317[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m8318[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m8319[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m8320[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m8321[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m8322[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m8323[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m8324[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m8325[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m8326[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m8327[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m8328[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m8329[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m8330[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m8331[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m8332[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m8333[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m8334[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m8335[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m8336[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m8337[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m8338[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m8339[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m8340[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m8341[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m8342[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m8343[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m8344[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m8345[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m8346[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m8347[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m8348[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m8349[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m8350[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m8351[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m8352[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m8353[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m8354[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m8355[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m8356[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m8357[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m8358[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m8359[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m8360[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m8361[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m8362[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m8363[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m8364[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m8365[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m8366[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m8367[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m8368[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m8369[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m8370[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m8371[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m8372[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m8373[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m8374[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m8375[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m8376[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m8377[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m8378[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m8379[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m8380[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m8381[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m8382[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m8383[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m8384[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m8385[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m8386[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m8387[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m8388[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m8389[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m8390[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m8391[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m8392[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m8393[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m8394[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m8395[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m8396[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m8397[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m8398[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m8399[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m8400[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m8401[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m8402[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m8403[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m8404[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m8405[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m8406[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m8407[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m8408[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m8409[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m8410[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m8411[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m8412[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m8413[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m8414[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m8415[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m8416[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m8417[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m8418[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m8419[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m8420[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m8421[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m8422[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m8423[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m8424[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m8425[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m8426[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m8427[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m8428[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m8429[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m8430[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m8431[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m8432[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m8433[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m8434[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m8435[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m8436[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m8437[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m8438[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m8439[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m8440[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m8441[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m8442[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m8443[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m8444[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m8445[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m8446[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m8447[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m8448[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m8449[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m8450[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m8451[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m8452[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m8453[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m8454[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m8455[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m8456[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m8457[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m8458[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m8459[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m8460[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m8461[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m8462[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m8463[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m8464[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m8465[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m8466[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m8467[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m8468[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m8469[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m8470[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m8471[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m8472[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m8473[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m8474[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m8475[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m8476[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m8477[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m8478[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m8479[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m8480[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m8481[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m8482[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m8483[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m8484[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m8485[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m8486[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m8487[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m8488[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m8489[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m8490[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m8491[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m8492[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m8493[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m8494[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m8495[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m8496[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m8497[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m8498[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m8499[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m8500[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m8501[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m8502[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m8503[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m8504[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m8505[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m8506[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m8507[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m8508[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m8509[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m8510[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m8511[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m8512[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m8513[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m8514[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m8515[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m8516[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m8517[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m8518[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m8519[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m8520[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m8521[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m8522[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m8523[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m8524[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m8525[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m8526[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m8527[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m8528[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m8529[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m8530[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m8531[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m8532[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m8533[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m8534[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m8535[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m8536[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m8537[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m8538[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m8539[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m8540[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m8541[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m8542[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m8543[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m8544[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m8545[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m8546[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m8547[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m8548[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m8549[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m8550[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m8551[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m8552[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m8553[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m8554[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m8555[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m8556[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m8557[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m8558[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m8559[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m8560[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m8561[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m8562[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m8563[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m8564[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m8565[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m8566[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m8567[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m8568[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m8569[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m8570[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m8571[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m8572[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m8573[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m8574[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m8575[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m8576[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m8577[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m8578[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m8579[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m8580[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m8581[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m8582[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m8583[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m8584[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m8585[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m8586[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m8587[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m8588[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m8589[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m8590[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m8591[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m8592[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m8593[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m8594[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m8595[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m8596[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m8597[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m8598[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m8599[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m8600[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m8601[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m8602[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m8603[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m8604[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m8605[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m8606[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m8607[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m8608[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m8609[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m8610[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m8611[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m8612[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m8613[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m8614[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m8615[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m8616[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m8617[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m8618[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m8619[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m8620[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m8621[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m8622[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m8623[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m8624[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m8625[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m8626[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m8627[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m8628[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m8629[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m8630[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m8631[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m8632[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m8633[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m8634[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m8635[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m8636[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m8637[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m8638[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m8639[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m8640[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m8641[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m8642[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m8643[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m8644[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m8645[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m8646[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m8647[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m8648[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m8649[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m8650[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m8651[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m8652[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m8653[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m8654[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m8655[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m8656[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m8657[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m8658[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m8659[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m8660[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m8661[0m no test error[K
  ok [1m[32m8662[0m no close error[K
[1A[1G[1m[32m✓ ReadStream implicit snapshot[0m[1B[1G
# simple iterator without encoding-down[K

  ok [1m[32m8663[0m no put error[K
  ok [1m[32m8664[0m no next error[K
  ok [1m[32m8665[0m should be strictly equal[K
  ok [1m[32m8666[0m should be strictly equal[K
  ok [1m[32m8667[0m no end error[K
[1A[1G[1m[32m✓ simple iterator without encoding-down[0m[1B[1G
# iterator#seek()[K

[1A[1G[1m[32m✓ iterator#seek()[0m[1B[1G
# setup[K

  ok [1m[32m8668[0m no open error[K
  ok [1m[32m8669[0m no batch error[K
[1A[1G[1m[32m✓ setup[0m[1B[1G
# without encoding, without deferred-open[K

  ok [1m[32m8670[0m no open error[K
  ok [1m[32m8671[0m no next error[K
  ok [1m[32m8672[0m should be strictly equal[K
  ok [1m[32m8673[0m no end error[K
[1A[1G[1m[32m✓ without encoding, without deferred-open[0m[1B[1G
# without encoding, with deferred-open[K

  ok [1m[32m8674[0m no next error[K
  ok [1m[32m8675[0m should be strictly equal[K
  ok [1m[32m8676[0m no end error[K
[1A[1G[1m[32m✓ without encoding, with deferred-open[0m[1B[1G
# with encoding, with deferred-open[K

  ok [1m[32m8677[0m no next error[K
  ok [1m[32m8678[0m should be strictly equal[K
  ok [1m[32m8679[0m no end error[K
[1A[1G[1m[32m✓ with encoding, with deferred-open[0m[1B[1G
# with encoding, without deferred-open[K

  ok [1m[32m8680[0m no open error[K
  ok [1m[32m8681[0m no next error[K
  ok [1m[32m8682[0m should be strictly equal[K
  ok [1m[32m8683[0m no end error[K
[1A[1G[1m[32m✓ with encoding, without deferred-open[0m[1B[1G
# db has manifest[K

  ok [1m[32m8684[0m manifest is object[K
  ok [1m[32m8685[0m additionalMethods is object[K
  ok [1m[32m8686[0m truthy: bufferKeys[K
  ok [1m[32m8687[0m truthy: snapshots[K
  ok [1m[32m8688[0m false: permanence[K
  ok [1m[32m8689[0m truthy: seek[K
  ok [1m[32m8690[0m truthy: clear[K
  ok [1m[32m8691[0m truthy: getMany[K
  ok [1m[32m8692[0m truthy: status[K
  ok [1m[32m8693[0m false: keyIterator[K
  ok [1m[32m8694[0m false: valueIterator[K
  ok [1m[32m8695[0m false: iteratorNextv[K
  ok [1m[32m8696[0m false: iteratorAll[K
  ok [1m[32m8697[0m false: idempotentOpen[K
  ok [1m[32m8698[0m false: passiveOpen[K
  ok [1m[32m8699[0m false: serialize[K
  ok [1m[32m8700[0m false: createIfMissing[K
  ok [1m[32m8701[0m false: errorIfExists[K
  ok [1m[32m8702[0m truthy: deferredOpen[K
  ok [1m[32m8703[0m truthy: openCallback[K
  ok [1m[32m8704[0m truthy: promises[K
  ok [1m[32m8705[0m truthy: streams[K
  ok [1m[32m8706[0m false: encodings[K
  ok [1m[32m8707[0m false: events[K
  ok [1m[32m8708[0m truthy: additionalMethods[K
  ok [1m[32m8709[0m manifest has unique identity[K
  ok [1m[32m8710[0m manifest.additionalMethods has unique identity[K
  ok [1m[32m8711[0m no open error[K
  ok [1m[32m8712[0m manifest did not change after open[K
  ok [1m[32m8713[0m no close error[K
  ok [1m[32m8714[0m manifest did not change after close[K
[1A[1G[1m[32m✓ db has manifest[0m[1B[1G
# manifest has expected properties[K

  ok [1m[32m8715[0m should be strictly equal[K
  ok [1m[32m8716[0m should be strictly equal[K
  ok [1m[32m8717[0m should be strictly equal[K
  ok [1m[32m8718[0m should be strictly equal[K
  ok [1m[32m8719[0m should be strictly equal[K
[1A[1G[1m[32m✓ manifest has expected properties[0m[1B[1G
# array-form batch(): multiple puts[K

  ok [1m[32m8720[0m undefined[K
  ok [1m[32m8721[0m null[K
  ok [1m[32m8722[0m should be strictly equal[K
  ok [1m[32m8723[0m null[K
  ok [1m[32m8724[0m should be strictly equal[K
  ok [1m[32m8725[0m null[K
  ok [1m[32m8726[0m should be strictly equal[K
  ok [1m[32m8727[0m no test error[K
  ok [1m[32m8728[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): multiple puts[0m[1B[1G
# array-form batch(): promise interface[K

  ok [1m[32m8729[0m null[K
  ok [1m[32m8730[0m should be strictly equal[K
  ok [1m[32m8731[0m null[K
  ok [1m[32m8732[0m should be strictly equal[K
  ok [1m[32m8733[0m null[K
  ok [1m[32m8734[0m should be strictly equal[K
  ok [1m[32m8735[0m no test error[K
  ok [1m[32m8736[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): promise interface[0m[1B[1G
# array-form batch(): multiple operations[K

  ok [1m[32m8737[0m null[K
  ok [1m[32m8738[0m should be truthy[K
  ok [1m[32m8739[0m null[K
  ok [1m[32m8740[0m should be truthy[K
  ok [1m[32m8741[0m null[K
  ok [1m[32m8742[0m should be truthy[K
  ok [1m[32m8743[0m null[K
  ok [1m[32m8744[0m should be truthy[K
  ok [1m[32m8745[0m should be truthy[K
  ok [1m[32m8746[0m should be truthy[K
  ok [1m[32m8747[0m should be strictly equal[K
  ok [1m[32m8748[0m should be truthy[K
  ok [1m[32m8749[0m should be truthy[K
  ok [1m[32m8750[0m should be strictly equal[K
  ok [1m[32m8751[0m no test error[K
  ok [1m[32m8752[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): multiple operations[0m[1B[1G
# chained batch(): multiple operations[K

  ok [1m[32m8753[0m undefined[K
  ok [1m[32m8754[0m undefined[K
  ok [1m[32m8755[0m should be truthy[K
  ok [1m[32m8756[0m should be truthy[K
  ok [1m[32m8757[0m should be truthy[K
  ok [1m[32m8758[0m null[K
  ok [1m[32m8759[0m should be truthy[K
  ok [1m[32m8760[0m no test error[K
  ok [1m[32m8761[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): multiple operations[0m[1B[1G
# chained batch(): options[K

  ok [1m[32m8762[0m should be deeply equivalent[K
  ok [1m[32m8763[0m undefined[K
  ok [1m[32m8764[0m no test error[K
  ok [1m[32m8765[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): options[0m[1B[1G
# chained batch(): promise interface - options[K

  ok [1m[32m8766[0m should be deeply equivalent[K
  ok [1m[32m8767[0m no test error[K
  ok [1m[32m8768[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): promise interface - options[0m[1B[1G
# chained batch(): promise interface[K

  ok [1m[32m8769[0m undefined[K
  ok [1m[32m8770[0m should be truthy[K
  ok [1m[32m8771[0m should be truthy[K
  ok [1m[32m8772[0m should be truthy[K
  ok [1m[32m8773[0m null[K
  ok [1m[32m8774[0m should be truthy[K
  ok [1m[32m8775[0m no test error[K
  ok [1m[32m8776[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): promise interface[0m[1B[1G
# chained batch(): exposes ops queue length[K

  ok [1m[32m8777[0m should be strictly equal[K
  ok [1m[32m8778[0m should be strictly equal[K
  ok [1m[32m8779[0m should be strictly equal[K
  ok [1m[32m8780[0m no test error[K
  ok [1m[32m8781[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): exposes ops queue length[0m[1B[1G
# array-form batch(): can overwrite data from put()[K

  ok [1m[32m8782[0m null[K
  ok [1m[32m8783[0m should be truthy[K
  ok [1m[32m8784[0m null[K
  ok [1m[32m8785[0m should be truthy[K
  ok [1m[32m8786[0m null[K
  ok [1m[32m8787[0m should be truthy[K
  ok [1m[32m8788[0m null[K
  ok [1m[32m8789[0m should be truthy[K
  ok [1m[32m8790[0m should be truthy[K
  ok [1m[32m8791[0m should be truthy[K
  ok [1m[32m8792[0m should be strictly equal[K
  ok [1m[32m8793[0m should be truthy[K
  ok [1m[32m8794[0m should be truthy[K
  ok [1m[32m8795[0m should be strictly equal[K
  ok [1m[32m8796[0m no test error[K
  ok [1m[32m8797[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): can overwrite data from put()[0m[1B[1G
# array-form batch(): data can be read with get() and del()[K

  ok [1m[32m8798[0m null[K
  ok [1m[32m8799[0m should be truthy[K
  ok [1m[32m8800[0m null[K
  ok [1m[32m8801[0m should be truthy[K
  ok [1m[32m8802[0m should be truthy[K
  ok [1m[32m8803[0m should be truthy[K
  ok [1m[32m8804[0m should be strictly equal[K
  ok [1m[32m8805[0m no test error[K
  ok [1m[32m8806[0m no close error[K
[1A[1G[1m[32m✓ array-form batch(): data can be read with get() and del()[0m[1B[1G
# chained batch() arguments[K

[1A[1G[1m[32m✓ chained batch() arguments[0m[1B[1G
# chained batch() arguments: batch#put() with missing `value`[K

  ok [1m[32m8807[0m should be strictly equal[K
  ok [1m[32m8808[0m should be strictly equal[K
  ok [1m[32m8809[0m should be strictly equal[K
  ok [1m[32m8810[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `value`[0m[1B[1G
# chained batch() arguments: batch#put() with missing `key`[K

  ok [1m[32m8811[0m should be strictly equal[K
  ok [1m[32m8812[0m should be strictly equal[K
  ok [1m[32m8813[0m should be strictly equal[K
  ok [1m[32m8814[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `key`[0m[1B[1G
# chained batch() arguments: batch#put() with missing `key` and `value`[K

  ok [1m[32m8815[0m should be strictly equal[K
  ok [1m[32m8816[0m should be strictly equal[K
  ok [1m[32m8817[0m should be strictly equal[K
  ok [1m[32m8818[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#put() with missing `key` and `value`[0m[1B[1G
# chained batch() arguments: batch#del() with missing `key`[K

  ok [1m[32m8819[0m should be strictly equal[K
  ok [1m[32m8820[0m should be strictly equal[K
  ok [1m[32m8821[0m should be strictly equal[K
  ok [1m[32m8822[0m should be strictly equal[K
[1A[1G[1m[32m✓ chained batch() arguments: batch#del() with missing `key`[0m[1B[1G
# chained batch() arguments: teardown[K

  ok [1m[32m8823[0m no test error[K
[1A[1G[1m[32m✓ chained batch() arguments: teardown[0m[1B[1G
# chained batch(): rejects operations after write()[K

  ok [1m[32m8824[0m no close error[K
  ok [1m[32m8825[0m no batch error[K
  ok [1m[32m8826[0m should be strictly equal[K
  ok [1m[32m8827[0m should be strictly equal[K
  ok [1m[32m8828[0m should be strictly equal[K
  ok [1m[32m8829[0m should be strictly equal[K
  ok [1m[32m8830[0m should be strictly equal[K
  ok [1m[32m8831[0m should be strictly equal[K
  ok [1m[32m8832[0m no test error[K
  ok [1m[32m8833[0m no close error[K
[1A[1G[1m[32m✓ chained batch(): rejects operations after write()[0m[1B[1G
# clear()[K

[1A[1G[1m[32m✓ clear()[0m[1B[1G
# clear() without encoding, without deferred-open[K

  ok [1m[32m8834[0m no open error[K
  ok [1m[32m8835[0m no batch error[K
  ok [1m[32m8836[0m no close error[K
  ok [1m[32m8837[0m null[K
  ok [1m[32m8838[0m no clear error[K
  ok [1m[32m8839[0m no concat error[K
  ok [1m[32m8840[0m got expected keys[K
[1A[1G[1m[32m✓ clear() without encoding, without deferred-open[0m[1B[1G
# clear() without encoding, with deferred-open[K

  ok [1m[32m8841[0m no open error[K
  ok [1m[32m8842[0m no batch error[K
  ok [1m[32m8843[0m no close error[K
  ok [1m[32m8844[0m no clear error[K
  ok [1m[32m8845[0m no concat error[K
  ok [1m[32m8846[0m got expected keys[K
[1A[1G[1m[32m✓ clear() without encoding, with deferred-open[0m[1B[1G
# clear() with encoding, with deferred-open[K

  ok [1m[32m8847[0m no open error[K
  ok [1m[32m8848[0m no batch error[K
  ok [1m[32m8849[0m no close error[K
  ok [1m[32m8850[0m no clear error[K
  ok [1m[32m8851[0m no concat error[K
  ok [1m[32m8852[0m got expected keys[K
[1A[1G[1m[32m✓ clear() with encoding, with deferred-open[0m[1B[1G
# clear() with encoding, without deferred-open[K

  ok [1m[32m8853[0m no open error[K
  ok [1m[32m8854[0m no batch error[K
  ok [1m[32m8855[0m no close error[K
  ok [1m[32m8856[0m null[K
  ok [1m[32m8857[0m no clear error[K
  ok [1m[32m8858[0m no concat error[K
  ok [1m[32m8859[0m got expected keys[K
[1A[1G[1m[32m✓ clear() with encoding, without deferred-open[0m[1B[1G
# readStream before put, encode, deferred open, delayed put[K

  ok [1m[32m8860[0m no error[K
  ok [1m[32m8861[0m got 0 items from snaphot[K
  ok [1m[32m8862[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, deferred open, delayed put[0m[1B[1G
# readStream before put, encode, deferred open[K

  ok [1m[32m8863[0m no error[K
  ok [1m[32m8864[0m got 0 items from snaphot[K
  ok [1m[32m8865[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, deferred open[0m[1B[1G
# readStream before put, encode, delayed put[K

  ok [1m[32m8866[0m no open error[K
  ok [1m[32m8867[0m no error[K
  ok [1m[32m8868[0m got 0 items from snaphot[K
  ok [1m[32m8869[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode, delayed put[0m[1B[1G
# readStream before put, encode[K

  ok [1m[32m8870[0m no open error[K
  ok [1m[32m8871[0m no error[K
  ok [1m[32m8872[0m got 0 items from snaphot[K
  ok [1m[32m8873[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, encode[0m[1B[1G
# readStream before put, deferred open, delayed put[K

  ok [1m[32m8874[0m no error[K
  ok [1m[32m8875[0m got 0 items from snaphot[K
  ok [1m[32m8876[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, deferred open, delayed put[0m[1B[1G
# readStream before put, deferred open[K

  ok [1m[32m8877[0m no error[K
  ok [1m[32m8878[0m got 0 items from snaphot[K
  ok [1m[32m8879[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, deferred open[0m[1B[1G
# readStream before put, delayed put[K

  ok [1m[32m8880[0m no open error[K
  ok [1m[32m8881[0m no error[K
  ok [1m[32m8882[0m got 0 items from snaphot[K
  ok [1m[32m8883[0m no close error[K
[1A[1G[1m[32m✓ readStream before put, delayed put[0m[1B[1G
# readStream before put[K

  ok [1m[32m8884[0m no open error[K
  ok [1m[32m8885[0m no error[K
  ok [1m[32m8886[0m got 0 items from snaphot[K
  ok [1m[32m8887[0m no close error[K
[1A[1G[1m[32m✓ readStream before put[0m[1B[1G
# deferred open(): put() and get() on new database[K

  ok [1m[32m8888[0m should be strictly equal[K
  ok [1m[32m8889[0m null[K
  ok [1m[32m8890[0m should be strictly equal[K
  ok [1m[32m8891[0m null[K
  ok [1m[32m8892[0m should be strictly equal[K
  ok [1m[32m8893[0m null[K
  ok [1m[32m8894[0m should be strictly equal[K
  ok [1m[32m8895[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): put() and get() on new database[0m[1B[1G
# deferred open(): put() and get() on reopened database[K

  ok [1m[32m8896[0m should be strictly equal[K
  ok [1m[32m8897[0m should be strictly equal[K
  ok [1m[32m8898[0m should be strictly equal[K
  ok [1m[32m8899[0m should be strictly equal[K
[1A[1G[1m[32m✓ deferred open(): put() and get() on reopened database[0m[1B[1G
# deferred open(): batch() on new database[K

  ok [1m[32m8900[0m should be strictly equal[K
  ok [1m[32m8901[0m null[K
  ok [1m[32m8902[0m should be strictly equal[K
  ok [1m[32m8903[0m null[K
  ok [1m[32m8904[0m should be strictly equal[K
  ok [1m[32m8905[0m null[K
  ok [1m[32m8906[0m should be strictly equal[K
  ok [1m[32m8907[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): batch() on new database[0m[1B[1G
# deferred open(): chained batch() on new database[K

  ok [1m[32m8908[0m should be strictly equal[K
  ok [1m[32m8909[0m null[K
  ok [1m[32m8910[0m should be strictly equal[K
  ok [1m[32m8911[0m null[K
  ok [1m[32m8912[0m should be strictly equal[K
  ok [1m[32m8913[0m null[K
  ok [1m[32m8914[0m should be strictly equal[K
  ok [1m[32m8915[0m should be truthy[K
[1A[1G[1m[32m✓ deferred open(): chained batch() on new database[0m[1B[1G
# deferred open(): test deferred ReadStream[K

  ok [1m[32m8916[0m undefined[K
  ok [1m[32m8917[0m no error[K
  ok [1m[32m8918[0m should be truthy[K
  ok [1m[32m8919[0m no open error[K
  ok [1m[32m8920[0m ReadStream emitted single "end" event[K
  ok [1m[32m8921[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m8922[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m8923[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m8924[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m8925[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m8926[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m8927[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m8928[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m8929[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m8930[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m8931[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m8932[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m8933[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m8934[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m8935[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m8936[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m8937[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m8938[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m8939[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m8940[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m8941[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m8942[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m8943[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m8944[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m8945[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m8946[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m8947[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m8948[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m8949[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m8950[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m8951[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m8952[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m8953[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m8954[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m8955[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m8956[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m8957[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m8958[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m8959[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m8960[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m8961[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m8962[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m8963[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m8964[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m8965[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m8966[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m8967[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m8968[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m8969[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m8970[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m8971[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m8972[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m8973[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m8974[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m8975[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m8976[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m8977[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m8978[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m8979[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m8980[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m8981[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m8982[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m8983[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m8984[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m8985[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m8986[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m8987[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m8988[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m8989[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m8990[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m8991[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m8992[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m8993[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m8994[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m8995[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m8996[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m8997[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m8998[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m8999[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m9000[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m9001[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m9002[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m9003[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m9004[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m9005[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m9006[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m9007[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m9008[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m9009[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m9010[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m9011[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m9012[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m9013[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m9014[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m9015[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m9016[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m9017[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m9018[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m9019[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m9020[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m9021[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m9022[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m9023[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m9024[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m9025[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m9026[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m9027[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m9028[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m9029[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m9030[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m9031[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m9032[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m9033[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m9034[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m9035[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m9036[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m9037[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m9038[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m9039[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m9040[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m9041[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m9042[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m9043[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m9044[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m9045[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m9046[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m9047[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m9048[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m9049[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m9050[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m9051[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m9052[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m9053[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m9054[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m9055[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m9056[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m9057[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m9058[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m9059[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m9060[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m9061[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m9062[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m9063[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m9064[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m9065[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m9066[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m9067[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m9068[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m9069[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m9070[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m9071[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m9072[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m9073[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m9074[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m9075[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m9076[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m9077[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m9078[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m9079[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m9080[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m9081[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m9082[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m9083[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m9084[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m9085[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m9086[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m9087[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m9088[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m9089[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m9090[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m9091[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m9092[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m9093[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m9094[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m9095[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m9096[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m9097[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m9098[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m9099[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m9100[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m9101[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m9102[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m9103[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m9104[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m9105[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m9106[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m9107[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m9108[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m9109[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m9110[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m9111[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m9112[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m9113[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m9114[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m9115[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m9116[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m9117[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m9118[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m9119[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m9120[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m9121[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m9122[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m9123[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m9124[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m9125[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m9126[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m9127[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m9128[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m9129[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m9130[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m9131[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m9132[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m9133[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m9134[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m9135[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m9136[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m9137[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m9138[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m9139[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m9140[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m9141[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m9142[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m9143[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m9144[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m9145[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m9146[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m9147[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m9148[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m9149[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m9150[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m9151[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m9152[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m9153[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m9154[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m9155[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m9156[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m9157[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m9158[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m9159[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m9160[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m9161[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m9162[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m9163[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m9164[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m9165[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m9166[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m9167[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m9168[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m9169[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m9170[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m9171[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m9172[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m9173[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m9174[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m9175[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m9176[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m9177[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m9178[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m9179[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m9180[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m9181[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m9182[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m9183[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m9184[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m9185[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m9186[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m9187[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m9188[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m9189[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m9190[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m9191[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m9192[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m9193[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m9194[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m9195[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m9196[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m9197[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m9198[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m9199[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m9200[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m9201[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m9202[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m9203[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m9204[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m9205[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m9206[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m9207[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m9208[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m9209[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m9210[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m9211[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m9212[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m9213[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m9214[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m9215[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m9216[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m9217[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m9218[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m9219[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m9220[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m9221[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m9222[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m9223[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m9224[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m9225[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m9226[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m9227[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m9228[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m9229[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m9230[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m9231[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m9232[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m9233[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m9234[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m9235[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m9236[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m9237[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m9238[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m9239[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m9240[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m9241[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m9242[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m9243[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m9244[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m9245[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m9246[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m9247[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m9248[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m9249[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m9250[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m9251[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m9252[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m9253[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m9254[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m9255[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m9256[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m9257[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m9258[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m9259[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m9260[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m9261[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m9262[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m9263[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m9264[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m9265[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m9266[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m9267[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m9268[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m9269[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m9270[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m9271[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m9272[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m9273[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m9274[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m9275[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m9276[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m9277[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m9278[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m9279[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m9280[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m9281[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m9282[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m9283[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m9284[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m9285[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m9286[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m9287[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m9288[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m9289[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m9290[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m9291[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m9292[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m9293[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m9294[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m9295[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m9296[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m9297[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m9298[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m9299[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m9300[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m9301[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m9302[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m9303[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m9304[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m9305[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m9306[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m9307[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m9308[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m9309[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m9310[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m9311[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m9312[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m9313[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m9314[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m9315[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m9316[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m9317[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m9318[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m9319[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m9320[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m9321[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m9322[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m9323[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m9324[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m9325[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m9326[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m9327[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m9328[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m9329[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m9330[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m9331[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m9332[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m9333[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m9334[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m9335[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m9336[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m9337[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m9338[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m9339[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m9340[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m9341[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m9342[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m9343[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m9344[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m9345[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m9346[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m9347[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m9348[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m9349[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m9350[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m9351[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m9352[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m9353[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m9354[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m9355[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m9356[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m9357[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m9358[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m9359[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m9360[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m9361[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m9362[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m9363[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m9364[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m9365[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m9366[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m9367[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m9368[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m9369[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m9370[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m9371[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m9372[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m9373[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m9374[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m9375[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m9376[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m9377[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m9378[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m9379[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m9380[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m9381[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m9382[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m9383[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m9384[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m9385[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m9386[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m9387[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m9388[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m9389[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m9390[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m9391[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m9392[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m9393[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m9394[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m9395[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m9396[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m9397[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m9398[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m9399[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m9400[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m9401[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m9402[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m9403[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m9404[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m9405[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m9406[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m9407[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m9408[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m9409[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m9410[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m9411[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m9412[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m9413[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m9414[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m9415[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m9416[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m9417[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m9418[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m9419[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m9420[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m9421[0m ReadStream "data" event #99 argument has correct "value"[K
[1A[1G[1m[32m✓ deferred open(): test deferred ReadStream[0m[1B[1G
# deferred open(): no maxListeners warning[K

  ok [1m[32m9422[0m undefined[K
  ok [1m[32m9423[0m undefined[K
  ok [1m[32m9424[0m undefined[K
  ok [1m[32m9425[0m undefined[K
  ok [1m[32m9426[0m undefined[K
  ok [1m[32m9427[0m undefined[K
  ok [1m[32m9428[0m undefined[K
  ok [1m[32m9429[0m undefined[K
  ok [1m[32m9430[0m undefined[K
  ok [1m[32m9431[0m undefined[K
  ok [1m[32m9432[0m undefined[K
[1A[1G[1m[32m✓ deferred open(): no maxListeners warning[0m[1B[1G
# get() / put() / del(): get() on empty database causes error[K

  ok [1m[32m9433[0m should be falsy[K
  ok [1m[32m9434[0m should be truthy[K
  ok [1m[32m9435[0m should be truthy[K
  ok [1m[32m9436[0m should be truthy[K
  ok [1m[32m9437[0m err.notFound is `true`[K
  ok [1m[32m9438[0m err.status is 404[K
  ok [1m[32m9439[0m should be truthy[K
  ok [1m[32m9440[0m no test error[K
  ok [1m[32m9441[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): get() on empty database causes error[0m[1B[1G
# get() / put() / del(): get() on empty database causes error (promise)[K

  ok [1m[32m9442[0m should be truthy[K
  ok [1m[32m9443[0m should be truthy[K
  ok [1m[32m9444[0m should be truthy[K
  ok [1m[32m9445[0m err.notFound is `true`[K
  ok [1m[32m9446[0m err.status is 404[K
  ok [1m[32m9447[0m should be truthy[K
  ok [1m[32m9448[0m no test error[K
  ok [1m[32m9449[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): get() on empty database causes error (promise)[0m[1B[1G
# get() / put() / del(): put() and get() simple string entries[K

  ok [1m[32m9450[0m undefined[K
  ok [1m[32m9451[0m null[K
  ok [1m[32m9452[0m should be strictly equal[K
  ok [1m[32m9453[0m no test error[K
  ok [1m[32m9454[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): put() and get() simple string entries[0m[1B[1G
# get() / put() / del(): put() and get() simple string entries (promise)[K

  ok [1m[32m9455[0m should be strictly equal[K
  ok [1m[32m9456[0m no test error[K
  ok [1m[32m9457[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): put() and get() simple string entries (promise)[0m[1B[1G
# get() / put() / del(): can del() on empty database[K

  ok [1m[32m9458[0m undefined[K
  ok [1m[32m9459[0m no test error[K
  ok [1m[32m9460[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): can del() on empty database[0m[1B[1G
# get() / put() / del(): can del() on empty database (promise)[K

  ok [1m[32m9461[0m no test error[K
  ok [1m[32m9462[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): can del() on empty database (promise)[0m[1B[1G
# get() / put() / del(): del() works on real entries[K

  ok [1m[32m9463[0m null[K
  ok [1m[32m9464[0m should be truthy[K
  ok [1m[32m9465[0m should be truthy[K
  ok [1m[32m9466[0m should be falsy[K
  ok [1m[32m9467[0m null[K
  ok [1m[32m9468[0m should be truthy[K
  ok [1m[32m9469[0m no test error[K
  ok [1m[32m9470[0m no close error[K
[1A[1G[1m[32m✓ get() / put() / del(): del() works on real entries[0m[1B[1G
# call open twice, should emit "open" once[K

  ok [1m[32m9471[0m callback should fire only once[K
  ok [1m[32m9472[0m callback should fire only once[K
  ok [1m[32m9473[0m should be strictly equal[K
  ok [1m[32m9474[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ call open twice, should emit "open" once[0m[1B[1G
# Init & open(): levelup()[K

  ok [1m[32m9475[0m should be strictly equal[K
  ok [1m[32m9476[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): levelup()[0m[1B[1G
# Init & open(): open and close statuses[K

  ok [1m[32m9477[0m no error[K
  ok [1m[32m9478[0m should be strictly equal[K
  ok [1m[32m9479[0m undefined[K
  ok [1m[32m9480[0m should be strictly equal[K
  ok [1m[32m9481[0m should be strictly equal[K
  ok [1m[32m9482[0m null[K
  ok [1m[32m9483[0m should be truthy[K
[1A[1G[1m[32m✓ Init & open(): open and close statuses[0m[1B[1G
# Init & open(): without callback[K

  ok [1m[32m9484[0m should be truthy[K
  ok [1m[32m9485[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): without callback[0m[1B[1G
# Init & open(): error with callback[K

  ok [1m[32m9486[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): error with callback[0m[1B[1G
# Init & open(): error without callback[K

  ok [1m[32m9487[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): error without callback[0m[1B[1G
# Init & open(): validate abstract-leveldown[K

  ok [1m[32m9488[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): validate abstract-leveldown[0m[1B[1G
# Init & open(): support open options[K

  ok [1m[32m9489[0m no error[K
  ok [1m[32m9490[0m should be strictly equal[K
[1A[1G[1m[32m✓ Init & open(): support open options[0m[1B[1G
# key and value streams: keyStream()[K

  ok [1m[32m9491[0m undefined[K
  ok [1m[32m9492[0m stream emitted single "end" event[K
  ok [1m[32m9493[0m stream emitted correct number of "data" events[K
  ok [1m[32m9494[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m9495[0m stream correct "data" event #0: 00[K
  ok [1m[32m9496[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m9497[0m stream correct "data" event #1: 01[K
  ok [1m[32m9498[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m9499[0m stream correct "data" event #2: 02[K
  ok [1m[32m9500[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m9501[0m stream correct "data" event #3: 03[K
  ok [1m[32m9502[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m9503[0m stream correct "data" event #4: 04[K
  ok [1m[32m9504[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m9505[0m stream correct "data" event #5: 05[K
  ok [1m[32m9506[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m9507[0m stream correct "data" event #6: 06[K
  ok [1m[32m9508[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m9509[0m stream correct "data" event #7: 07[K
  ok [1m[32m9510[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m9511[0m stream correct "data" event #8: 08[K
  ok [1m[32m9512[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m9513[0m stream correct "data" event #9: 09[K
  ok [1m[32m9514[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m9515[0m stream correct "data" event #10: 10[K
  ok [1m[32m9516[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m9517[0m stream correct "data" event #11: 11[K
  ok [1m[32m9518[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m9519[0m stream correct "data" event #12: 12[K
  ok [1m[32m9520[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m9521[0m stream correct "data" event #13: 13[K
  ok [1m[32m9522[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m9523[0m stream correct "data" event #14: 14[K
  ok [1m[32m9524[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m9525[0m stream correct "data" event #15: 15[K
  ok [1m[32m9526[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m9527[0m stream correct "data" event #16: 16[K
  ok [1m[32m9528[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m9529[0m stream correct "data" event #17: 17[K
  ok [1m[32m9530[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m9531[0m stream correct "data" event #18: 18[K
  ok [1m[32m9532[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m9533[0m stream correct "data" event #19: 19[K
  ok [1m[32m9534[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m9535[0m stream correct "data" event #20: 20[K
  ok [1m[32m9536[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m9537[0m stream correct "data" event #21: 21[K
  ok [1m[32m9538[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m9539[0m stream correct "data" event #22: 22[K
  ok [1m[32m9540[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m9541[0m stream correct "data" event #23: 23[K
  ok [1m[32m9542[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m9543[0m stream correct "data" event #24: 24[K
  ok [1m[32m9544[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m9545[0m stream correct "data" event #25: 25[K
  ok [1m[32m9546[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m9547[0m stream correct "data" event #26: 26[K
  ok [1m[32m9548[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m9549[0m stream correct "data" event #27: 27[K
  ok [1m[32m9550[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m9551[0m stream correct "data" event #28: 28[K
  ok [1m[32m9552[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m9553[0m stream correct "data" event #29: 29[K
  ok [1m[32m9554[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m9555[0m stream correct "data" event #30: 30[K
  ok [1m[32m9556[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m9557[0m stream correct "data" event #31: 31[K
  ok [1m[32m9558[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m9559[0m stream correct "data" event #32: 32[K
  ok [1m[32m9560[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m9561[0m stream correct "data" event #33: 33[K
  ok [1m[32m9562[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m9563[0m stream correct "data" event #34: 34[K
  ok [1m[32m9564[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m9565[0m stream correct "data" event #35: 35[K
  ok [1m[32m9566[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m9567[0m stream correct "data" event #36: 36[K
  ok [1m[32m9568[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m9569[0m stream correct "data" event #37: 37[K
  ok [1m[32m9570[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m9571[0m stream correct "data" event #38: 38[K
  ok [1m[32m9572[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m9573[0m stream correct "data" event #39: 39[K
  ok [1m[32m9574[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m9575[0m stream correct "data" event #40: 40[K
  ok [1m[32m9576[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m9577[0m stream correct "data" event #41: 41[K
  ok [1m[32m9578[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m9579[0m stream correct "data" event #42: 42[K
  ok [1m[32m9580[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m9581[0m stream correct "data" event #43: 43[K
  ok [1m[32m9582[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m9583[0m stream correct "data" event #44: 44[K
  ok [1m[32m9584[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m9585[0m stream correct "data" event #45: 45[K
  ok [1m[32m9586[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m9587[0m stream correct "data" event #46: 46[K
  ok [1m[32m9588[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m9589[0m stream correct "data" event #47: 47[K
  ok [1m[32m9590[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m9591[0m stream correct "data" event #48: 48[K
  ok [1m[32m9592[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m9593[0m stream correct "data" event #49: 49[K
  ok [1m[32m9594[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m9595[0m stream correct "data" event #50: 50[K
  ok [1m[32m9596[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m9597[0m stream correct "data" event #51: 51[K
  ok [1m[32m9598[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m9599[0m stream correct "data" event #52: 52[K
  ok [1m[32m9600[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m9601[0m stream correct "data" event #53: 53[K
  ok [1m[32m9602[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m9603[0m stream correct "data" event #54: 54[K
  ok [1m[32m9604[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m9605[0m stream correct "data" event #55: 55[K
  ok [1m[32m9606[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m9607[0m stream correct "data" event #56: 56[K
  ok [1m[32m9608[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m9609[0m stream correct "data" event #57: 57[K
  ok [1m[32m9610[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m9611[0m stream correct "data" event #58: 58[K
  ok [1m[32m9612[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m9613[0m stream correct "data" event #59: 59[K
  ok [1m[32m9614[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m9615[0m stream correct "data" event #60: 60[K
  ok [1m[32m9616[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m9617[0m stream correct "data" event #61: 61[K
  ok [1m[32m9618[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m9619[0m stream correct "data" event #62: 62[K
  ok [1m[32m9620[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m9621[0m stream correct "data" event #63: 63[K
  ok [1m[32m9622[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m9623[0m stream correct "data" event #64: 64[K
  ok [1m[32m9624[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m9625[0m stream correct "data" event #65: 65[K
  ok [1m[32m9626[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m9627[0m stream correct "data" event #66: 66[K
  ok [1m[32m9628[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m9629[0m stream correct "data" event #67: 67[K
  ok [1m[32m9630[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m9631[0m stream correct "data" event #68: 68[K
  ok [1m[32m9632[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m9633[0m stream correct "data" event #69: 69[K
  ok [1m[32m9634[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m9635[0m stream correct "data" event #70: 70[K
  ok [1m[32m9636[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m9637[0m stream correct "data" event #71: 71[K
  ok [1m[32m9638[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m9639[0m stream correct "data" event #72: 72[K
  ok [1m[32m9640[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m9641[0m stream correct "data" event #73: 73[K
  ok [1m[32m9642[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m9643[0m stream correct "data" event #74: 74[K
  ok [1m[32m9644[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m9645[0m stream correct "data" event #75: 75[K
  ok [1m[32m9646[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m9647[0m stream correct "data" event #76: 76[K
  ok [1m[32m9648[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m9649[0m stream correct "data" event #77: 77[K
  ok [1m[32m9650[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m9651[0m stream correct "data" event #78: 78[K
  ok [1m[32m9652[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m9653[0m stream correct "data" event #79: 79[K
  ok [1m[32m9654[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m9655[0m stream correct "data" event #80: 80[K
  ok [1m[32m9656[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m9657[0m stream correct "data" event #81: 81[K
  ok [1m[32m9658[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m9659[0m stream correct "data" event #82: 82[K
  ok [1m[32m9660[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m9661[0m stream correct "data" event #83: 83[K
  ok [1m[32m9662[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m9663[0m stream correct "data" event #84: 84[K
  ok [1m[32m9664[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m9665[0m stream correct "data" event #85: 85[K
  ok [1m[32m9666[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m9667[0m stream correct "data" event #86: 86[K
  ok [1m[32m9668[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m9669[0m stream correct "data" event #87: 87[K
  ok [1m[32m9670[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m9671[0m stream correct "data" event #88: 88[K
  ok [1m[32m9672[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m9673[0m stream correct "data" event #89: 89[K
  ok [1m[32m9674[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m9675[0m stream correct "data" event #90: 90[K
  ok [1m[32m9676[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m9677[0m stream correct "data" event #91: 91[K
  ok [1m[32m9678[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m9679[0m stream correct "data" event #92: 92[K
  ok [1m[32m9680[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m9681[0m stream correct "data" event #93: 93[K
  ok [1m[32m9682[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m9683[0m stream correct "data" event #94: 94[K
  ok [1m[32m9684[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m9685[0m stream correct "data" event #95: 95[K
  ok [1m[32m9686[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m9687[0m stream correct "data" event #96: 96[K
  ok [1m[32m9688[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m9689[0m stream correct "data" event #97: 97[K
  ok [1m[32m9690[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m9691[0m stream correct "data" event #98: 98[K
  ok [1m[32m9692[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m9693[0m stream correct "data" event #99: 99[K
  ok [1m[32m9694[0m no test error[K
  ok [1m[32m9695[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: keyStream()[0m[1B[1G
# key and value streams: readStream({keys:true,values:false})[K

  ok [1m[32m9696[0m undefined[K
  ok [1m[32m9697[0m stream emitted single "end" event[K
  ok [1m[32m9698[0m stream emitted correct number of "data" events[K
  ok [1m[32m9699[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m9700[0m stream correct "data" event #0: 00[K
  ok [1m[32m9701[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m9702[0m stream correct "data" event #1: 01[K
  ok [1m[32m9703[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m9704[0m stream correct "data" event #2: 02[K
  ok [1m[32m9705[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m9706[0m stream correct "data" event #3: 03[K
  ok [1m[32m9707[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m9708[0m stream correct "data" event #4: 04[K
  ok [1m[32m9709[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m9710[0m stream correct "data" event #5: 05[K
  ok [1m[32m9711[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m9712[0m stream correct "data" event #6: 06[K
  ok [1m[32m9713[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m9714[0m stream correct "data" event #7: 07[K
  ok [1m[32m9715[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m9716[0m stream correct "data" event #8: 08[K
  ok [1m[32m9717[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m9718[0m stream correct "data" event #9: 09[K
  ok [1m[32m9719[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m9720[0m stream correct "data" event #10: 10[K
  ok [1m[32m9721[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m9722[0m stream correct "data" event #11: 11[K
  ok [1m[32m9723[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m9724[0m stream correct "data" event #12: 12[K
  ok [1m[32m9725[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m9726[0m stream correct "data" event #13: 13[K
  ok [1m[32m9727[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m9728[0m stream correct "data" event #14: 14[K
  ok [1m[32m9729[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m9730[0m stream correct "data" event #15: 15[K
  ok [1m[32m9731[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m9732[0m stream correct "data" event #16: 16[K
  ok [1m[32m9733[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m9734[0m stream correct "data" event #17: 17[K
  ok [1m[32m9735[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m9736[0m stream correct "data" event #18: 18[K
  ok [1m[32m9737[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m9738[0m stream correct "data" event #19: 19[K
  ok [1m[32m9739[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m9740[0m stream correct "data" event #20: 20[K
  ok [1m[32m9741[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m9742[0m stream correct "data" event #21: 21[K
  ok [1m[32m9743[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m9744[0m stream correct "data" event #22: 22[K
  ok [1m[32m9745[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m9746[0m stream correct "data" event #23: 23[K
  ok [1m[32m9747[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m9748[0m stream correct "data" event #24: 24[K
  ok [1m[32m9749[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m9750[0m stream correct "data" event #25: 25[K
  ok [1m[32m9751[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m9752[0m stream correct "data" event #26: 26[K
  ok [1m[32m9753[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m9754[0m stream correct "data" event #27: 27[K
  ok [1m[32m9755[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m9756[0m stream correct "data" event #28: 28[K
  ok [1m[32m9757[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m9758[0m stream correct "data" event #29: 29[K
  ok [1m[32m9759[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m9760[0m stream correct "data" event #30: 30[K
  ok [1m[32m9761[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m9762[0m stream correct "data" event #31: 31[K
  ok [1m[32m9763[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m9764[0m stream correct "data" event #32: 32[K
  ok [1m[32m9765[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m9766[0m stream correct "data" event #33: 33[K
  ok [1m[32m9767[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m9768[0m stream correct "data" event #34: 34[K
  ok [1m[32m9769[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m9770[0m stream correct "data" event #35: 35[K
  ok [1m[32m9771[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m9772[0m stream correct "data" event #36: 36[K
  ok [1m[32m9773[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m9774[0m stream correct "data" event #37: 37[K
  ok [1m[32m9775[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m9776[0m stream correct "data" event #38: 38[K
  ok [1m[32m9777[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m9778[0m stream correct "data" event #39: 39[K
  ok [1m[32m9779[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m9780[0m stream correct "data" event #40: 40[K
  ok [1m[32m9781[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m9782[0m stream correct "data" event #41: 41[K
  ok [1m[32m9783[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m9784[0m stream correct "data" event #42: 42[K
  ok [1m[32m9785[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m9786[0m stream correct "data" event #43: 43[K
  ok [1m[32m9787[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m9788[0m stream correct "data" event #44: 44[K
  ok [1m[32m9789[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m9790[0m stream correct "data" event #45: 45[K
  ok [1m[32m9791[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m9792[0m stream correct "data" event #46: 46[K
  ok [1m[32m9793[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m9794[0m stream correct "data" event #47: 47[K
  ok [1m[32m9795[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m9796[0m stream correct "data" event #48: 48[K
  ok [1m[32m9797[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m9798[0m stream correct "data" event #49: 49[K
  ok [1m[32m9799[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m9800[0m stream correct "data" event #50: 50[K
  ok [1m[32m9801[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m9802[0m stream correct "data" event #51: 51[K
  ok [1m[32m9803[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m9804[0m stream correct "data" event #52: 52[K
  ok [1m[32m9805[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m9806[0m stream correct "data" event #53: 53[K
  ok [1m[32m9807[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m9808[0m stream correct "data" event #54: 54[K
  ok [1m[32m9809[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m9810[0m stream correct "data" event #55: 55[K
  ok [1m[32m9811[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m9812[0m stream correct "data" event #56: 56[K
  ok [1m[32m9813[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m9814[0m stream correct "data" event #57: 57[K
  ok [1m[32m9815[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m9816[0m stream correct "data" event #58: 58[K
  ok [1m[32m9817[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m9818[0m stream correct "data" event #59: 59[K
  ok [1m[32m9819[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m9820[0m stream correct "data" event #60: 60[K
  ok [1m[32m9821[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m9822[0m stream correct "data" event #61: 61[K
  ok [1m[32m9823[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m9824[0m stream correct "data" event #62: 62[K
  ok [1m[32m9825[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m9826[0m stream correct "data" event #63: 63[K
  ok [1m[32m9827[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m9828[0m stream correct "data" event #64: 64[K
  ok [1m[32m9829[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m9830[0m stream correct "data" event #65: 65[K
  ok [1m[32m9831[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m9832[0m stream correct "data" event #66: 66[K
  ok [1m[32m9833[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m9834[0m stream correct "data" event #67: 67[K
  ok [1m[32m9835[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m9836[0m stream correct "data" event #68: 68[K
  ok [1m[32m9837[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m9838[0m stream correct "data" event #69: 69[K
  ok [1m[32m9839[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m9840[0m stream correct "data" event #70: 70[K
  ok [1m[32m9841[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m9842[0m stream correct "data" event #71: 71[K
  ok [1m[32m9843[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m9844[0m stream correct "data" event #72: 72[K
  ok [1m[32m9845[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m9846[0m stream correct "data" event #73: 73[K
  ok [1m[32m9847[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m9848[0m stream correct "data" event #74: 74[K
  ok [1m[32m9849[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m9850[0m stream correct "data" event #75: 75[K
  ok [1m[32m9851[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m9852[0m stream correct "data" event #76: 76[K
  ok [1m[32m9853[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m9854[0m stream correct "data" event #77: 77[K
  ok [1m[32m9855[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m9856[0m stream correct "data" event #78: 78[K
  ok [1m[32m9857[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m9858[0m stream correct "data" event #79: 79[K
  ok [1m[32m9859[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m9860[0m stream correct "data" event #80: 80[K
  ok [1m[32m9861[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m9862[0m stream correct "data" event #81: 81[K
  ok [1m[32m9863[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m9864[0m stream correct "data" event #82: 82[K
  ok [1m[32m9865[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m9866[0m stream correct "data" event #83: 83[K
  ok [1m[32m9867[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m9868[0m stream correct "data" event #84: 84[K
  ok [1m[32m9869[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m9870[0m stream correct "data" event #85: 85[K
  ok [1m[32m9871[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m9872[0m stream correct "data" event #86: 86[K
  ok [1m[32m9873[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m9874[0m stream correct "data" event #87: 87[K
  ok [1m[32m9875[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m9876[0m stream correct "data" event #88: 88[K
  ok [1m[32m9877[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m9878[0m stream correct "data" event #89: 89[K
  ok [1m[32m9879[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m9880[0m stream correct "data" event #90: 90[K
  ok [1m[32m9881[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m9882[0m stream correct "data" event #91: 91[K
  ok [1m[32m9883[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m9884[0m stream correct "data" event #92: 92[K
  ok [1m[32m9885[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m9886[0m stream correct "data" event #93: 93[K
  ok [1m[32m9887[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m9888[0m stream correct "data" event #94: 94[K
  ok [1m[32m9889[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m9890[0m stream correct "data" event #95: 95[K
  ok [1m[32m9891[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m9892[0m stream correct "data" event #96: 96[K
  ok [1m[32m9893[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m9894[0m stream correct "data" event #97: 97[K
  ok [1m[32m9895[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m9896[0m stream correct "data" event #98: 98[K
  ok [1m[32m9897[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m9898[0m stream correct "data" event #99: 99[K
  ok [1m[32m9899[0m no test error[K
  ok [1m[32m9900[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: readStream({keys:true,values:false})[0m[1B[1G
# key and value streams: valueStream()[K

  ok [1m[32m9901[0m undefined[K
  ok [1m[32m9902[0m stream emitted single "end" event[K
  ok [1m[32m9903[0m stream emitted correct number of "data" events[K
  ok [1m[32m9904[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m9905[0m stream correct "data" event #0: 0.4467157409197622[K
  ok [1m[32m9906[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m9907[0m stream correct "data" event #1: 0.455907693579257[K
  ok [1m[32m9908[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m9909[0m stream correct "data" event #2: 0.2146154866143395[K
  ok [1m[32m9910[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m9911[0m stream correct "data" event #3: 0.5726837892363021[K
  ok [1m[32m9912[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m9913[0m stream correct "data" event #4: 0.9986851642678074[K
  ok [1m[32m9914[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m9915[0m stream correct "data" event #5: 0.765684683431437[K
  ok [1m[32m9916[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m9917[0m stream correct "data" event #6: 0.321981121683129[K
  ok [1m[32m9918[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m9919[0m stream correct "data" event #7: 0.20095332205407535[K
  ok [1m[32m9920[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m9921[0m stream correct "data" event #8: 0.7691742954563972[K
  ok [1m[32m9922[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m9923[0m stream correct "data" event #9: 0.9070229677816268[K
  ok [1m[32m9924[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m9925[0m stream correct "data" event #10: 0.5123864039522095[K
  ok [1m[32m9926[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m9927[0m stream correct "data" event #11: 0.36404934067657724[K
  ok [1m[32m9928[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m9929[0m stream correct "data" event #12: 0.7581724059099177[K
  ok [1m[32m9930[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m9931[0m stream correct "data" event #13: 0.6209318646304776[K
  ok [1m[32m9932[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m9933[0m stream correct "data" event #14: 0.4589108422404864[K
  ok [1m[32m9934[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m9935[0m stream correct "data" event #15: 0.5863270759975032[K
  ok [1m[32m9936[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m9937[0m stream correct "data" event #16: 0.39548291180585826[K
  ok [1m[32m9938[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m9939[0m stream correct "data" event #17: 0.12380587150632327[K
  ok [1m[32m9940[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m9941[0m stream correct "data" event #18: 0.4645873365824167[K
  ok [1m[32m9942[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m9943[0m stream correct "data" event #19: 0.9731254057260537[K
  ok [1m[32m9944[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m9945[0m stream correct "data" event #20: 0.6638227878165757[K
  ok [1m[32m9946[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m9947[0m stream correct "data" event #21: 0.18120747737203957[K
  ok [1m[32m9948[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m9949[0m stream correct "data" event #22: 0.15493746112484663[K
  ok [1m[32m9950[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m9951[0m stream correct "data" event #23: 0.8612808984299034[K
  ok [1m[32m9952[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m9953[0m stream correct "data" event #24: 0.656335512090632[K
  ok [1m[32m9954[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m9955[0m stream correct "data" event #25: 0.6682327833987829[K
  ok [1m[32m9956[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m9957[0m stream correct "data" event #26: 0.14501764161689534[K
  ok [1m[32m9958[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m9959[0m stream correct "data" event #27: 0.26003012648970536[K
  ok [1m[32m9960[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m9961[0m stream correct "data" event #28: 0.6824210627194387[K
  ok [1m[32m9962[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m9963[0m stream correct "data" event #29: 0.9148284225088064[K
  ok [1m[32m9964[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m9965[0m stream correct "data" event #30: 0.7868784134951239[K
  ok [1m[32m9966[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m9967[0m stream correct "data" event #31: 0.30333857931946073[K
  ok [1m[32m9968[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m9969[0m stream correct "data" event #32: 0.36445365548537745[K
  ok [1m[32m9970[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m9971[0m stream correct "data" event #33: 0.39908462332310446[K
  ok [1m[32m9972[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m9973[0m stream correct "data" event #34: 0.7044667672331564[K
  ok [1m[32m9974[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m9975[0m stream correct "data" event #35: 0.3362203261047505[K
  ok [1m[32m9976[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m9977[0m stream correct "data" event #36: 0.8323616046994948[K
  ok [1m[32m9978[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m9979[0m stream correct "data" event #37: 0.812400376886375[K
  ok [1m[32m9980[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m9981[0m stream correct "data" event #38: 0.5644335199947692[K
  ok [1m[32m9982[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m9983[0m stream correct "data" event #39: 0.042699734407042556[K
  ok [1m[32m9984[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m9985[0m stream correct "data" event #40: 0.6034626965050403[K
  ok [1m[32m9986[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m9987[0m stream correct "data" event #41: 0.9496944414235173[K
  ok [1m[32m9988[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m9989[0m stream correct "data" event #42: 0.511432280557824[K
  ok [1m[32m9990[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m9991[0m stream correct "data" event #43: 0.9479581729379929[K
  ok [1m[32m9992[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m9993[0m stream correct "data" event #44: 0.15788428120771747[K
  ok [1m[32m9994[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m9995[0m stream correct "data" event #45: 0.7191576225971097[K
  ok [1m[32m9996[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m9997[0m stream correct "data" event #46: 0.6145887436074735[K
  ok [1m[32m9998[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m9999[0m stream correct "data" event #47: 0.8715822670766873[K
  ok [1m[32m10000[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m10001[0m stream correct "data" event #48: 0.5912614861326466[K
  ok [1m[32m10002[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m10003[0m stream correct "data" event #49: 0.15145008951663352[K
  ok [1m[32m10004[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m10005[0m stream correct "data" event #50: 0.13407165733834292[K
  ok [1m[32m10006[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m10007[0m stream correct "data" event #51: 0.7355717089258518[K
  ok [1m[32m10008[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m10009[0m stream correct "data" event #52: 0.19106157820680036[K
  ok [1m[32m10010[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m10011[0m stream correct "data" event #53: 0.1630054289089118[K
  ok [1m[32m10012[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m10013[0m stream correct "data" event #54: 0.829846596874739[K
  ok [1m[32m10014[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m10015[0m stream correct "data" event #55: 0.7611004408052968[K
  ok [1m[32m10016[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m10017[0m stream correct "data" event #56: 0.7260750156268603[K
  ok [1m[32m10018[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m10019[0m stream correct "data" event #57: 0.6037855006996247[K
  ok [1m[32m10020[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m10021[0m stream correct "data" event #58: 0.43231276323376444[K
  ok [1m[32m10022[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m10023[0m stream correct "data" event #59: 0.25948079969484317[K
  ok [1m[32m10024[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m10025[0m stream correct "data" event #60: 0.5382723384781853[K
  ok [1m[32m10026[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m10027[0m stream correct "data" event #61: 0.6340752141327854[K
  ok [1m[32m10028[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m10029[0m stream correct "data" event #62: 0.24991763587689997[K
  ok [1m[32m10030[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m10031[0m stream correct "data" event #63: 0.6115446096048638[K
  ok [1m[32m10032[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m10033[0m stream correct "data" event #64: 0.7256362562615628[K
  ok [1m[32m10034[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m10035[0m stream correct "data" event #65: 0.5837056264878544[K
  ok [1m[32m10036[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m10037[0m stream correct "data" event #66: 0.7774542475415056[K
  ok [1m[32m10038[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m10039[0m stream correct "data" event #67: 0.6939228641827131[K
  ok [1m[32m10040[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m10041[0m stream correct "data" event #68: 0.953658283922951[K
  ok [1m[32m10042[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m10043[0m stream correct "data" event #69: 0.9558786978928662[K
  ok [1m[32m10044[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m10045[0m stream correct "data" event #70: 0.7670420132532854[K
  ok [1m[32m10046[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m10047[0m stream correct "data" event #71: 0.046364811813211615[K
  ok [1m[32m10048[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m10049[0m stream correct "data" event #72: 0.9591033728900575[K
  ok [1m[32m10050[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m10051[0m stream correct "data" event #73: 0.5402504746252388[K
  ok [1m[32m10052[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m10053[0m stream correct "data" event #74: 0.8200852490175663[K
  ok [1m[32m10054[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m10055[0m stream correct "data" event #75: 0.9603321172266917[K
  ok [1m[32m10056[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m10057[0m stream correct "data" event #76: 0.6697248887981941[K
  ok [1m[32m10058[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m10059[0m stream correct "data" event #77: 0.038996975550386725[K
  ok [1m[32m10060[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m10061[0m stream correct "data" event #78: 0.011950210449595655[K
  ok [1m[32m10062[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m10063[0m stream correct "data" event #79: 0.7865437712722334[K
  ok [1m[32m10064[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m10065[0m stream correct "data" event #80: 0.7616057635037881[K
  ok [1m[32m10066[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m10067[0m stream correct "data" event #81: 0.42523496201876254[K
  ok [1m[32m10068[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m10069[0m stream correct "data" event #82: 0.0018961049367971494[K
  ok [1m[32m10070[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m10071[0m stream correct "data" event #83: 0.45098496965425716[K
  ok [1m[32m10072[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m10073[0m stream correct "data" event #84: 0.5554202782218383[K
  ok [1m[32m10074[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m10075[0m stream correct "data" event #85: 0.5616084870528768[K
  ok [1m[32m10076[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m10077[0m stream correct "data" event #86: 0.33499542820178907[K
  ok [1m[32m10078[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m10079[0m stream correct "data" event #87: 0.2599925513084316[K
  ok [1m[32m10080[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m10081[0m stream correct "data" event #88: 0.512972900699701[K
  ok [1m[32m10082[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m10083[0m stream correct "data" event #89: 0.9754519725315065[K
  ok [1m[32m10084[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m10085[0m stream correct "data" event #90: 0.6415333593589854[K
  ok [1m[32m10086[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m10087[0m stream correct "data" event #91: 0.45965458832413786[K
  ok [1m[32m10088[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m10089[0m stream correct "data" event #92: 0.961532492057795[K
  ok [1m[32m10090[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m10091[0m stream correct "data" event #93: 0.09314663164905412[K
  ok [1m[32m10092[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m10093[0m stream correct "data" event #94: 0.038830388363196855[K
  ok [1m[32m10094[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m10095[0m stream correct "data" event #95: 0.9018787112021733[K
  ok [1m[32m10096[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m10097[0m stream correct "data" event #96: 0.26564284184144604[K
  ok [1m[32m10098[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m10099[0m stream correct "data" event #97: 0.25631033046637697[K
  ok [1m[32m10100[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m10101[0m stream correct "data" event #98: 0.2506506767640584[K
  ok [1m[32m10102[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m10103[0m stream correct "data" event #99: 0.1633023212071394[K
  ok [1m[32m10104[0m no test error[K
  ok [1m[32m10105[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: valueStream()[0m[1B[1G
# key and value streams: readStream({keys:false,values:true})[K

  ok [1m[32m10106[0m undefined[K
  ok [1m[32m10107[0m stream emitted single "end" event[K
  ok [1m[32m10108[0m stream emitted correct number of "data" events[K
  ok [1m[32m10109[0m stream "data" event #0 fired with 1 argument[K
  ok [1m[32m10110[0m stream correct "data" event #0: 0.3861839823517399[K
  ok [1m[32m10111[0m stream "data" event #1 fired with 1 argument[K
  ok [1m[32m10112[0m stream correct "data" event #1: 0.9727340573879721[K
  ok [1m[32m10113[0m stream "data" event #2 fired with 1 argument[K
  ok [1m[32m10114[0m stream correct "data" event #2: 0.028904391801742646[K
  ok [1m[32m10115[0m stream "data" event #3 fired with 1 argument[K
  ok [1m[32m10116[0m stream correct "data" event #3: 0.051619762245213474[K
  ok [1m[32m10117[0m stream "data" event #4 fired with 1 argument[K
  ok [1m[32m10118[0m stream correct "data" event #4: 0.8730263510625942[K
  ok [1m[32m10119[0m stream "data" event #5 fired with 1 argument[K
  ok [1m[32m10120[0m stream correct "data" event #5: 0.5437123000020272[K
  ok [1m[32m10121[0m stream "data" event #6 fired with 1 argument[K
  ok [1m[32m10122[0m stream correct "data" event #6: 0.027854362239407626[K
  ok [1m[32m10123[0m stream "data" event #7 fired with 1 argument[K
  ok [1m[32m10124[0m stream correct "data" event #7: 0.40440594199514934[K
  ok [1m[32m10125[0m stream "data" event #8 fired with 1 argument[K
  ok [1m[32m10126[0m stream correct "data" event #8: 0.987818194683797[K
  ok [1m[32m10127[0m stream "data" event #9 fired with 1 argument[K
  ok [1m[32m10128[0m stream correct "data" event #9: 0.7592854914369682[K
  ok [1m[32m10129[0m stream "data" event #10 fired with 1 argument[K
  ok [1m[32m10130[0m stream correct "data" event #10: 0.4439332853738476[K
  ok [1m[32m10131[0m stream "data" event #11 fired with 1 argument[K
  ok [1m[32m10132[0m stream correct "data" event #11: 0.09646805164706862[K
  ok [1m[32m10133[0m stream "data" event #12 fired with 1 argument[K
  ok [1m[32m10134[0m stream correct "data" event #12: 0.029245189585861864[K
  ok [1m[32m10135[0m stream "data" event #13 fired with 1 argument[K
  ok [1m[32m10136[0m stream correct "data" event #13: 0.9902078968897403[K
  ok [1m[32m10137[0m stream "data" event #14 fired with 1 argument[K
  ok [1m[32m10138[0m stream correct "data" event #14: 0.2285465898469683[K
  ok [1m[32m10139[0m stream "data" event #15 fired with 1 argument[K
  ok [1m[32m10140[0m stream correct "data" event #15: 0.969850450616333[K
  ok [1m[32m10141[0m stream "data" event #16 fired with 1 argument[K
  ok [1m[32m10142[0m stream correct "data" event #16: 0.9138649903351772[K
  ok [1m[32m10143[0m stream "data" event #17 fired with 1 argument[K
  ok [1m[32m10144[0m stream correct "data" event #17: 0.8228953793047629[K
  ok [1m[32m10145[0m stream "data" event #18 fired with 1 argument[K
  ok [1m[32m10146[0m stream correct "data" event #18: 0.6280865201553174[K
  ok [1m[32m10147[0m stream "data" event #19 fired with 1 argument[K
  ok [1m[32m10148[0m stream correct "data" event #19: 0.8560117079190304[K
  ok [1m[32m10149[0m stream "data" event #20 fired with 1 argument[K
  ok [1m[32m10150[0m stream correct "data" event #20: 0.7994544167320667[K
  ok [1m[32m10151[0m stream "data" event #21 fired with 1 argument[K
  ok [1m[32m10152[0m stream correct "data" event #21: 0.06955409341908414[K
  ok [1m[32m10153[0m stream "data" event #22 fired with 1 argument[K
  ok [1m[32m10154[0m stream correct "data" event #22: 0.8018097952667769[K
  ok [1m[32m10155[0m stream "data" event #23 fired with 1 argument[K
  ok [1m[32m10156[0m stream correct "data" event #23: 0.3014589034158026[K
  ok [1m[32m10157[0m stream "data" event #24 fired with 1 argument[K
  ok [1m[32m10158[0m stream correct "data" event #24: 0.22819372733219945[K
  ok [1m[32m10159[0m stream "data" event #25 fired with 1 argument[K
  ok [1m[32m10160[0m stream correct "data" event #25: 0.22126881028026002[K
  ok [1m[32m10161[0m stream "data" event #26 fired with 1 argument[K
  ok [1m[32m10162[0m stream correct "data" event #26: 0.6974939928641382[K
  ok [1m[32m10163[0m stream "data" event #27 fired with 1 argument[K
  ok [1m[32m10164[0m stream correct "data" event #27: 0.10161847628486864[K
  ok [1m[32m10165[0m stream "data" event #28 fired with 1 argument[K
  ok [1m[32m10166[0m stream correct "data" event #28: 0.00881894435768027[K
  ok [1m[32m10167[0m stream "data" event #29 fired with 1 argument[K
  ok [1m[32m10168[0m stream correct "data" event #29: 0.6899423193578755[K
  ok [1m[32m10169[0m stream "data" event #30 fired with 1 argument[K
  ok [1m[32m10170[0m stream correct "data" event #30: 0.8410618778697736[K
  ok [1m[32m10171[0m stream "data" event #31 fired with 1 argument[K
  ok [1m[32m10172[0m stream correct "data" event #31: 0.3586796802656389[K
  ok [1m[32m10173[0m stream "data" event #32 fired with 1 argument[K
  ok [1m[32m10174[0m stream correct "data" event #32: 0.635547301817089[K
  ok [1m[32m10175[0m stream "data" event #33 fired with 1 argument[K
  ok [1m[32m10176[0m stream correct "data" event #33: 0.7918071988147577[K
  ok [1m[32m10177[0m stream "data" event #34 fired with 1 argument[K
  ok [1m[32m10178[0m stream correct "data" event #34: 0.47245586707538334[K
  ok [1m[32m10179[0m stream "data" event #35 fired with 1 argument[K
  ok [1m[32m10180[0m stream correct "data" event #35: 0.5482346108628704[K
  ok [1m[32m10181[0m stream "data" event #36 fired with 1 argument[K
  ok [1m[32m10182[0m stream correct "data" event #36: 0.7002503014667001[K
  ok [1m[32m10183[0m stream "data" event #37 fired with 1 argument[K
  ok [1m[32m10184[0m stream correct "data" event #37: 0.6298542759118277[K
  ok [1m[32m10185[0m stream "data" event #38 fired with 1 argument[K
  ok [1m[32m10186[0m stream correct "data" event #38: 0.592750850023035[K
  ok [1m[32m10187[0m stream "data" event #39 fired with 1 argument[K
  ok [1m[32m10188[0m stream correct "data" event #39: 0.37786404333574786[K
  ok [1m[32m10189[0m stream "data" event #40 fired with 1 argument[K
  ok [1m[32m10190[0m stream correct "data" event #40: 0.26633926628621896[K
  ok [1m[32m10191[0m stream "data" event #41 fired with 1 argument[K
  ok [1m[32m10192[0m stream correct "data" event #41: 0.48048572222696717[K
  ok [1m[32m10193[0m stream "data" event #42 fired with 1 argument[K
  ok [1m[32m10194[0m stream correct "data" event #42: 0.9259841228532077[K
  ok [1m[32m10195[0m stream "data" event #43 fired with 1 argument[K
  ok [1m[32m10196[0m stream correct "data" event #43: 0.09527848044586595[K
  ok [1m[32m10197[0m stream "data" event #44 fired with 1 argument[K
  ok [1m[32m10198[0m stream correct "data" event #44: 0.429958852493296[K
  ok [1m[32m10199[0m stream "data" event #45 fired with 1 argument[K
  ok [1m[32m10200[0m stream correct "data" event #45: 0.16102461484331831[K
  ok [1m[32m10201[0m stream "data" event #46 fired with 1 argument[K
  ok [1m[32m10202[0m stream correct "data" event #46: 0.6908384524063695[K
  ok [1m[32m10203[0m stream "data" event #47 fired with 1 argument[K
  ok [1m[32m10204[0m stream correct "data" event #47: 0.20485576129249816[K
  ok [1m[32m10205[0m stream "data" event #48 fired with 1 argument[K
  ok [1m[32m10206[0m stream correct "data" event #48: 0.9205319206450624[K
  ok [1m[32m10207[0m stream "data" event #49 fired with 1 argument[K
  ok [1m[32m10208[0m stream correct "data" event #49: 0.7486809941464583[K
  ok [1m[32m10209[0m stream "data" event #50 fired with 1 argument[K
  ok [1m[32m10210[0m stream correct "data" event #50: 0.20440725998621856[K
  ok [1m[32m10211[0m stream "data" event #51 fired with 1 argument[K
  ok [1m[32m10212[0m stream correct "data" event #51: 0.7211855889224634[K
  ok [1m[32m10213[0m stream "data" event #52 fired with 1 argument[K
  ok [1m[32m10214[0m stream correct "data" event #52: 0.10348625048530202[K
  ok [1m[32m10215[0m stream "data" event #53 fired with 1 argument[K
  ok [1m[32m10216[0m stream correct "data" event #53: 0.1244477914771327[K
  ok [1m[32m10217[0m stream "data" event #54 fired with 1 argument[K
  ok [1m[32m10218[0m stream correct "data" event #54: 0.6894011152204051[K
  ok [1m[32m10219[0m stream "data" event #55 fired with 1 argument[K
  ok [1m[32m10220[0m stream correct "data" event #55: 0.6989896434096452[K
  ok [1m[32m10221[0m stream "data" event #56 fired with 1 argument[K
  ok [1m[32m10222[0m stream correct "data" event #56: 0.6905022497679407[K
  ok [1m[32m10223[0m stream "data" event #57 fired with 1 argument[K
  ok [1m[32m10224[0m stream correct "data" event #57: 0.40516893824152067[K
  ok [1m[32m10225[0m stream "data" event #58 fired with 1 argument[K
  ok [1m[32m10226[0m stream correct "data" event #58: 0.3359238517052108[K
  ok [1m[32m10227[0m stream "data" event #59 fired with 1 argument[K
  ok [1m[32m10228[0m stream correct "data" event #59: 0.1530449490161403[K
  ok [1m[32m10229[0m stream "data" event #60 fired with 1 argument[K
  ok [1m[32m10230[0m stream correct "data" event #60: 0.08639507219625742[K
  ok [1m[32m10231[0m stream "data" event #61 fired with 1 argument[K
  ok [1m[32m10232[0m stream correct "data" event #61: 0.18836653280751015[K
  ok [1m[32m10233[0m stream "data" event #62 fired with 1 argument[K
  ok [1m[32m10234[0m stream correct "data" event #62: 0.7029948932219907[K
  ok [1m[32m10235[0m stream "data" event #63 fired with 1 argument[K
  ok [1m[32m10236[0m stream correct "data" event #63: 0.46547531564750266[K
  ok [1m[32m10237[0m stream "data" event #64 fired with 1 argument[K
  ok [1m[32m10238[0m stream correct "data" event #64: 0.29339153309011334[K
  ok [1m[32m10239[0m stream "data" event #65 fired with 1 argument[K
  ok [1m[32m10240[0m stream correct "data" event #65: 0.9903772779427233[K
  ok [1m[32m10241[0m stream "data" event #66 fired with 1 argument[K
  ok [1m[32m10242[0m stream correct "data" event #66: 0.6715046304544345[K
  ok [1m[32m10243[0m stream "data" event #67 fired with 1 argument[K
  ok [1m[32m10244[0m stream correct "data" event #67: 0.4406517923930757[K
  ok [1m[32m10245[0m stream "data" event #68 fired with 1 argument[K
  ok [1m[32m10246[0m stream correct "data" event #68: 0.7281721091133393[K
  ok [1m[32m10247[0m stream "data" event #69 fired with 1 argument[K
  ok [1m[32m10248[0m stream correct "data" event #69: 0.27956981082107935[K
  ok [1m[32m10249[0m stream "data" event #70 fired with 1 argument[K
  ok [1m[32m10250[0m stream correct "data" event #70: 0.0754090467069155[K
  ok [1m[32m10251[0m stream "data" event #71 fired with 1 argument[K
  ok [1m[32m10252[0m stream correct "data" event #71: 0.6004900696689162[K
  ok [1m[32m10253[0m stream "data" event #72 fired with 1 argument[K
  ok [1m[32m10254[0m stream correct "data" event #72: 0.8434503512029297[K
  ok [1m[32m10255[0m stream "data" event #73 fired with 1 argument[K
  ok [1m[32m10256[0m stream correct "data" event #73: 0.17842249757237716[K
  ok [1m[32m10257[0m stream "data" event #74 fired with 1 argument[K
  ok [1m[32m10258[0m stream correct "data" event #74: 0.7150681378835613[K
  ok [1m[32m10259[0m stream "data" event #75 fired with 1 argument[K
  ok [1m[32m10260[0m stream correct "data" event #75: 0.9464363348275238[K
  ok [1m[32m10261[0m stream "data" event #76 fired with 1 argument[K
  ok [1m[32m10262[0m stream correct "data" event #76: 0.8295285185391488[K
  ok [1m[32m10263[0m stream "data" event #77 fired with 1 argument[K
  ok [1m[32m10264[0m stream correct "data" event #77: 0.043808838885983636[K
  ok [1m[32m10265[0m stream "data" event #78 fired with 1 argument[K
  ok [1m[32m10266[0m stream correct "data" event #78: 0.4499590007400909[K
  ok [1m[32m10267[0m stream "data" event #79 fired with 1 argument[K
  ok [1m[32m10268[0m stream correct "data" event #79: 0.9973525439087187[K
  ok [1m[32m10269[0m stream "data" event #80 fired with 1 argument[K
  ok [1m[32m10270[0m stream correct "data" event #80: 0.5000870285567647[K
  ok [1m[32m10271[0m stream "data" event #81 fired with 1 argument[K
  ok [1m[32m10272[0m stream correct "data" event #81: 0.915235827260529[K
  ok [1m[32m10273[0m stream "data" event #82 fired with 1 argument[K
  ok [1m[32m10274[0m stream correct "data" event #82: 0.30607487451112814[K
  ok [1m[32m10275[0m stream "data" event #83 fired with 1 argument[K
  ok [1m[32m10276[0m stream correct "data" event #83: 0.37958917265242276[K
  ok [1m[32m10277[0m stream "data" event #84 fired with 1 argument[K
  ok [1m[32m10278[0m stream correct "data" event #84: 0.4288239789626891[K
  ok [1m[32m10279[0m stream "data" event #85 fired with 1 argument[K
  ok [1m[32m10280[0m stream correct "data" event #85: 0.031354072004414535[K
  ok [1m[32m10281[0m stream "data" event #86 fired with 1 argument[K
  ok [1m[32m10282[0m stream correct "data" event #86: 0.4838813683567076[K
  ok [1m[32m10283[0m stream "data" event #87 fired with 1 argument[K
  ok [1m[32m10284[0m stream correct "data" event #87: 0.5942628290373908[K
  ok [1m[32m10285[0m stream "data" event #88 fired with 1 argument[K
  ok [1m[32m10286[0m stream correct "data" event #88: 0.22855446929457557[K
  ok [1m[32m10287[0m stream "data" event #89 fired with 1 argument[K
  ok [1m[32m10288[0m stream correct "data" event #89: 0.053303680859346336[K
  ok [1m[32m10289[0m stream "data" event #90 fired with 1 argument[K
  ok [1m[32m10290[0m stream correct "data" event #90: 0.00241663666701486[K
  ok [1m[32m10291[0m stream "data" event #91 fired with 1 argument[K
  ok [1m[32m10292[0m stream correct "data" event #91: 0.9987449583542676[K
  ok [1m[32m10293[0m stream "data" event #92 fired with 1 argument[K
  ok [1m[32m10294[0m stream correct "data" event #92: 0.21298537110412297[K
  ok [1m[32m10295[0m stream "data" event #93 fired with 1 argument[K
  ok [1m[32m10296[0m stream correct "data" event #93: 0.8690958131755817[K
  ok [1m[32m10297[0m stream "data" event #94 fired with 1 argument[K
  ok [1m[32m10298[0m stream correct "data" event #94: 0.31295236614633737[K
  ok [1m[32m10299[0m stream "data" event #95 fired with 1 argument[K
  ok [1m[32m10300[0m stream correct "data" event #95: 0.6425143676372056[K
  ok [1m[32m10301[0m stream "data" event #96 fired with 1 argument[K
  ok [1m[32m10302[0m stream correct "data" event #96: 0.8990275944827395[K
  ok [1m[32m10303[0m stream "data" event #97 fired with 1 argument[K
  ok [1m[32m10304[0m stream correct "data" event #97: 0.3588229536663712[K
  ok [1m[32m10305[0m stream "data" event #98 fired with 1 argument[K
  ok [1m[32m10306[0m stream correct "data" event #98: 0.2328725486889449[K
  ok [1m[32m10307[0m stream "data" event #99 fired with 1 argument[K
  ok [1m[32m10308[0m stream correct "data" event #99: 0.4122730539180637[K
  ok [1m[32m10309[0m no test error[K
  ok [1m[32m10310[0m no close error[K
[1A[1G[1m[32m✓ key and value streams: readStream({keys:false,values:true})[0m[1B[1G
# maybeError() should be called async: put()[K

  ok [1m[32m10311[0m db is closed[K
  ok [1m[32m10312[0m .put cb called asynchronously[K
  ok [1m[32m10313[0m no test error[K
  ok [1m[32m10314[0m should be truthy[K
  ok [1m[32m10315[0m should be strictly equal[K
  ok [1m[32m10316[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: put()[0m[1B[1G
# maybeError() should be called async: get()[K

  ok [1m[32m10317[0m undefined[K
  ok [1m[32m10318[0m db is closed[K
  ok [1m[32m10319[0m .get cb called asynchronously[K
  ok [1m[32m10320[0m no test error[K
  ok [1m[32m10321[0m should be truthy[K
  ok [1m[32m10322[0m should be strictly equal[K
  ok [1m[32m10323[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: get()[0m[1B[1G
# maybeError() should be called async: del()[K

  ok [1m[32m10324[0m undefined[K
  ok [1m[32m10325[0m db is closed[K
  ok [1m[32m10326[0m .del cb called asynchronously[K
  ok [1m[32m10327[0m no test error[K
  ok [1m[32m10328[0m should be truthy[K
  ok [1m[32m10329[0m should be strictly equal[K
  ok [1m[32m10330[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: del()[0m[1B[1G
# maybeError() should be called async: batch()[K

  ok [1m[32m10331[0m db is closed[K
  ok [1m[32m10332[0m .batch cb called asynchronously[K
  ok [1m[32m10333[0m no test error[K
  ok [1m[32m10334[0m should be truthy[K
  ok [1m[32m10335[0m should be strictly equal[K
  ok [1m[32m10336[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: batch()[0m[1B[1G
# maybeError() should be called async: getMany()[K

  ok [1m[32m10337[0m db is closed[K
  ok [1m[32m10338[0m .getMany cb called asynchronously[K
  ok [1m[32m10339[0m should be strictly equal[K
  ok [1m[32m10340[0m no test error[K
  ok [1m[32m10341[0m no close error[K
[1A[1G[1m[32m✓ maybeError() should be called async: getMany()[0m[1B[1G
# without encoding-down: serializes key[K

  ok [1m[32m10342[0m undefined[K
  ok [1m[32m10343[0m null[K
  ok [1m[32m10344[0m should be strictly equal[K
[1A[1G[1m[32m✓ without encoding-down: serializes key[0m[1B[1G
# without encoding-down: serializes value[K

  ok [1m[32m10345[0m undefined[K
  ok [1m[32m10346[0m null[K
  ok [1m[32m10347[0m should be strictly equal[K
[1A[1G[1m[32m✓ without encoding-down: serializes value[0m[1B[1G
# null & undefined keys & values: cause error[K

  ok [1m[32m10348[0m should be strictly equal[K
  ok [1m[32m10349[0m should be strictly equal[K
  ok [1m[32m10350[0m should be strictly equal[K
  ok [1m[32m10351[0m should be strictly equal[K
  ok [1m[32m10352[0m should be strictly equal[K
  ok [1m[32m10353[0m should be strictly equal[K
  ok [1m[32m10354[0m should be strictly equal[K
  ok [1m[32m10355[0m should be strictly equal[K
  ok [1m[32m10356[0m should be strictly equal[K
  ok [1m[32m10357[0m should be strictly equal[K
  ok [1m[32m10358[0m should be strictly equal[K
  ok [1m[32m10359[0m should be strictly equal[K
  ok [1m[32m10360[0m no test error[K
  ok [1m[32m10361[0m no close error[K
[1A[1G[1m[32m✓ null & undefined keys & values: cause error[0m[1B[1G
# deferred open() is patch-safe: put() on new database[K

  ok [1m[32m10362[0m should be strictly equal[K
  ok [1m[32m10363[0m should be strictly equal[K
  ok [1m[32m10364[0m should be strictly equal[K
  ok [1m[32m10365[0m should be strictly equal[K
  ok [1m[32m10366[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: put() on new database[0m[1B[1G
# deferred open() is patch-safe: del() on new database[K

  ok [1m[32m10367[0m should be strictly equal[K
  ok [1m[32m10368[0m should be strictly equal[K
  ok [1m[32m10369[0m should be strictly equal[K
  ok [1m[32m10370[0m should be strictly equal[K
  ok [1m[32m10371[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: del() on new database[0m[1B[1G
# deferred open() is patch-safe: batch() on new database[K

  ok [1m[32m10372[0m should be strictly equal[K
  ok [1m[32m10373[0m should be strictly equal[K
  ok [1m[32m10374[0m should be strictly equal[K
  ok [1m[32m10375[0m should be strictly equal[K
  ok [1m[32m10376[0m no test error[K
[1A[1G[1m[32m✓ deferred open() is patch-safe: batch() on new database[0m[1B[1G
# ReadStream: simple ReadStream[K

  ok [1m[32m10377[0m undefined[K
  ok [1m[32m10378[0m ReadStream emitted single "end" event[K
  ok [1m[32m10379[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m10380[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m10381[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m10382[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m10383[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m10384[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m10385[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m10386[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m10387[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m10388[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m10389[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m10390[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m10391[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m10392[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m10393[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m10394[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m10395[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m10396[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m10397[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m10398[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m10399[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m10400[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m10401[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m10402[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m10403[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m10404[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m10405[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m10406[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m10407[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m10408[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m10409[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m10410[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m10411[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m10412[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m10413[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m10414[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m10415[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m10416[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m10417[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m10418[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m10419[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m10420[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m10421[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m10422[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m10423[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m10424[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m10425[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m10426[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m10427[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m10428[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m10429[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m10430[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m10431[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m10432[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m10433[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m10434[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m10435[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m10436[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m10437[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m10438[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m10439[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m10440[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m10441[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m10442[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m10443[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m10444[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m10445[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m10446[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m10447[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m10448[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m10449[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m10450[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m10451[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m10452[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m10453[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m10454[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m10455[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m10456[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m10457[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m10458[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m10459[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m10460[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m10461[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m10462[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m10463[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m10464[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m10465[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m10466[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m10467[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m10468[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m10469[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m10470[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m10471[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m10472[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m10473[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m10474[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m10475[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m10476[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m10477[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m10478[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m10479[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m10480[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m10481[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m10482[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m10483[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m10484[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m10485[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m10486[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m10487[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m10488[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m10489[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m10490[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m10491[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m10492[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m10493[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m10494[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m10495[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m10496[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m10497[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m10498[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m10499[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m10500[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m10501[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m10502[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m10503[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m10504[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m10505[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m10506[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m10507[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m10508[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m10509[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m10510[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m10511[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m10512[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m10513[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m10514[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m10515[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m10516[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m10517[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m10518[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m10519[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m10520[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m10521[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m10522[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m10523[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m10524[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m10525[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m10526[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m10527[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m10528[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m10529[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m10530[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m10531[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m10532[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m10533[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m10534[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m10535[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m10536[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m10537[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m10538[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m10539[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m10540[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m10541[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m10542[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m10543[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m10544[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m10545[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m10546[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m10547[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m10548[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m10549[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m10550[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m10551[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m10552[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m10553[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m10554[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m10555[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m10556[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m10557[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m10558[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m10559[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m10560[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m10561[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m10562[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m10563[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m10564[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m10565[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m10566[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m10567[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m10568[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m10569[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m10570[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m10571[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m10572[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m10573[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m10574[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m10575[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m10576[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m10577[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m10578[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m10579[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m10580[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m10581[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m10582[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m10583[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m10584[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m10585[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m10586[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m10587[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m10588[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m10589[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m10590[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m10591[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m10592[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m10593[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m10594[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m10595[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m10596[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m10597[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m10598[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m10599[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m10600[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m10601[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m10602[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m10603[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m10604[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m10605[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m10606[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m10607[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m10608[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m10609[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m10610[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m10611[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m10612[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m10613[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m10614[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m10615[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m10616[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m10617[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m10618[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m10619[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m10620[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m10621[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m10622[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m10623[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m10624[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m10625[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m10626[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m10627[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m10628[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m10629[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m10630[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m10631[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m10632[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m10633[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m10634[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m10635[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m10636[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m10637[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m10638[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m10639[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m10640[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m10641[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m10642[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m10643[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m10644[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m10645[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m10646[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m10647[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m10648[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m10649[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m10650[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m10651[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m10652[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m10653[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m10654[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m10655[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m10656[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m10657[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m10658[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m10659[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m10660[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m10661[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m10662[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m10663[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m10664[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m10665[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m10666[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m10667[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m10668[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m10669[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m10670[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m10671[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m10672[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m10673[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m10674[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m10675[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m10676[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m10677[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m10678[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m10679[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m10680[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m10681[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m10682[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m10683[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m10684[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m10685[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m10686[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m10687[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m10688[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m10689[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m10690[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m10691[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m10692[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m10693[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m10694[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m10695[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m10696[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m10697[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m10698[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m10699[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m10700[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m10701[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m10702[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m10703[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m10704[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m10705[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m10706[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m10707[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m10708[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m10709[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m10710[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m10711[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m10712[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m10713[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m10714[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m10715[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m10716[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m10717[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m10718[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m10719[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m10720[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m10721[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m10722[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m10723[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m10724[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m10725[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m10726[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m10727[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m10728[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m10729[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m10730[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m10731[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m10732[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m10733[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m10734[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m10735[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m10736[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m10737[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m10738[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m10739[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m10740[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m10741[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m10742[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m10743[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m10744[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m10745[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m10746[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m10747[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m10748[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m10749[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m10750[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m10751[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m10752[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m10753[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m10754[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m10755[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m10756[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m10757[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m10758[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m10759[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m10760[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m10761[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m10762[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m10763[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m10764[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m10765[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m10766[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m10767[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m10768[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m10769[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m10770[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m10771[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m10772[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m10773[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m10774[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m10775[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m10776[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m10777[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m10778[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m10779[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m10780[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m10781[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m10782[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m10783[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m10784[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m10785[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m10786[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m10787[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m10788[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m10789[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m10790[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m10791[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m10792[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m10793[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m10794[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m10795[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m10796[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m10797[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m10798[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m10799[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m10800[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m10801[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m10802[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m10803[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m10804[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m10805[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m10806[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m10807[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m10808[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m10809[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m10810[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m10811[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m10812[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m10813[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m10814[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m10815[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m10816[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m10817[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m10818[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m10819[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m10820[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m10821[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m10822[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m10823[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m10824[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m10825[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m10826[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m10827[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m10828[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m10829[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m10830[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m10831[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m10832[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m10833[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m10834[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m10835[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m10836[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m10837[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m10838[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m10839[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m10840[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m10841[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m10842[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m10843[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m10844[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m10845[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m10846[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m10847[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m10848[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m10849[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m10850[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m10851[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m10852[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m10853[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m10854[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m10855[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m10856[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m10857[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m10858[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m10859[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m10860[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m10861[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m10862[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m10863[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m10864[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m10865[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m10866[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m10867[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m10868[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m10869[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m10870[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m10871[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m10872[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m10873[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m10874[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m10875[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m10876[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m10877[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m10878[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m10879[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m10880[0m no test error[K
  ok [1m[32m10881[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: simple ReadStream[0m[1B[1G
# ReadStream: pausing[K

  ok [1m[32m10882[0m undefined[K
  ok [1m[32m10883[0m stream should still be paused[K
  ok [1m[32m10884[0m onData was used in test[K
  ok [1m[32m10885[0m pauseVerify was used in test[K
  ok [1m[32m10886[0m ReadStream emitted single "end" event[K
  ok [1m[32m10887[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m10888[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m10889[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m10890[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m10891[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m10892[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m10893[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m10894[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m10895[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m10896[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m10897[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m10898[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m10899[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m10900[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m10901[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m10902[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m10903[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m10904[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m10905[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m10906[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m10907[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m10908[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m10909[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m10910[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m10911[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m10912[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m10913[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m10914[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m10915[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m10916[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m10917[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m10918[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m10919[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m10920[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m10921[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m10922[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m10923[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m10924[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m10925[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m10926[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m10927[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m10928[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m10929[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m10930[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m10931[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m10932[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m10933[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m10934[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m10935[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m10936[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m10937[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m10938[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m10939[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m10940[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m10941[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m10942[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m10943[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m10944[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m10945[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m10946[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m10947[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m10948[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m10949[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m10950[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m10951[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m10952[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m10953[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m10954[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m10955[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m10956[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m10957[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m10958[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m10959[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m10960[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m10961[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m10962[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m10963[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m10964[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m10965[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m10966[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m10967[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m10968[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m10969[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m10970[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m10971[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m10972[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m10973[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m10974[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m10975[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m10976[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m10977[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m10978[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m10979[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m10980[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m10981[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m10982[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m10983[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m10984[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m10985[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m10986[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m10987[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m10988[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m10989[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m10990[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m10991[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m10992[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m10993[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m10994[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m10995[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m10996[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m10997[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m10998[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m10999[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m11000[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m11001[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m11002[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m11003[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m11004[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m11005[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m11006[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m11007[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m11008[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m11009[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m11010[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m11011[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m11012[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m11013[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m11014[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m11015[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m11016[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m11017[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m11018[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m11019[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m11020[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m11021[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m11022[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m11023[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m11024[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m11025[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m11026[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m11027[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m11028[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m11029[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m11030[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m11031[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m11032[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m11033[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m11034[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m11035[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m11036[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m11037[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m11038[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m11039[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m11040[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m11041[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m11042[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m11043[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m11044[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m11045[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m11046[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m11047[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m11048[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m11049[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m11050[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m11051[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m11052[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m11053[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m11054[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m11055[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m11056[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m11057[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m11058[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m11059[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m11060[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m11061[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m11062[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m11063[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m11064[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m11065[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m11066[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m11067[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m11068[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m11069[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m11070[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m11071[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m11072[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m11073[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m11074[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m11075[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m11076[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m11077[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m11078[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m11079[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m11080[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m11081[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m11082[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m11083[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m11084[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m11085[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m11086[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m11087[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m11088[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m11089[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m11090[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m11091[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m11092[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m11093[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m11094[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m11095[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m11096[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m11097[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m11098[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m11099[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m11100[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m11101[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m11102[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m11103[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m11104[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m11105[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m11106[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m11107[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m11108[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m11109[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m11110[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m11111[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m11112[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m11113[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m11114[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m11115[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m11116[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m11117[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m11118[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m11119[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m11120[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m11121[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m11122[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m11123[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m11124[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m11125[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m11126[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m11127[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m11128[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m11129[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m11130[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m11131[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m11132[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m11133[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m11134[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m11135[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m11136[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m11137[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m11138[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m11139[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m11140[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m11141[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m11142[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m11143[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m11144[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m11145[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m11146[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m11147[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m11148[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m11149[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m11150[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m11151[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m11152[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m11153[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m11154[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m11155[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m11156[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m11157[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m11158[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m11159[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m11160[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m11161[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m11162[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m11163[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m11164[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m11165[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m11166[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m11167[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m11168[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m11169[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m11170[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m11171[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m11172[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m11173[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m11174[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m11175[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m11176[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m11177[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m11178[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m11179[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m11180[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m11181[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m11182[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m11183[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m11184[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m11185[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m11186[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m11187[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m11188[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m11189[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m11190[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m11191[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m11192[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m11193[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m11194[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m11195[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m11196[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m11197[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m11198[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m11199[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m11200[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m11201[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m11202[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m11203[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m11204[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m11205[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m11206[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m11207[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m11208[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m11209[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m11210[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m11211[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m11212[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m11213[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m11214[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m11215[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m11216[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m11217[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m11218[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m11219[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m11220[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m11221[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m11222[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m11223[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m11224[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m11225[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m11226[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m11227[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m11228[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m11229[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m11230[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m11231[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m11232[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m11233[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m11234[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m11235[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m11236[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m11237[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m11238[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m11239[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m11240[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m11241[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m11242[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m11243[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m11244[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m11245[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m11246[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m11247[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m11248[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m11249[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m11250[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m11251[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m11252[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m11253[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m11254[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m11255[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m11256[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m11257[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m11258[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m11259[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m11260[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m11261[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m11262[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m11263[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m11264[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m11265[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m11266[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m11267[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m11268[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m11269[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m11270[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m11271[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m11272[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m11273[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m11274[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m11275[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m11276[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m11277[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m11278[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m11279[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m11280[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m11281[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m11282[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m11283[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m11284[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m11285[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m11286[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m11287[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m11288[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m11289[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m11290[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m11291[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m11292[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m11293[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m11294[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m11295[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m11296[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m11297[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m11298[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m11299[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m11300[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m11301[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m11302[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m11303[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m11304[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m11305[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m11306[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m11307[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m11308[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m11309[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m11310[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m11311[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m11312[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m11313[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m11314[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m11315[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m11316[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m11317[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m11318[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m11319[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m11320[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m11321[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m11322[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m11323[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m11324[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m11325[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m11326[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m11327[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m11328[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m11329[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m11330[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m11331[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m11332[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m11333[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m11334[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m11335[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m11336[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m11337[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m11338[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m11339[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m11340[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m11341[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m11342[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m11343[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m11344[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m11345[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m11346[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m11347[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m11348[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m11349[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m11350[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m11351[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m11352[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m11353[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m11354[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m11355[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m11356[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m11357[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m11358[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m11359[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m11360[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m11361[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m11362[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m11363[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m11364[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m11365[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m11366[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m11367[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m11368[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m11369[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m11370[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m11371[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m11372[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m11373[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m11374[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m11375[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m11376[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m11377[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m11378[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m11379[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m11380[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m11381[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m11382[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m11383[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m11384[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m11385[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m11386[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m11387[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m11388[0m no test error[K
  ok [1m[32m11389[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: pausing[0m[1B[1G
# ReadStream: destroy() immediately[K

  ok [1m[32m11390[0m undefined[K
  ok [1m[32m11391[0m "data" event was not fired[K
  ok [1m[32m11392[0m "end" event was not fired[K
  ok [1m[32m11393[0m no test error[K
  ok [1m[32m11394[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() immediately[0m[1B[1G
# ReadStream: destroy() after close[K

  ok [1m[32m11395[0m undefined[K
  ok [1m[32m11396[0m no test error[K
  ok [1m[32m11397[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() after close[0m[1B[1G
# ReadStream: destroy() after closing db[K

  ok [1m[32m11398[0m undefined[K
  ok [1m[32m11399[0m undefined[K
  ok [1m[32m11400[0m no test error[K
  ok [1m[32m11401[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() after closing db[0m[1B[1G
# ReadStream: destroy() twice[K

  ok [1m[32m11402[0m undefined[K
  ok [1m[32m11403[0m no test error[K
  ok [1m[32m11404[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() twice[0m[1B[1G
# ReadStream: destroy() half way through[K

  ok [1m[32m11405[0m undefined[K
  ok [1m[32m11406[0m ReadStream emitted correct number of "data" events (5)[K
  ok [1m[32m11407[0m should be truthy[K
  ok [1m[32m11408[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m11409[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m11410[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m11411[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m11412[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m11413[0m should be truthy[K
  ok [1m[32m11414[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m11415[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m11416[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m11417[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m11418[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m11419[0m should be truthy[K
  ok [1m[32m11420[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m11421[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m11422[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m11423[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m11424[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m11425[0m should be truthy[K
  ok [1m[32m11426[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m11427[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m11428[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m11429[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m11430[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m11431[0m should be truthy[K
  ok [1m[32m11432[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m11433[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m11434[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m11435[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m11436[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m11437[0m no test error[K
  ok [1m[32m11438[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: destroy() half way through[0m[1B[1G
# ReadStream: readStream() with "reverse=true"[K

  ok [1m[32m11439[0m undefined[K
  ok [1m[32m11440[0m ReadStream emitted single "end" event[K
  ok [1m[32m11441[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m11442[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m11443[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m11444[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m11445[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m11446[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m11447[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m11448[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m11449[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m11450[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m11451[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m11452[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m11453[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m11454[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m11455[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m11456[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m11457[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m11458[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m11459[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m11460[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m11461[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m11462[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m11463[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m11464[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m11465[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m11466[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m11467[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m11468[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m11469[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m11470[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m11471[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m11472[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m11473[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m11474[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m11475[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m11476[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m11477[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m11478[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m11479[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m11480[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m11481[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m11482[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m11483[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m11484[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m11485[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m11486[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m11487[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m11488[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m11489[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m11490[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m11491[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m11492[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m11493[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m11494[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m11495[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m11496[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m11497[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m11498[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m11499[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m11500[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m11501[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m11502[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m11503[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m11504[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m11505[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m11506[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m11507[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m11508[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m11509[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m11510[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m11511[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m11512[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m11513[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m11514[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m11515[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m11516[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m11517[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m11518[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m11519[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m11520[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m11521[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m11522[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m11523[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m11524[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m11525[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m11526[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m11527[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m11528[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m11529[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m11530[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m11531[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m11532[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m11533[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m11534[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m11535[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m11536[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m11537[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m11538[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m11539[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m11540[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m11541[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m11542[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m11543[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m11544[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m11545[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m11546[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m11547[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m11548[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m11549[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m11550[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m11551[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m11552[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m11553[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m11554[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m11555[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m11556[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m11557[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m11558[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m11559[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m11560[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m11561[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m11562[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m11563[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m11564[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m11565[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m11566[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m11567[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m11568[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m11569[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m11570[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m11571[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m11572[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m11573[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m11574[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m11575[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m11576[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m11577[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m11578[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m11579[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m11580[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m11581[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m11582[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m11583[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m11584[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m11585[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m11586[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m11587[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m11588[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m11589[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m11590[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m11591[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m11592[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m11593[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m11594[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m11595[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m11596[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m11597[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m11598[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m11599[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m11600[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m11601[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m11602[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m11603[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m11604[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m11605[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m11606[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m11607[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m11608[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m11609[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m11610[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m11611[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m11612[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m11613[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m11614[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m11615[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m11616[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m11617[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m11618[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m11619[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m11620[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m11621[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m11622[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m11623[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m11624[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m11625[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m11626[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m11627[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m11628[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m11629[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m11630[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m11631[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m11632[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m11633[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m11634[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m11635[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m11636[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m11637[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m11638[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m11639[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m11640[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m11641[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m11642[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m11643[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m11644[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m11645[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m11646[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m11647[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m11648[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m11649[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m11650[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m11651[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m11652[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m11653[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m11654[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m11655[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m11656[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m11657[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m11658[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m11659[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m11660[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m11661[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m11662[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m11663[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m11664[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m11665[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m11666[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m11667[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m11668[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m11669[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m11670[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m11671[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m11672[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m11673[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m11674[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m11675[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m11676[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m11677[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m11678[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m11679[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m11680[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m11681[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m11682[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m11683[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m11684[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m11685[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m11686[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m11687[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m11688[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m11689[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m11690[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m11691[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m11692[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m11693[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m11694[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m11695[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m11696[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m11697[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m11698[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m11699[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m11700[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m11701[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m11702[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m11703[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m11704[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m11705[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m11706[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m11707[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m11708[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m11709[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m11710[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m11711[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m11712[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m11713[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m11714[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m11715[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m11716[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m11717[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m11718[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m11719[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m11720[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m11721[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m11722[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m11723[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m11724[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m11725[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m11726[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m11727[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m11728[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m11729[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m11730[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m11731[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m11732[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m11733[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m11734[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m11735[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m11736[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m11737[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m11738[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m11739[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m11740[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m11741[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m11742[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m11743[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m11744[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m11745[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m11746[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m11747[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m11748[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m11749[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m11750[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m11751[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m11752[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m11753[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m11754[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m11755[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m11756[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m11757[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m11758[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m11759[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m11760[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m11761[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m11762[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m11763[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m11764[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m11765[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m11766[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m11767[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m11768[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m11769[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m11770[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m11771[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m11772[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m11773[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m11774[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m11775[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m11776[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m11777[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m11778[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m11779[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m11780[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m11781[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m11782[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m11783[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m11784[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m11785[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m11786[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m11787[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m11788[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m11789[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m11790[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m11791[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m11792[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m11793[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m11794[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m11795[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m11796[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m11797[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m11798[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m11799[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m11800[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m11801[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m11802[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m11803[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m11804[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m11805[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m11806[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m11807[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m11808[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m11809[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m11810[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m11811[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m11812[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m11813[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m11814[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m11815[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m11816[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m11817[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m11818[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m11819[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m11820[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m11821[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m11822[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m11823[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m11824[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m11825[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m11826[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m11827[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m11828[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m11829[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m11830[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m11831[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m11832[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m11833[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m11834[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m11835[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m11836[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m11837[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m11838[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m11839[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m11840[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m11841[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m11842[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m11843[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m11844[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m11845[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m11846[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m11847[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m11848[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m11849[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m11850[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m11851[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m11852[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m11853[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m11854[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m11855[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m11856[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m11857[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m11858[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m11859[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m11860[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m11861[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m11862[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m11863[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m11864[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m11865[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m11866[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m11867[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m11868[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m11869[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m11870[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m11871[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m11872[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m11873[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m11874[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m11875[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m11876[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m11877[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m11878[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m11879[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m11880[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m11881[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m11882[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m11883[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m11884[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m11885[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m11886[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m11887[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m11888[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m11889[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m11890[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m11891[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m11892[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m11893[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m11894[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m11895[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m11896[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m11897[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m11898[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m11899[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m11900[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m11901[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m11902[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m11903[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m11904[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m11905[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m11906[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m11907[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m11908[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m11909[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m11910[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m11911[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m11912[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m11913[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m11914[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m11915[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m11916[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m11917[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m11918[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m11919[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m11920[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m11921[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m11922[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m11923[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m11924[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m11925[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m11926[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m11927[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m11928[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m11929[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m11930[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m11931[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m11932[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m11933[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m11934[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m11935[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m11936[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m11937[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m11938[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m11939[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m11940[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m11941[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m11942[0m no test error[K
  ok [1m[32m11943[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte"[K

  ok [1m[32m11944[0m undefined[K
  ok [1m[32m11945[0m ReadStream emitted single "end" event[K
  ok [1m[32m11946[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m11947[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m11948[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m11949[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m11950[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m11951[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m11952[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m11953[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m11954[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m11955[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m11956[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m11957[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m11958[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m11959[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m11960[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m11961[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m11962[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m11963[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m11964[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m11965[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m11966[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m11967[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m11968[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m11969[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m11970[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m11971[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m11972[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m11973[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m11974[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m11975[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m11976[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m11977[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m11978[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m11979[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m11980[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m11981[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m11982[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m11983[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m11984[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m11985[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m11986[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m11987[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m11988[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m11989[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m11990[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m11991[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m11992[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m11993[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m11994[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m11995[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m11996[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m11997[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m11998[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m11999[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m12000[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m12001[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m12002[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m12003[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m12004[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m12005[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m12006[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m12007[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m12008[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m12009[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m12010[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m12011[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m12012[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m12013[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m12014[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m12015[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m12016[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m12017[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m12018[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m12019[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m12020[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m12021[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m12022[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m12023[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m12024[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m12025[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m12026[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m12027[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m12028[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m12029[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m12030[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m12031[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m12032[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m12033[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m12034[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m12035[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m12036[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m12037[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m12038[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m12039[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m12040[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m12041[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m12042[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m12043[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m12044[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m12045[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m12046[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m12047[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m12048[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m12049[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m12050[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m12051[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m12052[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m12053[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m12054[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m12055[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m12056[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m12057[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m12058[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m12059[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m12060[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m12061[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m12062[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m12063[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m12064[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m12065[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m12066[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m12067[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m12068[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m12069[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m12070[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m12071[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m12072[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m12073[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m12074[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m12075[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m12076[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m12077[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m12078[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m12079[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m12080[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m12081[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m12082[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m12083[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m12084[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m12085[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m12086[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m12087[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m12088[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m12089[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m12090[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m12091[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m12092[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m12093[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m12094[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m12095[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m12096[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m12097[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m12098[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m12099[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m12100[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m12101[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m12102[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m12103[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m12104[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m12105[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m12106[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m12107[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m12108[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m12109[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m12110[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m12111[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m12112[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m12113[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m12114[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m12115[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m12116[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m12117[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m12118[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m12119[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m12120[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m12121[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m12122[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m12123[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m12124[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m12125[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m12126[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m12127[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m12128[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m12129[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m12130[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m12131[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m12132[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m12133[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m12134[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m12135[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m12136[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m12137[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m12138[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m12139[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m12140[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m12141[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m12142[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m12143[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m12144[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m12145[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m12146[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m12147[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m12148[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m12149[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m12150[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m12151[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m12152[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m12153[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m12154[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m12155[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m12156[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m12157[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m12158[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m12159[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m12160[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m12161[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m12162[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m12163[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m12164[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m12165[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m12166[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m12167[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m12168[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m12169[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m12170[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m12171[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m12172[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m12173[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m12174[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m12175[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m12176[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m12177[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m12178[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m12179[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m12180[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m12181[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m12182[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m12183[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m12184[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m12185[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m12186[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m12187[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m12188[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m12189[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m12190[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m12191[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m12192[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m12193[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m12194[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m12195[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m12196[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m12197[0m no test error[K
  ok [1m[32m12198[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte"[0m[1B[1G
# ReadStream: readStream() with "lte" and "reverse=true"[K

  ok [1m[32m12199[0m undefined[K
  ok [1m[32m12200[0m ReadStream emitted single "end" event[K
  ok [1m[32m12201[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m12202[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m12203[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m12204[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m12205[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m12206[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m12207[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m12208[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m12209[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m12210[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m12211[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m12212[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m12213[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m12214[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m12215[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m12216[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m12217[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m12218[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m12219[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m12220[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m12221[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m12222[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m12223[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m12224[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m12225[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m12226[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m12227[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m12228[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m12229[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m12230[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m12231[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m12232[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m12233[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m12234[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m12235[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m12236[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m12237[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m12238[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m12239[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m12240[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m12241[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m12242[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m12243[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m12244[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m12245[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m12246[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m12247[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m12248[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m12249[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m12250[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m12251[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m12252[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m12253[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m12254[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m12255[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m12256[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m12257[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m12258[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m12259[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m12260[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m12261[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m12262[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m12263[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m12264[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m12265[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m12266[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m12267[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m12268[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m12269[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m12270[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m12271[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m12272[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m12273[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m12274[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m12275[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m12276[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m12277[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m12278[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m12279[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m12280[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m12281[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m12282[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m12283[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m12284[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m12285[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m12286[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m12287[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m12288[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m12289[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m12290[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m12291[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m12292[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m12293[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m12294[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m12295[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m12296[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m12297[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m12298[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m12299[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m12300[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m12301[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m12302[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m12303[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m12304[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m12305[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m12306[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m12307[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m12308[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m12309[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m12310[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m12311[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m12312[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m12313[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m12314[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m12315[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m12316[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m12317[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m12318[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m12319[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m12320[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m12321[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m12322[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m12323[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m12324[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m12325[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m12326[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m12327[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m12328[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m12329[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m12330[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m12331[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m12332[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m12333[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m12334[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m12335[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m12336[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m12337[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m12338[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m12339[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m12340[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m12341[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m12342[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m12343[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m12344[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m12345[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m12346[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m12347[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m12348[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m12349[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m12350[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m12351[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m12352[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m12353[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m12354[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m12355[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m12356[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m12357[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m12358[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m12359[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m12360[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m12361[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m12362[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m12363[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m12364[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m12365[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m12366[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m12367[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m12368[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m12369[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m12370[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m12371[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m12372[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m12373[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m12374[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m12375[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m12376[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m12377[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m12378[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m12379[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m12380[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m12381[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m12382[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m12383[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m12384[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m12385[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m12386[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m12387[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m12388[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m12389[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m12390[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m12391[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m12392[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m12393[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m12394[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m12395[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m12396[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m12397[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m12398[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m12399[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m12400[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m12401[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m12402[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m12403[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m12404[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m12405[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m12406[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m12407[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m12408[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m12409[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m12410[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m12411[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m12412[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m12413[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m12414[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m12415[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m12416[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m12417[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m12418[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m12419[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m12420[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m12421[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m12422[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m12423[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m12424[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m12425[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m12426[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m12427[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m12428[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m12429[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m12430[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m12431[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m12432[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m12433[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m12434[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m12435[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m12436[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m12437[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m12438[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m12439[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m12440[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m12441[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m12442[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m12443[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m12444[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m12445[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m12446[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m12447[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m12448[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m12449[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m12450[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m12451[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m12452[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m12453[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m12454[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m12455[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m12456[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m12457[0m no test error[K
  ok [1m[32m12458[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (float)[K

  ok [1m[32m12459[0m undefined[K
  ok [1m[32m12460[0m ReadStream emitted single "end" event[K
  ok [1m[32m12461[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m12462[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m12463[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m12464[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m12465[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m12466[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m12467[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m12468[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m12469[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m12470[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m12471[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m12472[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m12473[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m12474[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m12475[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m12476[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m12477[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m12478[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m12479[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m12480[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m12481[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m12482[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m12483[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m12484[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m12485[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m12486[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m12487[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m12488[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m12489[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m12490[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m12491[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m12492[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m12493[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m12494[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m12495[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m12496[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m12497[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m12498[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m12499[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m12500[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m12501[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m12502[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m12503[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m12504[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m12505[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m12506[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m12507[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m12508[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m12509[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m12510[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m12511[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m12512[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m12513[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m12514[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m12515[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m12516[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m12517[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m12518[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m12519[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m12520[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m12521[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m12522[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m12523[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m12524[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m12525[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m12526[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m12527[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m12528[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m12529[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m12530[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m12531[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m12532[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m12533[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m12534[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m12535[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m12536[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m12537[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m12538[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m12539[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m12540[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m12541[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m12542[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m12543[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m12544[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m12545[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m12546[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m12547[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m12548[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m12549[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m12550[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m12551[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m12552[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m12553[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m12554[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m12555[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m12556[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m12557[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m12558[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m12559[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m12560[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m12561[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m12562[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m12563[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m12564[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m12565[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m12566[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m12567[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m12568[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m12569[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m12570[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m12571[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m12572[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m12573[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m12574[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m12575[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m12576[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m12577[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m12578[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m12579[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m12580[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m12581[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m12582[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m12583[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m12584[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m12585[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m12586[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m12587[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m12588[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m12589[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m12590[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m12591[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m12592[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m12593[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m12594[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m12595[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m12596[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m12597[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m12598[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m12599[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m12600[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m12601[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m12602[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m12603[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m12604[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m12605[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m12606[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m12607[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m12608[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m12609[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m12610[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m12611[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m12612[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m12613[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m12614[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m12615[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m12616[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m12617[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m12618[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m12619[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m12620[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m12621[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m12622[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m12623[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m12624[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m12625[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m12626[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m12627[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m12628[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m12629[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m12630[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m12631[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m12632[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m12633[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m12634[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m12635[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m12636[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m12637[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m12638[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m12639[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m12640[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m12641[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m12642[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m12643[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m12644[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m12645[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m12646[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m12647[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m12648[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m12649[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m12650[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m12651[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m12652[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m12653[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m12654[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m12655[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m12656[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m12657[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m12658[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m12659[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m12660[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m12661[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m12662[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m12663[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m12664[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m12665[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m12666[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m12667[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m12668[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m12669[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m12670[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m12671[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m12672[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m12673[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m12674[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m12675[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m12676[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m12677[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m12678[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m12679[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m12680[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m12681[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m12682[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m12683[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m12684[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m12685[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m12686[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m12687[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m12688[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m12689[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m12690[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m12691[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m12692[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m12693[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m12694[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m12695[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m12696[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m12697[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m12698[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m12699[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m12700[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m12701[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m12702[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m12703[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m12704[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m12705[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m12706[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m12707[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m12708[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m12709[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m12710[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m12711[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m12712[0m no test error[K
  ok [1m[32m12713[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (float)[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (float) and "reverse=true"[K

  ok [1m[32m12714[0m undefined[K
  ok [1m[32m12715[0m ReadStream emitted single "end" event[K
  ok [1m[32m12716[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m12717[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m12718[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m12719[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m12720[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m12721[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m12722[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m12723[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m12724[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m12725[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m12726[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m12727[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m12728[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m12729[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m12730[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m12731[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m12732[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m12733[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m12734[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m12735[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m12736[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m12737[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m12738[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m12739[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m12740[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m12741[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m12742[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m12743[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m12744[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m12745[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m12746[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m12747[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m12748[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m12749[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m12750[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m12751[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m12752[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m12753[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m12754[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m12755[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m12756[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m12757[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m12758[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m12759[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m12760[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m12761[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m12762[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m12763[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m12764[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m12765[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m12766[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m12767[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m12768[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m12769[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m12770[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m12771[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m12772[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m12773[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m12774[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m12775[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m12776[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m12777[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m12778[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m12779[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m12780[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m12781[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m12782[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m12783[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m12784[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m12785[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m12786[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m12787[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m12788[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m12789[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m12790[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m12791[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m12792[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m12793[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m12794[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m12795[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m12796[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m12797[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m12798[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m12799[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m12800[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m12801[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m12802[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m12803[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m12804[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m12805[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m12806[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m12807[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m12808[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m12809[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m12810[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m12811[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m12812[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m12813[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m12814[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m12815[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m12816[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m12817[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m12818[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m12819[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m12820[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m12821[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m12822[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m12823[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m12824[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m12825[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m12826[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m12827[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m12828[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m12829[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m12830[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m12831[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m12832[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m12833[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m12834[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m12835[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m12836[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m12837[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m12838[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m12839[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m12840[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m12841[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m12842[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m12843[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m12844[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m12845[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m12846[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m12847[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m12848[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m12849[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m12850[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m12851[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m12852[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m12853[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m12854[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m12855[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m12856[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m12857[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m12858[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m12859[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m12860[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m12861[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m12862[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m12863[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m12864[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m12865[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m12866[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m12867[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m12868[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m12869[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m12870[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m12871[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m12872[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m12873[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m12874[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m12875[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m12876[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m12877[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m12878[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m12879[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m12880[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m12881[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m12882[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m12883[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m12884[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m12885[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m12886[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m12887[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m12888[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m12889[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m12890[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m12891[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m12892[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m12893[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m12894[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m12895[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m12896[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m12897[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m12898[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m12899[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m12900[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m12901[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m12902[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m12903[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m12904[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m12905[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m12906[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m12907[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m12908[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m12909[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m12910[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m12911[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m12912[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m12913[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m12914[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m12915[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m12916[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m12917[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m12918[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m12919[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m12920[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m12921[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m12922[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m12923[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m12924[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m12925[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m12926[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m12927[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m12928[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m12929[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m12930[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m12931[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m12932[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m12933[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m12934[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m12935[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m12936[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m12937[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m12938[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m12939[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m12940[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m12941[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m12942[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m12943[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m12944[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m12945[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m12946[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m12947[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m12948[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m12949[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m12950[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m12951[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m12952[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m12953[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m12954[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m12955[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m12956[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m12957[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m12958[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m12959[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m12960[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m12961[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m12962[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m12963[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m12964[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m12965[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m12966[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m12967[0m no test error[K
  ok [1m[32m12968[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (float) and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (string)[K

  ok [1m[32m12969[0m undefined[K
  ok [1m[32m12970[0m ReadStream emitted single "end" event[K
  ok [1m[32m12971[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m12972[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m12973[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m12974[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m12975[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m12976[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m12977[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m12978[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m12979[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m12980[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m12981[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m12982[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m12983[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m12984[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m12985[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m12986[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m12987[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m12988[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m12989[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m12990[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m12991[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m12992[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m12993[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m12994[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m12995[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m12996[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m12997[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m12998[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m12999[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m13000[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m13001[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m13002[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m13003[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m13004[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m13005[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m13006[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m13007[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m13008[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m13009[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m13010[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m13011[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m13012[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m13013[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m13014[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m13015[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m13016[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m13017[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m13018[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m13019[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m13020[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m13021[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m13022[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m13023[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m13024[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m13025[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m13026[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m13027[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m13028[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m13029[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m13030[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m13031[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m13032[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m13033[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m13034[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m13035[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m13036[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m13037[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m13038[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m13039[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m13040[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m13041[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m13042[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m13043[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m13044[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m13045[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m13046[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m13047[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m13048[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m13049[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m13050[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m13051[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m13052[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m13053[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m13054[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m13055[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m13056[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m13057[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m13058[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m13059[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m13060[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m13061[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m13062[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m13063[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m13064[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m13065[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m13066[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m13067[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m13068[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m13069[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m13070[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m13071[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m13072[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m13073[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m13074[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m13075[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m13076[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m13077[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m13078[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m13079[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m13080[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m13081[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m13082[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m13083[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m13084[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m13085[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m13086[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m13087[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m13088[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m13089[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m13090[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m13091[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m13092[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m13093[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m13094[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m13095[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m13096[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m13097[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m13098[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m13099[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m13100[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m13101[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m13102[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m13103[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m13104[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m13105[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m13106[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m13107[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m13108[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m13109[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m13110[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m13111[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m13112[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m13113[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m13114[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m13115[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m13116[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m13117[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m13118[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m13119[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m13120[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m13121[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m13122[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m13123[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m13124[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m13125[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m13126[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m13127[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m13128[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m13129[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m13130[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m13131[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m13132[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m13133[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m13134[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m13135[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m13136[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m13137[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m13138[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m13139[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m13140[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m13141[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m13142[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m13143[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m13144[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m13145[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m13146[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m13147[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m13148[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m13149[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m13150[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m13151[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m13152[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m13153[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m13154[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m13155[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m13156[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m13157[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m13158[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m13159[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m13160[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m13161[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m13162[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m13163[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m13164[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m13165[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m13166[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m13167[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m13168[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m13169[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m13170[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m13171[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m13172[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m13173[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m13174[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m13175[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m13176[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m13177[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m13178[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m13179[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m13180[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m13181[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m13182[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m13183[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m13184[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m13185[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m13186[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m13187[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m13188[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m13189[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m13190[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m13191[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m13192[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m13193[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m13194[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m13195[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m13196[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m13197[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m13198[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m13199[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m13200[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m13201[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m13202[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m13203[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m13204[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m13205[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m13206[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m13207[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m13208[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m13209[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m13210[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m13211[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m13212[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m13213[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m13214[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m13215[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m13216[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m13217[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m13218[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m13219[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m13220[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m13221[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m13222[0m no test error[K
  ok [1m[32m13223[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (string)[0m[1B[1G
# ReadStream: readStream() with "lte"[K

  ok [1m[32m13224[0m undefined[K
  ok [1m[32m13225[0m ReadStream emitted single "end" event[K
  ok [1m[32m13226[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m13227[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m13228[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m13229[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m13230[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m13231[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m13232[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m13233[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m13234[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m13235[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m13236[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m13237[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m13238[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m13239[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m13240[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m13241[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m13242[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m13243[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m13244[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m13245[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m13246[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m13247[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m13248[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m13249[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m13250[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m13251[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m13252[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m13253[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m13254[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m13255[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m13256[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m13257[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m13258[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m13259[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m13260[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m13261[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m13262[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m13263[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m13264[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m13265[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m13266[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m13267[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m13268[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m13269[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m13270[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m13271[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m13272[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m13273[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m13274[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m13275[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m13276[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m13277[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m13278[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m13279[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m13280[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m13281[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m13282[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m13283[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m13284[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m13285[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m13286[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m13287[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m13288[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m13289[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m13290[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m13291[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m13292[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m13293[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m13294[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m13295[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m13296[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m13297[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m13298[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m13299[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m13300[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m13301[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m13302[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m13303[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m13304[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m13305[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m13306[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m13307[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m13308[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m13309[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m13310[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m13311[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m13312[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m13313[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m13314[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m13315[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m13316[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m13317[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m13318[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m13319[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m13320[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m13321[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m13322[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m13323[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m13324[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m13325[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m13326[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m13327[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m13328[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m13329[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m13330[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m13331[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m13332[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m13333[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m13334[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m13335[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m13336[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m13337[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m13338[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m13339[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m13340[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m13341[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m13342[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m13343[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m13344[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m13345[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m13346[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m13347[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m13348[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m13349[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m13350[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m13351[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m13352[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m13353[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m13354[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m13355[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m13356[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m13357[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m13358[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m13359[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m13360[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m13361[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m13362[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m13363[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m13364[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m13365[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m13366[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m13367[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m13368[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m13369[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m13370[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m13371[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m13372[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m13373[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m13374[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m13375[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m13376[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m13377[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m13378[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m13379[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m13380[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m13381[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m13382[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m13383[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m13384[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m13385[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m13386[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m13387[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m13388[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m13389[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m13390[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m13391[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m13392[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m13393[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m13394[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m13395[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m13396[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m13397[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m13398[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m13399[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m13400[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m13401[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m13402[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m13403[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m13404[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m13405[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m13406[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m13407[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m13408[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m13409[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m13410[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m13411[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m13412[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m13413[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m13414[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m13415[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m13416[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m13417[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m13418[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m13419[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m13420[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m13421[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m13422[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m13423[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m13424[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m13425[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m13426[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m13427[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m13428[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m13429[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m13430[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m13431[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m13432[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m13433[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m13434[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m13435[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m13436[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m13437[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m13438[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m13439[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m13440[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m13441[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m13442[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m13443[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m13444[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m13445[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m13446[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m13447[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m13448[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m13449[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m13450[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m13451[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m13452[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m13453[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m13454[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m13455[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m13456[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m13457[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m13458[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m13459[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m13460[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m13461[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m13462[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m13463[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m13464[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m13465[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m13466[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m13467[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m13468[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m13469[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m13470[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m13471[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m13472[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m13473[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m13474[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m13475[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m13476[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m13477[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m13478[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m13479[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m13480[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m13481[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m13482[0m no test error[K
  ok [1m[32m13483[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte"[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (float)[K

  ok [1m[32m13484[0m undefined[K
  ok [1m[32m13485[0m ReadStream emitted single "end" event[K
  ok [1m[32m13486[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m13487[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m13488[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m13489[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m13490[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m13491[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m13492[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m13493[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m13494[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m13495[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m13496[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m13497[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m13498[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m13499[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m13500[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m13501[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m13502[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m13503[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m13504[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m13505[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m13506[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m13507[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m13508[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m13509[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m13510[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m13511[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m13512[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m13513[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m13514[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m13515[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m13516[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m13517[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m13518[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m13519[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m13520[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m13521[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m13522[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m13523[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m13524[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m13525[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m13526[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m13527[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m13528[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m13529[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m13530[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m13531[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m13532[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m13533[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m13534[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m13535[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m13536[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m13537[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m13538[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m13539[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m13540[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m13541[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m13542[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m13543[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m13544[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m13545[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m13546[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m13547[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m13548[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m13549[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m13550[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m13551[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m13552[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m13553[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m13554[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m13555[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m13556[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m13557[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m13558[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m13559[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m13560[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m13561[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m13562[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m13563[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m13564[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m13565[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m13566[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m13567[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m13568[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m13569[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m13570[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m13571[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m13572[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m13573[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m13574[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m13575[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m13576[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m13577[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m13578[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m13579[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m13580[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m13581[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m13582[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m13583[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m13584[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m13585[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m13586[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m13587[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m13588[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m13589[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m13590[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m13591[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m13592[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m13593[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m13594[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m13595[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m13596[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m13597[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m13598[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m13599[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m13600[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m13601[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m13602[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m13603[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m13604[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m13605[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m13606[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m13607[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m13608[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m13609[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m13610[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m13611[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m13612[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m13613[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m13614[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m13615[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m13616[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m13617[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m13618[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m13619[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m13620[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m13621[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m13622[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m13623[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m13624[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m13625[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m13626[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m13627[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m13628[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m13629[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m13630[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m13631[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m13632[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m13633[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m13634[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m13635[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m13636[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m13637[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m13638[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m13639[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m13640[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m13641[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m13642[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m13643[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m13644[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m13645[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m13646[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m13647[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m13648[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m13649[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m13650[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m13651[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m13652[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m13653[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m13654[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m13655[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m13656[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m13657[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m13658[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m13659[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m13660[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m13661[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m13662[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m13663[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m13664[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m13665[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m13666[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m13667[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m13668[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m13669[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m13670[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m13671[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m13672[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m13673[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m13674[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m13675[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m13676[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m13677[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m13678[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m13679[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m13680[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m13681[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m13682[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m13683[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m13684[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m13685[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m13686[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m13687[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m13688[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m13689[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m13690[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m13691[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m13692[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m13693[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m13694[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m13695[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m13696[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m13697[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m13698[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m13699[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m13700[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m13701[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m13702[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m13703[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m13704[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m13705[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m13706[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m13707[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m13708[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m13709[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m13710[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m13711[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m13712[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m13713[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m13714[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m13715[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m13716[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m13717[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m13718[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m13719[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m13720[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m13721[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m13722[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m13723[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m13724[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m13725[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m13726[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m13727[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m13728[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m13729[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m13730[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m13731[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m13732[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m13733[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m13734[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m13735[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m13736[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m13737[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m13738[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m13739[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m13740[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m13741[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m13742[0m no test error[K
  ok [1m[32m13743[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (float)[0m[1B[1G
# ReadStream: readStream() with "lte" being mid-way key (string)[K

  ok [1m[32m13744[0m undefined[K
  ok [1m[32m13745[0m ReadStream emitted single "end" event[K
  ok [1m[32m13746[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m13747[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m13748[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m13749[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m13750[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m13751[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m13752[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m13753[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m13754[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m13755[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m13756[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m13757[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m13758[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m13759[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m13760[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m13761[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m13762[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m13763[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m13764[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m13765[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m13766[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m13767[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m13768[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m13769[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m13770[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m13771[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m13772[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m13773[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m13774[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m13775[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m13776[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m13777[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m13778[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m13779[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m13780[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m13781[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m13782[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m13783[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m13784[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m13785[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m13786[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m13787[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m13788[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m13789[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m13790[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m13791[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m13792[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m13793[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m13794[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m13795[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m13796[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m13797[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m13798[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m13799[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m13800[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m13801[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m13802[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m13803[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m13804[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m13805[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m13806[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m13807[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m13808[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m13809[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m13810[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m13811[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m13812[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m13813[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m13814[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m13815[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m13816[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m13817[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m13818[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m13819[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m13820[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m13821[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m13822[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m13823[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m13824[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m13825[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m13826[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m13827[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m13828[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m13829[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m13830[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m13831[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m13832[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m13833[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m13834[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m13835[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m13836[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m13837[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m13838[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m13839[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m13840[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m13841[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m13842[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m13843[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m13844[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m13845[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m13846[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m13847[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m13848[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m13849[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m13850[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m13851[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m13852[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m13853[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m13854[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m13855[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m13856[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m13857[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m13858[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m13859[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m13860[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m13861[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m13862[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m13863[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m13864[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m13865[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m13866[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m13867[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m13868[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m13869[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m13870[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m13871[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m13872[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m13873[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m13874[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m13875[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m13876[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m13877[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m13878[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m13879[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m13880[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m13881[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m13882[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m13883[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m13884[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m13885[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m13886[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m13887[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m13888[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m13889[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m13890[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m13891[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m13892[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m13893[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m13894[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m13895[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m13896[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m13897[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m13898[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m13899[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m13900[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m13901[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m13902[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m13903[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m13904[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m13905[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m13906[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m13907[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m13908[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m13909[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m13910[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m13911[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m13912[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m13913[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m13914[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m13915[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m13916[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m13917[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m13918[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m13919[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m13920[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m13921[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m13922[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m13923[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m13924[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m13925[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m13926[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m13927[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m13928[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m13929[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m13930[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m13931[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m13932[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m13933[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m13934[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m13935[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m13936[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m13937[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m13938[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m13939[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m13940[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m13941[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m13942[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m13943[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m13944[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m13945[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m13946[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m13947[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m13948[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m13949[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m13950[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m13951[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m13952[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m13953[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m13954[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m13955[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m13956[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m13957[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m13958[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m13959[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m13960[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m13961[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m13962[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m13963[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m13964[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m13965[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m13966[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m13967[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m13968[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m13969[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m13970[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m13971[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m13972[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m13973[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m13974[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m13975[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m13976[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m13977[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m13978[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m13979[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m13980[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m13981[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m13982[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m13983[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m13984[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m13985[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m13986[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m13987[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m13988[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m13989[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m13990[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m13991[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m13992[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m13993[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m13994[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m13995[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m13996[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m13997[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m13998[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m13999[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m14000[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m14001[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m14002[0m no test error[K
  ok [1m[32m14003[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" being mid-way key (string)[0m[1B[1G
# ReadStream: readStream() with "gte" being mid-way key (float) and "reverse=true"[K

  ok [1m[32m14004[0m undefined[K
  ok [1m[32m14005[0m ReadStream emitted single "end" event[K
  ok [1m[32m14006[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m14007[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m14008[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m14009[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m14010[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m14011[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m14012[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m14013[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m14014[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m14015[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m14016[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m14017[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m14018[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m14019[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m14020[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m14021[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m14022[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m14023[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m14024[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m14025[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m14026[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m14027[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m14028[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m14029[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m14030[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m14031[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m14032[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m14033[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m14034[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m14035[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m14036[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m14037[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m14038[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m14039[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m14040[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m14041[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m14042[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m14043[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m14044[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m14045[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m14046[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m14047[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m14048[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m14049[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m14050[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m14051[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m14052[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m14053[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m14054[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m14055[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m14056[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m14057[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m14058[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m14059[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m14060[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m14061[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m14062[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m14063[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m14064[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m14065[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m14066[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m14067[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m14068[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m14069[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m14070[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m14071[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m14072[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m14073[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m14074[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m14075[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m14076[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m14077[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m14078[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m14079[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m14080[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m14081[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m14082[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m14083[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m14084[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m14085[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m14086[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m14087[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m14088[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m14089[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m14090[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m14091[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m14092[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m14093[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m14094[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m14095[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m14096[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m14097[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m14098[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m14099[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m14100[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m14101[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m14102[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m14103[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m14104[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m14105[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m14106[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m14107[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m14108[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m14109[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m14110[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m14111[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m14112[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m14113[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m14114[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m14115[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m14116[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m14117[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m14118[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m14119[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m14120[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m14121[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m14122[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m14123[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m14124[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m14125[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m14126[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m14127[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m14128[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m14129[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m14130[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m14131[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m14132[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m14133[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m14134[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m14135[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m14136[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m14137[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m14138[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m14139[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m14140[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m14141[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m14142[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m14143[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m14144[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m14145[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m14146[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m14147[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m14148[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m14149[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m14150[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m14151[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m14152[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m14153[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m14154[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m14155[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m14156[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m14157[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m14158[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m14159[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m14160[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m14161[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m14162[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m14163[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m14164[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m14165[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m14166[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m14167[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m14168[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m14169[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m14170[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m14171[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m14172[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m14173[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m14174[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m14175[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m14176[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m14177[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m14178[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m14179[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m14180[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m14181[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m14182[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m14183[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m14184[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m14185[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m14186[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m14187[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m14188[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m14189[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m14190[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m14191[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m14192[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m14193[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m14194[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m14195[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m14196[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m14197[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m14198[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m14199[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m14200[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m14201[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m14202[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m14203[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m14204[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m14205[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m14206[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m14207[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m14208[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m14209[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m14210[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m14211[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m14212[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m14213[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m14214[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m14215[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m14216[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m14217[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m14218[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m14219[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m14220[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m14221[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m14222[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m14223[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m14224[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m14225[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m14226[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m14227[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m14228[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m14229[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m14230[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m14231[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m14232[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m14233[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m14234[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m14235[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m14236[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m14237[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m14238[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m14239[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m14240[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m14241[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m14242[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m14243[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m14244[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m14245[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m14246[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m14247[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m14248[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m14249[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m14250[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m14251[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m14252[0m no test error[K
  ok [1m[32m14253[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" being mid-way key (float) and "reverse=true"[0m[1B[1G
# ReadStream: readStream() with both "gte" and "lte"[K

  ok [1m[32m14254[0m undefined[K
  ok [1m[32m14255[0m ReadStream emitted single "end" event[K
  ok [1m[32m14256[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m14257[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m14258[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m14259[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m14260[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m14261[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m14262[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m14263[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m14264[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m14265[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m14266[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m14267[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m14268[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m14269[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m14270[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m14271[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m14272[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m14273[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m14274[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m14275[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m14276[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m14277[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m14278[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m14279[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m14280[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m14281[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m14282[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m14283[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m14284[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m14285[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m14286[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m14287[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m14288[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m14289[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m14290[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m14291[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m14292[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m14293[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m14294[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m14295[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m14296[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m14297[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m14298[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m14299[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m14300[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m14301[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m14302[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m14303[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m14304[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m14305[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m14306[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m14307[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m14308[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m14309[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m14310[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m14311[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m14312[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m14313[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m14314[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m14315[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m14316[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m14317[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m14318[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m14319[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m14320[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m14321[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m14322[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m14323[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m14324[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m14325[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m14326[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m14327[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m14328[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m14329[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m14330[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m14331[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m14332[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m14333[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m14334[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m14335[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m14336[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m14337[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m14338[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m14339[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m14340[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m14341[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m14342[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m14343[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m14344[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m14345[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m14346[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m14347[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m14348[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m14349[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m14350[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m14351[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m14352[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m14353[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m14354[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m14355[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m14356[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m14357[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m14358[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m14359[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m14360[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m14361[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m14362[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m14363[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m14364[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m14365[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m14366[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m14367[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m14368[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m14369[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m14370[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m14371[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m14372[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m14373[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m14374[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m14375[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m14376[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m14377[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m14378[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m14379[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m14380[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m14381[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m14382[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m14383[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m14384[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m14385[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m14386[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m14387[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m14388[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m14389[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m14390[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m14391[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m14392[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m14393[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m14394[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m14395[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m14396[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m14397[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m14398[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m14399[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m14400[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m14401[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m14402[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m14403[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m14404[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m14405[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m14406[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m14407[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m14408[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m14409[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m14410[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m14411[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m14412[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m14413[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m14414[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m14415[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m14416[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m14417[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m14418[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m14419[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m14420[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m14421[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m14422[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m14423[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m14424[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m14425[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m14426[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m14427[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m14428[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m14429[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m14430[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m14431[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m14432[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m14433[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m14434[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m14435[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m14436[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m14437[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m14438[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m14439[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m14440[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m14441[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m14442[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m14443[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m14444[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m14445[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m14446[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m14447[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m14448[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m14449[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m14450[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m14451[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m14452[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m14453[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m14454[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m14455[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m14456[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m14457[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m14458[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m14459[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m14460[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m14461[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m14462[0m no test error[K
  ok [1m[32m14463[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with both "gte" and "lte"[0m[1B[1G
# ReadStream: readStream() with both "gte" and "lte" and "reverse=true"[K

  ok [1m[32m14464[0m undefined[K
  ok [1m[32m14465[0m ReadStream emitted single "end" event[K
  ok [1m[32m14466[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m14467[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m14468[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m14469[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m14470[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m14471[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m14472[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m14473[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m14474[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m14475[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m14476[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m14477[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m14478[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m14479[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m14480[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m14481[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m14482[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m14483[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m14484[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m14485[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m14486[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m14487[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m14488[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m14489[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m14490[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m14491[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m14492[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m14493[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m14494[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m14495[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m14496[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m14497[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m14498[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m14499[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m14500[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m14501[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m14502[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m14503[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m14504[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m14505[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m14506[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m14507[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m14508[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m14509[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m14510[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m14511[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m14512[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m14513[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m14514[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m14515[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m14516[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m14517[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m14518[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m14519[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m14520[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m14521[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m14522[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m14523[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m14524[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m14525[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m14526[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m14527[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m14528[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m14529[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m14530[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m14531[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m14532[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m14533[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m14534[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m14535[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m14536[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m14537[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m14538[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m14539[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m14540[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m14541[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m14542[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m14543[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m14544[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m14545[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m14546[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m14547[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m14548[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m14549[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m14550[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m14551[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m14552[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m14553[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m14554[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m14555[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m14556[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m14557[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m14558[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m14559[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m14560[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m14561[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m14562[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m14563[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m14564[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m14565[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m14566[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m14567[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m14568[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m14569[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m14570[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m14571[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m14572[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m14573[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m14574[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m14575[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m14576[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m14577[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m14578[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m14579[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m14580[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m14581[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m14582[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m14583[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m14584[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m14585[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m14586[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m14587[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m14588[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m14589[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m14590[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m14591[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m14592[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m14593[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m14594[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m14595[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m14596[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m14597[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m14598[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m14599[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m14600[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m14601[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m14602[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m14603[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m14604[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m14605[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m14606[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m14607[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m14608[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m14609[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m14610[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m14611[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m14612[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m14613[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m14614[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m14615[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m14616[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m14617[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m14618[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m14619[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m14620[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m14621[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m14622[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m14623[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m14624[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m14625[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m14626[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m14627[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m14628[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m14629[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m14630[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m14631[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m14632[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m14633[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m14634[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m14635[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m14636[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m14637[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m14638[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m14639[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m14640[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m14641[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m14642[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m14643[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m14644[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m14645[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m14646[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m14647[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m14648[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m14649[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m14650[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m14651[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m14652[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m14653[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m14654[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m14655[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m14656[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m14657[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m14658[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m14659[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m14660[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m14661[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m14662[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m14663[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m14664[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m14665[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m14666[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m14667[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m14668[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m14669[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m14670[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m14671[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m14672[0m no test error[K
  ok [1m[32m14673[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with both "gte" and "lte" and "reverse=true"[0m[1B[1G
# ReadStream: readStream() "reverse=true" not sticky (issue #6)[K

  ok [1m[32m14674[0m undefined[K
  ok [1m[32m14675[0m ReadStream emitted single "end" event[K
  ok [1m[32m14676[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m14677[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m14678[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m14679[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m14680[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m14681[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m14682[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m14683[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m14684[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m14685[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m14686[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m14687[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m14688[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m14689[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m14690[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m14691[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m14692[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m14693[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m14694[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m14695[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m14696[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m14697[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m14698[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m14699[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m14700[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m14701[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m14702[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m14703[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m14704[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m14705[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m14706[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m14707[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m14708[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m14709[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m14710[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m14711[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m14712[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m14713[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m14714[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m14715[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m14716[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m14717[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m14718[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m14719[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m14720[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m14721[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m14722[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m14723[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m14724[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m14725[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m14726[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m14727[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m14728[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m14729[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m14730[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m14731[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m14732[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m14733[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m14734[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m14735[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m14736[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m14737[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m14738[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m14739[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m14740[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m14741[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m14742[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m14743[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m14744[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m14745[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m14746[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m14747[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m14748[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m14749[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m14750[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m14751[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m14752[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m14753[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m14754[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m14755[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m14756[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m14757[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m14758[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m14759[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m14760[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m14761[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m14762[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m14763[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m14764[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m14765[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m14766[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m14767[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m14768[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m14769[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m14770[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m14771[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m14772[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m14773[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m14774[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m14775[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m14776[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m14777[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m14778[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m14779[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m14780[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m14781[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m14782[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m14783[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m14784[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m14785[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m14786[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m14787[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m14788[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m14789[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m14790[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m14791[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m14792[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m14793[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m14794[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m14795[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m14796[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m14797[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m14798[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m14799[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m14800[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m14801[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m14802[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m14803[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m14804[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m14805[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m14806[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m14807[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m14808[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m14809[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m14810[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m14811[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m14812[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m14813[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m14814[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m14815[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m14816[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m14817[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m14818[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m14819[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m14820[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m14821[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m14822[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m14823[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m14824[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m14825[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m14826[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m14827[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m14828[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m14829[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m14830[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m14831[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m14832[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m14833[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m14834[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m14835[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m14836[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m14837[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m14838[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m14839[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m14840[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m14841[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m14842[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m14843[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m14844[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m14845[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m14846[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m14847[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m14848[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m14849[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m14850[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m14851[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m14852[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m14853[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m14854[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m14855[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m14856[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m14857[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m14858[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m14859[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m14860[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m14861[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m14862[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m14863[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m14864[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m14865[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m14866[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m14867[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m14868[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m14869[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m14870[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m14871[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m14872[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m14873[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m14874[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m14875[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m14876[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m14877[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m14878[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m14879[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m14880[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m14881[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m14882[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m14883[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m14884[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m14885[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m14886[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m14887[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m14888[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m14889[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m14890[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m14891[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m14892[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m14893[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m14894[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m14895[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m14896[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m14897[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m14898[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m14899[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m14900[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m14901[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m14902[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m14903[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m14904[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m14905[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m14906[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m14907[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m14908[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m14909[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m14910[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m14911[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m14912[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m14913[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m14914[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m14915[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m14916[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m14917[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m14918[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m14919[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m14920[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m14921[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m14922[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m14923[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m14924[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m14925[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m14926[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m14927[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m14928[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m14929[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m14930[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m14931[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m14932[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m14933[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m14934[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m14935[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m14936[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m14937[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m14938[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m14939[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m14940[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m14941[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m14942[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m14943[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m14944[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m14945[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m14946[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m14947[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m14948[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m14949[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m14950[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m14951[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m14952[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m14953[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m14954[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m14955[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m14956[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m14957[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m14958[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m14959[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m14960[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m14961[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m14962[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m14963[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m14964[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m14965[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m14966[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m14967[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m14968[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m14969[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m14970[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m14971[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m14972[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m14973[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m14974[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m14975[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m14976[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m14977[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m14978[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m14979[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m14980[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m14981[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m14982[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m14983[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m14984[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m14985[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m14986[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m14987[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m14988[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m14989[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m14990[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m14991[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m14992[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m14993[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m14994[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m14995[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m14996[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m14997[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m14998[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m14999[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m15000[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m15001[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m15002[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m15003[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m15004[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m15005[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m15006[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m15007[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m15008[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m15009[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m15010[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m15011[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m15012[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m15013[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m15014[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m15015[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m15016[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m15017[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m15018[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m15019[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m15020[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m15021[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m15022[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m15023[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m15024[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m15025[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m15026[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m15027[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m15028[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m15029[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m15030[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m15031[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m15032[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m15033[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m15034[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m15035[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m15036[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m15037[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m15038[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m15039[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m15040[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m15041[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m15042[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m15043[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m15044[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m15045[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m15046[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m15047[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m15048[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m15049[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m15050[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m15051[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m15052[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m15053[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m15054[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m15055[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m15056[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m15057[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m15058[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m15059[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m15060[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m15061[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m15062[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m15063[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m15064[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m15065[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m15066[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m15067[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m15068[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m15069[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m15070[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m15071[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m15072[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m15073[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m15074[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m15075[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m15076[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m15077[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m15078[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m15079[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m15080[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m15081[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m15082[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m15083[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m15084[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m15085[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m15086[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m15087[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m15088[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m15089[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m15090[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m15091[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m15092[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m15093[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m15094[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m15095[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m15096[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m15097[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m15098[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m15099[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m15100[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m15101[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m15102[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m15103[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m15104[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m15105[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m15106[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m15107[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m15108[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m15109[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m15110[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m15111[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m15112[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m15113[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m15114[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m15115[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m15116[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m15117[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m15118[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m15119[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m15120[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m15121[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m15122[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m15123[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m15124[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m15125[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m15126[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m15127[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m15128[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m15129[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m15130[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m15131[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m15132[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m15133[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m15134[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m15135[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m15136[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m15137[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m15138[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m15139[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m15140[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m15141[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m15142[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m15143[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m15144[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m15145[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m15146[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m15147[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m15148[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m15149[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m15150[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m15151[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m15152[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m15153[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m15154[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m15155[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m15156[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m15157[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m15158[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m15159[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m15160[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m15161[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m15162[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m15163[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m15164[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m15165[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m15166[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m15167[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m15168[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m15169[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m15170[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m15171[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m15172[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m15173[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m15174[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m15175[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m15176[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m15177[0m no test error[K
  ok [1m[32m15178[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() "reverse=true" not sticky (issue #6)[0m[1B[1G
# ReadStream: ReadStream, gte=0[K

  ok [1m[32m15179[0m undefined[K
  ok [1m[32m15180[0m ReadStream emitted single "end" event[K
  ok [1m[32m15181[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m15182[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m15183[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m15184[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m15185[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m15186[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m15187[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m15188[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m15189[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m15190[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m15191[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m15192[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m15193[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m15194[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m15195[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m15196[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m15197[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m15198[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m15199[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m15200[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m15201[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m15202[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m15203[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m15204[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m15205[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m15206[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m15207[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m15208[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m15209[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m15210[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m15211[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m15212[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m15213[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m15214[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m15215[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m15216[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m15217[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m15218[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m15219[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m15220[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m15221[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m15222[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m15223[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m15224[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m15225[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m15226[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m15227[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m15228[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m15229[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m15230[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m15231[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m15232[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m15233[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m15234[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m15235[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m15236[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m15237[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m15238[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m15239[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m15240[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m15241[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m15242[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m15243[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m15244[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m15245[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m15246[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m15247[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m15248[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m15249[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m15250[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m15251[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m15252[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m15253[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m15254[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m15255[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m15256[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m15257[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m15258[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m15259[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m15260[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m15261[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m15262[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m15263[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m15264[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m15265[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m15266[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m15267[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m15268[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m15269[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m15270[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m15271[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m15272[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m15273[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m15274[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m15275[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m15276[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m15277[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m15278[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m15279[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m15280[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m15281[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m15282[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m15283[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m15284[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m15285[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m15286[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m15287[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m15288[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m15289[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m15290[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m15291[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m15292[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m15293[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m15294[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m15295[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m15296[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m15297[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m15298[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m15299[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m15300[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m15301[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m15302[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m15303[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m15304[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m15305[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m15306[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m15307[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m15308[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m15309[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m15310[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m15311[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m15312[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m15313[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m15314[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m15315[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m15316[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m15317[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m15318[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m15319[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m15320[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m15321[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m15322[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m15323[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m15324[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m15325[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m15326[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m15327[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m15328[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m15329[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m15330[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m15331[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m15332[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m15333[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m15334[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m15335[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m15336[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m15337[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m15338[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m15339[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m15340[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m15341[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m15342[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m15343[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m15344[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m15345[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m15346[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m15347[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m15348[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m15349[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m15350[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m15351[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m15352[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m15353[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m15354[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m15355[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m15356[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m15357[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m15358[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m15359[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m15360[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m15361[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m15362[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m15363[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m15364[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m15365[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m15366[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m15367[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m15368[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m15369[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m15370[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m15371[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m15372[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m15373[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m15374[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m15375[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m15376[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m15377[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m15378[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m15379[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m15380[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m15381[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m15382[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m15383[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m15384[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m15385[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m15386[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m15387[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m15388[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m15389[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m15390[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m15391[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m15392[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m15393[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m15394[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m15395[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m15396[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m15397[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m15398[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m15399[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m15400[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m15401[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m15402[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m15403[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m15404[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m15405[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m15406[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m15407[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m15408[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m15409[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m15410[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m15411[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m15412[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m15413[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m15414[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m15415[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m15416[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m15417[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m15418[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m15419[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m15420[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m15421[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m15422[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m15423[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m15424[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m15425[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m15426[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m15427[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m15428[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m15429[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m15430[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m15431[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m15432[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m15433[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m15434[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m15435[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m15436[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m15437[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m15438[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m15439[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m15440[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m15441[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m15442[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m15443[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m15444[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m15445[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m15446[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m15447[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m15448[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m15449[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m15450[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m15451[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m15452[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m15453[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m15454[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m15455[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m15456[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m15457[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m15458[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m15459[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m15460[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m15461[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m15462[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m15463[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m15464[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m15465[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m15466[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m15467[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m15468[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m15469[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m15470[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m15471[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m15472[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m15473[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m15474[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m15475[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m15476[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m15477[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m15478[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m15479[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m15480[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m15481[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m15482[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m15483[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m15484[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m15485[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m15486[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m15487[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m15488[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m15489[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m15490[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m15491[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m15492[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m15493[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m15494[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m15495[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m15496[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m15497[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m15498[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m15499[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m15500[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m15501[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m15502[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m15503[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m15504[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m15505[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m15506[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m15507[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m15508[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m15509[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m15510[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m15511[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m15512[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m15513[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m15514[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m15515[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m15516[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m15517[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m15518[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m15519[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m15520[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m15521[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m15522[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m15523[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m15524[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m15525[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m15526[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m15527[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m15528[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m15529[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m15530[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m15531[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m15532[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m15533[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m15534[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m15535[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m15536[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m15537[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m15538[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m15539[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m15540[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m15541[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m15542[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m15543[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m15544[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m15545[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m15546[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m15547[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m15548[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m15549[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m15550[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m15551[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m15552[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m15553[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m15554[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m15555[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m15556[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m15557[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m15558[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m15559[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m15560[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m15561[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m15562[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m15563[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m15564[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m15565[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m15566[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m15567[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m15568[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m15569[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m15570[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m15571[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m15572[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m15573[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m15574[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m15575[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m15576[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m15577[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m15578[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m15579[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m15580[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m15581[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m15582[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m15583[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m15584[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m15585[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m15586[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m15587[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m15588[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m15589[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m15590[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m15591[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m15592[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m15593[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m15594[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m15595[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m15596[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m15597[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m15598[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m15599[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m15600[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m15601[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m15602[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m15603[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m15604[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m15605[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m15606[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m15607[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m15608[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m15609[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m15610[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m15611[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m15612[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m15613[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m15614[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m15615[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m15616[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m15617[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m15618[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m15619[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m15620[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m15621[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m15622[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m15623[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m15624[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m15625[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m15626[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m15627[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m15628[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m15629[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m15630[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m15631[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m15632[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m15633[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m15634[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m15635[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m15636[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m15637[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m15638[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m15639[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m15640[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m15641[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m15642[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m15643[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m15644[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m15645[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m15646[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m15647[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m15648[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m15649[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m15650[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m15651[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m15652[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m15653[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m15654[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m15655[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m15656[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m15657[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m15658[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m15659[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m15660[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m15661[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m15662[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m15663[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m15664[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m15665[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m15666[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m15667[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m15668[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m15669[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m15670[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m15671[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m15672[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m15673[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m15674[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m15675[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m15676[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m15677[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m15678[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m15679[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m15680[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m15681[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m15682[0m no test error[K
  ok [1m[32m15683[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: ReadStream, gte=0[0m[1B[1G
# ReadStream: ReadStream, lte=0[K

  ok [1m[32m15684[0m undefined[K
  ok [1m[32m15685[0m ReadStream emitted single "end" event[K
  ok [1m[32m15686[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m15687[0m no test error[K
  ok [1m[32m15688[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: ReadStream, lte=0[0m[1B[1G
# ReadStream: deferred ReadStream on new db[K

  ok [1m[32m15689[0m undefined[K
  ok [1m[32m15690[0m undefined[K
  ok [1m[32m15691[0m should be strictly equal[K
  ok [1m[32m15692[0m should be strictly equal[K
  ok [1m[32m15693[0m should be truthy[K
  ok [1m[32m15694[0m no open error[K
  ok [1m[32m15695[0m ReadStream emitted single "end" event[K
  ok [1m[32m15696[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m15697[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m15698[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m15699[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m15700[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m15701[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m15702[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m15703[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m15704[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m15705[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m15706[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m15707[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m15708[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m15709[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m15710[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m15711[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m15712[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m15713[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m15714[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m15715[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m15716[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m15717[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m15718[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m15719[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m15720[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m15721[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m15722[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m15723[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m15724[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m15725[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m15726[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m15727[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m15728[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m15729[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m15730[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m15731[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m15732[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m15733[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m15734[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m15735[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m15736[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m15737[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m15738[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m15739[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m15740[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m15741[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m15742[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m15743[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m15744[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m15745[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m15746[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m15747[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m15748[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m15749[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m15750[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m15751[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m15752[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m15753[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m15754[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m15755[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m15756[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m15757[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m15758[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m15759[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m15760[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m15761[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m15762[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m15763[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m15764[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m15765[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m15766[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m15767[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m15768[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m15769[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m15770[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m15771[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m15772[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m15773[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m15774[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m15775[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m15776[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m15777[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m15778[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m15779[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m15780[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m15781[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m15782[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m15783[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m15784[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m15785[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m15786[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m15787[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m15788[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m15789[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m15790[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m15791[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m15792[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m15793[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m15794[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m15795[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m15796[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m15797[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m15798[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m15799[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m15800[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m15801[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m15802[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m15803[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m15804[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m15805[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m15806[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m15807[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m15808[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m15809[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m15810[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m15811[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m15812[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m15813[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m15814[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m15815[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m15816[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m15817[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m15818[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m15819[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m15820[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m15821[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m15822[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m15823[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m15824[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m15825[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m15826[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m15827[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m15828[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m15829[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m15830[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m15831[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m15832[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m15833[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m15834[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m15835[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m15836[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m15837[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m15838[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m15839[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m15840[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m15841[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m15842[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m15843[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m15844[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m15845[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m15846[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m15847[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m15848[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m15849[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m15850[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m15851[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m15852[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m15853[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m15854[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m15855[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m15856[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m15857[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m15858[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m15859[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m15860[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m15861[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m15862[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m15863[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m15864[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m15865[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m15866[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m15867[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m15868[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m15869[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m15870[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m15871[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m15872[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m15873[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m15874[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m15875[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m15876[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m15877[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m15878[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m15879[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m15880[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m15881[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m15882[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m15883[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m15884[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m15885[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m15886[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m15887[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m15888[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m15889[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m15890[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m15891[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m15892[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m15893[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m15894[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m15895[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m15896[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m15897[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m15898[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m15899[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m15900[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m15901[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m15902[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m15903[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m15904[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m15905[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m15906[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m15907[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m15908[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m15909[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m15910[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m15911[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m15912[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m15913[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m15914[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m15915[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m15916[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m15917[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m15918[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m15919[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m15920[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m15921[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m15922[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m15923[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m15924[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m15925[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m15926[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m15927[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m15928[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m15929[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m15930[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m15931[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m15932[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m15933[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m15934[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m15935[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m15936[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m15937[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m15938[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m15939[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m15940[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m15941[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m15942[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m15943[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m15944[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m15945[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m15946[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m15947[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m15948[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m15949[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m15950[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m15951[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m15952[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m15953[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m15954[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m15955[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m15956[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m15957[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m15958[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m15959[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m15960[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m15961[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m15962[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m15963[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m15964[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m15965[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m15966[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m15967[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m15968[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m15969[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m15970[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m15971[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m15972[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m15973[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m15974[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m15975[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m15976[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m15977[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m15978[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m15979[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m15980[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m15981[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m15982[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m15983[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m15984[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m15985[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m15986[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m15987[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m15988[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m15989[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m15990[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m15991[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m15992[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m15993[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m15994[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m15995[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m15996[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m15997[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m15998[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m15999[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m16000[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m16001[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m16002[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m16003[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m16004[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m16005[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m16006[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m16007[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m16008[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m16009[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m16010[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m16011[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m16012[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m16013[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m16014[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m16015[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m16016[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m16017[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m16018[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m16019[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m16020[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m16021[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m16022[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m16023[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m16024[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m16025[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m16026[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m16027[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m16028[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m16029[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m16030[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m16031[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m16032[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m16033[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m16034[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m16035[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m16036[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m16037[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m16038[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m16039[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m16040[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m16041[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m16042[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m16043[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m16044[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m16045[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m16046[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m16047[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m16048[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m16049[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m16050[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m16051[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m16052[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m16053[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m16054[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m16055[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m16056[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m16057[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m16058[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m16059[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m16060[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m16061[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m16062[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m16063[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m16064[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m16065[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m16066[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m16067[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m16068[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m16069[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m16070[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m16071[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m16072[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m16073[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m16074[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m16075[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m16076[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m16077[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m16078[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m16079[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m16080[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m16081[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m16082[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m16083[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m16084[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m16085[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m16086[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m16087[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m16088[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m16089[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m16090[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m16091[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m16092[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m16093[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m16094[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m16095[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m16096[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m16097[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m16098[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m16099[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m16100[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m16101[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m16102[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m16103[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m16104[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m16105[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m16106[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m16107[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m16108[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m16109[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m16110[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m16111[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m16112[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m16113[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m16114[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m16115[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m16116[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m16117[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m16118[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m16119[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m16120[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m16121[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m16122[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m16123[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m16124[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m16125[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m16126[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m16127[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m16128[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m16129[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m16130[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m16131[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m16132[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m16133[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m16134[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m16135[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m16136[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m16137[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m16138[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m16139[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m16140[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m16141[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m16142[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m16143[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m16144[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m16145[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m16146[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m16147[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m16148[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m16149[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m16150[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m16151[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m16152[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m16153[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m16154[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m16155[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m16156[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m16157[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m16158[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m16159[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m16160[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m16161[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m16162[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m16163[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m16164[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m16165[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m16166[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m16167[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m16168[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m16169[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m16170[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m16171[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m16172[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m16173[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m16174[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m16175[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m16176[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m16177[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m16178[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m16179[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m16180[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m16181[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m16182[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m16183[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m16184[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m16185[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m16186[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m16187[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m16188[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m16189[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m16190[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m16191[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m16192[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m16193[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m16194[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m16195[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m16196[0m ReadStream "data" event #99 argument has correct "value"[K
[1A[1G[1m[32m✓ ReadStream: deferred ReadStream on new db[0m[1B[1G
# ReadStream: readStream() with "limit"[K

  ok [1m[32m16197[0m undefined[K
  ok [1m[32m16198[0m ReadStream emitted single "end" event[K
  ok [1m[32m16199[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m16200[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m16201[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m16202[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m16203[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m16204[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m16205[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m16206[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m16207[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m16208[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m16209[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m16210[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m16211[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m16212[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m16213[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m16214[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m16215[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m16216[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m16217[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m16218[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m16219[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m16220[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m16221[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m16222[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m16223[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m16224[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m16225[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m16226[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m16227[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m16228[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m16229[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m16230[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m16231[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m16232[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m16233[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m16234[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m16235[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m16236[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m16237[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m16238[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m16239[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m16240[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m16241[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m16242[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m16243[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m16244[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m16245[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m16246[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m16247[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m16248[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m16249[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m16250[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m16251[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m16252[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m16253[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m16254[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m16255[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m16256[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m16257[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m16258[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m16259[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m16260[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m16261[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m16262[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m16263[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m16264[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m16265[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m16266[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m16267[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m16268[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m16269[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m16270[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m16271[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m16272[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m16273[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m16274[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m16275[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m16276[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m16277[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m16278[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m16279[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m16280[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m16281[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m16282[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m16283[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m16284[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m16285[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m16286[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m16287[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m16288[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m16289[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m16290[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m16291[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m16292[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m16293[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m16294[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m16295[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m16296[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m16297[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m16298[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m16299[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m16300[0m no test error[K
  ok [1m[32m16301[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "limit"[0m[1B[1G
# ReadStream: readStream() with "gte" and "limit"[K

  ok [1m[32m16302[0m undefined[K
  ok [1m[32m16303[0m ReadStream emitted single "end" event[K
  ok [1m[32m16304[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m16305[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m16306[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m16307[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m16308[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m16309[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m16310[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m16311[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m16312[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m16313[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m16314[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m16315[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m16316[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m16317[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m16318[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m16319[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m16320[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m16321[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m16322[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m16323[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m16324[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m16325[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m16326[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m16327[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m16328[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m16329[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m16330[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m16331[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m16332[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m16333[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m16334[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m16335[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m16336[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m16337[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m16338[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m16339[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m16340[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m16341[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m16342[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m16343[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m16344[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m16345[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m16346[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m16347[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m16348[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m16349[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m16350[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m16351[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m16352[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m16353[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m16354[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m16355[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m16356[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m16357[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m16358[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m16359[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m16360[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m16361[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m16362[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m16363[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m16364[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m16365[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m16366[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m16367[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m16368[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m16369[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m16370[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m16371[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m16372[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m16373[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m16374[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m16375[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m16376[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m16377[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m16378[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m16379[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m16380[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m16381[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m16382[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m16383[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m16384[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m16385[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m16386[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m16387[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m16388[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m16389[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m16390[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m16391[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m16392[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m16393[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m16394[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m16395[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m16396[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m16397[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m16398[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m16399[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m16400[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m16401[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m16402[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m16403[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m16404[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m16405[0m no test error[K
  ok [1m[32m16406[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "gte" and "limit"[0m[1B[1G
# ReadStream: readStream() with "lte" after "limit"[K

  ok [1m[32m16407[0m undefined[K
  ok [1m[32m16408[0m ReadStream emitted single "end" event[K
  ok [1m[32m16409[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m16410[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m16411[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m16412[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m16413[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m16414[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m16415[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m16416[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m16417[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m16418[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m16419[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m16420[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m16421[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m16422[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m16423[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m16424[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m16425[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m16426[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m16427[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m16428[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m16429[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m16430[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m16431[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m16432[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m16433[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m16434[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m16435[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m16436[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m16437[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m16438[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m16439[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m16440[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m16441[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m16442[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m16443[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m16444[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m16445[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m16446[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m16447[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m16448[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m16449[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m16450[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m16451[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m16452[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m16453[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m16454[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m16455[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m16456[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m16457[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m16458[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m16459[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m16460[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m16461[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m16462[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m16463[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m16464[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m16465[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m16466[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m16467[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m16468[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m16469[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m16470[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m16471[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m16472[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m16473[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m16474[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m16475[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m16476[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m16477[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m16478[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m16479[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m16480[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m16481[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m16482[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m16483[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m16484[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m16485[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m16486[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m16487[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m16488[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m16489[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m16490[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m16491[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m16492[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m16493[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m16494[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m16495[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m16496[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m16497[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m16498[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m16499[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m16500[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m16501[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m16502[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m16503[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m16504[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m16505[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m16506[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m16507[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m16508[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m16509[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m16510[0m no test error[K
  ok [1m[32m16511[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" after "limit"[0m[1B[1G
# ReadStream: readStream() with "lte" before "limit"[K

  ok [1m[32m16512[0m undefined[K
  ok [1m[32m16513[0m ReadStream emitted single "end" event[K
  ok [1m[32m16514[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m16515[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m16516[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m16517[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m16518[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m16519[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m16520[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m16521[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m16522[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m16523[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m16524[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m16525[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m16526[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m16527[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m16528[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m16529[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m16530[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m16531[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m16532[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m16533[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m16534[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m16535[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m16536[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m16537[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m16538[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m16539[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m16540[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m16541[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m16542[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m16543[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m16544[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m16545[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m16546[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m16547[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m16548[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m16549[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m16550[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m16551[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m16552[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m16553[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m16554[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m16555[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m16556[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m16557[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m16558[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m16559[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m16560[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m16561[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m16562[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m16563[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m16564[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m16565[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m16566[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m16567[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m16568[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m16569[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m16570[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m16571[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m16572[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m16573[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m16574[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m16575[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m16576[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m16577[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m16578[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m16579[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m16580[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m16581[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m16582[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m16583[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m16584[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m16585[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m16586[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m16587[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m16588[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m16589[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m16590[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m16591[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m16592[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m16593[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m16594[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m16595[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m16596[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m16597[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m16598[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m16599[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m16600[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m16601[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m16602[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m16603[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m16604[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m16605[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m16606[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m16607[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m16608[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m16609[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m16610[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m16611[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m16612[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m16613[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m16614[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m16615[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m16616[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m16617[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m16618[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m16619[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m16620[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m16621[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m16622[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m16623[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m16624[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m16625[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m16626[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m16627[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m16628[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m16629[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m16630[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m16631[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m16632[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m16633[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m16634[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m16635[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m16636[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m16637[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m16638[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m16639[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m16640[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m16641[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m16642[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m16643[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m16644[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m16645[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m16646[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m16647[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m16648[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m16649[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m16650[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m16651[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m16652[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m16653[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m16654[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m16655[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m16656[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m16657[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m16658[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m16659[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m16660[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m16661[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m16662[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m16663[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m16664[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m16665[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m16666[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m16667[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m16668[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m16669[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m16670[0m no test error[K
  ok [1m[32m16671[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: readStream() with "lte" before "limit"[0m[1B[1G
# ReadStream: iterator next/end race condition[K

  ok [1m[32m16672[0m undefined[K
  ok [1m[32m16673[0m no test error[K
  ok [1m[32m16674[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: iterator next/end race condition[0m[1B[1G
# ReadStream: can only end once[K

  ok [1m[32m16675[0m undefined[K
  ok [1m[32m16676[0m no test error[K
  ok [1m[32m16677[0m no close error[K
[1A[1G[1m[32m✓ ReadStream: can only end once[0m[1B[1G
# ReadStream implicit snapshot[K

  ok [1m[32m16678[0m no batch error[K
  ok [1m[32m16679[0m no batch error[K
  ok [1m[32m16680[0m ReadStream emitted single "end" event[K
  ok [1m[32m16681[0m ReadStream emitted correct number of "data" events[K
  ok [1m[32m16682[0m ReadStream "data" event #0 fired with 1 argument[K
  ok [1m[32m16683[0m ReadStream "data" event #0 argument has "key" property[K
  ok [1m[32m16684[0m ReadStream "data" event #0 argument has "value" property[K
  ok [1m[32m16685[0m ReadStream "data" event #0 argument has correct "key"[K
  ok [1m[32m16686[0m ReadStream "data" event #0 argument has correct "value"[K
  ok [1m[32m16687[0m ReadStream "data" event #1 fired with 1 argument[K
  ok [1m[32m16688[0m ReadStream "data" event #1 argument has "key" property[K
  ok [1m[32m16689[0m ReadStream "data" event #1 argument has "value" property[K
  ok [1m[32m16690[0m ReadStream "data" event #1 argument has correct "key"[K
  ok [1m[32m16691[0m ReadStream "data" event #1 argument has correct "value"[K
  ok [1m[32m16692[0m ReadStream "data" event #2 fired with 1 argument[K
  ok [1m[32m16693[0m ReadStream "data" event #2 argument has "key" property[K
  ok [1m[32m16694[0m ReadStream "data" event #2 argument has "value" property[K
  ok [1m[32m16695[0m ReadStream "data" event #2 argument has correct "key"[K
  ok [1m[32m16696[0m ReadStream "data" event #2 argument has correct "value"[K
  ok [1m[32m16697[0m ReadStream "data" event #3 fired with 1 argument[K
  ok [1m[32m16698[0m ReadStream "data" event #3 argument has "key" property[K
  ok [1m[32m16699[0m ReadStream "data" event #3 argument has "value" property[K
  ok [1m[32m16700[0m ReadStream "data" event #3 argument has correct "key"[K
  ok [1m[32m16701[0m ReadStream "data" event #3 argument has correct "value"[K
  ok [1m[32m16702[0m ReadStream "data" event #4 fired with 1 argument[K
  ok [1m[32m16703[0m ReadStream "data" event #4 argument has "key" property[K
  ok [1m[32m16704[0m ReadStream "data" event #4 argument has "value" property[K
  ok [1m[32m16705[0m ReadStream "data" event #4 argument has correct "key"[K
  ok [1m[32m16706[0m ReadStream "data" event #4 argument has correct "value"[K
  ok [1m[32m16707[0m ReadStream "data" event #5 fired with 1 argument[K
  ok [1m[32m16708[0m ReadStream "data" event #5 argument has "key" property[K
  ok [1m[32m16709[0m ReadStream "data" event #5 argument has "value" property[K
  ok [1m[32m16710[0m ReadStream "data" event #5 argument has correct "key"[K
  ok [1m[32m16711[0m ReadStream "data" event #5 argument has correct "value"[K
  ok [1m[32m16712[0m ReadStream "data" event #6 fired with 1 argument[K
  ok [1m[32m16713[0m ReadStream "data" event #6 argument has "key" property[K
  ok [1m[32m16714[0m ReadStream "data" event #6 argument has "value" property[K
  ok [1m[32m16715[0m ReadStream "data" event #6 argument has correct "key"[K
  ok [1m[32m16716[0m ReadStream "data" event #6 argument has correct "value"[K
  ok [1m[32m16717[0m ReadStream "data" event #7 fired with 1 argument[K
  ok [1m[32m16718[0m ReadStream "data" event #7 argument has "key" property[K
  ok [1m[32m16719[0m ReadStream "data" event #7 argument has "value" property[K
  ok [1m[32m16720[0m ReadStream "data" event #7 argument has correct "key"[K
  ok [1m[32m16721[0m ReadStream "data" event #7 argument has correct "value"[K
  ok [1m[32m16722[0m ReadStream "data" event #8 fired with 1 argument[K
  ok [1m[32m16723[0m ReadStream "data" event #8 argument has "key" property[K
  ok [1m[32m16724[0m ReadStream "data" event #8 argument has "value" property[K
  ok [1m[32m16725[0m ReadStream "data" event #8 argument has correct "key"[K
  ok [1m[32m16726[0m ReadStream "data" event #8 argument has correct "value"[K
  ok [1m[32m16727[0m ReadStream "data" event #9 fired with 1 argument[K
  ok [1m[32m16728[0m ReadStream "data" event #9 argument has "key" property[K
  ok [1m[32m16729[0m ReadStream "data" event #9 argument has "value" property[K
  ok [1m[32m16730[0m ReadStream "data" event #9 argument has correct "key"[K
  ok [1m[32m16731[0m ReadStream "data" event #9 argument has correct "value"[K
  ok [1m[32m16732[0m ReadStream "data" event #10 fired with 1 argument[K
  ok [1m[32m16733[0m ReadStream "data" event #10 argument has "key" property[K
  ok [1m[32m16734[0m ReadStream "data" event #10 argument has "value" property[K
  ok [1m[32m16735[0m ReadStream "data" event #10 argument has correct "key"[K
  ok [1m[32m16736[0m ReadStream "data" event #10 argument has correct "value"[K
  ok [1m[32m16737[0m ReadStream "data" event #11 fired with 1 argument[K
  ok [1m[32m16738[0m ReadStream "data" event #11 argument has "key" property[K
  ok [1m[32m16739[0m ReadStream "data" event #11 argument has "value" property[K
  ok [1m[32m16740[0m ReadStream "data" event #11 argument has correct "key"[K
  ok [1m[32m16741[0m ReadStream "data" event #11 argument has correct "value"[K
  ok [1m[32m16742[0m ReadStream "data" event #12 fired with 1 argument[K
  ok [1m[32m16743[0m ReadStream "data" event #12 argument has "key" property[K
  ok [1m[32m16744[0m ReadStream "data" event #12 argument has "value" property[K
  ok [1m[32m16745[0m ReadStream "data" event #12 argument has correct "key"[K
  ok [1m[32m16746[0m ReadStream "data" event #12 argument has correct "value"[K
  ok [1m[32m16747[0m ReadStream "data" event #13 fired with 1 argument[K
  ok [1m[32m16748[0m ReadStream "data" event #13 argument has "key" property[K
  ok [1m[32m16749[0m ReadStream "data" event #13 argument has "value" property[K
  ok [1m[32m16750[0m ReadStream "data" event #13 argument has correct "key"[K
  ok [1m[32m16751[0m ReadStream "data" event #13 argument has correct "value"[K
  ok [1m[32m16752[0m ReadStream "data" event #14 fired with 1 argument[K
  ok [1m[32m16753[0m ReadStream "data" event #14 argument has "key" property[K
  ok [1m[32m16754[0m ReadStream "data" event #14 argument has "value" property[K
  ok [1m[32m16755[0m ReadStream "data" event #14 argument has correct "key"[K
  ok [1m[32m16756[0m ReadStream "data" event #14 argument has correct "value"[K
  ok [1m[32m16757[0m ReadStream "data" event #15 fired with 1 argument[K
  ok [1m[32m16758[0m ReadStream "data" event #15 argument has "key" property[K
  ok [1m[32m16759[0m ReadStream "data" event #15 argument has "value" property[K
  ok [1m[32m16760[0m ReadStream "data" event #15 argument has correct "key"[K
  ok [1m[32m16761[0m ReadStream "data" event #15 argument has correct "value"[K
  ok [1m[32m16762[0m ReadStream "data" event #16 fired with 1 argument[K
  ok [1m[32m16763[0m ReadStream "data" event #16 argument has "key" property[K
  ok [1m[32m16764[0m ReadStream "data" event #16 argument has "value" property[K
  ok [1m[32m16765[0m ReadStream "data" event #16 argument has correct "key"[K
  ok [1m[32m16766[0m ReadStream "data" event #16 argument has correct "value"[K
  ok [1m[32m16767[0m ReadStream "data" event #17 fired with 1 argument[K
  ok [1m[32m16768[0m ReadStream "data" event #17 argument has "key" property[K
  ok [1m[32m16769[0m ReadStream "data" event #17 argument has "value" property[K
  ok [1m[32m16770[0m ReadStream "data" event #17 argument has correct "key"[K
  ok [1m[32m16771[0m ReadStream "data" event #17 argument has correct "value"[K
  ok [1m[32m16772[0m ReadStream "data" event #18 fired with 1 argument[K
  ok [1m[32m16773[0m ReadStream "data" event #18 argument has "key" property[K
  ok [1m[32m16774[0m ReadStream "data" event #18 argument has "value" property[K
  ok [1m[32m16775[0m ReadStream "data" event #18 argument has correct "key"[K
  ok [1m[32m16776[0m ReadStream "data" event #18 argument has correct "value"[K
  ok [1m[32m16777[0m ReadStream "data" event #19 fired with 1 argument[K
  ok [1m[32m16778[0m ReadStream "data" event #19 argument has "key" property[K
  ok [1m[32m16779[0m ReadStream "data" event #19 argument has "value" property[K
  ok [1m[32m16780[0m ReadStream "data" event #19 argument has correct "key"[K
  ok [1m[32m16781[0m ReadStream "data" event #19 argument has correct "value"[K
  ok [1m[32m16782[0m ReadStream "data" event #20 fired with 1 argument[K
  ok [1m[32m16783[0m ReadStream "data" event #20 argument has "key" property[K
  ok [1m[32m16784[0m ReadStream "data" event #20 argument has "value" property[K
  ok [1m[32m16785[0m ReadStream "data" event #20 argument has correct "key"[K
  ok [1m[32m16786[0m ReadStream "data" event #20 argument has correct "value"[K
  ok [1m[32m16787[0m ReadStream "data" event #21 fired with 1 argument[K
  ok [1m[32m16788[0m ReadStream "data" event #21 argument has "key" property[K
  ok [1m[32m16789[0m ReadStream "data" event #21 argument has "value" property[K
  ok [1m[32m16790[0m ReadStream "data" event #21 argument has correct "key"[K
  ok [1m[32m16791[0m ReadStream "data" event #21 argument has correct "value"[K
  ok [1m[32m16792[0m ReadStream "data" event #22 fired with 1 argument[K
  ok [1m[32m16793[0m ReadStream "data" event #22 argument has "key" property[K
  ok [1m[32m16794[0m ReadStream "data" event #22 argument has "value" property[K
  ok [1m[32m16795[0m ReadStream "data" event #22 argument has correct "key"[K
  ok [1m[32m16796[0m ReadStream "data" event #22 argument has correct "value"[K
  ok [1m[32m16797[0m ReadStream "data" event #23 fired with 1 argument[K
  ok [1m[32m16798[0m ReadStream "data" event #23 argument has "key" property[K
  ok [1m[32m16799[0m ReadStream "data" event #23 argument has "value" property[K
  ok [1m[32m16800[0m ReadStream "data" event #23 argument has correct "key"[K
  ok [1m[32m16801[0m ReadStream "data" event #23 argument has correct "value"[K
  ok [1m[32m16802[0m ReadStream "data" event #24 fired with 1 argument[K
  ok [1m[32m16803[0m ReadStream "data" event #24 argument has "key" property[K
  ok [1m[32m16804[0m ReadStream "data" event #24 argument has "value" property[K
  ok [1m[32m16805[0m ReadStream "data" event #24 argument has correct "key"[K
  ok [1m[32m16806[0m ReadStream "data" event #24 argument has correct "value"[K
  ok [1m[32m16807[0m ReadStream "data" event #25 fired with 1 argument[K
  ok [1m[32m16808[0m ReadStream "data" event #25 argument has "key" property[K
  ok [1m[32m16809[0m ReadStream "data" event #25 argument has "value" property[K
  ok [1m[32m16810[0m ReadStream "data" event #25 argument has correct "key"[K
  ok [1m[32m16811[0m ReadStream "data" event #25 argument has correct "value"[K
  ok [1m[32m16812[0m ReadStream "data" event #26 fired with 1 argument[K
  ok [1m[32m16813[0m ReadStream "data" event #26 argument has "key" property[K
  ok [1m[32m16814[0m ReadStream "data" event #26 argument has "value" property[K
  ok [1m[32m16815[0m ReadStream "data" event #26 argument has correct "key"[K
  ok [1m[32m16816[0m ReadStream "data" event #26 argument has correct "value"[K
  ok [1m[32m16817[0m ReadStream "data" event #27 fired with 1 argument[K
  ok [1m[32m16818[0m ReadStream "data" event #27 argument has "key" property[K
  ok [1m[32m16819[0m ReadStream "data" event #27 argument has "value" property[K
  ok [1m[32m16820[0m ReadStream "data" event #27 argument has correct "key"[K
  ok [1m[32m16821[0m ReadStream "data" event #27 argument has correct "value"[K
  ok [1m[32m16822[0m ReadStream "data" event #28 fired with 1 argument[K
  ok [1m[32m16823[0m ReadStream "data" event #28 argument has "key" property[K
  ok [1m[32m16824[0m ReadStream "data" event #28 argument has "value" property[K
  ok [1m[32m16825[0m ReadStream "data" event #28 argument has correct "key"[K
  ok [1m[32m16826[0m ReadStream "data" event #28 argument has correct "value"[K
  ok [1m[32m16827[0m ReadStream "data" event #29 fired with 1 argument[K
  ok [1m[32m16828[0m ReadStream "data" event #29 argument has "key" property[K
  ok [1m[32m16829[0m ReadStream "data" event #29 argument has "value" property[K
  ok [1m[32m16830[0m ReadStream "data" event #29 argument has correct "key"[K
  ok [1m[32m16831[0m ReadStream "data" event #29 argument has correct "value"[K
  ok [1m[32m16832[0m ReadStream "data" event #30 fired with 1 argument[K
  ok [1m[32m16833[0m ReadStream "data" event #30 argument has "key" property[K
  ok [1m[32m16834[0m ReadStream "data" event #30 argument has "value" property[K
  ok [1m[32m16835[0m ReadStream "data" event #30 argument has correct "key"[K
  ok [1m[32m16836[0m ReadStream "data" event #30 argument has correct "value"[K
  ok [1m[32m16837[0m ReadStream "data" event #31 fired with 1 argument[K
  ok [1m[32m16838[0m ReadStream "data" event #31 argument has "key" property[K
  ok [1m[32m16839[0m ReadStream "data" event #31 argument has "value" property[K
  ok [1m[32m16840[0m ReadStream "data" event #31 argument has correct "key"[K
  ok [1m[32m16841[0m ReadStream "data" event #31 argument has correct "value"[K
  ok [1m[32m16842[0m ReadStream "data" event #32 fired with 1 argument[K
  ok [1m[32m16843[0m ReadStream "data" event #32 argument has "key" property[K
  ok [1m[32m16844[0m ReadStream "data" event #32 argument has "value" property[K
  ok [1m[32m16845[0m ReadStream "data" event #32 argument has correct "key"[K
  ok [1m[32m16846[0m ReadStream "data" event #32 argument has correct "value"[K
  ok [1m[32m16847[0m ReadStream "data" event #33 fired with 1 argument[K
  ok [1m[32m16848[0m ReadStream "data" event #33 argument has "key" property[K
  ok [1m[32m16849[0m ReadStream "data" event #33 argument has "value" property[K
  ok [1m[32m16850[0m ReadStream "data" event #33 argument has correct "key"[K
  ok [1m[32m16851[0m ReadStream "data" event #33 argument has correct "value"[K
  ok [1m[32m16852[0m ReadStream "data" event #34 fired with 1 argument[K
  ok [1m[32m16853[0m ReadStream "data" event #34 argument has "key" property[K
  ok [1m[32m16854[0m ReadStream "data" event #34 argument has "value" property[K
  ok [1m[32m16855[0m ReadStream "data" event #34 argument has correct "key"[K
  ok [1m[32m16856[0m ReadStream "data" event #34 argument has correct "value"[K
  ok [1m[32m16857[0m ReadStream "data" event #35 fired with 1 argument[K
  ok [1m[32m16858[0m ReadStream "data" event #35 argument has "key" property[K
  ok [1m[32m16859[0m ReadStream "data" event #35 argument has "value" property[K
  ok [1m[32m16860[0m ReadStream "data" event #35 argument has correct "key"[K
  ok [1m[32m16861[0m ReadStream "data" event #35 argument has correct "value"[K
  ok [1m[32m16862[0m ReadStream "data" event #36 fired with 1 argument[K
  ok [1m[32m16863[0m ReadStream "data" event #36 argument has "key" property[K
  ok [1m[32m16864[0m ReadStream "data" event #36 argument has "value" property[K
  ok [1m[32m16865[0m ReadStream "data" event #36 argument has correct "key"[K
  ok [1m[32m16866[0m ReadStream "data" event #36 argument has correct "value"[K
  ok [1m[32m16867[0m ReadStream "data" event #37 fired with 1 argument[K
  ok [1m[32m16868[0m ReadStream "data" event #37 argument has "key" property[K
  ok [1m[32m16869[0m ReadStream "data" event #37 argument has "value" property[K
  ok [1m[32m16870[0m ReadStream "data" event #37 argument has correct "key"[K
  ok [1m[32m16871[0m ReadStream "data" event #37 argument has correct "value"[K
  ok [1m[32m16872[0m ReadStream "data" event #38 fired with 1 argument[K
  ok [1m[32m16873[0m ReadStream "data" event #38 argument has "key" property[K
  ok [1m[32m16874[0m ReadStream "data" event #38 argument has "value" property[K
  ok [1m[32m16875[0m ReadStream "data" event #38 argument has correct "key"[K
  ok [1m[32m16876[0m ReadStream "data" event #38 argument has correct "value"[K
  ok [1m[32m16877[0m ReadStream "data" event #39 fired with 1 argument[K
  ok [1m[32m16878[0m ReadStream "data" event #39 argument has "key" property[K
  ok [1m[32m16879[0m ReadStream "data" event #39 argument has "value" property[K
  ok [1m[32m16880[0m ReadStream "data" event #39 argument has correct "key"[K
  ok [1m[32m16881[0m ReadStream "data" event #39 argument has correct "value"[K
  ok [1m[32m16882[0m ReadStream "data" event #40 fired with 1 argument[K
  ok [1m[32m16883[0m ReadStream "data" event #40 argument has "key" property[K
  ok [1m[32m16884[0m ReadStream "data" event #40 argument has "value" property[K
  ok [1m[32m16885[0m ReadStream "data" event #40 argument has correct "key"[K
  ok [1m[32m16886[0m ReadStream "data" event #40 argument has correct "value"[K
  ok [1m[32m16887[0m ReadStream "data" event #41 fired with 1 argument[K
  ok [1m[32m16888[0m ReadStream "data" event #41 argument has "key" property[K
  ok [1m[32m16889[0m ReadStream "data" event #41 argument has "value" property[K
  ok [1m[32m16890[0m ReadStream "data" event #41 argument has correct "key"[K
  ok [1m[32m16891[0m ReadStream "data" event #41 argument has correct "value"[K
  ok [1m[32m16892[0m ReadStream "data" event #42 fired with 1 argument[K
  ok [1m[32m16893[0m ReadStream "data" event #42 argument has "key" property[K
  ok [1m[32m16894[0m ReadStream "data" event #42 argument has "value" property[K
  ok [1m[32m16895[0m ReadStream "data" event #42 argument has correct "key"[K
  ok [1m[32m16896[0m ReadStream "data" event #42 argument has correct "value"[K
  ok [1m[32m16897[0m ReadStream "data" event #43 fired with 1 argument[K
  ok [1m[32m16898[0m ReadStream "data" event #43 argument has "key" property[K
  ok [1m[32m16899[0m ReadStream "data" event #43 argument has "value" property[K
  ok [1m[32m16900[0m ReadStream "data" event #43 argument has correct "key"[K
  ok [1m[32m16901[0m ReadStream "data" event #43 argument has correct "value"[K
  ok [1m[32m16902[0m ReadStream "data" event #44 fired with 1 argument[K
  ok [1m[32m16903[0m ReadStream "data" event #44 argument has "key" property[K
  ok [1m[32m16904[0m ReadStream "data" event #44 argument has "value" property[K
  ok [1m[32m16905[0m ReadStream "data" event #44 argument has correct "key"[K
  ok [1m[32m16906[0m ReadStream "data" event #44 argument has correct "value"[K
  ok [1m[32m16907[0m ReadStream "data" event #45 fired with 1 argument[K
  ok [1m[32m16908[0m ReadStream "data" event #45 argument has "key" property[K
  ok [1m[32m16909[0m ReadStream "data" event #45 argument has "value" property[K
  ok [1m[32m16910[0m ReadStream "data" event #45 argument has correct "key"[K
  ok [1m[32m16911[0m ReadStream "data" event #45 argument has correct "value"[K
  ok [1m[32m16912[0m ReadStream "data" event #46 fired with 1 argument[K
  ok [1m[32m16913[0m ReadStream "data" event #46 argument has "key" property[K
  ok [1m[32m16914[0m ReadStream "data" event #46 argument has "value" property[K
  ok [1m[32m16915[0m ReadStream "data" event #46 argument has correct "key"[K
  ok [1m[32m16916[0m ReadStream "data" event #46 argument has correct "value"[K
  ok [1m[32m16917[0m ReadStream "data" event #47 fired with 1 argument[K
  ok [1m[32m16918[0m ReadStream "data" event #47 argument has "key" property[K
  ok [1m[32m16919[0m ReadStream "data" event #47 argument has "value" property[K
  ok [1m[32m16920[0m ReadStream "data" event #47 argument has correct "key"[K
  ok [1m[32m16921[0m ReadStream "data" event #47 argument has correct "value"[K
  ok [1m[32m16922[0m ReadStream "data" event #48 fired with 1 argument[K
  ok [1m[32m16923[0m ReadStream "data" event #48 argument has "key" property[K
  ok [1m[32m16924[0m ReadStream "data" event #48 argument has "value" property[K
  ok [1m[32m16925[0m ReadStream "data" event #48 argument has correct "key"[K
  ok [1m[32m16926[0m ReadStream "data" event #48 argument has correct "value"[K
  ok [1m[32m16927[0m ReadStream "data" event #49 fired with 1 argument[K
  ok [1m[32m16928[0m ReadStream "data" event #49 argument has "key" property[K
  ok [1m[32m16929[0m ReadStream "data" event #49 argument has "value" property[K
  ok [1m[32m16930[0m ReadStream "data" event #49 argument has correct "key"[K
  ok [1m[32m16931[0m ReadStream "data" event #49 argument has correct "value"[K
  ok [1m[32m16932[0m ReadStream "data" event #50 fired with 1 argument[K
  ok [1m[32m16933[0m ReadStream "data" event #50 argument has "key" property[K
  ok [1m[32m16934[0m ReadStream "data" event #50 argument has "value" property[K
  ok [1m[32m16935[0m ReadStream "data" event #50 argument has correct "key"[K
  ok [1m[32m16936[0m ReadStream "data" event #50 argument has correct "value"[K
  ok [1m[32m16937[0m ReadStream "data" event #51 fired with 1 argument[K
  ok [1m[32m16938[0m ReadStream "data" event #51 argument has "key" property[K
  ok [1m[32m16939[0m ReadStream "data" event #51 argument has "value" property[K
  ok [1m[32m16940[0m ReadStream "data" event #51 argument has correct "key"[K
  ok [1m[32m16941[0m ReadStream "data" event #51 argument has correct "value"[K
  ok [1m[32m16942[0m ReadStream "data" event #52 fired with 1 argument[K
  ok [1m[32m16943[0m ReadStream "data" event #52 argument has "key" property[K
  ok [1m[32m16944[0m ReadStream "data" event #52 argument has "value" property[K
  ok [1m[32m16945[0m ReadStream "data" event #52 argument has correct "key"[K
  ok [1m[32m16946[0m ReadStream "data" event #52 argument has correct "value"[K
  ok [1m[32m16947[0m ReadStream "data" event #53 fired with 1 argument[K
  ok [1m[32m16948[0m ReadStream "data" event #53 argument has "key" property[K
  ok [1m[32m16949[0m ReadStream "data" event #53 argument has "value" property[K
  ok [1m[32m16950[0m ReadStream "data" event #53 argument has correct "key"[K
  ok [1m[32m16951[0m ReadStream "data" event #53 argument has correct "value"[K
  ok [1m[32m16952[0m ReadStream "data" event #54 fired with 1 argument[K
  ok [1m[32m16953[0m ReadStream "data" event #54 argument has "key" property[K
  ok [1m[32m16954[0m ReadStream "data" event #54 argument has "value" property[K
  ok [1m[32m16955[0m ReadStream "data" event #54 argument has correct "key"[K
  ok [1m[32m16956[0m ReadStream "data" event #54 argument has correct "value"[K
  ok [1m[32m16957[0m ReadStream "data" event #55 fired with 1 argument[K
  ok [1m[32m16958[0m ReadStream "data" event #55 argument has "key" property[K
  ok [1m[32m16959[0m ReadStream "data" event #55 argument has "value" property[K
  ok [1m[32m16960[0m ReadStream "data" event #55 argument has correct "key"[K
  ok [1m[32m16961[0m ReadStream "data" event #55 argument has correct "value"[K
  ok [1m[32m16962[0m ReadStream "data" event #56 fired with 1 argument[K
  ok [1m[32m16963[0m ReadStream "data" event #56 argument has "key" property[K
  ok [1m[32m16964[0m ReadStream "data" event #56 argument has "value" property[K
  ok [1m[32m16965[0m ReadStream "data" event #56 argument has correct "key"[K
  ok [1m[32m16966[0m ReadStream "data" event #56 argument has correct "value"[K
  ok [1m[32m16967[0m ReadStream "data" event #57 fired with 1 argument[K
  ok [1m[32m16968[0m ReadStream "data" event #57 argument has "key" property[K
  ok [1m[32m16969[0m ReadStream "data" event #57 argument has "value" property[K
  ok [1m[32m16970[0m ReadStream "data" event #57 argument has correct "key"[K
  ok [1m[32m16971[0m ReadStream "data" event #57 argument has correct "value"[K
  ok [1m[32m16972[0m ReadStream "data" event #58 fired with 1 argument[K
  ok [1m[32m16973[0m ReadStream "data" event #58 argument has "key" property[K
  ok [1m[32m16974[0m ReadStream "data" event #58 argument has "value" property[K
  ok [1m[32m16975[0m ReadStream "data" event #58 argument has correct "key"[K
  ok [1m[32m16976[0m ReadStream "data" event #58 argument has correct "value"[K
  ok [1m[32m16977[0m ReadStream "data" event #59 fired with 1 argument[K
  ok [1m[32m16978[0m ReadStream "data" event #59 argument has "key" property[K
  ok [1m[32m16979[0m ReadStream "data" event #59 argument has "value" property[K
  ok [1m[32m16980[0m ReadStream "data" event #59 argument has correct "key"[K
  ok [1m[32m16981[0m ReadStream "data" event #59 argument has correct "value"[K
  ok [1m[32m16982[0m ReadStream "data" event #60 fired with 1 argument[K
  ok [1m[32m16983[0m ReadStream "data" event #60 argument has "key" property[K
  ok [1m[32m16984[0m ReadStream "data" event #60 argument has "value" property[K
  ok [1m[32m16985[0m ReadStream "data" event #60 argument has correct "key"[K
  ok [1m[32m16986[0m ReadStream "data" event #60 argument has correct "value"[K
  ok [1m[32m16987[0m ReadStream "data" event #61 fired with 1 argument[K
  ok [1m[32m16988[0m ReadStream "data" event #61 argument has "key" property[K
  ok [1m[32m16989[0m ReadStream "data" event #61 argument has "value" property[K
  ok [1m[32m16990[0m ReadStream "data" event #61 argument has correct "key"[K
  ok [1m[32m16991[0m ReadStream "data" event #61 argument has correct "value"[K
  ok [1m[32m16992[0m ReadStream "data" event #62 fired with 1 argument[K
  ok [1m[32m16993[0m ReadStream "data" event #62 argument has "key" property[K
  ok [1m[32m16994[0m ReadStream "data" event #62 argument has "value" property[K
  ok [1m[32m16995[0m ReadStream "data" event #62 argument has correct "key"[K
  ok [1m[32m16996[0m ReadStream "data" event #62 argument has correct "value"[K
  ok [1m[32m16997[0m ReadStream "data" event #63 fired with 1 argument[K
  ok [1m[32m16998[0m ReadStream "data" event #63 argument has "key" property[K
  ok [1m[32m16999[0m ReadStream "data" event #63 argument has "value" property[K
  ok [1m[32m17000[0m ReadStream "data" event #63 argument has correct "key"[K
  ok [1m[32m17001[0m ReadStream "data" event #63 argument has correct "value"[K
  ok [1m[32m17002[0m ReadStream "data" event #64 fired with 1 argument[K
  ok [1m[32m17003[0m ReadStream "data" event #64 argument has "key" property[K
  ok [1m[32m17004[0m ReadStream "data" event #64 argument has "value" property[K
  ok [1m[32m17005[0m ReadStream "data" event #64 argument has correct "key"[K
  ok [1m[32m17006[0m ReadStream "data" event #64 argument has correct "value"[K
  ok [1m[32m17007[0m ReadStream "data" event #65 fired with 1 argument[K
  ok [1m[32m17008[0m ReadStream "data" event #65 argument has "key" property[K
  ok [1m[32m17009[0m ReadStream "data" event #65 argument has "value" property[K
  ok [1m[32m17010[0m ReadStream "data" event #65 argument has correct "key"[K
  ok [1m[32m17011[0m ReadStream "data" event #65 argument has correct "value"[K
  ok [1m[32m17012[0m ReadStream "data" event #66 fired with 1 argument[K
  ok [1m[32m17013[0m ReadStream "data" event #66 argument has "key" property[K
  ok [1m[32m17014[0m ReadStream "data" event #66 argument has "value" property[K
  ok [1m[32m17015[0m ReadStream "data" event #66 argument has correct "key"[K
  ok [1m[32m17016[0m ReadStream "data" event #66 argument has correct "value"[K
  ok [1m[32m17017[0m ReadStream "data" event #67 fired with 1 argument[K
  ok [1m[32m17018[0m ReadStream "data" event #67 argument has "key" property[K
  ok [1m[32m17019[0m ReadStream "data" event #67 argument has "value" property[K
  ok [1m[32m17020[0m ReadStream "data" event #67 argument has correct "key"[K
  ok [1m[32m17021[0m ReadStream "data" event #67 argument has correct "value"[K
  ok [1m[32m17022[0m ReadStream "data" event #68 fired with 1 argument[K
  ok [1m[32m17023[0m ReadStream "data" event #68 argument has "key" property[K
  ok [1m[32m17024[0m ReadStream "data" event #68 argument has "value" property[K
  ok [1m[32m17025[0m ReadStream "data" event #68 argument has correct "key"[K
  ok [1m[32m17026[0m ReadStream "data" event #68 argument has correct "value"[K
  ok [1m[32m17027[0m ReadStream "data" event #69 fired with 1 argument[K
  ok [1m[32m17028[0m ReadStream "data" event #69 argument has "key" property[K
  ok [1m[32m17029[0m ReadStream "data" event #69 argument has "value" property[K
  ok [1m[32m17030[0m ReadStream "data" event #69 argument has correct "key"[K
  ok [1m[32m17031[0m ReadStream "data" event #69 argument has correct "value"[K
  ok [1m[32m17032[0m ReadStream "data" event #70 fired with 1 argument[K
  ok [1m[32m17033[0m ReadStream "data" event #70 argument has "key" property[K
  ok [1m[32m17034[0m ReadStream "data" event #70 argument has "value" property[K
  ok [1m[32m17035[0m ReadStream "data" event #70 argument has correct "key"[K
  ok [1m[32m17036[0m ReadStream "data" event #70 argument has correct "value"[K
  ok [1m[32m17037[0m ReadStream "data" event #71 fired with 1 argument[K
  ok [1m[32m17038[0m ReadStream "data" event #71 argument has "key" property[K
  ok [1m[32m17039[0m ReadStream "data" event #71 argument has "value" property[K
  ok [1m[32m17040[0m ReadStream "data" event #71 argument has correct "key"[K
  ok [1m[32m17041[0m ReadStream "data" event #71 argument has correct "value"[K
  ok [1m[32m17042[0m ReadStream "data" event #72 fired with 1 argument[K
  ok [1m[32m17043[0m ReadStream "data" event #72 argument has "key" property[K
  ok [1m[32m17044[0m ReadStream "data" event #72 argument has "value" property[K
  ok [1m[32m17045[0m ReadStream "data" event #72 argument has correct "key"[K
  ok [1m[32m17046[0m ReadStream "data" event #72 argument has correct "value"[K
  ok [1m[32m17047[0m ReadStream "data" event #73 fired with 1 argument[K
  ok [1m[32m17048[0m ReadStream "data" event #73 argument has "key" property[K
  ok [1m[32m17049[0m ReadStream "data" event #73 argument has "value" property[K
  ok [1m[32m17050[0m ReadStream "data" event #73 argument has correct "key"[K
  ok [1m[32m17051[0m ReadStream "data" event #73 argument has correct "value"[K
  ok [1m[32m17052[0m ReadStream "data" event #74 fired with 1 argument[K
  ok [1m[32m17053[0m ReadStream "data" event #74 argument has "key" property[K
  ok [1m[32m17054[0m ReadStream "data" event #74 argument has "value" property[K
  ok [1m[32m17055[0m ReadStream "data" event #74 argument has correct "key"[K
  ok [1m[32m17056[0m ReadStream "data" event #74 argument has correct "value"[K
  ok [1m[32m17057[0m ReadStream "data" event #75 fired with 1 argument[K
  ok [1m[32m17058[0m ReadStream "data" event #75 argument has "key" property[K
  ok [1m[32m17059[0m ReadStream "data" event #75 argument has "value" property[K
  ok [1m[32m17060[0m ReadStream "data" event #75 argument has correct "key"[K
  ok [1m[32m17061[0m ReadStream "data" event #75 argument has correct "value"[K
  ok [1m[32m17062[0m ReadStream "data" event #76 fired with 1 argument[K
  ok [1m[32m17063[0m ReadStream "data" event #76 argument has "key" property[K
  ok [1m[32m17064[0m ReadStream "data" event #76 argument has "value" property[K
  ok [1m[32m17065[0m ReadStream "data" event #76 argument has correct "key"[K
  ok [1m[32m17066[0m ReadStream "data" event #76 argument has correct "value"[K
  ok [1m[32m17067[0m ReadStream "data" event #77 fired with 1 argument[K
  ok [1m[32m17068[0m ReadStream "data" event #77 argument has "key" property[K
  ok [1m[32m17069[0m ReadStream "data" event #77 argument has "value" property[K
  ok [1m[32m17070[0m ReadStream "data" event #77 argument has correct "key"[K
  ok [1m[32m17071[0m ReadStream "data" event #77 argument has correct "value"[K
  ok [1m[32m17072[0m ReadStream "data" event #78 fired with 1 argument[K
  ok [1m[32m17073[0m ReadStream "data" event #78 argument has "key" property[K
  ok [1m[32m17074[0m ReadStream "data" event #78 argument has "value" property[K
  ok [1m[32m17075[0m ReadStream "data" event #78 argument has correct "key"[K
  ok [1m[32m17076[0m ReadStream "data" event #78 argument has correct "value"[K
  ok [1m[32m17077[0m ReadStream "data" event #79 fired with 1 argument[K
  ok [1m[32m17078[0m ReadStream "data" event #79 argument has "key" property[K
  ok [1m[32m17079[0m ReadStream "data" event #79 argument has "value" property[K
  ok [1m[32m17080[0m ReadStream "data" event #79 argument has correct "key"[K
  ok [1m[32m17081[0m ReadStream "data" event #79 argument has correct "value"[K
  ok [1m[32m17082[0m ReadStream "data" event #80 fired with 1 argument[K
  ok [1m[32m17083[0m ReadStream "data" event #80 argument has "key" property[K
  ok [1m[32m17084[0m ReadStream "data" event #80 argument has "value" property[K
  ok [1m[32m17085[0m ReadStream "data" event #80 argument has correct "key"[K
  ok [1m[32m17086[0m ReadStream "data" event #80 argument has correct "value"[K
  ok [1m[32m17087[0m ReadStream "data" event #81 fired with 1 argument[K
  ok [1m[32m17088[0m ReadStream "data" event #81 argument has "key" property[K
  ok [1m[32m17089[0m ReadStream "data" event #81 argument has "value" property[K
  ok [1m[32m17090[0m ReadStream "data" event #81 argument has correct "key"[K
  ok [1m[32m17091[0m ReadStream "data" event #81 argument has correct "value"[K
  ok [1m[32m17092[0m ReadStream "data" event #82 fired with 1 argument[K
  ok [1m[32m17093[0m ReadStream "data" event #82 argument has "key" property[K
  ok [1m[32m17094[0m ReadStream "data" event #82 argument has "value" property[K
  ok [1m[32m17095[0m ReadStream "data" event #82 argument has correct "key"[K
  ok [1m[32m17096[0m ReadStream "data" event #82 argument has correct "value"[K
  ok [1m[32m17097[0m ReadStream "data" event #83 fired with 1 argument[K
  ok [1m[32m17098[0m ReadStream "data" event #83 argument has "key" property[K
  ok [1m[32m17099[0m ReadStream "data" event #83 argument has "value" property[K
  ok [1m[32m17100[0m ReadStream "data" event #83 argument has correct "key"[K
  ok [1m[32m17101[0m ReadStream "data" event #83 argument has correct "value"[K
  ok [1m[32m17102[0m ReadStream "data" event #84 fired with 1 argument[K
  ok [1m[32m17103[0m ReadStream "data" event #84 argument has "key" property[K
  ok [1m[32m17104[0m ReadStream "data" event #84 argument has "value" property[K
  ok [1m[32m17105[0m ReadStream "data" event #84 argument has correct "key"[K
  ok [1m[32m17106[0m ReadStream "data" event #84 argument has correct "value"[K
  ok [1m[32m17107[0m ReadStream "data" event #85 fired with 1 argument[K
  ok [1m[32m17108[0m ReadStream "data" event #85 argument has "key" property[K
  ok [1m[32m17109[0m ReadStream "data" event #85 argument has "value" property[K
  ok [1m[32m17110[0m ReadStream "data" event #85 argument has correct "key"[K
  ok [1m[32m17111[0m ReadStream "data" event #85 argument has correct "value"[K
  ok [1m[32m17112[0m ReadStream "data" event #86 fired with 1 argument[K
  ok [1m[32m17113[0m ReadStream "data" event #86 argument has "key" property[K
  ok [1m[32m17114[0m ReadStream "data" event #86 argument has "value" property[K
  ok [1m[32m17115[0m ReadStream "data" event #86 argument has correct "key"[K
  ok [1m[32m17116[0m ReadStream "data" event #86 argument has correct "value"[K
  ok [1m[32m17117[0m ReadStream "data" event #87 fired with 1 argument[K
  ok [1m[32m17118[0m ReadStream "data" event #87 argument has "key" property[K
  ok [1m[32m17119[0m ReadStream "data" event #87 argument has "value" property[K
  ok [1m[32m17120[0m ReadStream "data" event #87 argument has correct "key"[K
  ok [1m[32m17121[0m ReadStream "data" event #87 argument has correct "value"[K
  ok [1m[32m17122[0m ReadStream "data" event #88 fired with 1 argument[K
  ok [1m[32m17123[0m ReadStream "data" event #88 argument has "key" property[K
  ok [1m[32m17124[0m ReadStream "data" event #88 argument has "value" property[K
  ok [1m[32m17125[0m ReadStream "data" event #88 argument has correct "key"[K
  ok [1m[32m17126[0m ReadStream "data" event #88 argument has correct "value"[K
  ok [1m[32m17127[0m ReadStream "data" event #89 fired with 1 argument[K
  ok [1m[32m17128[0m ReadStream "data" event #89 argument has "key" property[K
  ok [1m[32m17129[0m ReadStream "data" event #89 argument has "value" property[K
  ok [1m[32m17130[0m ReadStream "data" event #89 argument has correct "key"[K
  ok [1m[32m17131[0m ReadStream "data" event #89 argument has correct "value"[K
  ok [1m[32m17132[0m ReadStream "data" event #90 fired with 1 argument[K
  ok [1m[32m17133[0m ReadStream "data" event #90 argument has "key" property[K
  ok [1m[32m17134[0m ReadStream "data" event #90 argument has "value" property[K
  ok [1m[32m17135[0m ReadStream "data" event #90 argument has correct "key"[K
  ok [1m[32m17136[0m ReadStream "data" event #90 argument has correct "value"[K
  ok [1m[32m17137[0m ReadStream "data" event #91 fired with 1 argument[K
  ok [1m[32m17138[0m ReadStream "data" event #91 argument has "key" property[K
  ok [1m[32m17139[0m ReadStream "data" event #91 argument has "value" property[K
  ok [1m[32m17140[0m ReadStream "data" event #91 argument has correct "key"[K
  ok [1m[32m17141[0m ReadStream "data" event #91 argument has correct "value"[K
  ok [1m[32m17142[0m ReadStream "data" event #92 fired with 1 argument[K
  ok [1m[32m17143[0m ReadStream "data" event #92 argument has "key" property[K
  ok [1m[32m17144[0m ReadStream "data" event #92 argument has "value" property[K
  ok [1m[32m17145[0m ReadStream "data" event #92 argument has correct "key"[K
  ok [1m[32m17146[0m ReadStream "data" event #92 argument has correct "value"[K
  ok [1m[32m17147[0m ReadStream "data" event #93 fired with 1 argument[K
  ok [1m[32m17148[0m ReadStream "data" event #93 argument has "key" property[K
  ok [1m[32m17149[0m ReadStream "data" event #93 argument has "value" property[K
  ok [1m[32m17150[0m ReadStream "data" event #93 argument has correct "key"[K
  ok [1m[32m17151[0m ReadStream "data" event #93 argument has correct "value"[K
  ok [1m[32m17152[0m ReadStream "data" event #94 fired with 1 argument[K
  ok [1m[32m17153[0m ReadStream "data" event #94 argument has "key" property[K
  ok [1m[32m17154[0m ReadStream "data" event #94 argument has "value" property[K
  ok [1m[32m17155[0m ReadStream "data" event #94 argument has correct "key"[K
  ok [1m[32m17156[0m ReadStream "data" event #94 argument has correct "value"[K
  ok [1m[32m17157[0m ReadStream "data" event #95 fired with 1 argument[K
  ok [1m[32m17158[0m ReadStream "data" event #95 argument has "key" property[K
  ok [1m[32m17159[0m ReadStream "data" event #95 argument has "value" property[K
  ok [1m[32m17160[0m ReadStream "data" event #95 argument has correct "key"[K
  ok [1m[32m17161[0m ReadStream "data" event #95 argument has correct "value"[K
  ok [1m[32m17162[0m ReadStream "data" event #96 fired with 1 argument[K
  ok [1m[32m17163[0m ReadStream "data" event #96 argument has "key" property[K
  ok [1m[32m17164[0m ReadStream "data" event #96 argument has "value" property[K
  ok [1m[32m17165[0m ReadStream "data" event #96 argument has correct "key"[K
  ok [1m[32m17166[0m ReadStream "data" event #96 argument has correct "value"[K
  ok [1m[32m17167[0m ReadStream "data" event #97 fired with 1 argument[K
  ok [1m[32m17168[0m ReadStream "data" event #97 argument has "key" property[K
  ok [1m[32m17169[0m ReadStream "data" event #97 argument has "value" property[K
  ok [1m[32m17170[0m ReadStream "data" event #97 argument has correct "key"[K
  ok [1m[32m17171[0m ReadStream "data" event #97 argument has correct "value"[K
  ok [1m[32m17172[0m ReadStream "data" event #98 fired with 1 argument[K
  ok [1m[32m17173[0m ReadStream "data" event #98 argument has "key" property[K
  ok [1m[32m17174[0m ReadStream "data" event #98 argument has "value" property[K
  ok [1m[32m17175[0m ReadStream "data" event #98 argument has correct "key"[K
  ok [1m[32m17176[0m ReadStream "data" event #98 argument has correct "value"[K
  ok [1m[32m17177[0m ReadStream "data" event #99 fired with 1 argument[K
  ok [1m[32m17178[0m ReadStream "data" event #99 argument has "key" property[K
  ok [1m[32m17179[0m ReadStream "data" event #99 argument has "value" property[K
  ok [1m[32m17180[0m ReadStream "data" event #99 argument has correct "key"[K
  ok [1m[32m17181[0m ReadStream "data" event #99 argument has correct "value"[K
  ok [1m[32m17182[0m no test error[K
  ok [1m[32m17183[0m no close error[K
[1A[1G[1m[32m✓ ReadStream implicit snapshot[0m[1B[1G
# simple iterator without encoding-down[K

  ok [1m[32m17184[0m no put error[K
  ok [1m[32m17185[0m no next error[K
  ok [1m[32m17186[0m should be strictly equal[K
  ok [1m[32m17187[0m should be strictly equal[K
  ok [1m[32m17188[0m no end error[K
[1A[1G[1m[32m✓ simple iterator without encoding-down[0m[1B[1G
# iterator#seek()[K

[1A[1G[1m[32m✓ iterator#seek()[0m[1B[1G
# setup[K

  ok [1m[32m17189[0m no open error[K
  ok [1m[32m17190[0m no batch error[K
[1A[1G[1m[32m✓ setup[0m[1B[1G
# without encoding, without deferred-open[K

  ok [1m[32m17191[0m no open error[K
  ok [1m[32m17192[0m no next error[K
  ok [1m[32m17193[0m should be strictly equal[K
  ok [1m[32m17194[0m no end error[K
[1A[1G[1m[32m✓ without encoding, without deferred-open[0m[1B[1G
# without encoding, with deferred-open[K

  ok [1m[32m17195[0m no next error[K
  ok [1m[32m17196[0m should be strictly equal[K
  ok [1m[32m17197[0m no end error[K
[1A[1G[1m[32m✓ without encoding, with deferred-open[0m[1B[1G
# with encoding, with deferred-open[K

  ok [1m[32m17198[0m no next error[K
  ok [1m[32m17199[0m should be strictly equal[K
  ok [1m[32m17200[0m no end error[K
[1A[1G[1m[32m✓ with encoding, with deferred-open[0m[1B[1G
# with encoding, without deferred-open[K

  ok [1m[32m17201[0m no open error[K
  ok [1m[32m17202[0m no next error[K
  ok [1m[32m17203[0m should be strictly equal[K
  ok [1m[32m17204[0m no end error[K
[1A[1G[1m[32m✓ with encoding, without deferred-open[0m[1B[1G
# manifest: additionalMethod is proxied[K

  ok [1m[32m17205[0m should be strictly equal[K
  ok [1m[32m17206[0m should be strictly equal[K
  ok [1m[32m17207[0m deferred[K
  ok [1m[32m17208[0m should be strictly equal[K
  ok [1m[32m17209[0m should be deeply equivalent[K
  ok [1m[32m17210[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ manifest: additionalMethod is proxied[0m[1B[1G
# manifest: additionalMethod is proxied even if function does not exist[K

  ok [1m[32m17211[0m should be strictly equal[K
  ok [1m[32m17212[0m should be strictly equal[K
[1A[1G[1m[32m✓ manifest: additionalMethod is proxied even if function does not exist[0m[1B[1G
# manifest: approximateSize() et al are proxied even if manifest does not exist[K

  ok [1m[32m17213[0m should be strictly equal[K
  ok [1m[32m17214[0m should be strictly equal[K
  ok [1m[32m17215[0m should be strictly equal[K
[1A[1G[1m[32m✓ manifest: approximateSize() et al are proxied even if manifest does not exist[0m[1B[1G
# does not contain package.json[K

  ok [1m[32m17216[0m should not be strictly equal[K
  ok [1m[32m17217[0m should not be strictly equal[K
  ok [1m[32m17218[0m should not be strictly equal[K
  ok [1m[32m17219[0m should not be strictly equal[K
  ok [1m[32m17220[0m should not be strictly equal[K
  ok [1m[32m17221[0m should not be strictly equal[K
  ok [1m[32m17222[0m should not be strictly equal[K
  ok [1m[32m17223[0m should not be strictly equal[K
  ok [1m[32m17224[0m should not be strictly equal[K
  ok [1m[32m17225[0m should not be strictly equal[K
  ok [1m[32m17226[0m should not be strictly equal[K
  ok [1m[32m17227[0m should not be strictly equal[K
  ok [1m[32m17228[0m should not be strictly equal[K
  ok [1m[32m17229[0m should not be strictly equal[K
  ok [1m[32m17230[0m should not be strictly equal[K
  ok [1m[32m17231[0m should not be strictly equal[K
  ok [1m[32m17232[0m should not be strictly equal[K
  ok [1m[32m17233[0m should not be strictly equal[K
  ok [1m[32m17234[0m should not be strictly equal[K
  ok [1m[32m17235[0m should not be strictly equal[K
  ok [1m[32m17236[0m should not be strictly equal[K
  ok [1m[32m17237[0m should not be strictly equal[K
  ok [1m[32m17238[0m should not be strictly equal[K
  ok [1m[32m17239[0m should not be strictly equal[K
  ok [1m[32m17240[0m should not be strictly equal[K
  ok [1m[32m17241[0m should not be strictly equal[K
  ok [1m[32m17242[0m should not be strictly equal[K
  ok [1m[32m17243[0m should not be strictly equal[K
  ok [1m[32m17244[0m should not be strictly equal[K
  ok [1m[32m17245[0m should not be strictly equal[K
  ok [1m[32m17246[0m should not be strictly equal[K
  ok [1m[32m17247[0m should not be strictly equal[K
  ok [1m[32m17248[0m should not be strictly equal[K
  ok [1m[32m17249[0m should not be strictly equal[K
  ok [1m[32m17250[0m should not be strictly equal[K
  ok [1m[32m17251[0m should not be strictly equal[K
  ok [1m[32m17252[0m should not be strictly equal[K
  ok [1m[32m17253[0m should not be strictly equal[K
  ok [1m[32m17254[0m should not be strictly equal[K
  ok [1m[32m17255[0m should not be strictly equal[K
  ok [1m[32m17256[0m should not be strictly equal[K
  ok [1m[32m17257[0m should not be strictly equal[K
  ok [1m[32m17258[0m should not be strictly equal[K
  ok [1m[32m17259[0m should not be strictly equal[K
  ok [1m[32m17260[0m should not be strictly equal[K
  ok [1m[32m17261[0m should not be strictly equal[K
  ok [1m[32m17262[0m should not be strictly equal[K
  ok [1m[32m17263[0m should not be strictly equal[K
  ok [1m[32m17264[0m should not be strictly equal[K
  ok [1m[32m17265[0m should not be strictly equal[K
  ok [1m[32m17266[0m should not be strictly equal[K
  ok [1m[32m17267[0m should not be strictly equal[K
  ok [1m[32m17268[0m should not be strictly equal[K
  ok [1m[32m17269[0m should not be strictly equal[K
  ok [1m[32m17270[0m should not be strictly equal[K
  ok [1m[32m17271[0m should not be strictly equal[K
  ok [1m[32m17272[0m should not be strictly equal[K
  ok [1m[32m17273[0m should not be strictly equal[K
  ok [1m[32m17274[0m should not be strictly equal[K
  ok [1m[32m17275[0m should not be strictly equal[K
  ok [1m[32m17276[0m should not be strictly equal[K
  ok [1m[32m17277[0m should not be strictly equal[K
  ok [1m[32m17278[0m should not be strictly equal[K
  ok [1m[32m17279[0m should not be strictly equal[K
  ok [1m[32m17280[0m should not be strictly equal[K
  ok [1m[32m17281[0m should not be strictly equal[K
[1A[1G[1m[32m✓ does not contain package.json[0m[1B[1G
# throws error if missing db factory[K

  ok [1m[32m17282[0m null[K
  ok [1m[32m17283[0m should be truthy[K
  ok [1m[32m17284[0m should be strictly equal[K
[1A[1G[1m[32m✓ throws error if missing db factory[0m[1B[1G
# works with valid db factory (memdown)[K

  ok [1m[32m17285[0m should be strictly equal[K
[1A[1G[1m[32m✓ works with valid db factory (memdown)[0m[1B[1G
# tests 17285[K

tests 17285
# pass  17285[K

pass  17285
# ok[K
[1A[1G[1m[32m✓ ok[0m[1B[1G--------------|---------|----------|---------|---------|----------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s          
--------------|---------|----------|---------|---------|----------------------------
All files     |   95.27 |    89.28 |   97.43 |   96.47 |                            
 batch.js     |   95.45 |       50 |     100 |   97.67 | 69                         
 common.js    |     100 |      100 |     100 |     100 |                            
 levelup.js   |    95.1 |    89.47 |   96.77 |   96.08 | 43,111-112,150,283,288,315 
 next-tick.js |     100 |      100 |     100 |     100 |                            
--------------|---------|----------|---------|---------|----------------------------
--------------|---------|----------|---------|---------|----------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s          
--------------|---------|----------|---------|---------|----------------------------
All files     |   95.27 |    89.28 |   97.43 |   96.47 |                            
 batch.js     |   95.45 |       50 |     100 |   97.67 | 69                         
 common.js    |     100 |      100 |     100 |     100 |                            
 levelup.js   |    95.1 |    89.47 |   96.77 |   96.08 | 43,111-112,150,283,288,315 
 next-tick.js |     100 |      100 |     100 |     100 |                            
--------------|---------|----------|---------|---------|----------------------------
https://github.com/pillarjs/send.git
send
b69cbb3dc4c09c37917d08a4c13fcd1bac97ade5

added 410 packages, and audited 411 packages in 9s

94 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> send@0.18.0 test
> mocha --check-leaks --reporter spec --bail



  send(file).pipe(res)
    ✔ should stream the file contents
    ✔ should stream a zero-length file
    ✔ should decode the given path as a URI
    ✔ should serve files with dots in name
    ✔ should treat a malformed URI as a bad request
    ✔ should 400 on NULL bytes
    ✔ should treat an ENAMETOOLONG as a 404
    ✔ should handle headers already sent error
    ✔ should support HEAD
    ✔ should add an ETag header field
    ✔ should add a Date header field
    ✔ should add a Last-Modified header field
    ✔ should add a Accept-Ranges header field
    ✔ should 404 if the file does not exist
    ✔ should emit ENOENT if the file does not exist
    ✔ should not override content-type
    ✔ should set Content-Type via mime map
    ✔ should 404 if file disappears after stat, before open
    ✔ should 500 on file stream error
    "headers" event
      ✔ should fire when sending file
      ✔ should not fire on 404
      ✔ should fire on index
      ✔ should not fire on redirect
      ✔ should provide path
      ✔ should provide stat
      ✔ should allow altering headers
    when "directory" listeners are present
      ✔ should be called when sending directory
      ✔ should be called with path
    when no "directory" listeners are present
      ✔ should redirect directories to trailing slash
      ✔ should respond with an HTML redirect
      ✔ should respond with default Content-Security-Policy
      ✔ should not redirect to protocol-relative locations
      ✔ should respond with an HTML redirect
    when no "error" listeners are present
      ✔ should respond to errors directly
      ✔ should respond with default Content-Security-Policy
      ✔ should remove all previously-set headers
    with conditional-GET
      ✔ should remove Content headers with 304
      ✔ should not remove all Content-* headers
      where "If-Match" is set
        ✔ should respond with 200 when "*"
        ✔ should respond with 412 when ETag unmatched
        ✔ should respond with 200 when ETag matched
      where "If-Modified-Since" is set
        ✔ should respond with 304 when unmodified
        ✔ should respond with 200 when modified
      where "If-None-Match" is set
        ✔ should respond with 304 when ETag matched
        ✔ should respond with 200 when ETag unmatched
      where "If-Unmodified-Since" is set
        ✔ should respond with 200 when unmodified
        ✔ should respond with 412 when modified
        ✔ should respond with 200 when invalid date
    with Range request
      ✔ should support byte ranges
      ✔ should ignore non-byte ranges
      ✔ should be inclusive
      ✔ should set Content-Range
      ✔ should support -n
      ✔ should support n-
      ✔ should respond with 206 "Partial Content"
      ✔ should set Content-Length to the # of octets transferred
      when last-byte-pos of the range is greater the length
        ✔ is taken to be equal to one less than the length
        ✔ should adapt the Content-Length accordingly
      when the first- byte-pos of the range is greater length
        ✔ should respond with 416
        ✔ should emit error 416 with content-range header
      when syntactically invalid
        ✔ should respond with 200 and the entire contents
      when multiple ranges
        ✔ should respond with 200 and the entire contents
        ✔ should respond with 206 is all ranges can be combined
      when if-range present
        ✔ should respond with parts when etag unchanged
        ✔ should respond with 200 when etag changed
        ✔ should respond with parts when modified unchanged
        ✔ should respond with 200 when modified changed
        ✔ should respond with 200 when invalid value
    when "options" is specified
      ✔ should support start/end
      ✔ should adjust too large end
      ✔ should support start/end with Range request
      ✔ should support start/end with unsatisfiable Range request
    .etag()
      ✔ should support disabling etags
    .from()
      ✔ should set with deprecated from
    .hidden()
      ✔ should default support sending hidden files
    .index()
      ✔ should be configurable
      ✔ should support disabling
      ✔ should support fallbacks
    .maxage()
      ✔ should default to 0
      ✔ should floor to integer
      ✔ should accept string
      ✔ should max at 1 year
    .root()
      ✔ should set root

  send(file, options)
    acceptRanges
      ✔ should support disabling accept-ranges
      ✔ should ignore requested range
    cacheControl
      ✔ should support disabling cache-control
      ✔ should ignore maxAge option
    etag
      ✔ should support disabling etags
    extensions
      ✔ should reject numbers
      ✔ should reject true
      ✔ should be not be enabled by default
      ✔ should be configurable
      ✔ should support disabling extensions
      ✔ should support fallbacks
      ✔ should 404 if nothing found
      ✔ should skip directories
      ✔ should not search if file has extension
    lastModified
      ✔ should support disabling last-modified
    from
      ✔ should set with deprecated from
    dotfiles
      ✔ should default to "ignore"
      ✔ should allow file within dotfile directory for back-compat
      ✔ should reject bad value
      when "allow"
        ✔ should send dotfile
        ✔ should send within dotfile directory
        ✔ should 404 for non-existent dotfile
      when "deny"
        ✔ should 403 for dotfile
        ✔ should 403 for dotfile directory
        ✔ should 403 for dotfile directory with trailing slash
        ✔ should 403 for file within dotfile directory
        ✔ should 403 for non-existent dotfile
        ✔ should 403 for non-existent dotfile directory
        ✔ should 403 for dotfile in directory
        ✔ should 403 for dotfile in dotfile directory
        ✔ should send files in root dotfile directory
        ✔ should 403 for dotfile without root
      when "ignore"
        ✔ should 404 for dotfile
        ✔ should 404 for dotfile directory
        ✔ should 404 for dotfile directory with trailing slash
        ✔ should 404 for file within dotfile directory
        ✔ should 404 for non-existent dotfile
        ✔ should 404 for non-existent dotfile directory
        ✔ should send files in root dotfile directory
        ✔ should 404 for dotfile without root
    hidden
      ✔ should default to false
      ✔ should default support sending hidden files
    immutable
      ✔ should default to false
      ✔ should set immutable directive in Cache-Control
    maxAge
      ✔ should default to 0
      ✔ should floor to integer
      ✔ should accept string
      ✔ should max at 1 year
    index
      ✔ should reject numbers
      ✔ should reject true
      ✔ should default to index.html
      ✔ should be configurable
      ✔ should support disabling
      ✔ should support fallbacks
      ✔ should 404 if no index file found (file)
      ✔ should 404 if no index file found (dir)
      ✔ should not follow directories
      ✔ should work without root
    root
      when given
        ✔ should join root
        ✔ should work with trailing slash
        ✔ should work with empty path
        ✔ should try as file with empty path
        ✔ should restrict paths to within root
        ✔ should allow .. in root
        ✔ should not allow root transversal
        ✔ should not allow root path disclosure
      when missing
        ✔ should consider .. malicious
        ✔ should still serve files with dots in name

  send.mime
    ✔ should be exposed
    .default_type
      ✔ should change the default type
      ✔ should not add Content-Type for undefined default


  154 passing (346ms)

----------|---------|----------|---------|---------|-----------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s     
----------|---------|----------|---------|---------|-----------------------
All files |     100 |    96.59 |     100 |     100 |                       
 index.js |     100 |    96.59 |     100 |     100 | 128,274,401,1014-1048 
----------|---------|----------|---------|---------|-----------------------
https://github.com/pillarjs/finalhandler.git
finalhandler
5ceb3e3e2482404cb71e9810bd10a422fe748f20

added 410 packages, and audited 411 packages in 5s

94 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Start Generating test coverage report...

> finalhandler@1.2.0 test
> mocha --reporter spec --bail --check-leaks test/



  finalhandler(req, res)
    headers
      ✔ should ignore err.headers without status code
      ✔ should ignore err.headers with invalid res.status
      ✔ should ignore err.headers with invalid res.statusCode
      ✔ should include err.headers with err.status
      ✔ should include err.headers with err.statusCode
      ✔ should ignore err.headers when not an object
    status code
      ✔ should 404 on no error
      ✔ should 500 on error
      ✔ should use err.statusCode
      ✔ should ignore non-error err.statusCode code
      ✔ should ignore non-numeric err.statusCode
      ✔ should use err.status
      ✔ should use err.status over err.statusCode
      ✔ should set status to 500 when err.status < 400
      ✔ should set status to 500 when err.status > 599
      ✔ should use err.statusCode over invalid err.status
      ✔ should ignore non-error err.status code
      ✔ should ignore non-numeric err.status
    status message
      ✔ should be "Not Found" on no error
      ✔ should be "Internal Server Error" on error
      ✔ should be "Bad Request" when err.statusCode = 400
      ✔ should reset existing res.statusMessage
    404 response
      ✔ should include method and pathname
      ✔ should escape method and pathname characters
      ✔ should encode bad pathname characters
      ✔ should fallback to generic pathname without URL
      ✔ should include original pathname
      ✔ should include pathname only
      ✔ should handle HEAD
      ✔ should include X-Content-Type-Options header
      ✔ should include Content-Security-Policy header
      ✔ should not hang/error if there is a request body
    error response
      ✔ should include error stack
      ✔ should handle HEAD
      ✔ should include X-Content-Type-Options header
      ✔ should includeContent-Security-Policy header
      ✔ should handle non-error-objects
      ✔ should handle null prototype objects
      ✔ should send staus code name when production
      when there is a request body
        ✔ should not hang/error when unread
        ✔ should not hang/error when actively piped
        ✔ should not hang/error when read
      when res.statusCode set
        ✔ should keep when >= 400
        ✔ should convert to 500 is not a number
        ✔ should override with err.status
        ✔ should default body to status message in production
      when res.statusCode undefined
        ✔ should set to 500
    headers set
      ✔ should persist set headers
      ✔ should override content-type and length
      ✔ should remove other content headers
    request started
      ✔ should not respond
      ✔ should terminate on error
    onerror
      ✔ should be invoked when error


  53 passing (127ms)

----------|---------|----------|---------|---------|-------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------|---------|----------|---------|---------|-------------------
All files |     100 |    98.14 |     100 |     100 |                   
 index.js |     100 |    98.14 |     100 |     100 | 256               
----------|---------|----------|---------|---------|-------------------
https://github.com/expressjs/serve-index.git
serve-index
d2922cd872f8038d4d4c60d936954c35200cfbad

added 367 packages, and audited 368 packages in 5s

62 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (2 moderate, 3 high)

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
Start Generating test coverage report...

> serve-index@1.9.1 test
> mocha --reporter spec --bail --check-leaks test/



  serveIndex(root)
    ✓ should require root
    ✓ should serve text/html without Accept header
    ✓ should include security header
    ✓ should serve a directory index
    ✓ should work with HEAD requests
    ✓ should work with OPTIONS requests
    ✓ should deny POST requests
    ✓ should deny path will NULL byte
    ✓ should deny path that does not decode
    ✓ should deny path outside root
    ✓ should skip non-existent paths
    ✓ should treat an ENAMETOOLONG as a 414
    ✓ should skip non-directories
    when given Accept: header
      when Accept: application/json is given
        ✓ should respond with json
        ✓ should include security header
        ✓ should sort folders first
      when Accept: text/html is given
        ✓ should respond with html
        ✓ should include security header
        ✓ should property escape file names
        ✓ should sort folders first
      when Accept: text/plain is given
        ✓ should respond with text
        ✓ should include security header
        ✓ should sort folders first
      when Accept: application/x-bogus is given
        ✓ should respond with 406
    with "hidden" option
      ✓ should filter hidden files by default
      ✓ should filter hidden files
      ✓ should not filter hidden files
    with "filter" option
      ✓ should custom filter files
      ✓ should filter after hidden filter
      ✓ should filter directory paths
    with "icons" option
      ✓ should include icons for html
    with "template" option
      when setting a custom template file
        ✓ should respond with file list
        ✓ should respond with testing template sentence
        ✓ should have default styles
        ✓ should list directory twice
      when setting a custom template function
        ✓ should invoke function to render
        ✓ should handle render errors
        ✓ should provide "directory" local
        ✓ should provide "displayIcons" local
        ✓ should provide "fileList" local
        ✓ should provide "path" local
        ✓ should provide "style" local
        ✓ should provide "viewName" local
    when using custom handler
      exports.html
        ✓ should get called with Accept: text/html
        ✓ should get file list
        ✓ should get dir name
        ✓ should get template path
        ✓ should get template with tokens
        ✓ should get stylesheet path
      exports.plain
        ✓ should get called with Accept: text/plain
      exports.json
        ✓ should get called with Accept: application/json
    when navigating to other directory
      ✓ should respond with correct listing
      ✓ should include link to parent directory
      ✓ should work for directory with #
      ✓ should work for directory with special chars
      ✓ should property escape directory names
      ✓ should not work for outside root
    when setting a custom stylesheet
      ✓ should respond with appropriate embedded styles
    when set with trailing slash
      ✓ should respond with file list
    when set to '.'
      ✓ should respond with file list
      ✓ should not allow serving outside root


  61 passing (212ms)

----------|---------|----------|---------|---------|---------------------------------------------
File      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                           
----------|---------|----------|---------|---------|---------------------------------------------
All files |   96.09 |    88.33 |     100 |     100 |                                             
 index.js |   96.09 |    88.33 |     100 |     100 | 143,154,188-195,223-265,327,347-348,501-572 
----------|---------|----------|---------|---------|---------------------------------------------
https://github.com/Level/memdown.git
memdown
2d4b09c567f6f128b3f9896a9bebe0b8777e0a29

added 1207 packages, and audited 1208 packages in 20s

237 packages are looking for funding
  run `npm fund` for details

6 vulnerabilities (1 moderate, 4 high, 1 critical)

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Start Generating test coverage report...

> memdown@6.1.1 test
> standard && hallmark && (nyc -s node test.js | faucet) && nyc report

  /data/js-variants/multee/Original/memdown/test.js:12:3: Expected property shorthand. (object-shorthand) (warning)
  /data/js-variants/multee/Original/memdown/test.js:479:25: Expected property shorthand. (object-shorthand) (warning)

# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# testCommon.factory() returns a unique database[K

  ok [1m[32m1[0m no error while opening db1[K
  ok [1m[32m2[0m no error while opening db2[K
  ok [1m[32m3[0m put key in db1[K
  ok [1m[32m4[0m got items from db2[K
  ok [1m[32m5[0m db2 should be empty[K
  ok [1m[32m6[0m no error while closing db1[K
  ok [1m[32m7[0m no error while closing db2[K
[1A[1G[1m[32m✓ testCommon.factory() returns a unique database[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# db has manifest[K

  ok [1m[32m8[0m manifest is object[K
  ok [1m[32m9[0m additionalMethods is object[K
  ok [1m[32m10[0m truthy: bufferKeys[K
  ok [1m[32m11[0m truthy: snapshots[K
  ok [1m[32m12[0m false: permanence[K
  ok [1m[32m13[0m truthy: seek[K
  ok [1m[32m14[0m truthy: clear[K
  ok [1m[32m15[0m truthy: getMany[K
  ok [1m[32m16[0m truthy: status[K
  ok [1m[32m17[0m false: keyIterator[K
  ok [1m[32m18[0m false: valueIterator[K
  ok [1m[32m19[0m false: iteratorNextv[K
  ok [1m[32m20[0m false: iteratorAll[K
  ok [1m[32m21[0m false: idempotentOpen[K
  ok [1m[32m22[0m false: passiveOpen[K
  ok [1m[32m23[0m false: serialize[K
  ok [1m[32m24[0m false: createIfMissing[K
  ok [1m[32m25[0m false: errorIfExists[K
  ok [1m[32m26[0m false: deferredOpen[K
  ok [1m[32m27[0m false: openCallback[K
  ok [1m[32m28[0m false: promises[K
  ok [1m[32m29[0m false: streams[K
  ok [1m[32m30[0m false: encodings[K
  ok [1m[32m31[0m false: events[K
  ok [1m[32m32[0m truthy: additionalMethods[K
  ok [1m[32m33[0m manifest has unique identity[K
  ok [1m[32m34[0m manifest.additionalMethods has unique identity[K
  ok [1m[32m35[0m no open error[K
  ok [1m[32m36[0m manifest did not change after open[K
  ok [1m[32m37[0m no close error[K
  ok [1m[32m38[0m manifest did not change after close[K
[1A[1G[1m[32m✓ db has manifest[0m[1B[1G
# manifest has status[K

  ok [1m[32m39[0m should be strictly equal[K
  ok [1m[32m40[0m no open error[K
[1A[1G[1m[32m✓ manifest has status[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# test database open method exists[K

  ok [1m[32m41[0m database object returned[K
  ok [1m[32m42[0m open() function exists[K
[1A[1G[1m[32m✓ test database open method exists[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp[K

[1A[1G[1m[32m✓ setUp[0m[1B[1G
# test database open no-arg throws[K

  ok [1m[32m43[0m no-arg open() throws[K
[1A[1G[1m[32m✓ test database open no-arg throws[0m[1B[1G
# test callback-less, 1-arg, open() throws[K

  ok [1m[32m44[0m callback-less, 1-arg open() throws[K
[1A[1G[1m[32m✓ test callback-less, 1-arg, open() throws[0m[1B[1G
# test database open, no options[K

  ok [1m[32m45[0m undefined[K
[1A[1G[1m[32m✓ test database open, no options[0m[1B[1G
# test database open, options and callback[K

  ok [1m[32m46[0m undefined[K
[1A[1G[1m[32m✓ test database open, options and callback[0m[1B[1G
# test database open, close and open[K

  ok [1m[32m47[0m undefined[K
  ok [1m[32m48[0m undefined[K
  ok [1m[32m49[0m undefined[K
[1A[1G[1m[32m✓ test database open, close and open[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test close()[K

  ok [1m[32m50[0m no-arg close() throws[K
  ok [1m[32m51[0m non-callback close() throws[K
  ok [1m[32m52[0m undefined[K
[1A[1G[1m[32m✓ test close()[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test argument-less put() throws[K

  ok [1m[32m53[0m no-arg put() throws[K
[1A[1G[1m[32m✓ test argument-less put() throws[0m[1B[1G
# test callback-less, 1-arg, put() throws[K

  ok [1m[32m54[0m callback-less, 1-arg put() throws[K
[1A[1G[1m[32m✓ test callback-less, 1-arg, put() throws[0m[1B[1G
# test callback-less, 2-arg, put() throws[K

  ok [1m[32m55[0m callback-less, 2-arg put() throws[K
[1A[1G[1m[32m✓ test callback-less, 2-arg, put() throws[0m[1B[1G
# test callback-less, 3-arg, put() throws[K

  ok [1m[32m56[0m callback-less, 3-arg put() throws[K
[1A[1G[1m[32m✓ test callback-less, 3-arg, put() throws[0m[1B[1G
# test simple put()[K

  ok [1m[32m57[0m undefined[K
  ok [1m[32m58[0m null[K
  ok [1m[32m59[0m should be strictly equal[K
[1A[1G[1m[32m✓ test simple put()[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test argument-less get() throws[K

  ok [1m[32m60[0m no-arg get() throws[K
[1A[1G[1m[32m✓ test argument-less get() throws[0m[1B[1G
# test callback-less, 1-arg, get() throws[K

  ok [1m[32m61[0m callback-less, 1-arg get() throws[K
[1A[1G[1m[32m✓ test callback-less, 1-arg, get() throws[0m[1B[1G
# test callback-less, 3-arg, get() throws[K

  ok [1m[32m62[0m callback-less, 2-arg get() throws[K
[1A[1G[1m[32m✓ test callback-less, 3-arg, get() throws[0m[1B[1G
# test simple get()[K

  ok [1m[32m63[0m undefined[K
  ok [1m[32m64[0m null[K
  ok [1m[32m65[0m should not be string by default[K
  ok [1m[32m66[0m should be strictly equal[K
  ok [1m[32m67[0m null[K
  ok [1m[32m68[0m should not be string by default[K
  ok [1m[32m69[0m should be strictly equal[K
  ok [1m[32m70[0m null[K
  ok [1m[32m71[0m should be string if not buffer[K
  ok [1m[32m72[0m should be strictly equal[K
[1A[1G[1m[32m✓ test simple get()[0m[1B[1G
# test simultaneous get()[K

  ok [1m[32m73[0m undefined[K
  ok [1m[32m74[0m null[K
  ok [1m[32m75[0m should be strictly equal[K
  ok [1m[32m76[0m null[K
  ok [1m[32m77[0m should be strictly equal[K
  ok [1m[32m78[0m null[K
  ok [1m[32m79[0m should be strictly equal[K
  ok [1m[32m80[0m null[K
  ok [1m[32m81[0m should be strictly equal[K
  ok [1m[32m82[0m null[K
  ok [1m[32m83[0m should be strictly equal[K
  ok [1m[32m84[0m null[K
  ok [1m[32m85[0m should be strictly equal[K
  ok [1m[32m86[0m null[K
  ok [1m[32m87[0m should be strictly equal[K
  ok [1m[32m88[0m null[K
  ok [1m[32m89[0m should be strictly equal[K
  ok [1m[32m90[0m null[K
  ok [1m[32m91[0m should be strictly equal[K
  ok [1m[32m92[0m null[K
  ok [1m[32m93[0m should be strictly equal[K
  ok [1m[32m94[0m should error[K
  ok [1m[32m95[0m should have correct error message[K
  ok [1m[32m96[0m value is undefined[K
  ok [1m[32m97[0m should error[K
  ok [1m[32m98[0m should have correct error message[K
  ok [1m[32m99[0m value is undefined[K
  ok [1m[32m100[0m should error[K
  ok [1m[32m101[0m should have correct error message[K
  ok [1m[32m102[0m value is undefined[K
  ok [1m[32m103[0m should error[K
  ok [1m[32m104[0m should have correct error message[K
  ok [1m[32m105[0m value is undefined[K
  ok [1m[32m106[0m should error[K
  ok [1m[32m107[0m should have correct error message[K
  ok [1m[32m108[0m value is undefined[K
  ok [1m[32m109[0m should error[K
  ok [1m[32m110[0m should have correct error message[K
  ok [1m[32m111[0m value is undefined[K
  ok [1m[32m112[0m should error[K
  ok [1m[32m113[0m should have correct error message[K
  ok [1m[32m114[0m value is undefined[K
  ok [1m[32m115[0m should error[K
  ok [1m[32m116[0m should have correct error message[K
  ok [1m[32m117[0m value is undefined[K
  ok [1m[32m118[0m should error[K
  ok [1m[32m119[0m should have correct error message[K
  ok [1m[32m120[0m value is undefined[K
  ok [1m[32m121[0m should error[K
  ok [1m[32m122[0m should have correct error message[K
  ok [1m[32m123[0m value is undefined[K
[1A[1G[1m[32m✓ test simultaneous get()[0m[1B[1G
# test get() not found error is asynchronous[K

  ok [1m[32m124[0m should error[K
  ok [1m[32m125[0m should have correct error message[K
  ok [1m[32m126[0m value is undefined[K
  ok [1m[32m127[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() not found error is asynchronous[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test argument-less del() throws[K

  ok [1m[32m128[0m no-arg del() throws[K
[1A[1G[1m[32m✓ test argument-less del() throws[0m[1B[1G
# test callback-less, 1-arg, del() throws[K

  ok [1m[32m129[0m callback-less, 1-arg del() throws[K
[1A[1G[1m[32m✓ test callback-less, 1-arg, del() throws[0m[1B[1G
# test callback-less, 3-arg, del() throws[K

  ok [1m[32m130[0m callback-less, 2-arg del() throws[K
[1A[1G[1m[32m✓ test callback-less, 3-arg, del() throws[0m[1B[1G
# test simple del()[K

  ok [1m[32m131[0m undefined[K
  ok [1m[32m132[0m undefined[K
  ok [1m[32m133[0m entry properly deleted[K
  ok [1m[32m134[0m value is undefined[K
  ok [1m[32m135[0m NotFound error[K
[1A[1G[1m[32m✓ test simple del()[0m[1B[1G
# test del on non-existent key[K

  ok [1m[32m136[0m undefined[K
[1A[1G[1m[32m✓ test del on non-existent key[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test get() with null key causes error[K

  ok [1m[32m137[0m has error[K
  ok [1m[32m138[0m should be truthy[K
  ok [1m[32m139[0m correct error message[K
  ok [1m[32m140[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() with null key causes error[0m[1B[1G
# test del() with null key causes error[K

  ok [1m[32m141[0m has error[K
  ok [1m[32m142[0m should be truthy[K
  ok [1m[32m143[0m correct error message[K
  ok [1m[32m144[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test del() with null key causes error[0m[1B[1G
# test getMany() with null key causes error[K

  ok [1m[32m145[0m callback (anonymous) is asynchronous[K
  ok [1m[32m146[0m callback (anonymous) is asynchronous[K
  ok [1m[32m147[0m has error[K
  ok [1m[32m148[0m should be truthy[K
  ok [1m[32m149[0m correct error message[K
  ok [1m[32m150[0m has error[K
  ok [1m[32m151[0m should be truthy[K
  ok [1m[32m152[0m correct error message[K
[1A[1G[1m[32m✓ test getMany() with null key causes error[0m[1B[1G
# test put() with null key causes error[K

  ok [1m[32m153[0m has error[K
  ok [1m[32m154[0m should be truthy[K
  ok [1m[32m155[0m correct error message[K
  ok [1m[32m156[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with null key causes error[0m[1B[1G
# test get() with undefined key causes error[K

  ok [1m[32m157[0m has error[K
  ok [1m[32m158[0m should be truthy[K
  ok [1m[32m159[0m correct error message[K
  ok [1m[32m160[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() with undefined key causes error[0m[1B[1G
# test del() with undefined key causes error[K

  ok [1m[32m161[0m has error[K
  ok [1m[32m162[0m should be truthy[K
  ok [1m[32m163[0m correct error message[K
  ok [1m[32m164[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test del() with undefined key causes error[0m[1B[1G
# test getMany() with undefined key causes error[K

  ok [1m[32m165[0m callback (anonymous) is asynchronous[K
  ok [1m[32m166[0m callback (anonymous) is asynchronous[K
  ok [1m[32m167[0m has error[K
  ok [1m[32m168[0m should be truthy[K
  ok [1m[32m169[0m correct error message[K
  ok [1m[32m170[0m has error[K
  ok [1m[32m171[0m should be truthy[K
  ok [1m[32m172[0m correct error message[K
[1A[1G[1m[32m✓ test getMany() with undefined key causes error[0m[1B[1G
# test put() with undefined key causes error[K

  ok [1m[32m173[0m has error[K
  ok [1m[32m174[0m should be truthy[K
  ok [1m[32m175[0m correct error message[K
  ok [1m[32m176[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with undefined key causes error[0m[1B[1G
# test get() with empty String key causes error[K

  ok [1m[32m177[0m has error[K
  ok [1m[32m178[0m should be truthy[K
  ok [1m[32m179[0m correct error message[K
  ok [1m[32m180[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() with empty String key causes error[0m[1B[1G
# test del() with empty String key causes error[K

  ok [1m[32m181[0m has error[K
  ok [1m[32m182[0m should be truthy[K
  ok [1m[32m183[0m correct error message[K
  ok [1m[32m184[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test del() with empty String key causes error[0m[1B[1G
# test getMany() with empty String key causes error[K

  ok [1m[32m185[0m callback (anonymous) is asynchronous[K
  ok [1m[32m186[0m callback (anonymous) is asynchronous[K
  ok [1m[32m187[0m has error[K
  ok [1m[32m188[0m should be truthy[K
  ok [1m[32m189[0m correct error message[K
  ok [1m[32m190[0m has error[K
  ok [1m[32m191[0m should be truthy[K
  ok [1m[32m192[0m correct error message[K
[1A[1G[1m[32m✓ test getMany() with empty String key causes error[0m[1B[1G
# test put() with empty String key causes error[K

  ok [1m[32m193[0m has error[K
  ok [1m[32m194[0m should be truthy[K
  ok [1m[32m195[0m correct error message[K
  ok [1m[32m196[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with empty String key causes error[0m[1B[1G
# test get() with empty Buffer key causes error[K

  ok [1m[32m197[0m has error[K
  ok [1m[32m198[0m should be truthy[K
  ok [1m[32m199[0m correct error message[K
  ok [1m[32m200[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() with empty Buffer key causes error[0m[1B[1G
# test del() with empty Buffer key causes error[K

  ok [1m[32m201[0m has error[K
  ok [1m[32m202[0m should be truthy[K
  ok [1m[32m203[0m correct error message[K
  ok [1m[32m204[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test del() with empty Buffer key causes error[0m[1B[1G
# test getMany() with empty Buffer key causes error[K

  ok [1m[32m205[0m callback (anonymous) is asynchronous[K
  ok [1m[32m206[0m callback (anonymous) is asynchronous[K
  ok [1m[32m207[0m has error[K
  ok [1m[32m208[0m should be truthy[K
  ok [1m[32m209[0m correct error message[K
  ok [1m[32m210[0m has error[K
  ok [1m[32m211[0m should be truthy[K
  ok [1m[32m212[0m correct error message[K
[1A[1G[1m[32m✓ test getMany() with empty Buffer key causes error[0m[1B[1G
# test put() with empty Buffer key causes error[K

  ok [1m[32m213[0m has error[K
  ok [1m[32m214[0m should be truthy[K
  ok [1m[32m215[0m correct error message[K
  ok [1m[32m216[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with empty Buffer key causes error[0m[1B[1G
# test get() with empty Array key causes error[K

  ok [1m[32m217[0m has error[K
  ok [1m[32m218[0m should be truthy[K
  ok [1m[32m219[0m correct error message[K
  ok [1m[32m220[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test get() with empty Array key causes error[0m[1B[1G
# test del() with empty Array key causes error[K

  ok [1m[32m221[0m has error[K
  ok [1m[32m222[0m should be truthy[K
  ok [1m[32m223[0m correct error message[K
  ok [1m[32m224[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test del() with empty Array key causes error[0m[1B[1G
# test getMany() with empty Array key causes error[K

  ok [1m[32m225[0m callback (anonymous) is asynchronous[K
  ok [1m[32m226[0m callback (anonymous) is asynchronous[K
  ok [1m[32m227[0m has error[K
  ok [1m[32m228[0m should be truthy[K
  ok [1m[32m229[0m correct error message[K
  ok [1m[32m230[0m has error[K
  ok [1m[32m231[0m should be truthy[K
  ok [1m[32m232[0m correct error message[K
[1A[1G[1m[32m✓ test getMany() with empty Array key causes error[0m[1B[1G
# test put() with empty Array key causes error[K

  ok [1m[32m233[0m has error[K
  ok [1m[32m234[0m should be truthy[K
  ok [1m[32m235[0m correct error message[K
  ok [1m[32m236[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with empty Array key causes error[0m[1B[1G
# test put() with null value causes error[K

  ok [1m[32m237[0m has error[K
  ok [1m[32m238[0m should be truthy[K
  ok [1m[32m239[0m correct error message[K
  ok [1m[32m240[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with null value causes error[0m[1B[1G
# test put() with undefined value causes error[K

  ok [1m[32m241[0m has error[K
  ok [1m[32m242[0m should be truthy[K
  ok [1m[32m243[0m correct error message[K
  ok [1m[32m244[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put() with undefined value causes error[0m[1B[1G
# test put()/get()/del() with `0` key[K

  ok [1m[32m245[0m undefined[K
  ok [1m[32m246[0m no error, has key/value for ``0` key`[K
  ok [1m[32m247[0m is a Buffer[K
  ok [1m[32m248[0m should be strictly equal[K
  ok [1m[32m249[0m no error, deleted key/value for ``0` key`[K
  ok [1m[32m250[0m entry properly deleted[K
  ok [1m[32m251[0m should have correct error message[K
  ok [1m[32m252[0m value is undefined[K
  ok [1m[32m253[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with `0` key[0m[1B[1G
# test put()/get()/del() with long String key[K

  ok [1m[32m254[0m undefined[K
  ok [1m[32m255[0m no error, has key/value for `long String key`[K
  ok [1m[32m256[0m is a Buffer[K
  ok [1m[32m257[0m should be strictly equal[K
  ok [1m[32m258[0m no error, deleted key/value for `long String key`[K
  ok [1m[32m259[0m entry properly deleted[K
  ok [1m[32m260[0m should have correct error message[K
  ok [1m[32m261[0m value is undefined[K
  ok [1m[32m262[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with long String key[0m[1B[1G
# test put()/get()/del() with Buffer key[K

  ok [1m[32m263[0m undefined[K
  ok [1m[32m264[0m no error, has key/value for `Buffer key`[K
  ok [1m[32m265[0m is a Buffer[K
  ok [1m[32m266[0m should be strictly equal[K
  ok [1m[32m267[0m no error, deleted key/value for `Buffer key`[K
  ok [1m[32m268[0m entry properly deleted[K
  ok [1m[32m269[0m should have correct error message[K
  ok [1m[32m270[0m value is undefined[K
  ok [1m[32m271[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with Buffer key[0m[1B[1G
# test put()/get()/del() with Array value[K

  ok [1m[32m272[0m undefined[K
  ok [1m[32m273[0m no error, has key/value for `Array value`[K
  ok [1m[32m274[0m is a Buffer[K
  ok [1m[32m275[0m should be strictly equal[K
  ok [1m[32m276[0m no error, deleted key/value for `Array value`[K
  ok [1m[32m277[0m entry properly deleted[K
  ok [1m[32m278[0m should have correct error message[K
  ok [1m[32m279[0m value is undefined[K
  ok [1m[32m280[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with Array value[0m[1B[1G
# test put()/get()/del() with `false` value[K

  ok [1m[32m281[0m undefined[K
  ok [1m[32m282[0m no error, has key/value for ``false` value`[K
  ok [1m[32m283[0m is a Buffer[K
  ok [1m[32m284[0m should be strictly equal[K
  ok [1m[32m285[0m no error, deleted key/value for ``false` value`[K
  ok [1m[32m286[0m entry properly deleted[K
  ok [1m[32m287[0m should have correct error message[K
  ok [1m[32m288[0m value is undefined[K
  ok [1m[32m289[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with `false` value[0m[1B[1G
# test put()/get()/del() with `0` value[K

  ok [1m[32m290[0m undefined[K
  ok [1m[32m291[0m no error, has key/value for ``0` value`[K
  ok [1m[32m292[0m is a Buffer[K
  ok [1m[32m293[0m should be strictly equal[K
  ok [1m[32m294[0m no error, deleted key/value for ``0` value`[K
  ok [1m[32m295[0m entry properly deleted[K
  ok [1m[32m296[0m should have correct error message[K
  ok [1m[32m297[0m value is undefined[K
  ok [1m[32m298[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with `0` value[0m[1B[1G
# test put()/get()/del() with `NaN` value[K

  ok [1m[32m299[0m undefined[K
  ok [1m[32m300[0m no error, has key/value for ``NaN` value`[K
  ok [1m[32m301[0m is a Buffer[K
  ok [1m[32m302[0m should be strictly equal[K
  ok [1m[32m303[0m no error, deleted key/value for ``NaN` value`[K
  ok [1m[32m304[0m entry properly deleted[K
  ok [1m[32m305[0m should have correct error message[K
  ok [1m[32m306[0m value is undefined[K
  ok [1m[32m307[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with `NaN` value[0m[1B[1G
# test put()/get()/del() with empty String value[K

  ok [1m[32m308[0m undefined[K
  ok [1m[32m309[0m no error, has key/value for `empty String value`[K
  ok [1m[32m310[0m is a Buffer[K
  ok [1m[32m311[0m should be strictly equal[K
  ok [1m[32m312[0m no error, deleted key/value for `empty String value`[K
  ok [1m[32m313[0m entry properly deleted[K
  ok [1m[32m314[0m should have correct error message[K
  ok [1m[32m315[0m value is undefined[K
  ok [1m[32m316[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with empty String value[0m[1B[1G
# test put()/get()/del() with empty Buffer value[K

  ok [1m[32m317[0m undefined[K
  ok [1m[32m318[0m no error, has key/value for `empty Buffer value`[K
  ok [1m[32m319[0m is a Buffer[K
  ok [1m[32m320[0m should be strictly equal[K
  ok [1m[32m321[0m no error, deleted key/value for `empty Buffer value`[K
  ok [1m[32m322[0m entry properly deleted[K
  ok [1m[32m323[0m should have correct error message[K
  ok [1m[32m324[0m value is undefined[K
  ok [1m[32m325[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with empty Buffer value[0m[1B[1G
# test put()/get()/del() with empty Array value[K

  ok [1m[32m326[0m undefined[K
  ok [1m[32m327[0m no error, has key/value for `empty Array value`[K
  ok [1m[32m328[0m is a Buffer[K
  ok [1m[32m329[0m should be strictly equal[K
  ok [1m[32m330[0m no error, deleted key/value for `empty Array value`[K
  ok [1m[32m331[0m entry properly deleted[K
  ok [1m[32m332[0m should have correct error message[K
  ok [1m[32m333[0m value is undefined[K
  ok [1m[32m334[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with empty Array value[0m[1B[1G
# test put()/get()/del() with long String value[K

  ok [1m[32m335[0m undefined[K
  ok [1m[32m336[0m no error, has key/value for `long String value`[K
  ok [1m[32m337[0m is a Buffer[K
  ok [1m[32m338[0m should be strictly equal[K
  ok [1m[32m339[0m no error, deleted key/value for `long String value`[K
  ok [1m[32m340[0m entry properly deleted[K
  ok [1m[32m341[0m should have correct error message[K
  ok [1m[32m342[0m value is undefined[K
  ok [1m[32m343[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with long String value[0m[1B[1G
# test put()/get()/del() with Buffer value[K

  ok [1m[32m344[0m undefined[K
  ok [1m[32m345[0m no error, has key/value for `Buffer value`[K
  ok [1m[32m346[0m is a Buffer[K
  ok [1m[32m347[0m should be strictly equal[K
  ok [1m[32m348[0m no error, deleted key/value for `Buffer value`[K
  ok [1m[32m349[0m entry properly deleted[K
  ok [1m[32m350[0m should have correct error message[K
  ok [1m[32m351[0m value is undefined[K
  ok [1m[32m352[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with Buffer value[0m[1B[1G
# test put()/get()/del() with Array key[K

  ok [1m[32m353[0m undefined[K
  ok [1m[32m354[0m no error, has key/value for `Array key`[K
  ok [1m[32m355[0m is a Buffer[K
  ok [1m[32m356[0m should be strictly equal[K
  ok [1m[32m357[0m no error, deleted key/value for `Array key`[K
  ok [1m[32m358[0m entry properly deleted[K
  ok [1m[32m359[0m should have correct error message[K
  ok [1m[32m360[0m value is undefined[K
  ok [1m[32m361[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test put()/get()/del() with Array key[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test getMany() requires an array argument (callback)[K

  ok [1m[32m362[0m callback (anonymous) is asynchronous[K
  ok [1m[32m363[0m callback (anonymous) is asynchronous[K
  ok [1m[32m364[0m should be strictly equal[K
  ok [1m[32m365[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() requires an array argument (callback)[0m[1B[1G
# test getMany() requires an array argument (promise)[K

  ok [1m[32m366[0m should be strictly equal[K
  ok [1m[32m367[0m should be strictly equal[K
  ok [1m[32m368[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() requires an array argument (promise)[0m[1B[1G
# test getMany() support is reflected in manifest[K

  ok [1m[32m369[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() support is reflected in manifest[0m[1B[1G
# test simple getMany()[K

  ok [1m[32m370[0m undefined[K
  ok [1m[32m371[0m null[K
  ok [1m[32m372[0m got an array[K
  ok [1m[32m373[0m array has 1 element[K
  ok [1m[32m374[0m should not be string by default[K
  ok [1m[32m375[0m should be strictly equal[K
  ok [1m[32m376[0m null[K
  ok [1m[32m377[0m got an array[K
  ok [1m[32m378[0m array has 1 element[K
  ok [1m[32m379[0m should not be string by default[K
  ok [1m[32m380[0m should be strictly equal[K
  ok [1m[32m381[0m null[K
  ok [1m[32m382[0m should be string if not buffer[K
  ok [1m[32m383[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test simple getMany()[0m[1B[1G
# test getMany() with multiple keys[K

  ok [1m[32m384[0m undefined[K
  ok [1m[32m385[0m null[K
  ok [1m[32m386[0m should be deeply equivalent[K
  ok [1m[32m387[0m null[K
  ok [1m[32m388[0m maintains order of input keys[K
[1A[1G[1m[32m✓ test getMany() with multiple keys[0m[1B[1G
# test empty getMany()[K

  ok [1m[32m389[0m callback (anonymous) is asynchronous[K
  ok [1m[32m390[0m callback (anonymous) is asynchronous[K
  ok [1m[32m391[0m null[K
  ok [1m[32m392[0m should be deeply equivalent[K
  ok [1m[32m393[0m null[K
  ok [1m[32m394[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test empty getMany()[0m[1B[1G
# test not-found getMany()[K

  ok [1m[32m395[0m callback (anonymous) is asynchronous[K
  ok [1m[32m396[0m callback (anonymous) is asynchronous[K
  ok [1m[32m397[0m null[K
  ok [1m[32m398[0m should be deeply equivalent[K
  ok [1m[32m399[0m null[K
  ok [1m[32m400[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test not-found getMany()[0m[1B[1G
# test getMany() with promise[K

  ok [1m[32m401[0m should be deeply equivalent[K
  ok [1m[32m402[0m should be deeply equivalent[K
  ok [1m[32m403[0m should be deeply equivalent[K
  ok [1m[32m404[0m should be deeply equivalent[K
  ok [1m[32m405[0m should be deeply equivalent[K
  ok [1m[32m406[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test getMany() with promise[0m[1B[1G
# test simultaneous getMany()[K

  ok [1m[32m407[0m undefined[K
  ok [1m[32m408[0m null[K
  ok [1m[32m409[0m should be strictly equal[K
  ok [1m[32m410[0m should be strictly equal[K
  ok [1m[32m411[0m null[K
  ok [1m[32m412[0m should be strictly equal[K
  ok [1m[32m413[0m should be strictly equal[K
  ok [1m[32m414[0m null[K
  ok [1m[32m415[0m should be strictly equal[K
  ok [1m[32m416[0m should be strictly equal[K
  ok [1m[32m417[0m null[K
  ok [1m[32m418[0m should be strictly equal[K
  ok [1m[32m419[0m should be strictly equal[K
  ok [1m[32m420[0m null[K
  ok [1m[32m421[0m should be strictly equal[K
  ok [1m[32m422[0m should be strictly equal[K
  ok [1m[32m423[0m null[K
  ok [1m[32m424[0m should be strictly equal[K
  ok [1m[32m425[0m should be strictly equal[K
  ok [1m[32m426[0m null[K
  ok [1m[32m427[0m should be strictly equal[K
  ok [1m[32m428[0m should be strictly equal[K
  ok [1m[32m429[0m null[K
  ok [1m[32m430[0m should be strictly equal[K
  ok [1m[32m431[0m should be strictly equal[K
  ok [1m[32m432[0m null[K
  ok [1m[32m433[0m should be strictly equal[K
  ok [1m[32m434[0m should be strictly equal[K
  ok [1m[32m435[0m null[K
  ok [1m[32m436[0m should be strictly equal[K
  ok [1m[32m437[0m should be strictly equal[K
  ok [1m[32m438[0m null[K
  ok [1m[32m439[0m should be deeply equivalent[K
  ok [1m[32m440[0m null[K
  ok [1m[32m441[0m should be deeply equivalent[K
  ok [1m[32m442[0m null[K
  ok [1m[32m443[0m should be deeply equivalent[K
  ok [1m[32m444[0m null[K
  ok [1m[32m445[0m should be deeply equivalent[K
  ok [1m[32m446[0m null[K
  ok [1m[32m447[0m should be deeply equivalent[K
  ok [1m[32m448[0m null[K
  ok [1m[32m449[0m should be deeply equivalent[K
  ok [1m[32m450[0m null[K
  ok [1m[32m451[0m should be deeply equivalent[K
  ok [1m[32m452[0m null[K
  ok [1m[32m453[0m should be deeply equivalent[K
  ok [1m[32m454[0m null[K
  ok [1m[32m455[0m should be deeply equivalent[K
  ok [1m[32m456[0m null[K
  ok [1m[32m457[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test simultaneous getMany()[0m[1B[1G
# test getMany() on new db[K

  ok [1m[32m458[0m should be strictly equal[K
  ok [1m[32m459[0m should be strictly equal[K
  ok [1m[32m460[0m (unnamed assert)[K
  ok [1m[32m461[0m should be strictly equal[K
  ok [1m[32m462[0m should be strictly equal[K
  ok [1m[32m463[0m (unnamed assert)[K
  ok [1m[32m464[0m callback (anonymous) is asynchronous[K
  ok [1m[32m465[0m callback (anonymous) is asynchronous[K
  ok [1m[32m466[0m callback (anonymous) is asynchronous[K
  ok [1m[32m467[0m callback (anonymous) is asynchronous[K
  ok [1m[32m468[0m should be strictly equal[K
  ok [1m[32m469[0m should be strictly equal[K
  ok [1m[32m470[0m undefined[K
  ok [1m[32m471[0m should be strictly equal[K
  ok [1m[32m472[0m should be strictly equal[K
  ok [1m[32m473[0m should be strictly equal[K
  ok [1m[32m474[0m should be strictly equal[K
  ok [1m[32m475[0m undefined[K
  ok [1m[32m476[0m should be strictly equal[K
  ok [1m[32m477[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() on new db[0m[1B[1G
# test getMany() on opening db[K

  ok [1m[32m478[0m callback (open) is asynchronous[K
  ok [1m[32m479[0m callback (anonymous) is asynchronous[K
  ok [1m[32m480[0m callback (open) is asynchronous[K
  ok [1m[32m481[0m callback (anonymous) is asynchronous[K
  ok [1m[32m482[0m undefined[K
  ok [1m[32m483[0m should be strictly equal[K
  ok [1m[32m484[0m should be strictly equal[K
  ok [1m[32m485[0m undefined[K
  ok [1m[32m486[0m should be strictly equal[K
  ok [1m[32m487[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() on opening db[0m[1B[1G
# test getMany() on closed db[K

  ok [1m[32m488[0m undefined[K
  ok [1m[32m489[0m should be strictly equal[K
  ok [1m[32m490[0m undefined[K
  ok [1m[32m491[0m should be strictly equal[K
  ok [1m[32m492[0m undefined[K
  ok [1m[32m493[0m should be strictly equal[K
  ok [1m[32m494[0m callback (anonymous) is asynchronous[K
  ok [1m[32m495[0m undefined[K
  ok [1m[32m496[0m should be strictly equal[K
  ok [1m[32m497[0m callback (anonymous) is asynchronous[K
  ok [1m[32m498[0m should be strictly equal[K
  ok [1m[32m499[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() on closed db[0m[1B[1G
# test getMany() on closing db[K

  ok [1m[32m500[0m undefined[K
  ok [1m[32m501[0m callback (anonymous) is asynchronous[K
  ok [1m[32m502[0m undefined[K
  ok [1m[32m503[0m callback (anonymous) is asynchronous[K
  ok [1m[32m504[0m undefined[K
  ok [1m[32m505[0m should be strictly equal[K
  ok [1m[32m506[0m undefined[K
  ok [1m[32m507[0m should be strictly equal[K
[1A[1G[1m[32m✓ test getMany() on closing db[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test callback-less, 2-arg, batch() throws[K

  ok [1m[32m508[0m callback-less, 2-arg batch() throws[K
[1A[1G[1m[32m✓ test callback-less, 2-arg, batch() throws[0m[1B[1G
# test batch() with missing `value`[K

  ok [1m[32m509[0m correct error message[K
[1A[1G[1m[32m✓ test batch() with missing `value`[0m[1B[1G
# test batch() with null or undefined `value`[K

  ok [1m[32m510[0m correct error message[K
  ok [1m[32m511[0m correct error message[K
[1A[1G[1m[32m✓ test batch() with null or undefined `value`[0m[1B[1G
# test batch() with missing `key`[K

  ok [1m[32m512[0m got error[K
  ok [1m[32m513[0m correct error message[K
  ok [1m[32m514[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with missing `key`[0m[1B[1G
# test batch() with null or undefined `key`[K

  ok [1m[32m515[0m got error[K
  ok [1m[32m516[0m correct error message[K
  ok [1m[32m517[0m callback is asynchronous[K
  ok [1m[32m518[0m got error[K
  ok [1m[32m519[0m correct error message[K
  ok [1m[32m520[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with null or undefined `key`[0m[1B[1G
# test batch() with empty `key`[K

  ok [1m[32m521[0m got error[K
  ok [1m[32m522[0m correct error message[K
  ok [1m[32m523[0m callback is asynchronous[K
  ok [1m[32m524[0m got error[K
  ok [1m[32m525[0m correct error message[K
  ok [1m[32m526[0m callback is asynchronous[K
  ok [1m[32m527[0m got error[K
  ok [1m[32m528[0m correct error message[K
  ok [1m[32m529[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with empty `key`[0m[1B[1G
# test batch() with missing `key` and `value`[K

  ok [1m[32m530[0m got error[K
  ok [1m[32m531[0m correct error message[K
  ok [1m[32m532[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with missing `key` and `value`[0m[1B[1G
# test batch() with missing `type`[K

  ok [1m[32m533[0m got error[K
  ok [1m[32m534[0m correct error message[K
  ok [1m[32m535[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with missing `type`[0m[1B[1G
# test batch() with wrong `type`[K

  ok [1m[32m536[0m got error[K
  ok [1m[32m537[0m correct error message[K
  ok [1m[32m538[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with wrong `type`[0m[1B[1G
# test batch() with missing array[K

  ok [1m[32m539[0m got error[K
  ok [1m[32m540[0m correct error message[K
  ok [1m[32m541[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with missing array[0m[1B[1G
# test batch() with undefined array[K

  ok [1m[32m542[0m got error[K
  ok [1m[32m543[0m correct error message[K
  ok [1m[32m544[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with undefined array[0m[1B[1G
# test batch() with null array[K

  ok [1m[32m545[0m got error[K
  ok [1m[32m546[0m correct error message[K
  ok [1m[32m547[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with null array[0m[1B[1G
# test batch() with null options[K

  ok [1m[32m548[0m undefined[K
[1A[1G[1m[32m✓ test batch() with null options[0m[1B[1G
# test batch() with null element[K

  ok [1m[32m549[0m got error[K
  ok [1m[32m550[0m correct error message[K
  ok [1m[32m551[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with null element[0m[1B[1G
# test batch() with undefined element[K

  ok [1m[32m552[0m got error[K
  ok [1m[32m553[0m correct error message[K
  ok [1m[32m554[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with undefined element[0m[1B[1G
# test batch() with number element[K

  ok [1m[32m555[0m got error[K
  ok [1m[32m556[0m correct error message[K
  ok [1m[32m557[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with number element[0m[1B[1G
# test batch() with boolean element[K

  ok [1m[32m558[0m got error[K
  ok [1m[32m559[0m correct error message[K
  ok [1m[32m560[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with boolean element[0m[1B[1G
# test batch() with empty array[K

  ok [1m[32m561[0m no error from batch()[K
  ok [1m[32m562[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch() with empty array[0m[1B[1G
# test simple batch()[K

  ok [1m[32m563[0m undefined[K
  ok [1m[32m564[0m null[K
  ok [1m[32m565[0m should be strictly equal[K
[1A[1G[1m[32m✓ test simple batch()[0m[1B[1G
# test multiple batch()[K

  ok [1m[32m566[0m undefined[K
  ok [1m[32m567[0m null[K
  ok [1m[32m568[0m should be strictly equal[K
  ok [1m[32m569[0m entry not found[K
  ok [1m[32m570[0m value is undefined[K
  ok [1m[32m571[0m NotFound error[K
  ok [1m[32m572[0m null[K
  ok [1m[32m573[0m should be strictly equal[K
[1A[1G[1m[32m✓ test multiple batch()[0m[1B[1G
# test multiple batch()[K

  ok [1m[32m574[0m should error[K
  ok [1m[32m575[0m callback is asynchronous[K
  ok [1m[32m576[0m should not be found[K
  ok [1m[32m577[0m should not be found[K
[1A[1G[1m[32m✓ test multiple batch()[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test batch has db reference[K

  ok [1m[32m578[0m should be truthy[K
[1A[1G[1m[32m✓ test batch has db reference[0m[1B[1G
# test batch#put() with missing `value`[K

  ok [1m[32m579[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() with missing `value`[0m[1B[1G
# test batch#put() with missing `key`[K

  ok [1m[32m580[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() with missing `key`[0m[1B[1G
# test batch#put() with null `key`[K

  ok [1m[32m581[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() with null `key`[0m[1B[1G
# test batch#put() with missing `key` and `value`[K

  ok [1m[32m582[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() with missing `key` and `value`[0m[1B[1G
# test batch#put() with null or undefined `value`[K

  ok [1m[32m583[0m correct error message[K
  ok [1m[32m584[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() with null or undefined `value`[0m[1B[1G
# test batch#del() with missing `key`[K

  ok [1m[32m585[0m correct error message[K
[1A[1G[1m[32m✓ test batch#del() with missing `key`[0m[1B[1G
# test batch#del() with null or undefined `key`[K

  ok [1m[32m586[0m correct error message[K
  ok [1m[32m587[0m correct error message[K
[1A[1G[1m[32m✓ test batch#del() with null or undefined `key`[0m[1B[1G
# test batch#clear() doesn't throw[K

[1A[1G[1m[32m✓ test batch#clear() doesn't throw[0m[1B[1G
# test batch#write() with no callback[K

  ok [1m[32m588[0m correct error message[K
[1A[1G[1m[32m✓ test batch#write() with no callback[0m[1B[1G
# test batch#put() after write()[K

  ok [1m[32m589[0m correct error message[K
[1A[1G[1m[32m✓ test batch#put() after write()[0m[1B[1G
# test batch#del() after write()[K

  ok [1m[32m590[0m correct error message[K
[1A[1G[1m[32m✓ test batch#del() after write()[0m[1B[1G
# test batch#clear() after write()[K

  ok [1m[32m591[0m correct error message[K
[1A[1G[1m[32m✓ test batch#clear() after write()[0m[1B[1G
# test batch#write() after write()[K

  ok [1m[32m592[0m correct error message[K
[1A[1G[1m[32m✓ test batch#write() after write()[0m[1B[1G
# test serialize object[K

  ok [1m[32m593[0m .key is set for .put and .del operations[K
  ok [1m[32m594[0m .value is set for .put operation[K
  ok [1m[32m595[0m .key is set for .put and .del operations[K
[1A[1G[1m[32m✓ test serialize object[0m[1B[1G
# test custom _serialize*[K

  ok [1m[32m596[0m should be deeply equivalent[K
  ok [1m[32m597[0m should be deeply equivalent[K
  ok [1m[32m598[0m should be deeply equivalent[K
  ok [1m[32m599[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test custom _serialize*[0m[1B[1G
# test batch#write() with no operations[K

  ok [1m[32m600[0m no error from write()[K
  ok [1m[32m601[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test batch#write() with no operations[0m[1B[1G
# test basic batch[K

  ok [1m[32m602[0m undefined[K
  ok [1m[32m603[0m undefined[K
  ok [1m[32m604[0m undefined[K
  ok [1m[32m605[0m correct number of entries[K
  ok [1m[32m606[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test basic batch[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test iterator has db reference[K

  ok [1m[32m607[0m should be truthy[K
[1A[1G[1m[32m✓ test iterator has db reference[0m[1B[1G
# test iterator#next returns this in callback mode[K

  ok [1m[32m608[0m should be truthy[K
[1A[1G[1m[32m✓ test iterator#next returns this in callback mode[0m[1B[1G
# test twice iterator#end() callback with error[K

  ok [1m[32m609[0m undefined[K
  ok [1m[32m610[0m returned error[K
  ok [1m[32m611[0m correct error[K
  ok [1m[32m612[0m should be strictly equal[K
  ok [1m[32m613[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test twice iterator#end() callback with error[0m[1B[1G
# test iterator#next after iterator#end() callback with error[K

  ok [1m[32m614[0m undefined[K
  ok [1m[32m615[0m returned error[K
  ok [1m[32m616[0m correct error[K
  ok [1m[32m617[0m correct message[K
  ok [1m[32m618[0m callback is asynchronous[K
[1A[1G[1m[32m✓ test iterator#next after iterator#end() callback with error[0m[1B[1G
# test twice iterator#next() throws[K

  ok [1m[32m619[0m undefined[K
  ok [1m[32m620[0m returned error[K
  ok [1m[32m621[0m correct error[K
  ok [1m[32m622[0m should be strictly equal[K
  ok [1m[32m623[0m callback is asynchronous[K
  ok [1m[32m624[0m undefined[K
[1A[1G[1m[32m✓ test twice iterator#next() throws[0m[1B[1G
# test simple iterator()[K

  ok [1m[32m625[0m undefined[K
  ok [1m[32m626[0m null[K
  ok [1m[32m627[0m key argument is a Buffer[K
  ok [1m[32m628[0m value argument is a Buffer[K
  ok [1m[32m629[0m correct key[K
  ok [1m[32m630[0m correct value[K
  ok [1m[32m631[0m null[K
  ok [1m[32m632[0m key argument is a Buffer[K
  ok [1m[32m633[0m value argument is a Buffer[K
  ok [1m[32m634[0m correct key[K
  ok [1m[32m635[0m correct value[K
  ok [1m[32m636[0m null[K
  ok [1m[32m637[0m key argument is a Buffer[K
  ok [1m[32m638[0m value argument is a Buffer[K
  ok [1m[32m639[0m correct key[K
  ok [1m[32m640[0m correct value[K
  ok [1m[32m641[0m undefined[K
  ok [1m[32m642[0m err argument is nullish[K
  ok [1m[32m643[0m key argument is undefined[K
  ok [1m[32m644[0m value argument is undefined[K
  ok [1m[32m645[0m correct number of entries[K
[1A[1G[1m[32m✓ test simple iterator()[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test full data collection[K

  ok [1m[32m646[0m undefined[K
  ok [1m[32m647[0m correct number of entries[K
  ok [1m[32m648[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test full data collection[0m[1B[1G
# test full data collection (flipped)[K

  ok [1m[32m649[0m undefined[K
  ok [1m[32m650[0m correct number of entries[K
  ok [1m[32m651[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test full data collection (flipped)[0m[1B[1G
# test iterator with reverse=true[K

  ok [1m[32m652[0m undefined[K
  ok [1m[32m653[0m correct number of entries[K
  ok [1m[32m654[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with reverse=true[0m[1B[1G
# test iterator with gte=00[K

  ok [1m[32m655[0m undefined[K
  ok [1m[32m656[0m correct number of entries[K
  ok [1m[32m657[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=00[0m[1B[1G
# test iterator with gte=00 (flipped)[K

  ok [1m[32m658[0m undefined[K
  ok [1m[32m659[0m correct number of entries[K
  ok [1m[32m660[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=00 (flipped)[0m[1B[1G
# test iterator with gte=50[K

  ok [1m[32m661[0m undefined[K
  ok [1m[32m662[0m correct number of entries[K
  ok [1m[32m663[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=50[0m[1B[1G
# test iterator with gte=50 (flipped)[K

  ok [1m[32m664[0m undefined[K
  ok [1m[32m665[0m correct number of entries[K
  ok [1m[32m666[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=50 (flipped)[0m[1B[1G
# test iterator with lte=50 and reverse=true[K

  ok [1m[32m667[0m undefined[K
  ok [1m[32m668[0m correct number of entries[K
  ok [1m[32m669[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50 and reverse=true[0m[1B[1G
# test iterator with gte=49.5 (midway)[K

  ok [1m[32m670[0m undefined[K
  ok [1m[32m671[0m correct number of entries[K
  ok [1m[32m672[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=49.5 (midway)[0m[1B[1G
# test iterator with gte=49.5 (midway) (flipped)[K

  ok [1m[32m673[0m undefined[K
  ok [1m[32m674[0m correct number of entries[K
  ok [1m[32m675[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G
# test iterator with gte=49999 (midway)[K

  ok [1m[32m676[0m undefined[K
  ok [1m[32m677[0m correct number of entries[K
  ok [1m[32m678[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=49999 (midway)[0m[1B[1G
# test iterator with gte=49999 (midway) (flipped)[K

  ok [1m[32m679[0m undefined[K
  ok [1m[32m680[0m correct number of entries[K
  ok [1m[32m681[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G
# test iterator with lte=49.5 (midway) and reverse=true[K

  ok [1m[32m682[0m undefined[K
  ok [1m[32m683[0m correct number of entries[K
  ok [1m[32m684[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G
# test iterator with lt=49.5 (midway) and reverse=true[K

  ok [1m[32m685[0m undefined[K
  ok [1m[32m686[0m correct number of entries[K
  ok [1m[32m687[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G
# test iterator with lt=50 and reverse=true[K

  ok [1m[32m688[0m undefined[K
  ok [1m[32m689[0m correct number of entries[K
  ok [1m[32m690[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=50 and reverse=true[0m[1B[1G
# test iterator with lte=50[K

  ok [1m[32m691[0m undefined[K
  ok [1m[32m692[0m correct number of entries[K
  ok [1m[32m693[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50[0m[1B[1G
# test iterator with lte=50 (flipped)[K

  ok [1m[32m694[0m undefined[K
  ok [1m[32m695[0m correct number of entries[K
  ok [1m[32m696[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50 (flipped)[0m[1B[1G
# test iterator with lte=50.5 (midway)[K

  ok [1m[32m697[0m undefined[K
  ok [1m[32m698[0m correct number of entries[K
  ok [1m[32m699[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50.5 (midway)[0m[1B[1G
# test iterator with lte=50.5 (midway) (flipped)[K

  ok [1m[32m700[0m undefined[K
  ok [1m[32m701[0m correct number of entries[K
  ok [1m[32m702[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G
# test iterator with lte=50555 (midway)[K

  ok [1m[32m703[0m undefined[K
  ok [1m[32m704[0m correct number of entries[K
  ok [1m[32m705[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50555 (midway)[0m[1B[1G
# test iterator with lte=50555 (midway) (flipped)[K

  ok [1m[32m706[0m undefined[K
  ok [1m[32m707[0m correct number of entries[K
  ok [1m[32m708[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G
# test iterator with lt=50555 (midway)[K

  ok [1m[32m709[0m undefined[K
  ok [1m[32m710[0m correct number of entries[K
  ok [1m[32m711[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=50555 (midway)[0m[1B[1G
# test iterator with lt=50555 (midway) (flipped)[K

  ok [1m[32m712[0m undefined[K
  ok [1m[32m713[0m correct number of entries[K
  ok [1m[32m714[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G
# test iterator with gte=50.5 (midway) and reverse=true[K

  ok [1m[32m715[0m undefined[K
  ok [1m[32m716[0m correct number of entries[K
  ok [1m[32m717[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G
# test iterator with gt=50.5 (midway) and reverse=true[K

  ok [1m[32m718[0m undefined[K
  ok [1m[32m719[0m correct number of entries[K
  ok [1m[32m720[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G
# test iterator with gt=50 and reverse=true[K

  ok [1m[32m721[0m undefined[K
  ok [1m[32m722[0m correct number of entries[K
  ok [1m[32m723[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt=50 and reverse=true[0m[1B[1G
# test iterator with lte=0[K

  ok [1m[32m724[0m undefined[K
  ok [1m[32m725[0m correct number of entries[K
  ok [1m[32m726[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=0[0m[1B[1G
# test iterator with lte=0 (flipped)[K

  ok [1m[32m727[0m undefined[K
  ok [1m[32m728[0m correct number of entries[K
  ok [1m[32m729[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte=0 (flipped)[0m[1B[1G
# test iterator with lt=0[K

  ok [1m[32m730[0m undefined[K
  ok [1m[32m731[0m correct number of entries[K
  ok [1m[32m732[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=0[0m[1B[1G
# test iterator with lt=0 (flipped)[K

  ok [1m[32m733[0m undefined[K
  ok [1m[32m734[0m correct number of entries[K
  ok [1m[32m735[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt=0 (flipped)[0m[1B[1G
# test iterator with gte=30 and lte=70[K

  ok [1m[32m736[0m undefined[K
  ok [1m[32m737[0m correct number of entries[K
  ok [1m[32m738[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=30 and lte=70[0m[1B[1G
# test iterator with gte=30 and lte=70 (flipped)[K

  ok [1m[32m739[0m undefined[K
  ok [1m[32m740[0m correct number of entries[K
  ok [1m[32m741[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G
# test iterator with gt=29 and lt=71[K

  ok [1m[32m742[0m undefined[K
  ok [1m[32m743[0m correct number of entries[K
  ok [1m[32m744[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt=29 and lt=71[0m[1B[1G
# test iterator with gt=29 and lt=71 (flipped)[K

  ok [1m[32m745[0m undefined[K
  ok [1m[32m746[0m correct number of entries[K
  ok [1m[32m747[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G
# test iterator with gte=30 and lte=70 and reverse=true[K

  ok [1m[32m748[0m undefined[K
  ok [1m[32m749[0m correct number of entries[K
  ok [1m[32m750[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G
# test iterator with gt=29 and lt=71 and reverse=true[K

  ok [1m[32m751[0m undefined[K
  ok [1m[32m752[0m correct number of entries[K
  ok [1m[32m753[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G
# test iterator with limit=20[K

  ok [1m[32m754[0m undefined[K
  ok [1m[32m755[0m correct number of entries[K
  ok [1m[32m756[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=20[0m[1B[1G
# test iterator with limit=20 and gte=20[K

  ok [1m[32m757[0m undefined[K
  ok [1m[32m758[0m correct number of entries[K
  ok [1m[32m759[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=20 and gte=20[0m[1B[1G
# test iterator with limit=20 and reverse=true[K

  ok [1m[32m760[0m undefined[K
  ok [1m[32m761[0m correct number of entries[K
  ok [1m[32m762[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=20 and reverse=true[0m[1B[1G
# test iterator with limit=20 and lte=79 and reverse=true[K

  ok [1m[32m763[0m undefined[K
  ok [1m[32m764[0m correct number of entries[K
  ok [1m[32m765[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G
# test iterator with limit=-1 should iterate over whole database[K

  ok [1m[32m766[0m undefined[K
  ok [1m[32m767[0m correct number of entries[K
  ok [1m[32m768[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=-1 should iterate over whole database[0m[1B[1G
# test iterator with limit=0 should not iterate over anything[K

  ok [1m[32m769[0m undefined[K
  ok [1m[32m770[0m correct number of entries[K
  ok [1m[32m771[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with limit=0 should not iterate over anything[0m[1B[1G
# test iterator with lte after limit[K

  ok [1m[32m772[0m undefined[K
  ok [1m[32m773[0m correct number of entries[K
  ok [1m[32m774[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte after limit[0m[1B[1G
# test iterator with lte before limit[K

  ok [1m[32m775[0m undefined[K
  ok [1m[32m776[0m correct number of entries[K
  ok [1m[32m777[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte before limit[0m[1B[1G
# test iterator with gte after database end[K

  ok [1m[32m778[0m undefined[K
  ok [1m[32m779[0m correct number of entries[K
  ok [1m[32m780[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte after database end[0m[1B[1G
# test iterator with gte after database end (flipped)[K

  ok [1m[32m781[0m undefined[K
  ok [1m[32m782[0m correct number of entries[K
  ok [1m[32m783[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gte after database end (flipped)[0m[1B[1G
# test iterator with gt after database end[K

  ok [1m[32m784[0m undefined[K
  ok [1m[32m785[0m correct number of entries[K
  ok [1m[32m786[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt after database end[0m[1B[1G
# test iterator with gt after database end (flipped)[K

  ok [1m[32m787[0m undefined[K
  ok [1m[32m788[0m correct number of entries[K
  ok [1m[32m789[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with gt after database end (flipped)[0m[1B[1G
# test iterator with lte after database end and reverse=true[K

  ok [1m[32m790[0m undefined[K
  ok [1m[32m791[0m correct number of entries[K
  ok [1m[32m792[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte after database end and reverse=true[0m[1B[1G
# test iterator with lt after database end[K

  ok [1m[32m793[0m undefined[K
  ok [1m[32m794[0m correct number of entries[K
  ok [1m[32m795[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt after database end[0m[1B[1G
# test iterator with lt after database end (flipped)[K

  ok [1m[32m796[0m undefined[K
  ok [1m[32m797[0m correct number of entries[K
  ok [1m[32m798[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt after database end (flipped)[0m[1B[1G
# test iterator with lt at database end[K

  ok [1m[32m799[0m undefined[K
  ok [1m[32m800[0m correct number of entries[K
  ok [1m[32m801[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt at database end[0m[1B[1G
# test iterator with lt at database end (flipped)[K

  ok [1m[32m802[0m undefined[K
  ok [1m[32m803[0m correct number of entries[K
  ok [1m[32m804[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt at database end (flipped)[0m[1B[1G
# test iterator with lte at database end[K

  ok [1m[32m805[0m undefined[K
  ok [1m[32m806[0m correct number of entries[K
  ok [1m[32m807[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte at database end[0m[1B[1G
# test iterator with lte at database end (flipped)[K

  ok [1m[32m808[0m undefined[K
  ok [1m[32m809[0m correct number of entries[K
  ok [1m[32m810[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte at database end (flipped)[0m[1B[1G
# test iterator with lt before database end[K

  ok [1m[32m811[0m undefined[K
  ok [1m[32m812[0m correct number of entries[K
  ok [1m[32m813[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt before database end[0m[1B[1G
# test iterator with lt before database end (flipped)[K

  ok [1m[32m814[0m undefined[K
  ok [1m[32m815[0m correct number of entries[K
  ok [1m[32m816[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt before database end (flipped)[0m[1B[1G
# test iterator with lte before database end[K

  ok [1m[32m817[0m undefined[K
  ok [1m[32m818[0m correct number of entries[K
  ok [1m[32m819[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte before database end[0m[1B[1G
# test iterator with lte before database end (flipped)[K

  ok [1m[32m820[0m undefined[K
  ok [1m[32m821[0m correct number of entries[K
  ok [1m[32m822[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte before database end (flipped)[0m[1B[1G
# test iterator with lte and gte after database and reverse=true[K

  ok [1m[32m823[0m undefined[K
  ok [1m[32m824[0m correct number of entries[K
  ok [1m[32m825[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lte and gte after database and reverse=true[0m[1B[1G
# test iterator with lt and gt after database and reverse=true[K

  ok [1m[32m826[0m undefined[K
  ok [1m[32m827[0m correct number of entries[K
  ok [1m[32m828[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ test iterator with lt and gt after database and reverse=true[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setup[K

  ok [1m[32m829[0m no open() error[K
  ok [1m[32m830[0m no batch() error[K
[1A[1G[1m[32m✓ setup[0m[1B[1G
# for await...of db.iterator()[K

  ok [1m[32m831[0m ended[K
  ok [1m[32m832[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ for await...of db.iterator()[0m[1B[1G
# for await...of db.iterator() does not permit reuse[K

  ok [1m[32m833[0m nexted[K
  ok [1m[32m834[0m nexted[K
  ok [1m[32m835[0m should be strictly equal[K
[1A[1G[1m[32m✓ for await...of db.iterator() does not permit reuse[0m[1B[1G
# for await...of db.iterator() ends on user error[K

  ok [1m[32m836[0m should be strictly equal[K
  ok [1m[32m837[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() ends on user error[0m[1B[1G
# for await...of db.iterator() with user error and end() error[K

  ok [1m[32m838[0m no real error from end()[K
  ok [1m[32m839[0m should be strictly equal[K
  ok [1m[32m840[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() with user error and end() error[0m[1B[1G
# for await...of db.iterator() ends on iterator error[K

  ok [1m[32m841[0m nexted[K
  ok [1m[32m842[0m should be strictly equal[K
  ok [1m[32m843[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() ends on iterator error[0m[1B[1G
# for await...of db.iterator() with iterator error and end() error[K

  ok [1m[32m844[0m nexted[K
  ok [1m[32m845[0m no real error from end()[K
  ok [1m[32m846[0m should be strictly equal[K
  ok [1m[32m847[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() with iterator error and end() error[0m[1B[1G
# for await...of db.iterator() ends on user break[K

  ok [1m[32m848[0m got a chance to break[K
  ok [1m[32m849[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() ends on user break[0m[1B[1G
# for await...of db.iterator() with user break and end() error[K

  ok [1m[32m850[0m got a chance to break[K
  ok [1m[32m851[0m no real error from end()[K
  ok [1m[32m852[0m should be strictly equal[K
  ok [1m[32m853[0m ended[K
[1A[1G[1m[32m✓ for await...of db.iterator() with user break and end() error[0m[1B[1G
# teardown[K

  ok [1m[32m854[0m no close() error[K
[1A[1G[1m[32m✓ teardown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# iterator#seek() throws if next() has not completed[K

  ok [1m[32m855[0m no error from open()[K
  ok [1m[32m856[0m got error[K
  ok [1m[32m857[0m no error from next()[K
  ok [1m[32m858[0m next is asynchronous[K
  ok [1m[32m859[0m no error from done()[K
  ok [1m[32m860[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() throws if next() has not completed[0m[1B[1G
# iterator#seek() throws after end()[K

  ok [1m[32m861[0m no error from open()[K
  ok [1m[32m862[0m no error from next()[K
  ok [1m[32m863[0m no error from end()[K
  ok [1m[32m864[0m got error[K
  ok [1m[32m865[0m no error from done()[K
  ok [1m[32m866[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() throws after end()[0m[1B[1G
# iterator#seek() to string target[K

  ok [1m[32m867[0m no error from open()[K
  ok [1m[32m868[0m no error from batch()[K
  ok [1m[32m869[0m no error[K
  ok [1m[32m870[0m key matches[K
  ok [1m[32m871[0m value matches[K
  ok [1m[32m872[0m no error[K
  ok [1m[32m873[0m end of iterator[K
  ok [1m[32m874[0m end of iterator[K
  ok [1m[32m875[0m no error from done()[K
  ok [1m[32m876[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() to string target[0m[1B[1G
# iterator#seek() to buffer target[K

  ok [1m[32m877[0m no error from open()[K
  ok [1m[32m878[0m no error from batch()[K
  ok [1m[32m879[0m no error from next()[K
  ok [1m[32m880[0m key matches[K
  ok [1m[32m881[0m value matches[K
  ok [1m[32m882[0m no error from next()[K
  ok [1m[32m883[0m end of iterator[K
  ok [1m[32m884[0m end of iterator[K
  ok [1m[32m885[0m no error from done()[K
  ok [1m[32m886[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() to buffer target[0m[1B[1G
# iterator#seek() on reverse iterator[K

  ok [1m[32m887[0m no error from open()[K
  ok [1m[32m888[0m no error from batch()[K
  ok [1m[32m889[0m no error[K
  ok [1m[32m890[0m key matches[K
  ok [1m[32m891[0m value matches[K
  ok [1m[32m892[0m no error from done()[K
  ok [1m[32m893[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() on reverse iterator[0m[1B[1G
# iterator#seek() to out of range target[K

  ok [1m[32m894[0m no error from open()[K
  ok [1m[32m895[0m no error from batch()[K
  ok [1m[32m896[0m no error[K
  ok [1m[32m897[0m end of iterator[K
  ok [1m[32m898[0m end of iterator[K
  ok [1m[32m899[0m no error from done()[K
  ok [1m[32m900[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() to out of range target[0m[1B[1G
# iterator#seek() on reverse iterator to out of range target[K

  ok [1m[32m901[0m no error from open()[K
  ok [1m[32m902[0m no error from batch()[K
  ok [1m[32m903[0m no error[K
  ok [1m[32m904[0m should be deeply equivalent[K
  ok [1m[32m905[0m should be deeply equivalent[K
  ok [1m[32m906[0m no error from done()[K
  ok [1m[32m907[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() on reverse iterator to out of range target[0m[1B[1G
# iterator#seek() respects range[K

  ok [1m[32m908[0m no error from open()[K
  ok [1m[32m909[0m no error from batch()[K
  ok [1m[32m910[0m no error from next()[K
  ok [1m[32m911[0m seek(4) on {"gt":"5"} yields undefined[K
  ok [1m[32m912[0m no error from next()[K
  ok [1m[32m913[0m seek(5) on {"gt":"5"} yields undefined[K
  ok [1m[32m914[0m no error from next()[K
  ok [1m[32m915[0m seek(6) on {"gt":"5"} yields 6[K
  ok [1m[32m916[0m no error from next()[K
  ok [1m[32m917[0m seek(4) on {"gte":"5"} yields undefined[K
  ok [1m[32m918[0m no error from next()[K
  ok [1m[32m919[0m seek(5) on {"gte":"5"} yields 5[K
  ok [1m[32m920[0m no error from next()[K
  ok [1m[32m921[0m seek(6) on {"gte":"5"} yields 6[K
  ok [1m[32m922[0m no error from next()[K
  ok [1m[32m923[0m seek(4) on {"lt":"5"} yields 4[K
  ok [1m[32m924[0m no error from next()[K
  ok [1m[32m925[0m seek(5) on {"lt":"5"} yields undefined[K
  ok [1m[32m926[0m no error from next()[K
  ok [1m[32m927[0m seek(6) on {"lt":"5"} yields undefined[K
  ok [1m[32m928[0m no error from next()[K
  ok [1m[32m929[0m seek(4) on {"lte":"5"} yields 4[K
  ok [1m[32m930[0m no error from next()[K
  ok [1m[32m931[0m seek(5) on {"lte":"5"} yields 5[K
  ok [1m[32m932[0m no error from next()[K
  ok [1m[32m933[0m seek(6) on {"lte":"5"} yields undefined[K
  ok [1m[32m934[0m no error from next()[K
  ok [1m[32m935[0m seek(4) on {"lt":"5","reverse":true} yields 4[K
  ok [1m[32m936[0m no error from next()[K
  ok [1m[32m937[0m seek(5) on {"lt":"5","reverse":true} yields undefined[K
  ok [1m[32m938[0m no error from next()[K
  ok [1m[32m939[0m seek(6) on {"lt":"5","reverse":true} yields undefined[K
  ok [1m[32m940[0m no error from next()[K
  ok [1m[32m941[0m seek(4) on {"lte":"5","reverse":true} yields 4[K
  ok [1m[32m942[0m no error from next()[K
  ok [1m[32m943[0m seek(5) on {"lte":"5","reverse":true} yields 5[K
  ok [1m[32m944[0m no error from next()[K
  ok [1m[32m945[0m seek(6) on {"lte":"5","reverse":true} yields undefined[K
  ok [1m[32m946[0m no error from next()[K
  ok [1m[32m947[0m seek(4) on {"gt":"5","reverse":true} yields undefined[K
  ok [1m[32m948[0m no error from next()[K
  ok [1m[32m949[0m seek(5) on {"gt":"5","reverse":true} yields undefined[K
  ok [1m[32m950[0m no error from next()[K
  ok [1m[32m951[0m seek(6) on {"gt":"5","reverse":true} yields 6[K
  ok [1m[32m952[0m no error from next()[K
  ok [1m[32m953[0m seek(4) on {"gte":"5","reverse":true} yields undefined[K
  ok [1m[32m954[0m no error from next()[K
  ok [1m[32m955[0m seek(5) on {"gte":"5","reverse":true} yields 5[K
  ok [1m[32m956[0m no error from next()[K
  ok [1m[32m957[0m seek(6) on {"gte":"5","reverse":true} yields 6[K
  ok [1m[32m958[0m no error from next()[K
  ok [1m[32m959[0m seek(7) on {"gt":"7","lt":"8"} yields undefined[K
  ok [1m[32m960[0m no error from next()[K
  ok [1m[32m961[0m seek(7) on {"gte":"7","lt":"8"} yields 7[K
  ok [1m[32m962[0m no error from next()[K
  ok [1m[32m963[0m seek(8) on {"gte":"7","lt":"8"} yields undefined[K
  ok [1m[32m964[0m no error from next()[K
  ok [1m[32m965[0m seek(8) on {"gt":"7","lte":"8"} yields 8[K
  ok [1m[32m966[0m no error from end()[K
  ok [1m[32m967[0m no error from end()[K
  ok [1m[32m968[0m no error from end()[K
  ok [1m[32m969[0m no error from end()[K
  ok [1m[32m970[0m no error from end()[K
  ok [1m[32m971[0m no error from end()[K
  ok [1m[32m972[0m no error from end()[K
  ok [1m[32m973[0m no error from end()[K
  ok [1m[32m974[0m no error from end()[K
  ok [1m[32m975[0m no error from end()[K
  ok [1m[32m976[0m no error from end()[K
  ok [1m[32m977[0m no error from end()[K
  ok [1m[32m978[0m no error from end()[K
  ok [1m[32m979[0m no error from end()[K
  ok [1m[32m980[0m no error from end()[K
  ok [1m[32m981[0m no error from end()[K
  ok [1m[32m982[0m no error from end()[K
  ok [1m[32m983[0m no error from end()[K
  ok [1m[32m984[0m no error from end()[K
  ok [1m[32m985[0m no error from end()[K
  ok [1m[32m986[0m no error from end()[K
  ok [1m[32m987[0m no error from end()[K
  ok [1m[32m988[0m no error from end()[K
  ok [1m[32m989[0m no error from end()[K
  ok [1m[32m990[0m no error from end()[K
  ok [1m[32m991[0m no error from end()[K
  ok [1m[32m992[0m no error from end()[K
  ok [1m[32m993[0m no error from end()[K
  ok [1m[32m994[0m no error from close()[K
[1A[1G[1m[32m✓ iterator#seek() respects range[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# delete key after snapshotting[K

  ok [1m[32m995[0m no open error[K
  ok [1m[32m996[0m no put error[K
  ok [1m[32m997[0m no del error[K
  ok [1m[32m998[0m no next error[K
  ok [1m[32m999[0m got a key[K
  ok [1m[32m1000[0m correct key[K
  ok [1m[32m1001[0m correct value[K
  ok [1m[32m1002[0m no run error[K
  ok [1m[32m1003[0m no iterator end error[K
[1A[1G[1m[32m✓ delete key after snapshotting[0m[1B[1G
# overwrite key after snapshotting[K

  ok [1m[32m1004[0m no open error[K
  ok [1m[32m1005[0m no put error[K
  ok [1m[32m1006[0m no put error[K
  ok [1m[32m1007[0m no next error[K
  ok [1m[32m1008[0m got a key[K
  ok [1m[32m1009[0m correct key[K
  ok [1m[32m1010[0m correct value[K
  ok [1m[32m1011[0m no run error[K
  ok [1m[32m1012[0m no iterator end error[K
[1A[1G[1m[32m✓ overwrite key after snapshotting[0m[1B[1G
# add key after snapshotting that sorts first[K

  ok [1m[32m1013[0m no open error[K
  ok [1m[32m1014[0m no put error[K
  ok [1m[32m1015[0m no put error[K
  ok [1m[32m1016[0m no next error[K
  ok [1m[32m1017[0m got a key[K
  ok [1m[32m1018[0m correct key[K
  ok [1m[32m1019[0m correct value[K
  ok [1m[32m1020[0m no run error[K
  ok [1m[32m1021[0m no iterator end error[K
[1A[1G[1m[32m✓ add key after snapshotting that sorts first[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# setUp db[K

[1A[1G[1m[32m✓ setUp db[0m[1B[1G
# test argument-less clear() throws[K

  ok [1m[32m1022[0m no-arg clear() throws[K
[1A[1G[1m[32m✓ test argument-less clear() throws[0m[1B[1G
# test simple clear() on string keys[K

  ok [1m[32m1023[0m no open error[K
  ok [1m[32m1024[0m no batch error[K
  ok [1m[32m1025[0m no concat error[K
  ok [1m[32m1026[0m has entries[K
  ok [1m[32m1027[0m no clear error[K
  ok [1m[32m1028[0m no concat error[K
  ok [1m[32m1029[0m has no entries[K
  ok [1m[32m1030[0m no close error[K
[1A[1G[1m[32m✓ test simple clear() on string keys[0m[1B[1G
# test simple clear() on buffer keys[K

  ok [1m[32m1031[0m no open error[K
  ok [1m[32m1032[0m no batch error[K
  ok [1m[32m1033[0m no concat error[K
  ok [1m[32m1034[0m has entries[K
  ok [1m[32m1035[0m no clear error[K
  ok [1m[32m1036[0m no concat error[K
  ok [1m[32m1037[0m has no entries[K
  ok [1m[32m1038[0m no close error[K
[1A[1G[1m[32m✓ test simple clear() on buffer keys[0m[1B[1G
# test simple clear() on mixed keys[K

  ok [1m[32m1039[0m no open error[K
  ok [1m[32m1040[0m no batch error[K
  ok [1m[32m1041[0m no concat error[K
  ok [1m[32m1042[0m has entries[K
  ok [1m[32m1043[0m no clear error[K
  ok [1m[32m1044[0m no concat error[K
  ok [1m[32m1045[0m has no entries[K
  ok [1m[32m1046[0m no close error[K
[1A[1G[1m[32m✓ test simple clear() on mixed keys[0m[1B[1G
# test simple clear() on non-utf8 buffer keys[K

  ok [1m[32m1047[0m no open error[K
  ok [1m[32m1048[0m no batch error[K
  ok [1m[32m1049[0m no concat error[K
  ok [1m[32m1050[0m has entries[K
  ok [1m[32m1051[0m no clear error[K
  ok [1m[32m1052[0m no concat error[K
  ok [1m[32m1053[0m has no entries[K
  ok [1m[32m1054[0m no close error[K
[1A[1G[1m[32m✓ test simple clear() on non-utf8 buffer keys[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# setUp common[K

[1A[1G[1m[32m✓ setUp common[0m[1B[1G
# db#clear() with full range[K

  ok [1m[32m1055[0m no open error[K
  ok [1m[32m1056[0m no batch error[K
  ok [1m[32m1057[0m no clear error[K
  ok [1m[32m1058[0m no concat error[K
  ok [1m[32m1059[0m correct number of entries[K
  ok [1m[32m1060[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with full range[0m[1B[1G
# db#clear() with reverse=true[K

  ok [1m[32m1061[0m no open error[K
  ok [1m[32m1062[0m no batch error[K
  ok [1m[32m1063[0m no clear error[K
  ok [1m[32m1064[0m no concat error[K
  ok [1m[32m1065[0m correct number of entries[K
  ok [1m[32m1066[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with reverse=true[0m[1B[1G
# db#clear() with gte=00[K

  ok [1m[32m1067[0m no open error[K
  ok [1m[32m1068[0m no batch error[K
  ok [1m[32m1069[0m no clear error[K
  ok [1m[32m1070[0m no concat error[K
  ok [1m[32m1071[0m correct number of entries[K
  ok [1m[32m1072[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=00[0m[1B[1G
# db#clear() with gte=50[K

  ok [1m[32m1073[0m no open error[K
  ok [1m[32m1074[0m no batch error[K
  ok [1m[32m1075[0m no clear error[K
  ok [1m[32m1076[0m no concat error[K
  ok [1m[32m1077[0m correct number of entries[K
  ok [1m[32m1078[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=50[0m[1B[1G
# db#clear() with lte=50 and reverse=true[K

  ok [1m[32m1079[0m no open error[K
  ok [1m[32m1080[0m no batch error[K
  ok [1m[32m1081[0m no clear error[K
  ok [1m[32m1082[0m no concat error[K
  ok [1m[32m1083[0m correct number of entries[K
  ok [1m[32m1084[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=50 and reverse=true[0m[1B[1G
# db#clear() with gte=49.5 (midway)[K

  ok [1m[32m1085[0m no open error[K
  ok [1m[32m1086[0m no batch error[K
  ok [1m[32m1087[0m no clear error[K
  ok [1m[32m1088[0m no concat error[K
  ok [1m[32m1089[0m correct number of entries[K
  ok [1m[32m1090[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=49.5 (midway)[0m[1B[1G
# db#clear() with gte=49999 (midway)[K

  ok [1m[32m1091[0m no open error[K
  ok [1m[32m1092[0m no batch error[K
  ok [1m[32m1093[0m no clear error[K
  ok [1m[32m1094[0m no concat error[K
  ok [1m[32m1095[0m correct number of entries[K
  ok [1m[32m1096[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=49999 (midway)[0m[1B[1G
# db#clear() with lte=49.5 (midway) and reverse=true[K

  ok [1m[32m1097[0m no open error[K
  ok [1m[32m1098[0m no batch error[K
  ok [1m[32m1099[0m no clear error[K
  ok [1m[32m1100[0m no concat error[K
  ok [1m[32m1101[0m correct number of entries[K
  ok [1m[32m1102[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G
# db#clear() with lt=49.5 (midway) and reverse=true[K

  ok [1m[32m1103[0m no open error[K
  ok [1m[32m1104[0m no batch error[K
  ok [1m[32m1105[0m no clear error[K
  ok [1m[32m1106[0m no concat error[K
  ok [1m[32m1107[0m correct number of entries[K
  ok [1m[32m1108[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G
# db#clear() with lt=50 and reverse=true[K

  ok [1m[32m1109[0m no open error[K
  ok [1m[32m1110[0m no batch error[K
  ok [1m[32m1111[0m no clear error[K
  ok [1m[32m1112[0m no concat error[K
  ok [1m[32m1113[0m correct number of entries[K
  ok [1m[32m1114[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lt=50 and reverse=true[0m[1B[1G
# db#clear() with lte=50[K

  ok [1m[32m1115[0m no open error[K
  ok [1m[32m1116[0m no batch error[K
  ok [1m[32m1117[0m no clear error[K
  ok [1m[32m1118[0m no concat error[K
  ok [1m[32m1119[0m correct number of entries[K
  ok [1m[32m1120[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=50[0m[1B[1G
# db#clear() with lte=50.5 (midway)[K

  ok [1m[32m1121[0m no open error[K
  ok [1m[32m1122[0m no batch error[K
  ok [1m[32m1123[0m no clear error[K
  ok [1m[32m1124[0m no concat error[K
  ok [1m[32m1125[0m correct number of entries[K
  ok [1m[32m1126[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=50.5 (midway)[0m[1B[1G
# db#clear() with lte=50555 (midway)[K

  ok [1m[32m1127[0m no open error[K
  ok [1m[32m1128[0m no batch error[K
  ok [1m[32m1129[0m no clear error[K
  ok [1m[32m1130[0m no concat error[K
  ok [1m[32m1131[0m correct number of entries[K
  ok [1m[32m1132[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=50555 (midway)[0m[1B[1G
# db#clear() with lt=50555 (midway)[K

  ok [1m[32m1133[0m no open error[K
  ok [1m[32m1134[0m no batch error[K
  ok [1m[32m1135[0m no clear error[K
  ok [1m[32m1136[0m no concat error[K
  ok [1m[32m1137[0m correct number of entries[K
  ok [1m[32m1138[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lt=50555 (midway)[0m[1B[1G
# db#clear() with gte=50.5 (midway) and reverse=true[K

  ok [1m[32m1139[0m no open error[K
  ok [1m[32m1140[0m no batch error[K
  ok [1m[32m1141[0m no clear error[K
  ok [1m[32m1142[0m no concat error[K
  ok [1m[32m1143[0m correct number of entries[K
  ok [1m[32m1144[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G
# db#clear() with gt=50.5 (midway) and reverse=true[K

  ok [1m[32m1145[0m no open error[K
  ok [1m[32m1146[0m no batch error[K
  ok [1m[32m1147[0m no clear error[K
  ok [1m[32m1148[0m no concat error[K
  ok [1m[32m1149[0m correct number of entries[K
  ok [1m[32m1150[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G
# db#clear() with gt=50 and reverse=true[K

  ok [1m[32m1151[0m no open error[K
  ok [1m[32m1152[0m no batch error[K
  ok [1m[32m1153[0m no clear error[K
  ok [1m[32m1154[0m no concat error[K
  ok [1m[32m1155[0m correct number of entries[K
  ok [1m[32m1156[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gt=50 and reverse=true[0m[1B[1G
# db#clear() with lte=0[K

  ok [1m[32m1157[0m no open error[K
  ok [1m[32m1158[0m no batch error[K
  ok [1m[32m1159[0m no clear error[K
  ok [1m[32m1160[0m no concat error[K
  ok [1m[32m1161[0m correct number of entries[K
  ok [1m[32m1162[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte=0[0m[1B[1G
# db#clear() with lt=0[K

  ok [1m[32m1163[0m no open error[K
  ok [1m[32m1164[0m no batch error[K
  ok [1m[32m1165[0m no clear error[K
  ok [1m[32m1166[0m no concat error[K
  ok [1m[32m1167[0m correct number of entries[K
  ok [1m[32m1168[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lt=0[0m[1B[1G
# db#clear() with gte=30 and lte=70[K

  ok [1m[32m1169[0m no open error[K
  ok [1m[32m1170[0m no batch error[K
  ok [1m[32m1171[0m no clear error[K
  ok [1m[32m1172[0m no concat error[K
  ok [1m[32m1173[0m correct number of entries[K
  ok [1m[32m1174[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=30 and lte=70[0m[1B[1G
# db#clear() with gt=29 and lt=71[K

  ok [1m[32m1175[0m no open error[K
  ok [1m[32m1176[0m no batch error[K
  ok [1m[32m1177[0m no clear error[K
  ok [1m[32m1178[0m no concat error[K
  ok [1m[32m1179[0m correct number of entries[K
  ok [1m[32m1180[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gt=29 and lt=71[0m[1B[1G
# db#clear() with gte=30 and lte=70 and reverse=true[K

  ok [1m[32m1181[0m no open error[K
  ok [1m[32m1182[0m no batch error[K
  ok [1m[32m1183[0m no clear error[K
  ok [1m[32m1184[0m no concat error[K
  ok [1m[32m1185[0m correct number of entries[K
  ok [1m[32m1186[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G
# db#clear() with gt=29 and lt=71 and reverse=true[K

  ok [1m[32m1187[0m no open error[K
  ok [1m[32m1188[0m no batch error[K
  ok [1m[32m1189[0m no clear error[K
  ok [1m[32m1190[0m no concat error[K
  ok [1m[32m1191[0m correct number of entries[K
  ok [1m[32m1192[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G
# db#clear() with limit=20[K

  ok [1m[32m1193[0m no open error[K
  ok [1m[32m1194[0m no batch error[K
  ok [1m[32m1195[0m no clear error[K
  ok [1m[32m1196[0m no concat error[K
  ok [1m[32m1197[0m correct number of entries[K
  ok [1m[32m1198[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=20[0m[1B[1G
# db#clear() with limit=20 and gte=20[K

  ok [1m[32m1199[0m no open error[K
  ok [1m[32m1200[0m no batch error[K
  ok [1m[32m1201[0m no clear error[K
  ok [1m[32m1202[0m no concat error[K
  ok [1m[32m1203[0m correct number of entries[K
  ok [1m[32m1204[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=20 and gte=20[0m[1B[1G
# db#clear() with limit=20 and reverse=true[K

  ok [1m[32m1205[0m no open error[K
  ok [1m[32m1206[0m no batch error[K
  ok [1m[32m1207[0m no clear error[K
  ok [1m[32m1208[0m no concat error[K
  ok [1m[32m1209[0m correct number of entries[K
  ok [1m[32m1210[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=20 and reverse=true[0m[1B[1G
# db#clear() with limit=20 and lte=79 and reverse=true[K

  ok [1m[32m1211[0m no open error[K
  ok [1m[32m1212[0m no batch error[K
  ok [1m[32m1213[0m no clear error[K
  ok [1m[32m1214[0m no concat error[K
  ok [1m[32m1215[0m correct number of entries[K
  ok [1m[32m1216[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G
# db#clear() with limit=-1 should clear whole database[K

  ok [1m[32m1217[0m no open error[K
  ok [1m[32m1218[0m no batch error[K
  ok [1m[32m1219[0m no clear error[K
  ok [1m[32m1220[0m no concat error[K
  ok [1m[32m1221[0m correct number of entries[K
  ok [1m[32m1222[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=-1 should clear whole database[0m[1B[1G
# db#clear() with limit=0 should not clear anything[K

  ok [1m[32m1223[0m no open error[K
  ok [1m[32m1224[0m no batch error[K
  ok [1m[32m1225[0m no clear error[K
  ok [1m[32m1226[0m no concat error[K
  ok [1m[32m1227[0m correct number of entries[K
  ok [1m[32m1228[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with limit=0 should not clear anything[0m[1B[1G
# db#clear() with lte after limit[K

  ok [1m[32m1229[0m no open error[K
  ok [1m[32m1230[0m no batch error[K
  ok [1m[32m1231[0m no clear error[K
  ok [1m[32m1232[0m no concat error[K
  ok [1m[32m1233[0m correct number of entries[K
  ok [1m[32m1234[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte after limit[0m[1B[1G
# db#clear() with lte before limit[K

  ok [1m[32m1235[0m no open error[K
  ok [1m[32m1236[0m no batch error[K
  ok [1m[32m1237[0m no clear error[K
  ok [1m[32m1238[0m no concat error[K
  ok [1m[32m1239[0m correct number of entries[K
  ok [1m[32m1240[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte before limit[0m[1B[1G
# db#clear() with gte after database end[K

  ok [1m[32m1241[0m no open error[K
  ok [1m[32m1242[0m no batch error[K
  ok [1m[32m1243[0m no clear error[K
  ok [1m[32m1244[0m no concat error[K
  ok [1m[32m1245[0m correct number of entries[K
  ok [1m[32m1246[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gte after database end[0m[1B[1G
# db#clear() with gt after database end[K

  ok [1m[32m1247[0m no open error[K
  ok [1m[32m1248[0m no batch error[K
  ok [1m[32m1249[0m no clear error[K
  ok [1m[32m1250[0m no concat error[K
  ok [1m[32m1251[0m correct number of entries[K
  ok [1m[32m1252[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with gt after database end[0m[1B[1G
# db#clear() with lte after database end and reverse=true[K

  ok [1m[32m1253[0m no open error[K
  ok [1m[32m1254[0m no batch error[K
  ok [1m[32m1255[0m no clear error[K
  ok [1m[32m1256[0m no concat error[K
  ok [1m[32m1257[0m correct number of entries[K
  ok [1m[32m1258[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte after database end and reverse=true[0m[1B[1G
# db#clear() with lte and gte after database and reverse=true[K

  ok [1m[32m1259[0m no open error[K
  ok [1m[32m1260[0m no batch error[K
  ok [1m[32m1261[0m no clear error[K
  ok [1m[32m1262[0m no concat error[K
  ok [1m[32m1263[0m correct number of entries[K
  ok [1m[32m1264[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lte and gte after database and reverse=true[0m[1B[1G
# db#clear() with lt and gt after database and reverse=true[K

  ok [1m[32m1265[0m no open error[K
  ok [1m[32m1266[0m no batch error[K
  ok [1m[32m1267[0m no clear error[K
  ok [1m[32m1268[0m no concat error[K
  ok [1m[32m1269[0m correct number of entries[K
  ok [1m[32m1270[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ db#clear() with lt and gt after database and reverse=true[0m[1B[1G
# tearDown[K

[1A[1G[1m[32m✓ tearDown[0m[1B[1G
# unsorted entry, sorted iterator[K

  ok [1m[32m1271[0m no open error[K
  ok [1m[32m1272[0m no error[K
  ok [1m[32m1273[0m correct number of entries[K
  ok [1m[32m1274[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ unsorted entry, sorted iterator[0m[1B[1G
# reading while putting[K

  ok [1m[32m1275[0m no open error[K
  ok [1m[32m1276[0m no next error[K
  ok [1m[32m1277[0m should be strictly equal[K
  ok [1m[32m1278[0m should be strictly equal[K
  ok [1m[32m1279[0m no next error[K
  ok [1m[32m1280[0m should be strictly equal[K
  ok [1m[32m1281[0m should be strictly equal[K
[1A[1G[1m[32m✓ reading while putting[0m[1B[1G
# reading while deleting[K

  ok [1m[32m1282[0m no open error[K
  ok [1m[32m1283[0m no next error[K
  ok [1m[32m1284[0m should be strictly equal[K
  ok [1m[32m1285[0m should be strictly equal[K
  ok [1m[32m1286[0m no next error[K
  ok [1m[32m1287[0m should be strictly equal[K
  ok [1m[32m1288[0m should be strictly equal[K
[1A[1G[1m[32m✓ reading while deleting[0m[1B[1G
# reverse ranges[K

  ok [1m[32m1289[0m no open error[K
  ok [1m[32m1290[0m no next error[K
  ok [1m[32m1291[0m should be strictly equal[K
  ok [1m[32m1292[0m should be strictly equal[K
[1A[1G[1m[32m✓ reverse ranges[0m[1B[1G
# delete while iterating[K

  ok [1m[32m1293[0m no open error[K
  ok [1m[32m1294[0m no next error[K
  ok [1m[32m1295[0m should be strictly equal[K
  ok [1m[32m1296[0m should be strictly equal[K
  ok [1m[32m1297[0m no error[K
  ok [1m[32m1298[0m no error[K
  ok [1m[32m1299[0m should be strictly equal[K
  ok [1m[32m1300[0m should be strictly equal[K
[1A[1G[1m[32m✓ delete while iterating[0m[1B[1G
# iterator with byte range[K

  ok [1m[32m1301[0m no open error[K
  ok [1m[32m1302[0m undefined[K
  ok [1m[32m1303[0m no error[K
  ok [1m[32m1304[0m should be strictly equal[K
  ok [1m[32m1305[0m should be strictly equal[K
[1A[1G[1m[32m✓ iterator with byte range[0m[1B[1G
# iterator does not clone buffers[K

  ok [1m[32m1306[0m no open error[K
  ok [1m[32m1307[0m no iterator error[K
  ok [1m[32m1308[0m key is same buffer[K
  ok [1m[32m1309[0m value is same buffer[K
[1A[1G[1m[32m✓ iterator does not clone buffers[0m[1B[1G
# iterator stringifies buffer input[K

  ok [1m[32m1310[0m no open error[K
  ok [1m[32m1311[0m no iterator error[K
  ok [1m[32m1312[0m key is stringified[K
  ok [1m[32m1313[0m value is stringified[K
[1A[1G[1m[32m✓ iterator stringifies buffer input[0m[1B[1G
# backing rbtree is buffer-aware[K

  ok [1m[32m1314[0m no open error[K
  ok [1m[32m1315[0m would be equal when not buffer-aware[K
  ok [1m[32m1316[0m but greater when buffer-aware[K
  ok [1m[32m1317[0m no error[K
  ok [1m[32m1318[0m no error[K
  ok [1m[32m1319[0m value one ok[K
  ok [1m[32m1320[0m no error[K
  ok [1m[32m1321[0m no error[K
  ok [1m[32m1322[0m value one is the same[K
[1A[1G[1m[32m✓ backing rbtree is buffer-aware[0m[1B[1G
# empty value in batch[K

  ok [1m[32m1323[0m no open error[K
  ok [1m[32m1324[0m no error[K
  ok [1m[32m1325[0m no error[K
  ok [1m[32m1326[0m empty string[K
  ok [1m[32m1327[0m no error[K
  ok [1m[32m1328[0m empty buffer[K
[1A[1G[1m[32m✓ empty value in batch[0m[1B[1G
# empty buffer key in batch[K

  ok [1m[32m1329[0m no open error[K
  ok [1m[32m1330[0m got an error[K
[1A[1G[1m[32m✓ empty buffer key in batch[0m[1B[1G
# buffer key in batch[K

  ok [1m[32m1331[0m no open error[K
  ok [1m[32m1332[0m no error[K
  ok [1m[32m1333[0m no error[K
  ok [1m[32m1334[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ buffer key in batch[0m[1B[1G
# put multiple times[K

  ok [1m[32m1335[0m no open error[K
  ok [1m[32m1336[0m no error[K
  ok [1m[32m1337[0m no error[K
  ok [1m[32m1338[0m no error[K
  ok [1m[32m1339[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ put multiple times[0m[1B[1G
# put as string, get as buffer and vice versa[K

  ok [1m[32m1340[0m no open error[K
  ok [1m[32m1341[0m no put error[K
  ok [1m[32m1342[0m no put error[K
  ok [1m[32m1343[0m no get error[K
  ok [1m[32m1344[0m got value[K
  ok [1m[32m1345[0m no get error[K
  ok [1m[32m1346[0m got value[K
[1A[1G[1m[32m✓ put as string, get as buffer and vice versa[0m[1B[1G
# put as string, iterate as buffer[K

  ok [1m[32m1347[0m no open error[K
  ok [1m[32m1348[0m no put error[K
  ok [1m[32m1349[0m no concat error[K
  ok [1m[32m1350[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ put as string, iterate as buffer[0m[1B[1G
# put as buffer, iterate as string[K

  ok [1m[32m1351[0m no open error[K
  ok [1m[32m1352[0m no put error[K
  ok [1m[32m1353[0m no concat error[K
  ok [1m[32m1354[0m should be deeply equivalent[K
[1A[1G[1m[32m✓ put as buffer, iterate as string[0m[1B[1G
# number keys[K

  ok [1m[32m1355[0m no open error[K
  ok [1m[32m1356[0m no iterator error[K
  ok [1m[32m1357[0m sorts lexicographically[K
  ok [1m[32m1358[0m no iterator error[K
  ok [1m[32m1359[0m buffer input is stringified[K
[1A[1G[1m[32m✓ number keys[0m[1B[1G
# tests 1359[K

tests 1359
# pass  1359[K

pass  1359
# ok[K
[1A[1G[1m[32m✓ ok[0m[1B[1G------------|---------|----------|---------|---------|-------------------
File        | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
------------|---------|----------|---------|---------|-------------------
All files   |   98.79 |     95.6 |     100 |   98.71 |                   
 memdown.js |   98.79 |     95.6 |     100 |   98.71 | 139,273           
------------|---------|----------|---------|---------|-------------------
------------|---------|----------|---------|---------|-------------------
File        | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
------------|---------|----------|---------|---------|-------------------
All files   |   98.79 |     95.6 |     100 |   98.71 |                   
 memdown.js |   98.79 |     95.6 |     100 |   98.71 | 139,273           
------------|---------|----------|---------|---------|-------------------
https://github.com/fastify/fastify.git
fastify
95f9fa5abc105397a715fc376c3a6e704181d2e1

added 702 packages, and audited 865 packages in 39s

137 packages are looking for funding
  run `npm fund` for details

2 high severity vulnerabilities

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Start Generating test coverage report...

> fastify@4.3.0 test
> npm run lint && npm run unit && npm run test:typescript


> fastify@4.3.0 lint
> npm run lint:standard && npm run lint:typescript && npm run lint:markdown


> fastify@4.3.0 lint:standard
> standard | snazzy


> fastify@4.3.0 lint:typescript
> eslint -c types/.eslintrc.json types/**/*.d.ts test/types/**/*.test-d.ts


> fastify@4.3.0 lint:markdown
> markdownlint-cli2

markdownlint-cli2 v0.4.0 (markdownlint v0.25.1)

> fastify@4.3.0 unit
> tap

TAP version 13
# Subtest: test/404s.test.js
    # Subtest: default 404
        1..4
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=37.499ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=14.41ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=5.749ms
        
    ok 1 - default 404 # time=235.286ms
    
    # Subtest: customized 404
        1..6
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=14.603ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - framework-unsupported method # time=4.557ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported route # time=4.082ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - with error object # time=9.478ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - error object with headers property # time=5.129ms
        
    ok 2 - customized 404 # time=51.386ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=9.965ms
        
    ok 3 - custom header in notFound handler # time=29.786ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=6.26ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=32.804ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=14.767ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=13.61ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=16.679ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=93.32ms
    
    # Subtest: encapsulated 404
        1..13
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=41.18ms
        
        # Subtest: root framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root framework-unsupported method # time=6.369ms
        
        # Subtest: root unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - root unsupported route # time=4.263ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported method # time=4.612ms
        
        # Subtest: framework-unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - framework-unsupported method # time=4.352ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route # time=3.995ms
        
        # Subtest: unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 2 # time=4.265ms
        
        # Subtest: framework-unsupported method 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - framework-unsupported method 2 # time=3.986ms
        
        # Subtest: unsupported route 2
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - unsupported route 2 # time=3.809ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 11 - unsupported method 3 # time=4.32ms
        
        # Subtest: framework-unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 12 - framework-unsupported method 3 # time=3.695ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 13 - unsupported route 3 # time=3.759ms
        
    ok 5 - encapsulated 404 # time=135.549ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=47.247ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=10.312ms
    
    # Subtest: run hooks on default 404
        1..7
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - run hooks on default 404 # time=10.008ms
    
    # Subtest: run non-encapsulated plugin hooks on default 404
        1..6
        ok 1 - onRequest called
        ok 2 - preHandler called
        ok 3 - onSend called
        ok 4 - onResponse called
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - run non-encapsulated plugin hooks on default 404 # time=11.849ms
    
    # Subtest: run non-encapsulated plugin hooks on custom 404
        1..11
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - preHandler called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onSend called
        ok 7 - onResponse called
        ok 8 - onResponse called
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
    ok 10 - run non-encapsulated plugin hooks on custom 404 # time=9.751ms
    
    # Subtest: run hook with encapsulated 404
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 11 - run hook with encapsulated 404 # time=12.64ms
    
    # Subtest: run hook with encapsulated 404 and framework-unsupported method
        1..11
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - preHandler called
        ok 5 - preHandler 2 called
        ok 6 - onSend called
        ok 7 - onSend 2 called
        ok 8 - onResponse called
        ok 9 - onResponse 2 called
        ok 10 - should not error
        ok 11 - should be equal
    ok 12 - run hook with encapsulated 404 and framework-unsupported method # time=11.929ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 13 - hooks check 404 # time=29.086ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 14 - setNotFoundHandler should not suppress duplicated routes checking # time=5.665ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=6.164ms
        
    ok 15 - log debug for 404 # time=12.204ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 16 - Unknown method # time=10.385ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 17 - recognizes errors from the http-errors module # time=33.374ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 18 - the default 404 handler can be invoked inside a prefixed plugin # time=10.35ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=6.559ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=8.941ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 21 - cannot set notFoundHandler after binding # time=3.311ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 22 - 404 inside onSend # time=5.279ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - onSend hooks run when an encapsulated route invokes the notFound handler # time=4.67ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..10
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=33.463ms
        
        # Subtest: preHandler hook in setNotFoundHandler should be called when callNotFound
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 2 - preHandler hook in setNotFoundHandler should be called when callNotFound # time=17.206ms
        
        # Subtest: preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - preHandler hook in setNotFoundHandler should accept an array of functions and be called when callNotFound # time=5.204ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - preHandler option should be called after preHandler hook # time=4.891ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 5 - preHandler option should be unique per prefix # time=14.264ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 6 - preHandler option should handle errors # time=4.866ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - preHandler option should handle errors with custom status code # time=4.967ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 8 - preHandler option could accept an array of functions # time=4.412ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 9 - preHandler option does not interfere with preHandler # time=9.083ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 10 - preHandler option should keep the context # time=4.74ms
        
    ok 24 - preHandler option for setNotFoundHandler # time=113.748ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - reply.notFound invoked the notFound handler # time=5.219ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 26 - The custom error handler should be invoked after the custom not found handler # time=6.161ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 27 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=4.364ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 28 - preValidation option # time=4.849ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 29 - preValidation option could accept an array of functions # time=4.811ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - Should fail to invoke callNotFound inside a 404 handler # time=6.238ms
    
    # Subtest: 400 in case of bad url (pre find-my-way v2.2.0 was a 404)
        # Subtest: Dynamic route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 1 - Dynamic route # time=17.521ms
        
        # Subtest: Wildcard
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - Wildcard # time=4.815ms
        
        # Subtest: No route registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - No route registered # time=4.471ms
        
        # Subtest: Only / is registered
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - Only / is registered # time=30.802ms
        
        # Subtest: customized 404
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - customized 404 # time=14.705ms
        
        1..5
    ok 31 - 400 in case of bad url (pre find-my-way v2.2.0 was a 404) # time=79.052ms
    
    # Subtest: setNotFoundHandler should be chaining fastify instance
        # Subtest: Register route after setNotFoundHandler
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equal
        ok 1 - Register route after setNotFoundHandler # time=6.774ms
        
        1..1
    ok 32 - setNotFoundHandler should be chaining fastify instance # time=11.736ms
    
    # Subtest: Send 404 when frameworkError calls reply.callNotFound
        # Subtest: Dynamic route
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Dynamic route # time=5.761ms
        
        1..1
    ok 33 - Send 404 when frameworkError calls reply.callNotFound # time=12.155ms
    
    1..33
    # time=1076.563ms
ok 1 - test/404s.test.js # time=1076.563ms

# Subtest: test/500s.test.js
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=117.273ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=9.902ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=39.554ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=10.269ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=18.578ms
    
    1..5
    # time=207.512ms
ok 2 - test/500s.test.js # time=207.512ms

# Subtest: test/allowUnsafeRegex.test.js
    # Subtest: allow unsafe regex
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - allow unsafe regex # time=71.728ms
    
    # Subtest: allow unsafe regex not match
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - allow unsafe regex not match # time=12.276ms
    
    # Subtest: allow unsafe regex not safe
        1..1
        ok 1 - expected to throw
    ok 3 - allow unsafe regex not safe # time=81.158ms
    
    # Subtest: allow unsafe regex not safe by default
        1..1
        ok 1 - expected to throw
    ok 4 - allow unsafe regex not safe by default # time=3.179ms
    
    # Subtest: allow unsafe regex allow unsafe
        1..5
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - allow unsafe regex allow unsafe # time=11.509ms
    
    1..5
    # time=215.156ms
ok 3 - test/allowUnsafeRegex.test.js # time=215.156ms

# Subtest: test/als.test.js
    ok 1 - should not error
    ok 2 - expect truthy value
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - expect truthy value
    ok 7 - should not error
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - expect truthy value
    ok 11 - should not error
    ok 12 - should be equal
    ok 13 - should be equivalent
    1..13
    # time=46.346ms
ok 4 - test/als.test.js # time=46.346ms

# Subtest: test/async-await.test.js
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=316.312ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=12.42ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=19.14ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=101.503ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=8.82ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=23.944ms
    
    # Subtest: await reply if we will be calling reply.send in the future
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - await reply if we will be calling reply.send in the future # time=11.057ms
    
    # Subtest: await reply if we will be calling reply.send in the future (error case)
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 8 - await reply if we will be calling reply.send in the future (error case) # time=9.051ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 9 - support reply decorators with await # time=18.058ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 10 - inject async await # time=7.018ms
    
    # Subtest: inject async await - when the server equal up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 11 - inject async await - when the server equal up # time=212.62ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 12 - async await plugin # time=223.888ms
    
    # Subtest: does not call reply.send() twice if 204 response equal already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - does not call reply.send() twice if 204 response equal already sent # time=7.899ms
    
    # Subtest: promise was fulfilled with undefined
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - promise was fulfilled with undefined # time=26.854ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=13.644ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=13.384ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=6.392ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=5.464ms
    
    # Subtest: customErrorHandler only called if reply not already sent
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - customErrorHandler only called if reply not already sent # time=4.949ms
    
    # Subtest: setNotFoundHandler should accept return value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - setNotFoundHandler should accept return value # time=6.634ms
    
    # Subtest: customErrorHandler should accept return value
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - customErrorHandler should accept return value # time=5.646ms
    
    # Subtest: await self
        ok 1 - should be equal
        1..1
    ok 22 - await self # time=3.384ms
    
    1..22
    # time=1087.529ms
ok 5 - test/async-await.test.js # time=1087.529ms

# Subtest: test/bodyLimit.test.js
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=37.174ms
    
    1..1
    # time=41.677ms
ok 6 - test/bodyLimit.test.js # time=41.677ms

# Subtest: test/build/error-serializer.test.js
    # Subtest: check generated code syntax
        1..1
        ok 1 - should be equal
    ok 1 - check generated code syntax # time=3029.094ms
    
    ok 2 - ensure the current error serializer is latest # SKIP
    1..2
    # skip: 1
    # time=3090.125ms
ok 7 - test/build/error-serializer.test.js # time=3090.125ms

# Subtest: test/build/version.test.js
    # Subtest: should be the same as package.json
        1..1
        ok 1 - should be equal
    ok 1 - should be the same as package.json # time=6.429ms
    
    1..1
    # time=12.726ms
ok 8 - test/build/version.test.js # time=12.726ms

# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=66.926ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=38.318ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=10.465ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=26.695ms
    
    1..4
    # time=159.39ms
ok 9 - test/case-insensitive.test.js # time=159.39ms

# Subtest: test/chainable.test.js
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=9.968ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=2.562ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.06ms
    
    1..3
    # time=27.53ms
ok 10 - test/chainable.test.js # time=27.53ms

# Subtest: test/close-pipelining.test.js
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 1 - Should return 503 while closing - pipelining # time=150.742ms
    
    # Subtest: Should not return 503 while closing - pipelining - return503OnClosing
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - Should not return 503 while closing - pipelining - return503OnClosing # time=43.135ms
    
    1..2
    # time=199.665ms
ok 11 - test/close-pipelining.test.js # time=199.665ms

# Subtest: test/close.test.js
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=80.626ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=23.36ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=20.576ms
    
    # Subtest: close order - async
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - close order - async # time=16.506ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 5 - should not throw an error if the server is not listening # time=12.725ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 6 - onClose should keep the context # time=12.513ms
    
    # Subtest: Should return error while closing (promise) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - Should return error while closing (promise) - injection # time=49.029ms
    
    # Subtest: Should return error while closing (callback) - injection
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - Should return error while closing (callback) - injection # time=109.334ms
    
    # Subtest: Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        1..5
    ok 9 - Current opened connection should continue to work after closing and return "connection: close" header - return503OnClosing: false # time=36.439ms
    
    # Subtest: Current opened connection should not accept new incoming connections
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - Current opened connection should not accept new incoming connections # time=270.265ms
    
    # Subtest: Cannot be reopened the closed server without listen callback
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 11 - Cannot be reopened the closed server without listen callback # time=8.334ms
    
    # Subtest: Cannot be reopened the closed server has listen callback
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 12 - Cannot be reopened the closed server has listen callback # time=4.413ms
    
    ok 13 - shutsdown while keep-alive connections are active (non-async, native) # SKIP
    ok 14 - shutsdown while keep-alive connections are active (non-async, idle, native) # SKIP
    # Subtest: shutsdown while keep-alive connections are active (non-async, custom)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 15 - shutsdown while keep-alive connections are active (non-async, custom) # time=8.684ms
    
    1..15
    # skip: 2
    # time=672.974ms
ok 12 - test/close.test.js # time=672.974ms

# Subtest: test/connectionTimeout.test.js
    # Subtest: connectionTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - connectionTimeout # time=39.856ms
    
    1..1
    # time=48.432ms
ok 13 - test/connectionTimeout.test.js # time=48.432ms

# Subtest: test/constrained-routes.test.js
    # Subtest: Should register a host constrained route
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 1 - Should register a host constrained route # time=97.574ms
    
    # Subtest: Should register the same route with host constraints
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with host constraints # time=11.031ms
    
    # Subtest: Should allow registering custom constrained routes
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should allow registering custom constrained routes # time=23.656ms
    
    # Subtest: Should allow registering custom constrained routes outside constructor
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - Should allow registering custom constrained routes outside constructor # time=26.71ms
    
    # Subtest: Add a constraint strategy after fastify instance was started
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Cannot add constraint strategy when fastify instance is already started!
    ok 5 - Add a constraint strategy after fastify instance was started # time=5.868ms
    
    # Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
        1..1
        ok 1 - There already exists a custom constraint with the name secret.
    ok 6 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=1.448ms
    
    # Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
        1..1
        ok 1 - (unnamed test)
    ok 7 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=1.22ms
    
    # Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 8 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=4.63ms
    
    # Subtest: The hasConstraintStrategy should return false for default constraints until they are used
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 9 - The hasConstraintStrategy should return false for default constraints until they are used # time=4.782ms
    
    # Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=2.794ms
    
    # Subtest: Should allow registering an unconstrained route after a constrained route
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 11 - Should allow registering an unconstrained route after a constrained route # time=12.596ms
    
    # Subtest: Should allow registering constrained routes in a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - Should allow registering constrained routes in a prefixed plugin # time=25.648ms
    
    # Subtest: Should allow registering a constrained GET route after a constrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - Should allow registering a constrained GET route after a constrained HEAD route # time=9.275ms
    
    # Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=12.77ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
        1..1
        ok 1 - expect truthy value
    ok 15 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=14.666ms
    
    # Subtest: allows separate constrained and unconstrained HEAD routes
        1..1
        ok 1 - expect truthy value
    ok 16 - allows separate constrained and unconstrained HEAD routes # time=4.763ms
    
    1..16
    # time=278.012ms
ok 14 - test/constrained-routes.test.js # time=278.012ms

# Subtest: test/content-length.test.js
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=83.322ms
    
    # Subtest: default 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 400 with wrong content-length # time=14.875ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=26.639ms
    
    # Subtest: custom 400 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 400 with wrong content-length # time=9.727ms
    
    # Subtest: \#2214 - wrong content-length
        ok 1 - should be equal
        1..1
    ok 5 - \#2214 - wrong content-length # time=16.257ms
    
    # Subtest: \#2543 - wrong content-length with errorHandler
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 6 - \#2543 - wrong content-length with errorHandler # time=6.329ms
    
    1..6
    # time=172.86ms
ok 15 - test/content-length.test.js # time=172.86ms

# Subtest: test/content-parser.test.js
    # Subtest: hasContentTypeParser
        1..0
    ok 1 - hasContentTypeParser # time=11.291ms
    
    # Subtest: should know about internal parsers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
    ok 2 - should know about internal parsers # time=39.876ms
    
    # Subtest: should work with string and RegExp
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 3 - should work with string and RegExp # time=5.608ms
    
    # Subtest: getParser
        1..0
    ok 4 - getParser # time=90.432ms
    
    # Subtest: existingParser
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        1..7
    ok 5 - existingParser # time=14.011ms
    
    # Subtest: add
        1..0
    ok 6 - add # time=17.453ms
    
    # Subtest: non-Error thrown from content parser is properly handled
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - non-Error thrown from content parser is properly handled # time=35.351ms
    
    # Subtest: Error thrown 415 from content type is null and make post request to server
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - Error thrown 415 from content type is null and make post request to server # time=10.288ms
    
    # Subtest: remove
        1..0
    ok 9 - remove # time=14.267ms
    
    # Subtest: remove all should remove all existing parsers and reset cache
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 10 - remove all should remove all existing parsers and reset cache # time=4.713ms
    
    # Subtest: should return matching parser
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - should return matching parser # time=4.473ms
    
    # Subtest: should return matching parser with caching
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - should return matching parser with caching # time=2.959ms
    
    # Subtest: should prefer content type parser with string value
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - should prefer content type parser with string value # time=2.723ms
    
    # Subtest: should return parser that catches all if no other is set
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 14 - should return parser that catches all if no other is set # time=3.267ms
    
    # Subtest: should return undefined if no matching parser exist
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - should return undefined if no matching parser exist # time=2.512ms
    
    # Subtest: returns always false for "*"
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - returns always false for "*" # time=1.916ms
    
    # Subtest: let you override the default parser once
        1..2
        ok 1 - Content type parser 'application/json' already present
        ok 2 - Content type parser 'text/plain' already present
    ok 17 - let you override the default parser once # time=5.382ms
    
    # Subtest: should only accept string and RegExp
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - The content type should be a string or a RegExp
        ok 4 - The content type should be a string or a RegExp
    ok 18 - should only accept string and RegExp # time=3.927ms
    
    # Subtest: should set "*" as parser that catches all
        1..1
        ok 1 - should be equal
    ok 19 - should set "*" as parser that catches all # time=1.534ms
    
    # Subtest: should remove default parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 20 - should remove default parser # time=1.865ms
    
    # Subtest: should remove RegExp parser
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 21 - should remove RegExp parser # time=1.857ms
    
    # Subtest: should throw an error if content type is neither string nor RegExp
        1..1
        ok 1 - expected to throw
    ok 22 - should throw an error if content type is neither string nor RegExp # time=2.034ms
    
    # Subtest: should not throw error if content type does not exist
        1..1
        ok 1 - expected to not throw
    ok 23 - should not throw error if content type does not exist # time=1.718ms
    
    # Subtest: should not remove any content type parser if content type does not exist
        1..1
        ok 1 - should be equivalent
    ok 24 - should not remove any content type parser if content type does not exist # time=2.239ms
    
    1..24
    # time=305.059ms
ok 16 - test/content-parser.test.js # time=305.059ms

# Subtest: test/context-config.test.js
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=75.474ms
    
    # Subtest: config with exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 2 - config with exposeHeadRoutes # time=12.692ms
    
    # Subtest: config without exposeHeadRoutes
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 3 - config without exposeHeadRoutes # time=25.642ms
    
    1..3
    # time=128.324ms
ok 17 - test/context-config.test.js # time=128.324ms

# Subtest: test/custom-http-server.test.js
    # Subtest: Should support a custom http server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom http server # time=63.511ms
    
    # Subtest: Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections
        1..1
        ok 1 - Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method
    ok 2 - Should not allow forceCloseConnection=idle if the server does not support closeIdleConnections # time=4.137ms
    
    1..2
    # time=75.693ms
ok 18 - test/custom-http-server.test.js # time=75.693ms

# Subtest: test/custom-parser-async.test.js
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=31.692ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=7.519ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=109.288ms
    
    1..1
    # time=118.141ms
ok 19 - test/custom-parser-async.test.js # time=118.141ms

# Subtest: test/custom-parser.test.js
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 1 - contentTypeParser method should exist # time=15.748ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=26.724ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=6.236ms
        
    ok 2 - contentTypeParser should add a custom parser # time=173.293ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 3 - contentTypeParser should handle multiple custom parsers # time=12.792ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle an array of custom contentTypes # time=26.687ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - contentTypeParser should handle errors # time=9.857ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 6 - contentTypeParser should support encapsulation # time=7.568ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - contentTypeParser should support encapsulation, second try # time=8.858ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 8 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=20.513ms
    
    # Subtest: the content type should be a string or RegExp
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - the content type should be a string or RegExp # time=1.872ms
    
    # Subtest: the content type cannot be an empty string
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - the content type cannot be an empty string # time=10.348ms
    
    # Subtest: the content type handler should be a function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - the content type handler should be a function # time=1.915ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 12 - catch all content type parser # time=12.519ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser should not interfere with other conte type parsers # time=10.674ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - '*' catch undefined Content-Type requests # time=11.473ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 15 - cannot add custom parser after binding # time=7.728ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 16 - Can override the default json parser # time=7.559ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default plain text parser # time=8.154ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default json parser in a plugin # time=8.551ms
    
    # Subtest: Can't override the json parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - Can't override the json parser multiple times # time=1.462ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - Can't override the plain text parser multiple times # time=1.857ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - Should get the body as string # time=8.106ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 22 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=7.706ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=26.706ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=14.897ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=14.379ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - Should get the body as string # time=6.291ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as buffer # time=19.249ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=14.344ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 29 - Should parse empty bodies as a string # time=14.893ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 30 - Should parse empty bodies as a buffer # time=15.194ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - The charset should not interfere with the content type handling # time=18.839ms
    
    # Subtest: Wrong parseAs parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 32 - Wrong parseAs parameter # time=1.286ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 33 - Should allow defining the bodyLimit per parser # time=7.847ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - route bodyLimit should take precedence over a custom parser bodyLimit # time=5.777ms
    
    # Subtest: should be able to use default parser for extra content type
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 35 - should be able to use default parser for extra content type # time=6.315ms
    
    # Subtest: contentTypeParser should add a custom parser with RegExp value
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=4.556ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=3.039ms
        
    ok 36 - contentTypeParser should add a custom parser with RegExp value # time=29.101ms
    
    # Subtest: contentTypeParser should add multiple custom parsers with RegExp values
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 37 - contentTypeParser should add multiple custom parsers with RegExp values # time=43.394ms
    
    # Subtest: catch all content type parser should not interfere with content type parser
        1..10
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 38 - catch all content type parser should not interfere with content type parser # time=13.241ms
    
    # Subtest: should prefer string content types over RegExp ones
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - should prefer string content types over RegExp ones # time=7.518ms
    
    # Subtest: removeContentTypeParser should support arrays of content types to remove
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 40 - removeContentTypeParser should support arrays of content types to remove # time=17.22ms
    
    # Subtest: removeContentTypeParser should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 41 - removeContentTypeParser should support encapsulation # time=8.298ms
    
    # Subtest: removeAllContentTypeParsers should support encapsulation
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 42 - removeAllContentTypeParsers should support encapsulation # time=12.261ms
    
    # Subtest: cannot remove all content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 43 - cannot remove all content type parsers after binding # time=3.379ms
    
    # Subtest: cannot remove content type parsers after binding
        1..2
        ok 1 - should not error
        ok 2 - expected to throw
    ok 44 - cannot remove content type parsers after binding # time=2.521ms
    
    # Subtest: should be able to override the default json parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 45 - should be able to override the default json parser after removeAllContentTypeParsers # time=5.162ms
    
    # Subtest: should be able to override the default plain text parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - should be able to override the default plain text parser after removeAllContentTypeParsers # time=5.216ms
    
    # Subtest: should be able to add a custom content type parser after removeAllContentTypeParsers
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 47 - should be able to add a custom content type parser after removeAllContentTypeParsers # time=6.43ms
    
    1..47
    # time=738.085ms
ok 20 - test/custom-parser.test.js # time=738.085ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=154.069ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=15.276ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=39.931ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=4.366ms
    
    1..4
    # time=229.769ms
ok 21 - test/custom-querystring-parser.test.js # time=229.769ms

# Subtest: test/decorator.test.js
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=16.151ms
    
    # Subtest: should check if the given decoration already exist when null
        1..1
        ok 1 - expect truthy value
    ok 2 - should check if the given decoration already exist when null # time=82.608ms
    
    # Subtest: server methods should be encapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - server methods should be encapsulated via .register # time=7.823ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 4 - hasServerMethod should check if the given method already exist # time=21.354ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 5 - decorate should throw if a declared dependency is not present # time=11.771ms
    
    # Subtest: decorate should throw if declared dependency is not array
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - (unnamed test)
    ok 6 - decorate should throw if declared dependency is not array # time=6.085ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 7 - should pass error for missing request decorator # time=6.956ms
    
    # Subtest: decorateReply inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply inside register # time=39.725ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 9 - decorateReply as plugin (inside .after) # time=49.196ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateReply as plugin (outside .after) # time=15.713ms
    
    # Subtest: decorateRequest inside register
        1..11
        ok 1 - should not error
        ok 2 - test exists
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest inside register # time=17.083ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 12 - decorateRequest as plugin (inside .after) # time=37.738ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 13 - decorateRequest as plugin (outside .after) # time=15.443ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 14 - decorators should be instance separated # time=2.083ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.127ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=1.689ms
        
        # Subtest: should check if the given request decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given request decoration already exist when null # time=1.7ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=25.092ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=10.385ms
        
        1..5
    ok 15 - hasRequestDecorator # time=59.958ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=1.189ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=1.364ms
        
        # Subtest: should check if the given reply decoration already exist when null
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 3 - should check if the given reply decoration already exist when null # time=1.288ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 4 - should be plugin encapsulable # time=9.595ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 5 - should be inherited # time=11.519ms
        
        1..5
    ok 16 - hasReplyDecorator # time=122.979ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - a getter
        ok 3 - expect falsey value
    ok 17 - should register properties via getter/setter objects # time=17.155ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 18 - decorateRequest should work with getter/setter # time=37.586ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 19 - decorateReply should work with getter/setter # time=7.812ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 20 - should register empty values # time=3.282ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - nested plugins can override things # time=10.81ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 22 - a decorator should addSchema to all the encapsulated tree # time=4.229ms
    
    # Subtest: after can access to a decorated instance and previous plugin decoration
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 23 - after can access to a decorated instance and previous plugin decoration # time=7.787ms
    
    # Subtest: decorate* should throw if called after ready
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 24 - decorate* should throw if called after ready # time=20.851ms
    
    # Subtest: decorate* should emit warning if an array is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 25 - decorate* should emit warning if an array is passed # time=26.226ms
    
    # Subtest: decorate* should emit warning if object type is passed
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 26 - decorate* should emit warning if object type is passed # time=27.328ms
    
    # Subtest: decorate* should not emit warning if object with getter/setter is passed
        1..0
    ok 27 - decorate* should not emit warning if object with getter/setter is passed # time=28.984ms
    
    # Subtest: decorate* should not emit warning if string,bool,numbers are passed
        1..0
    ok 28 - decorate* should not emit warning if string,bool,numbers are passed # time=49.215ms
    
    # Subtest: Request/reply decorators should be able to access the server instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 29 - Request/reply decorators should be able to access the server instance # time=15.054ms
    
    # Subtest: plugin required decorators
        1..0
    ok 30 - plugin required decorators # time=3.4ms
    
    # Subtest: decorateRequest/decorateReply empty string
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 31 - decorateRequest/decorateReply empty string # time=19.782ms
    
    # Subtest: decorateRequest/decorateReply is undefined
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 32 - decorateRequest/decorateReply is undefined # time=14.24ms
    
    # Subtest: decorateRequest/decorateReply is not set to a value
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 33 - decorateRequest/decorateReply is not set to a value # time=12.406ms
    
    # Subtest: decorateRequest with dependencies
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 34 - decorateRequest with dependencies # time=2.946ms
    
    # Subtest: decorateRequest with dependencies (functions)
        1..2
        ok 1 - expected to not throw
        ok 2 - expect truthy value
    ok 35 - decorateRequest with dependencies (functions) # time=1.245ms
    
    # Subtest: chain of decorators on Request
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 36 - chain of decorators on Request # time=14.672ms
    
    # Subtest: chain of decorators on Reply
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 37 - chain of decorators on Reply # time=13.205ms
    
    1..37
    # time=882.262ms
ok 22 - test/decorator.test.js # time=882.262ms

# Subtest: test/default-route.test.js
    # Subtest: should fail if defaultRoute is not a function
        1..1
        ok 1 - should be equal
    ok 1 - should fail if defaultRoute is not a function # time=19.498ms
    
    # Subtest: correctly sets, returns, and calls defaultRoute
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - correctly sets, returns, and calls defaultRoute # time=37.285ms
    
    1..2
    # time=65.776ms
ok 23 - test/default-route.test.js # time=65.776ms

# Subtest: test/delete.test.js
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=10.183ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=2.001ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=1.409ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.408ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.314ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.06ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=48.816ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=32.777ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=5.892ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=5.796ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=4.684ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=4.506ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=5.41ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=4.098ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.802ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=7.553ms
    
    1..17
    # time=299.876ms
ok 24 - test/delete.test.js # time=299.876ms

# Subtest: test/diagnostics-channel.test.js
    # Subtest: diagnostics_channel when present and subscribers
        1..3
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 1 - diagnostics_channel when present and subscribers # time=803.144ms
    
    # Subtest: diagnostics_channel when present and no subscribers
        1..1
        ok 1 - should be equal
    ok 2 - diagnostics_channel when present and no subscribers # time=17.33ms
    
    # Subtest: diagnostics_channel when not present
        1..1
        ok 1 - expected to not throw
    ok 3 - diagnostics_channel when not present # time=17.064ms
    
    1..3
    # time=850.796ms
ok 25 - test/diagnostics-channel.test.js # time=850.796ms

# Subtest: test/encapsulated-error-handler.test.js
    # Subtest: encapuslates an error handler
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - encapuslates an error handler # time=64.893ms
    
    # Subtest: onError hook nested
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - onError hook nested # time=11.572ms
    
    1..2
    # time=86.387ms
ok 26 - test/encapsulated-error-handler.test.js # time=86.387ms

# Subtest: test/esm/index.test.js
    # Subtest: named exports support
        ok 1 - should be equal
        1..1
    ok 1 - named exports support # time=32.371ms
    
    ok 2 - should be equal
    1..2
    # time=38.043ms
ok 27 - test/esm/index.test.js # time=38.043ms

# Subtest: test/fastify-instance.test.js
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=16.004ms
    
    # Subtest: fastify instance should contains ajv options
        1..1
        ok 1 - should be equivalent
    ok 2 - fastify instance should contains ajv options # time=6.443ms
    
    # Subtest: fastify instance should contains ajv options.plugins nested arrays
        1..1
        ok 1 - should be equivalent
    ok 3 - fastify instance should contains ajv options.plugins nested arrays # time=2.884ms
    
    # Subtest: fastify instance get invalid ajv options
        1..1
        ok 1 - expected to throw
    ok 4 - fastify instance get invalid ajv options # time=1.448ms
    
    # Subtest: fastify instance get invalid ajv options.plugins
        1..1
        ok 1 - expected to throw
    ok 5 - fastify instance get invalid ajv options.plugins # time=1.06ms
    
    # Subtest: fastify instance should contain default errorHandler
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 6 - fastify instance should contain default errorHandler # time=2.439ms
    
    # Subtest: errorHandler in plugin should be separate from the external one
        1..4
        ok 1 - should not be equivalent
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equivalent
    ok 7 - errorHandler in plugin should be separate from the external one # time=16.269ms
    
    1..7
    # time=68.974ms
ok 28 - test/fastify-instance.test.js # time=68.974ms

# Subtest: test/fluent-schema.test.js
    # Subtest: use fluent-json-schema object
        1..15
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 1 - use fluent-json-schema object # time=182.156ms
    
    # Subtest: use complex fluent-json-schema object
        1..1
        ok 1 - should not error
    ok 2 - use complex fluent-json-schema object # time=44.817ms
    
    # Subtest: use fluent schema and plain JSON schema
        1..1
        ok 1 - should not error
    ok 3 - use fluent schema and plain JSON schema # time=59.621ms
    
    # Subtest: Should call valueOf internally
        1..1
        ok 1 - should not error
    ok 4 - Should call valueOf internally # time=78.177ms
    
    1..4
    # time=378.465ms
ok 29 - test/fluent-schema.test.js # time=378.465ms

# Subtest: test/genReqId.test.js
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=61.399ms
    
    1..1
    # time=67.694ms
ok 30 - test/genReqId.test.js # time=67.694ms

# Subtest: test/get.test.js
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=10.042ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=2.504ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=2.661ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.307ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=2.232ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=1.847ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=2.41ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.612ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=3.106ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=47.107ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=7.006ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=7.33ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=5.162ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=8.387ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=5.709ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.672ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=5.034ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=5.466ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.578ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=4.324ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.218ms
    
    1..22
    # time=365.748ms
ok 31 - test/get.test.js # time=365.748ms

# Subtest: test/handler-context.test.js
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=52.814ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=14.512ms
    
    1..2
    # time=73.977ms
ok 32 - test/handler-context.test.js # time=73.977ms

# Subtest: test/head.test.js
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=8.66ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=2.157ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=1.444ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.421ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=40.587ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=9.318ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=10.99ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=9.277ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=4.006ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=3.481ms
    
    1..11
    # time=234.73ms
ok 33 - test/head.test.js # time=234.73ms

# Subtest: test/hooks-async.test.js
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - expect truthy value
        ok 21 - expect truthy value
    ok 1 - async hooks # time=135.096ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 2 - modify payload # time=39.902ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - onRequest hooks should be able to block a request # time=29.22ms
    
    # Subtest: preParsing hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - preParsing hooks should be able to modify the payload # time=17.711ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - preParsing hooks should handle errors # time=6.39ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 6 - preHandler hooks should be able to block a request # time=6.528ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - preValidation hooks should be able to block a request # time=25.139ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - preValidation hooks should be able to change request body before validation # time=71.437ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - preSerialization hooks should be able to modify the payload # time=17.037ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - preSerialization hooks should handle errors # time=19.026ms
    
    # Subtest: preValidation hooks should handle throwing null
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - preValidation hooks should handle throwing null # time=7.421ms
    
    # Subtest: preValidation hooks should handle throwing a string
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - preValidation hooks should handle throwing a string # time=8.819ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 13 - onRequest hooks should be able to block a request (last hook) # time=6.169ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - preHandler hooks should be able to block a request (last hook) # time=9.748ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - onRequest respond with a stream # time=10.605ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - preHandler respond with a stream # time=8.921ms
    
    # Subtest: Should log a warning if is an async function with `done`
        # Subtest: 3 arguments
            1..1
            ok 1 - expect truthy value
        ok 1 - 3 arguments # time=1.662ms
        
        # Subtest: 4 arguments
            1..3
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect truthy value
        ok 2 - 4 arguments # time=1.906ms
        
        1..2
    ok 17 - Should log a warning if is an async function with `done` # time=13.802ms
    
    # Subtest: early termination, onRequest async
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 18 - early termination, onRequest async # time=15.42ms
    
    # Subtest: The this should be the same of the encapsulation level
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        1..4
    ok 19 - The this should be the same of the encapsulation level # time=12.704ms
    
    # Subtest: preSerializationEnd should handle errors if the serialize method throws
        # Subtest: works with sync preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 1 - works with sync preSerialization # time=19.983ms
        
        # Subtest: works with async preSerialization
            1..2
            ok 1 - should not error
            ok 2 - should not be equal
        ok 2 - works with async preSerialization # time=21.632ms
        
        1..2
    ok 20 - preSerializationEnd should handle errors if the serialize method throws # time=52.666ms
    
    1..20
    # time=535.306ms
ok 34 - test/hooks-async.test.js # time=535.306ms

# Subtest: test/hooks.on-ready.test.js
    # Subtest: onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - should not error
    ok 1 - onReady should be called in order # time=87.07ms
    
    # Subtest: async onReady should be called in order
        1..7
        ok 1 - called in root
        ok 2 - the this binding is the right instance
        ok 3 - called in childOne
        ok 4 - the this binding is the right instance
        ok 5 - called in childTwo
        ok 6 - the this binding is the right instance
        ok 7 - ready
    ok 2 - async onReady should be called in order # time=10.753ms
    
    # Subtest: mix ready and onReady
        1..2
        ok 1 - should be equal
        ok 2 - ready hooks execute once
    ok 3 - mix ready and onReady # time=14.861ms
    
    # Subtest: listen and onReady order
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - trigger the onReady
        ok 9 - do not trigger the onReady
    ok 4 - listen and onReady order # time=23.905ms
    
    # Subtest: multiple ready calls
        1..11
        ok 1 - ready and hooks not triggered yet
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - trigger the onReady
        ok 10 - do not trigger the onReady
        ok 11 - do not trigger the onReady
    ok 5 - multiple ready calls # time=9.685ms
    
    # Subtest: onReady should manage error in sync
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 6 - onReady should manage error in sync # time=6.247ms
    
    # Subtest: onReady should manage error in async
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 7 - onReady should manage error in async # time=31.319ms
    
    # Subtest: onReady should manage sync error
        1..4
        ok 1 - called in root
        ok 2 - called in childOne
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 8 - onReady should manage sync error # time=9.863ms
    
    # Subtest: onReady can not add decorators or application hooks
        1..3
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should not error
    ok 9 - onReady can not add decorators or application hooks # time=5.313ms
    
    # Subtest: onReady cannot add lifecycle hooks
        1..5
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
    ok 10 - onReady cannot add lifecycle hooks # time=9.507ms
    
    # Subtest: onReady throw loading error
        1..1
        ok 1 - expect truthy value
    ok 11 - onReady throw loading error # time=2.019ms
    
    # Subtest: onReady does not call done
        1..6
        ok 1 - called in root
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 12 - onReady does not call done # time=514.426ms
    
    # Subtest: onReady execution order
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - onReady execution order # time=3.368ms
    
    # Subtest: ready return the server with callback
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 14 - ready return the server with callback # time=45.748ms
    
    # Subtest: ready return the server with Promise
        1..1
        ok 1 - should be equivalent
    ok 15 - ready return the server with Promise # time=5.337ms
    
    # Subtest: ready return registered
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 16 - ready return registered # time=8.969ms
    
    1..16
    # time=805.279ms
ok 35 - test/hooks.on-ready.test.js # time=805.279ms

# Subtest: test/hooks.test.js
    # Subtest: hooks
        1..43
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - (unnamed test)
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - expect truthy value
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
        ok 26 - should be equal
        ok 27 - should be equal
        ok 28 - should be equal
        ok 29 - should be equal
        ok 30 - should be equal
        ok 31 - should be equal
        ok 32 - expect truthy value
        ok 33 - expect truthy value
        ok 34 - expect truthy value
        ok 35 - expect truthy value
        ok 36 - should not error
        ok 37 - should be equal
        ok 38 - should be equal
        ok 39 - should be equivalent
        ok 40 - should not error
        ok 41 - should be equal
        ok 42 - should not error
        ok 43 - should be equal
    ok 1 - hooks # time=140.115ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=20.367ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=5.892ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=21.556ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=11.631ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=3.293ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=6.64ms
    
    # Subtest: onRoute hook should be called / 3
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - should not error
    ok 8 - onRoute hook should be called / 3 # time=15.316ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 4
        1..4
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - should not error
    ok 9 - onRoute hook should be called (encapsulation support) / 4 # time=5.266ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 5
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 10 - onRoute hook should be called (encapsulation support) / 5 # time=7.154ms
    
    # Subtest: onRoute hook should be called (encapsulation support) / 6
        1..1
        ok 1 - should not error
    ok 11 - onRoute hook should be called (encapsulation support) / 6 # time=3.929ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 12 - onRoute should keep the context # time=4.62ms
    
    # Subtest: onRoute hook should pass correct route
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 13 - onRoute hook should pass correct route # time=5.006ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..11
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
    ok 14 - onRoute hook should pass correct route with custom prefix # time=5.52ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - type is function
        ok 6 - should not error
    ok 15 - onRoute hook should pass correct route with custom options # time=4.284ms
    
    # Subtest: onRoute hook should receive any route option
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 16 - onRoute hook should receive any route option # time=4.706ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 17 - onRoute hook should preserve system route configuration # time=7.064ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 18 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=3.982ms
    
    # Subtest: onRoute hook should be called once when prefixTrailingSlash
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onRoute hook should be called once when prefixTrailingSlash # time=5.616ms
    
    # Subtest: onRoute hook should able to change the route url
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 20 - onRoute hook should able to change the route url # time=9.16ms
    
    # Subtest: onRoute hook that throws should be caught
        1..1
        ok 1 - expect truthy value
    ok 21 - onRoute hook that throws should be caught # time=5.525ms
    
    # Subtest: onRoute hook with many prefix
        1..3
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should not error
    ok 22 - onRoute hook with many prefix # time=5.573ms
    
    # Subtest: onRoute hook should not be called when it registered after route
        1..3
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
    ok 23 - onRoute hook should not be called when it registered after route # time=2.768ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - onResponse hook should log request error # time=55.178ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - onResponse hook should support encapsulation / 1 # time=11.789ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 26 - onResponse hook should support encapsulation / 2 # time=2.36ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 27 - onResponse hook should support encapsulation / 3 # time=13.223ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 28 - onSend hook should support encapsulation / 1 # time=2.282ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 29 - onSend hook should support encapsulation / 2 # time=9.076ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 30 - onSend hook is called after payload is serialized and headers are set # time=14.188ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 31 - modify payload # time=4.355ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 32 - clear payload # time=2.882ms
    
    # Subtest: onSend hook throws
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 33 - onSend hook throws # time=9.817ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 34 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=5.864ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 35 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=15.183ms
    
    # Subtest: Content-Length header should be updated if onSend hook modifies the payload
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 36 - Content-Length header should be updated if onSend hook modifies the payload # time=13.206ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 37 - cannot add hook after binding # time=4.912ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 38 - onRequest hooks should be able to block a request # time=7.136ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 39 - preValidation hooks should be able to block a request # time=3.932ms
    
    # Subtest: preValidation hooks should be able to change request body before validation
        1..4
        ok 1 - (unnamed test)
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 40 - preValidation hooks should be able to change request body before validation # time=89.678ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 41 - preParsing hooks should be able to block a request # time=3.713ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 42 - preHandler hooks should be able to block a request # time=3.774ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - onRequest hooks should be able to block a request (last hook) # time=3.758ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - preHandler hooks should be able to block a request (last hook) # time=3.866ms
    
    # Subtest: preParsing hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - preParsing hooks should handle errors # time=3.725ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 46 - onRequest respond with a stream # time=9.459ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 47 - preHandler respond with a stream # time=5.081ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 48 - Register an hook after a plugin inside a plugin # time=6.95ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 49 - Register an hook after a plugin inside a plugin (with preHandler option) # time=5.403ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 50 - Register hooks inside a plugin after an encapsulated plugin # time=5.748ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 51 - onRequest hooks should run in the order in which they are defined # time=6.945ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 52 - preHandler hooks should run in the order in which they are defined # time=6.824ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 53 - onSend hooks should run in the order in which they are defined # time=6.672ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 54 - onResponse hooks should run in the order in which they are defined # time=6.753ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 55 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=4.066ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 56 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=3.417ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 57 - If the content type has been set inside an hook it should not be changed # time=3.481ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 58 - request in onRequest, preParsing, preValidation and onResponse # time=11.697ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 59 - preValidation hook should support encapsulation / 1 # time=9.043ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 60 - preValidation hook should support encapsulation / 2 # time=3.303ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 61 - preValidation hook should support encapsulation / 3 # time=42.772ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 62 - onError hook # time=4.611ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 63 - reply.send should throw if called inside the onError hook # time=4.193ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=4.478ms
        
        1..1
    ok 64 - onError hook with setErrorHandler # time=8.916ms
    
    # Subtest: preParsing hook should run before parsing and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 65 - preParsing hook should run before parsing and be able to modify the payload # time=7.646ms
    
    # Subtest: preParsing hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 66 - preParsing hooks should run in the order in which they are defined # time=6.586ms
    
    # Subtest: preParsing hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 67 - preParsing hooks should support encapsulation # time=9.964ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 68 - preParsing hook should support encapsulation / 1 # time=11.541ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 69 - preParsing hook should support encapsulation / 2 # time=3.643ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 70 - preParsing hook should support encapsulation / 3 # time=28.929ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 71 - preSerialization hook should run before serialization and be able to modify the payload # time=60.037ms
    
    # Subtest: preSerialization hook should be able to throw errors which are validated against schema response
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        1..6
    ok 72 - preSerialization hook should be able to throw errors which are validated against schema response # time=21.464ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 73 - preSerialization hook which returned error should still run onError hooks # time=6.348ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 74 - preSerialization hooks should run in the order in which they are defined # time=7.903ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 75 - preSerialization hooks should support encapsulation # time=10.757ms
    
    # Subtest: onRegister hook should be called / 1
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should not error
    ok 76 - onRegister hook should be called / 1 # time=3.755ms
    
    # Subtest: onRegister hook should be called / 2
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
    ok 77 - onRegister hook should be called / 2 # time=4.385ms
    
    # Subtest: onRegister hook should be called / 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
    ok 78 - onRegister hook should be called / 3 # time=5.525ms
    
    # Subtest: onRegister hook should be called (encapsulation)
        1..1
        ok 1 - should not error
    ok 79 - onRegister hook should be called (encapsulation) # time=2.238ms
    
    # Subtest: early termination, onRequest
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 80 - early termination, onRequest # time=3.968ms
    
    # Subtest: reply.send should throw if undefined error is thrown
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 81 - reply.send should throw if undefined error is thrown # time=6.469ms
    
    # Subtest: reply.send should throw if undefined error is thrown at preParsing hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 82 - reply.send should throw if undefined error is thrown at preParsing hook # time=15.655ms
    
    # Subtest: reply.send should throw if undefined error is thrown at onSend hook
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 83 - reply.send should throw if undefined error is thrown at onSend hook # time=4.659ms
    
    # Subtest: onTimeout should be triggered
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 84 - onTimeout should be triggered # time=533.067ms
    
    # Subtest: onTimeout should be triggered and socket _meta is set
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - onTimeout
        ok 5 - type is Error
        ok 6 - should be equal
    ok 85 - onTimeout should be triggered and socket _meta is set # time=508.328ms
    
    1..85
    # time=2036.351ms
ok 36 - test/hooks.test.js # time=2036.351ms

# Subtest: test/http2/closing.test.js
    # Subtest: http/2 request while fastify closing
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=11.294ms
        
        1..3
    ok 1 - http/2 request while fastify closing # time=55.547ms
    
    # Subtest: http/2 request while fastify closing - return503OnClosing: false
        ok 1 - http2 successfully loaded
        ok 2 - should not error
        # Subtest: return 200
            ok 1 - should be equal
            1..1
        ok 3 - return 200 # time=4.499ms
        
        1..3
    ok 2 - http/2 request while fastify closing - return503OnClosing: false # time=12.587ms
    
    # Subtest: http/2 closes successfully with async await
        1..0
    ok 3 - http/2 closes successfully with async await # time=111.75ms
    
    # Subtest: https/2 closes successfully with async await
        1..0
    ok 4 - https/2 closes successfully with async await # time=11.734ms
    
    # Subtest: http/2 server side session emits a timeout event
        ok 1 - should be equal
        1..1
    ok 5 - http/2 server side session emits a timeout event # time=106.852ms
    
    1..5
    # time=323.526ms
ok 37 - test/http2/closing.test.js # time=323.526ms

# Subtest: test/http2/constraint.test.js
    # Subtest: A route supports host constraints under http2 protocol and secure connection
        1..5
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request - no constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request - no constrain # time=42.009ms
        
        # Subtest: https get request - constrain
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - https get request - constrain # time=13.14ms
        
        # Subtest: https get request - constrain - not found
            1..1
            ok 1 - should be equal
        ok 5 - https get request - constrain - not found # time=10.195ms
        
    ok 1 - A route supports host constraints under http2 protocol and secure connection # time=148.65ms
    
    1..1
    # time=177.817ms
ok 38 - test/http2/constraint.test.js # time=177.817ms

# Subtest: test/http2/head.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http HEAD request
        1..1
        ok 1 - should be equal
    ok 3 - http HEAD request # time=59.048ms
    
    1..3
    # time=135.32ms
ok 39 - test/http2/head.test.js # time=135.32ms

# Subtest: test/http2/missing-http2-module.test.js
    # Subtest: should throw when http2 module cannot be found
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should throw when http2 module cannot be found # time=11.368ms
    
    1..1
    # time=17.153ms
ok 40 - test/http2/missing-http2-module.test.js # time=17.153ms

# Subtest: test/http2/plain.test.js
    ok 1 - http2 successfully loaded
    ok 2 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 3 - http get request # time=38.37ms
    
    # Subtest: http hostname
        1..1
        ok 1 - should be equal
    ok 4 - http hostname # time=6.936ms
    
    1..4
    # time=162.319ms
ok 41 - test/http2/plain.test.js # time=162.319ms

# Subtest: test/http2/secure-with-fallback.test.js
    # Subtest: secure with fallback
        1..7
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get error
            1..1
            ok 1 - should be equal
        ok 3 - https get error # time=43.258ms
        
        # Subtest: https post
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 4 - https post # time=22.879ms
        
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - https get request # time=14.379ms
        
        # Subtest: http1 get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 6 - http1 get request # time=24.507ms
        
        # Subtest: http1 get error
            1..2
            ok 1 - should not error
            ok 2 - should be equal
        ok 7 - http1 get error # time=7.555ms
        
    ok 1 - secure with fallback # time=191.587ms
    
    1..1
    # time=218.187ms
ok 42 - test/http2/secure-with-fallback.test.js # time=218.187ms

# Subtest: test/http2/secure.test.js
    # Subtest: secure
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - https get request # time=39.543ms
        
        # Subtest: https get request without trust proxy - protocol
            1..2
            ok 1 - should be equivalent
            ok 2 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=21.808ms
        
    ok 1 - secure # time=144.929ms
    
    1..1
    # time=172.857ms
ok 43 - test/http2/secure.test.js # time=172.857ms

# Subtest: test/http2/unknown-http-method.test.js
    ok 1 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - http UNKNOWN_METHOD request # time=34.726ms
    
    1..2
    # time=94.011ms
ok 44 - test/http2/unknown-http-method.test.js # time=94.011ms

# Subtest: test/https/custom-https-server.test.js
    # Subtest: Should support a custom https server
        1..4
        ok 1 - it is called twice for every HOST interface
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Should support a custom https server # time=82.318ms
    
    1..1
    # time=115.148ms
ok 45 - test/https/custom-https-server.test.js # time=115.148ms

# Subtest: test/https/https.test.js
    # Subtest: https
        1..4
        ok 1 - Key/cert successfully loaded
        ok 2 - should not error
        # Subtest: https get request
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - https get request # time=40.764ms
        
        # Subtest: https get request without trust proxy - protocol
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 4 - https get request without trust proxy - protocol # time=15.563ms
        
    ok 1 - https # time=136.215ms
    
    1..1
    # time=165.269ms
ok 46 - test/https/https.test.js # time=165.269ms

# Subtest: test/imports.test.js
    # Subtest: should import as default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - should import as default # time=688.446ms
    
    # Subtest: should import as esm
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 2 - should import as esm # time=1.539ms
    
    1..2
    # time=699.347ms
ok 47 - test/imports.test.js # time=699.347ms

# Subtest: test/inject.test.js
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=18.677ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=620.369ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.51ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=16.926ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=14.997ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=6.155ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=5.332ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=5.823ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=17.179ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=26.324ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.38ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=8.409ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=18.164ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=8.234ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=23.039ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=504.493ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=13.627ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=18.192ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.007ms
    
    # Subtest: should support builder-style injection with ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - should support builder-style injection with ready app # time=15.785ms
    
    # Subtest: should support builder-style injection with non-ready app
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
    ok 21 - should support builder-style injection with non-ready app # time=4.835ms
    
    # Subtest: should handle errors in builder-style injection correctly
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 22 - should handle errors in builder-style injection correctly # time=3.797ms
    
    1..22
    # time=1391.516ms
ok 48 - test/inject.test.js # time=1391.516ms

# Subtest: test/internals/all.test.js
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=49.202ms
    
    1..1
    # time=52.836ms
ok 49 - test/internals/all.test.js # time=52.836ms

# Subtest: test/internals/contentTypeParser.test.js
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=15.113ms
    
    # Subtest: Should support Webpack and faux modules
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Should support Webpack and faux modules # time=9.075ms
    
    1..2
    # time=30.903ms
ok 50 - test/internals/contentTypeParser.test.js # time=30.903ms

# Subtest: test/internals/decorator.test.js
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=3.939ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=1.336ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=0.839ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=0.815ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.782ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.174ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=0.717ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=1.474ms
    
    1..8
    # time=43.631ms
ok 51 - test/internals/decorator.test.js # time=43.631ms

# Subtest: test/internals/handleRequest.test.js
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 1 - handleRequest function - sent reply # time=5.814ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - invoke with error # time=1.243ms
    
    # Subtest: handler function - invalid schema
        1..1
        ok 1 - errorHandler called
    ok 3 - handler function - invalid schema # time=68.05ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 4 - handler function - reply # time=2.793ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 5 - handler function - preValidationCallback with finished response # time=0.737ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 6 - request should be defined in onSend Hook on post request with content type application/json # time=256.992ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=11.187ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=24.479ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 9 - request should respond with an error if an unserialized payload is sent inside an async handler # time=32.455ms
    
    1..9
    # time=424.259ms
ok 52 - test/internals/handleRequest.test.js # time=424.259ms

# Subtest: test/internals/hookRunner.test.js
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=9.477ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=8.439ms
    
    # Subtest: hookRunner - Should handle throw
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 3 - hookRunner - Should handle throw # time=2.799ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 4 - hookRunner - Should handle promises # time=24.112ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 5 - hookRunner - In case of error should skip to done (with promises) # time=3.031ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - hookRunner - Be able to exit before its natural end # time=1.638ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - hookRunner - Promises that resolve to a value do not change the state # time=2.015ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - onSendHookRunner - Basic # time=9.259ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 9 - onSendHookRunner - Can change the payload # time=4.35ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 10 - onSendHookRunner - In case of error should skip to done # time=8.172ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 11 - onSendHookRunner - Should handle promises # time=3.512ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 12 - onSendHookRunner - In case of error should skip to done (with promises) # time=14.101ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - onSendHookRunner - Be able to exit before its natural end # time=2.893ms
    
    1..13
    # time=145.012ms
ok 53 - test/internals/hookRunner.test.js # time=145.012ms

# Subtest: test/internals/hooks.test.js
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.682ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=5.222ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.232ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=1.942ms
    
    1..4
    # time=55.696ms
ok 54 - test/internals/hooks.test.js # time=55.696ms

# Subtest: test/internals/initialConfig.test.js
    # Subtest: Fastify.initialConfig is an object
        1..1
        ok 1 - type is object
    ok 1 - Fastify.initialConfig is an object # time=14.776ms
    
    # Subtest: without options passed to Fastify, initialConfig should expose default values
        1..1
        ok 1 - should be equivalent
    ok 2 - without options passed to Fastify, initialConfig should expose default values # time=7.938ms
    
    # Subtest: Fastify.initialConfig should expose all options
        1..20
        ok 1 - should be equal
        ok 2 - for security reason the key cert is hidden
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
    ok 3 - Fastify.initialConfig should expose all options # time=9.32ms
    
    # Subtest: Should throw if you try to modify Fastify.initialConfig
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 4 - Should throw if you try to modify Fastify.initialConfig # time=2.804ms
    
    # Subtest: We must avoid shallow freezing and ensure that the whole object is freezed
        1..4
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - key cert removed
    ok 5 - We must avoid shallow freezing and ensure that the whole object is freezed # time=14.909ms
    
    # Subtest: https value check
        1..1
        ok 1 - expect falsey value
    ok 6 - https value check # time=1.17ms
    
    # Subtest: Return an error if options do not match the validation schema
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - (unnamed test)
    ok 7 - Return an error if options do not match the validation schema # time=61.023ms
    
    # Subtest: Original options must not be frozen
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Original options must not be frozen # time=2.321ms
    
    # Subtest: Original options must not be altered (test deep cloning)
        1..3
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 9 - Original options must not be altered (test deep cloning) # time=4.529ms
    
    # Subtest: Should not have issues when passing stream options to Pino.js
        1..15
        ok 1 - type is object
        ok 2 - should be equivalent
        ok 3 - listen at log message is ok
        ok 4 - should not error
        ok 5 - reqId is defined
        ok 6 - req is defined
        ok 7 - message is set
        ok 8 - method is get
        ok 9 - expect truthy value
        ok 10 - should be equal
        ok 11 - reqId is defined
        ok 12 - res is defined
        ok 13 - message is set
        ok 14 - statusCode is 200
        ok 15 - responseTime is defined
    ok 10 - Should not have issues when passing stream options to Pino.js # time=44.059ms
    
    # Subtest: deepFreezeObject() should not throw on TypedArray
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - (unnamed test)
    ok 11 - deepFreezeObject() should not throw on TypedArray # time=1.44ms
    
    # Subtest: Fastify.initialConfig should accept the deprecated versioning option
        1..1
        ok 1 - should be equal
    ok 12 - Fastify.initialConfig should accept the deprecated versioning option # time=4.622ms
    
    # Subtest: pluginTimeout should be parsed correctly
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 13 - pluginTimeout should be parsed correctly # time=2.716ms
    
    1..13
    # time=242.872ms
ok 55 - test/internals/initialConfig.test.js # time=242.872ms

# Subtest: test/internals/logger.test.js
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=6.528ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=80.024ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=11.575ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - The logger should error if both stream and file destination are given # time=1.494ms
    
    # Subtest: The serializer prevent fails if the request socket is undefined
        1..1
        ok 1 - should be equivalent
    ok 5 - The serializer prevent fails if the request socket is undefined # time=4.685ms
    
    1..5
    # time=114.326ms
ok 56 - test/internals/logger.test.js # time=114.326ms

# Subtest: test/internals/plugin.test.js
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=6.314ms
    
    # Subtest: getPluginName should return plugin name if the file is cached
        1..1
        ok 1 - should be equal
    ok 2 - getPluginName should return plugin name if the file is cached # time=2.034ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 3 - getMeta should return the object stored with the 'plugin-meta' symbol # time=5.138ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 4 - checkDecorators should check if the given decorator is present in the instance # time=1.805ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 5 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.311ms
    
    # Subtest: checkDecorators should accept optional decorators
        1..1
        ok 1 - Everything ok
    ok 6 - checkDecorators should accept optional decorators # time=0.92ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 7 - checkDependencies should check if the given dependency is present in the instance # time=1.138ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 8 - checkDependencies should check if the given dependency is present in the instance (errored) # time=23.972ms
    
    1..8
    # time=93.7ms
ok 57 - test/internals/plugin.test.js # time=93.7ms

# Subtest: test/internals/reply-serialize.test.js
    # Subtest: Reply\#compileSerializationSchema
        1..4
        # Subtest: Should return a serialization function
            1..4
            ok 1 - type is Function
            ok 2 - type is string
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Should return a serialization function # time=77.511ms
        
        # Subtest: Should reuse the serialize fn across multiple invocations - Route without schema
            1..17
            ok 1 - build the schema compilation function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - Are the same validate function
            ok 6 - type is Function
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - Are the same validate function
            ok 10 - type is Function
            ok 11 - should be equal
            ok 12 - should be equal
            ok 13 - Are the same validate function
            ok 14 - type is Function
            ok 15 - should be equal
            ok 16 - should be equal
            ok 17 - should be equal
        ok 2 - Should reuse the serialize fn across multiple invocations - Route without schema # time=18.824ms
        
        # Subtest: Should use the custom serializer compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - {"hello":"world"}
            ok 8 - should be equivalent
            ok 9 - {"hello":"world"}
            ok 10 - should be equal
        ok 3 - Should use the custom serializer compiler for the route # time=25.585ms
        
        # Subtest: Should build a WeakMap for cache when called
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
            ok 4 - should be equal
        ok 4 - Should build a WeakMap for cache when called # time=8.462ms
        
    ok 1 - Reply\#compileSerializationSchema # time=155.381ms
    
    # Subtest: Reply\#getSerializationFunction
        1..3
        # Subtest: Should retrieve the serialization function from the Schema definition
            1..9
            ok 1 - type is Function
            ok 2 - type is Function
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - expect falsey value
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
        ok 1 - Should retrieve the serialization function from the Schema definition # time=21.625ms
        
        # Subtest: Should retrieve the serialization function from the cached one
            1..6
            ok 1 - type is Function
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
        ok 2 - Should retrieve the serialization function from the cached one # time=8.092ms
        
        # Subtest: Should not instantiate a WeakMap if it is not needed
            1..4
            ok 1 - expect falsey value
            ok 2 - should be equal
            ok 3 - expect falsey value
            ok 4 - should be equal
        ok 3 - Should not instantiate a WeakMap if it is not needed # time=21.721ms
        
    ok 2 - Reply\#getSerializationFunction # time=64.69ms
    
    # Subtest: Reply\#serializeInput
        1..5
        # Subtest: Should throw if missed serialization function from HTTP status
            1..2
            ok 1 - should be equal
            ok 2 - should be equivalent
        ok 1 - Should throw if missed serialization function from HTTP status # time=43.765ms
        
        # Subtest: Should use a serializer fn from HTTP status
            1..4
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Should use a serializer fn from HTTP status # time=22.901ms
        
        # Subtest: Should compile a serializer out of a schema if serializer fn missed
            1..10
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 3 - Should compile a serializer out of a schema if serializer fn missed # time=11.81ms
        
        # Subtest: Should use a cached serializer fn
            1..12
            ok 1 - should be equal
            ok 2 - expect falsey value
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
            ok 11 - should be equal
            ok 12 - should be equal
        ok 4 - Should use a cached serializer fn # time=13.51ms
        
        # Subtest: Should instantiate a WeakMap after first call
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 5 - Should instantiate a WeakMap after first call # time=6.419ms
        
    ok 3 - Reply\#serializeInput # time=121.704ms
    
    1..3
    # time=347.811ms
ok 58 - test/internals/reply-serialize.test.js # time=347.811ms

# Subtest: test/internals/reply.test.js
    # Subtest: Once called, Reply should return an object with methods
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.442ms
    
    # Subtest: reply.send will logStream error and destroy the stream
        1..1
        ok 1 - Error not logged and not streamed
    ok 2 - reply.send will logStream error and destroy the stream # time=4.759ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - Converting circular structure to JSON
    ok 3 - reply.send throw with circular JSON # time=1.2ms
    
    # Subtest: reply.send returns itself
        1..1
        ok 1 - should be equal
    ok 4 - reply.send returns itself # time=1.835ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - reply.serializer should set a custom serializer # time=1.529ms
    
    # Subtest: reply.serializer should support running preSerialization hooks
        1..3
        ok 1 - preSerialization
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - reply.serializer should support running preSerialization hooks # time=659.011ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 7 - reply.serialize should serialize payload # time=0.928ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 8 - reply.serialize should serialize payload with a custom serializer # time=0.739ms
    
    # Subtest: reply.serialize should serialize payload with a context default serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 9 - reply.serialize should serialize payload with a context default serializer # time=0.859ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - reply.serialize should serialize payload with Fastify instance # time=21.398ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=31.07ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=13.09ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=8.533ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=5.388ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=3.782ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=3.127ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=6.879ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=7.126ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=3.697ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=6.251ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=6.702ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.81ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=3.055ms
        
        # Subtest: redirect with async function to `/` - 10
            1..1
            ok 1 - should be equal
        ok 15 - redirect with async function to `/` - 10 # time=3.007ms
        
        1..15
    ok 11 - within an instance # time=171.55ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - buffer without content type should send a application/octet-stream and raw buffer # time=14.203ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - buffer with content type should not send application/octet-stream # time=8.919ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - stream with content type should not send application/octet-stream # time=33.547ms
    
    # Subtest: stream without content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - stream without content type should not send application/octet-stream # time=108.196ms
    
    # Subtest: stream using reply.raw.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 16 - stream using reply.raw.writeHead should return customize headers # time=18.765ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - plain string without content type should send a text/plain # time=7.195ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - plain string with content type should be sent unmodified # time=7.353ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - plain string with content type and custom serializer should be serialized # time=9.162ms
    
    # Subtest: plain string with content type application/json should NOT be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - plain string with content type application/json should NOT be serialized as json # time=7.444ms
    
    # Subtest: plain string with custom json content type should NOT be serialized as json
        1..19
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 21 - plain string with custom json content type should NOT be serialized as json # time=27.386ms
    
    # Subtest: non-string with content type application/json SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - non-string with content type application/json SHOULD be serialized as json # time=12.033ms
    
    # Subtest: non-string with custom json's content-type SHOULD be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - non-string with custom json's content-type SHOULD be serialized as json # time=7.873ms
    
    # Subtest: non-string with custom json content type SHOULD be serialized as json
        1..16
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 24 - non-string with custom json content type SHOULD be serialized as json # time=17.609ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - error object with a content type that is not application/json should work # time=8.449ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 26 - undefined payload should be sent as-is # time=10.782ms
    
    # Subtest: for HEAD method, no body should be sent but content-length should be
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
    ok 27 - for HEAD method, no body should be sent but content-length should be # time=9.967ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 28 - reply.send(new NotFound()) should not invoke the 404 handler # time=16.732ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 29 - reply can set multiple instances of same header # time=8.168ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - reply.hasHeader returns correct values # time=5.673ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 31 - reply.getHeader returns correct values # time=7.701ms
    
    # Subtest: reply.getHeader returns raw header if there is not in the reply headers
        1..1
        ok 1 - should be equal
    ok 32 - reply.getHeader returns raw header if there is not in the reply headers # time=0.89ms
    
    # Subtest: reply.getHeaders returns correct values
        1..3
        ok 1 - should be equivalent strictly
        ok 2 - should be equivalent strictly
        ok 3 - should not error
    ok 33 - reply.getHeaders returns correct values # time=4.968ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 34 - reply.removeHeader can remove the value # time=6.576ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 35 - reply.header can reset the value # time=6.047ms
    
    # Subtest: reply.hasHeader computes raw and fastify headers
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - (unnamed test)
    ok 36 - reply.hasHeader computes raw and fastify headers # time=5.61ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 37 - Reply should handle JSON content type with a charset # time=23.068ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 38 - Content type and charset set previously # time=3.865ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 39 - .status() is an alias for .code() # time=6.515ms
    
    # Subtest: .statusCode is getter and setter
        1..4
        ok 1 - 200
        ok 2 - 418
        ok 3 - should not error
        ok 4 - should be equal
    ok 40 - .statusCode is getter and setter # time=4.587ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 41 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=12.984ms
    
    # Subtest: should emit deprecation warning when trying to modify the reply.sent property
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 42 - should emit deprecation warning when trying to modify the reply.sent property # time=10.714ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 43 - should throw error when passing falsy value to reply.sent # time=4.224ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - (unnamed test)
    ok 44 - should throw error when attempting to set reply.sent more than once # time=4.957ms
    
    # Subtest: should not throw error when attempting to set reply.sent if the underlining request was sent
        1..3
        ok 1 - expected to not throw
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 45 - should not throw error when attempting to set reply.sent if the underlining request was sent # time=4.298ms
    
    # Subtest: reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - should be equal
    ok 46 - reply.getResponseTime() should return 0 before the timer is initialised on the reply by setting up response listeners # time=0.614ms
    
    # Subtest: reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners
        1..1
        ok 1 - expect truthy value
    ok 47 - reply.getResponseTime() should return a number greater than 0 after the timer is initialised on the reply by setting up response listeners # time=4.028ms
    
    # Subtest: reply.getResponseTime() should return the time since a request started while inflight
        1..1
        ok 1 - should not be equal
    ok 48 - reply.getResponseTime() should return the time since a request started while inflight # time=3.494ms
    
    # Subtest: reply.getResponseTime() should return the same value after a request is finished
        1..1
        ok 1 - should be equal
    ok 49 - reply.getResponseTime() should return the same value after a request is finished # time=3.639ms
    
    # Subtest: reply should use the custom serializer
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 50 - reply should use the custom serializer # time=6.319ms
    
    # Subtest: reply should use the right serializer in encapsulated context
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 51 - reply should use the right serializer in encapsulated context # time=19.491ms
    
    # Subtest: reply should use the right serializer in deep encapsulated context
        1..8
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 52 - reply should use the right serializer in deep encapsulated context # time=8.447ms
    
    # Subtest: reply should use the route serializer
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
    ok 53 - reply should use the route serializer # time=3.438ms
    
    # Subtest: cannot set the replySerializer when the server is running
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 54 - cannot set the replySerializer when the server is running # time=4.58ms
    
    # Subtest: reply should not call the custom serializer for errors and not found
        1..9
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
    ok 55 - reply should not call the custom serializer for errors and not found # time=6.533ms
    
    # Subtest: reply.then
        1..4
        # Subtest: without an error
            1..1
            ok 1 - fulfilled called
        ok 1 - without an error # time=9.207ms
        
        # Subtest: with an error
            1..1
            ok 1 - should be equal
        ok 2 - with an error # time=0.995ms
        
        # Subtest: with error but without reject callback
            1..1
            ok 1 - (unnamed test)
        ok 3 - with error but without reject callback # time=0.564ms
        
        # Subtest: with error, without reject callback, with logger
            1..1
            ok 1 - should be equal
        ok 4 - with error, without reject callback, with logger # time=1.044ms
        
    ok 56 - reply.then # time=17.352ms
    
    # Subtest: reply.sent should read from response.writableEnded if it is defined
        1..1
        ok 1 - should be equal
    ok 57 - reply.sent should read from response.writableEnded if it is defined # time=0.404ms
    
    # Subtest: redirect to an invalid URL should not crash the server
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        1..7
    ok 58 - redirect to an invalid URL should not crash the server # time=11.799ms
    
    # Subtest: invalid response headers should not crash the server
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 59 - invalid response headers should not crash the server # time=7.479ms
    
    # Subtest: invalid response headers when sending back an error
        ok 1 - only the first invalid header is logged
        ok 2 - should be equal
        ok 3 - should be equivalent
        1..3
    ok 60 - invalid response headers when sending back an error # time=5.824ms
    
    # Subtest: invalid response headers and custom error handler
        ok 1 - custom error handler receives the error
        ok 2 - only the first invalid header is logged
        ok 3 - should be equal
        ok 4 - should be equivalent
        1..4
    ok 61 - invalid response headers and custom error handler # time=6.172ms
    
    1..61
    # time=1514.46ms
ok 59 - test/internals/reply.test.js # time=1514.46ms

# Subtest: test/internals/request-validate.test.js
    # Subtest: \#compileValidationSchema
        1..5
        # Subtest: Should return a function - Route without schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 1 - Should return a function - Route without schema # time=174.506ms
        
        # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
            1..16
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - Are the same validate function
            ok 5 - type is Function
            ok 6 - expect truthy value
            ok 7 - expect falsey value
            ok 8 - Are the same validate function
            ok 9 - type is Function
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - Are the same validate function
            ok 13 - type is Function
            ok 14 - expect truthy value
            ok 15 - expect falsey value
            ok 16 - should be equal
        ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=58.697ms
        
        # Subtest: Should return a function - Route with schema
            1..3
            ok 1 - type is Function
            ok 2 - expect truthy value
            ok 3 - expect falsey value
        ok 3 - Should return a function - Route with schema # time=53.219ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - should be equivalent
            ok 9 - expect truthy value
            ok 10 - should be equal
        ok 4 - Should use the custom validator compiler for the route # time=11.69ms
        
        # Subtest: Should instantiate a WeakMap when executed for first time
            1..5
            ok 1 - should be equal
            ok 2 - type is Function
            ok 3 - type is WeakMap
            ok 4 - type is Function
            ok 5 - type is WeakMap
        ok 5 - Should instantiate a WeakMap when executed for first time # time=31.839ms
        
    ok 1 - \#compileValidationSchema # time=351.784ms
    
    # Subtest: \#getValidationFunction
        1..4
        # Subtest: Should return a validation function
            1..1
            ok 1 - should be equal
        ok 1 - Should return a validation function # time=62.35ms
        
        # Subtest: Should return undefined if no schema compiled
            1..2
            ok 1 - expect falsey value
            ok 2 - expect falsey value
        ok 2 - Should return undefined if no schema compiled # time=5.621ms
        
        # Subtest: Should return the validation function from each HTTP part
            1..15
            ok 1 - expect truthy value
            ok 2 - expect truthy value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect truthy value
            ok 6 - expect falsey value
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - expect truthy value
            ok 10 - expect truthy value
            ok 11 - expect falsey value
            ok 12 - should be equal
            ok 13 - expect truthy value
            ok 14 - expect falsey value
            ok 15 - should be equal
        ok 3 - Should return the validation function from each HTTP part # time=77.588ms
        
        # Subtest: Should not set a WeakMap if there is no schema
            1..1
            ok 1 - should be equal
        ok 4 - Should not set a WeakMap if there is no schema # time=15.28ms
        
    ok 2 - \#getValidationFunction # time=171.739ms
    
    # Subtest: \#validate
        1..7
        # Subtest: Should return true/false if input valid - Route without schema
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 1 - Should return true/false if input valid - Route without schema # time=54.095ms
        
        # Subtest: Should use the custom validator compiler for the route
            1..9
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equivalent
            ok 6 - should be equivalent
            ok 7 - expect truthy value
            ok 8 - expect truthy value
            ok 9 - should be equal
        ok 2 - Should use the custom validator compiler for the route # time=8.157ms
        
        # Subtest: Should return true/false if input valid - With Schema for Route defined
            1..8
            ok 1 - expect truthy value
            ok 2 - expect falsey value
            ok 3 - expect falsey value
            ok 4 - expect truthy value
            ok 5 - expect falsey value
            ok 6 - expect truthy value
            ok 7 - expect truthy value
            ok 8 - expect falsey value
        ok 3 - Should return true/false if input valid - With Schema for Route defined # time=63.424ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 4 - Should throw if missing validation fn for HTTP part and not schema provided # time=15.445ms
        
        # Subtest: Should throw if missing validation fn for HTTP part and not valid schema provided
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 5 - Should throw if missing validation fn for HTTP part and not valid schema provided # time=10.089ms
        
        # Subtest: Should throw if invalid schema passed
            1..10
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
            ok 8 - should be equal
            ok 9 - should be equal
            ok 10 - should be equal
        ok 6 - Should throw if invalid schema passed # time=13.615ms
        
        # Subtest: Should set a WeakMap if compiling the very first schema
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - type is WeakMap
        ok 7 - Should set a WeakMap if compiling the very first schema # time=53.322ms
        
    ok 3 - \#validate # time=228.652ms
    
    # Subtest: Nested Context
        1..1
        # Subtest: Level_1
            1..3
            # Subtest: \#compileValidationSchema
                1..4
                # Subtest: Should return a function - Route without schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 1 - Should return a function - Route without schema # time=93.469ms
                
                # Subtest: Should reuse the validate fn across multiple invocations - Route without schema
                    1..16
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - Are the same validate function
                    ok 5 - type is Function
                    ok 6 - expect truthy value
                    ok 7 - expect falsey value
                    ok 8 - Are the same validate function
                    ok 9 - type is Function
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - Are the same validate function
                    ok 13 - type is Function
                    ok 14 - expect truthy value
                    ok 15 - expect falsey value
                    ok 16 - should be equal
                ok 2 - Should reuse the validate fn across multiple invocations - Route without schema # time=54.394ms
                
                # Subtest: Should return a function - Route with schema
                    1..3
                    ok 1 - type is Function
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                ok 3 - Should return a function - Route with schema # time=39.221ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - should be equivalent
                    ok 9 - expect truthy value
                    ok 10 - should be equal
                ok 4 - Should use the custom validator compiler for the route # time=8.874ms
                
            ok 1 - \#compileValidationSchema # time=207.89ms
            
            # Subtest: \#getValidationFunction
                1..6
                # Subtest: Should return a validation function
                    1..1
                    ok 1 - should be equal
                ok 1 - Should return a validation function # time=47.606ms
                
                # Subtest: Should return undefined if no schema compiled
                    1..1
                    ok 1 - expect falsey value
                ok 2 - Should return undefined if no schema compiled # time=4.468ms
                
                # Subtest: Should return the validation function from each HTTP part
                    1..15
                    ok 1 - expect truthy value
                    ok 2 - expect truthy value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect truthy value
                    ok 6 - expect falsey value
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - expect truthy value
                    ok 10 - expect truthy value
                    ok 11 - expect falsey value
                    ok 12 - should be equal
                    ok 13 - expect truthy value
                    ok 14 - expect falsey value
                    ok 15 - should be equal
                ok 3 - Should return the validation function from each HTTP part # time=39.82ms
                
                # Subtest: Should return a validation function - nested
                    1..6
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - expect falsey value
                    ok 5 - should be equal
                    ok 6 - should be equal
                ok 4 - Should return a validation function - nested # time=12.377ms
                
                # Subtest: Should return undefined if no schema compiled - nested
                    1..3
                    ok 1 - should be equal
                    ok 2 - expect falsey value
                    ok 3 - should be equal
                ok 5 - Should return undefined if no schema compiled - nested # time=11.053ms
                
                # Subtest: Should per-route defined validation compiler
                    1..5
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should not be equal
                    ok 4 - should be equal
                    ok 5 - should be equal
                ok 6 - Should per-route defined validation compiler # time=7.609ms
                
            ok 2 - \#getValidationFunction # time=133.141ms
            
            # Subtest: \#validate
                1..3
                # Subtest: Should return true/false if input valid - Route without schema
                    1..2
                    ok 1 - expect falsey value
                    ok 2 - expect truthy value
                ok 1 - Should return true/false if input valid - Route without schema # time=56.543ms
                
                # Subtest: Should use the custom validator compiler for the route
                    1..10
                    ok 1 - should be equal
                    ok 2 - should be equal
                    ok 3 - should be equal
                    ok 4 - should be equal
                    ok 5 - should be equivalent
                    ok 6 - should be equivalent
                    ok 7 - expect truthy value
                    ok 8 - expect truthy value
                    ok 9 - should be equal
                    ok 10 - should be equal
                ok 2 - Should use the custom validator compiler for the route # time=7.906ms
                
                # Subtest: Should return true/false if input valid - With Schema for Route defined and scoped validator compiler
                    1..13
                    ok 1 - expect truthy value
                    ok 2 - expect falsey value
                    ok 3 - expect falsey value
                    ok 4 - expect truthy value
                    ok 5 - expect falsey value
                    ok 6 - expect truthy value
                    ok 7 - expect truthy value
                    ok 8 - expect falsey value
                    ok 9 - should be equal
                    ok 10 - should be equal
                    ok 11 - should be equal
                    ok 12 - should be equal
                    ok 13 - should be equal
                ok 3 - Should return true/false if input valid - With Schema for Route defined and scoped validator compiler # time=98.421ms
                
            ok 3 - \#validate # time=169.885ms
            
        ok 1 - Level_1 # time=519.306ms
        
    ok 4 - Nested Context # time=523.948ms
    
    1..4
    # time=1285.839ms
ok 60 - test/internals/request-validate.test.js # time=1285.839ms

# Subtest: test/internals/request.test.js
    # Subtest: Regular request
        ok 1 - type is Request
        ok 2 - type is Function
        ok 3 - type is Function
        ok 4 - type is Function
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        1..19
    ok 1 - Regular request # time=13.759ms
    
    # Subtest: Regular request - hostname from authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 2 - Regular request - hostname from authority # time=1.451ms
    
    # Subtest: Regular request - host header has precedence over authority
        1..2
        ok 1 - type is Request
        ok 2 - should be equal
    ok 3 - Regular request - host header has precedence over authority # time=0.769ms
    
    # Subtest: Request with trust proxy
        1..18
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 4 - Request with trust proxy # time=9.44ms
    
    # Subtest: Request with trust proxy, encrypted
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 5 - Request with trust proxy, encrypted # time=0.93ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 6 - Request with trust proxy - no x-forwarded-host header # time=0.795ms
    
    # Subtest: Request with trust proxy - no x-forwarded-host header and fallback to authority
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 7 - Request with trust proxy - no x-forwarded-host header and fallback to authority # time=0.749ms
    
    # Subtest: Request with trust proxy - x-forwarded-host header has precedence over host
        1..2
        ok 1 - type is _Request
        ok 2 - should be equal
    ok 8 - Request with trust proxy - x-forwarded-host header has precedence over host # time=0.912ms
    
    # Subtest: Request with trust proxy - handles multiple entries in x-forwarded-host/proto
        1..3
        ok 1 - type is _Request
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - Request with trust proxy - handles multiple entries in x-forwarded-host/proto # time=1.074ms
    
    # Subtest: Request with trust proxy - plain
        1..1
        ok 1 - should be equivalent
    ok 10 - Request with trust proxy - plain # time=0.953ms
    
    # Subtest: Request with undefined socket
        1..18
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - type is Function
        ok 17 - type is Function
        ok 18 - type is Function
    ok 11 - Request with undefined socket # time=3.112ms
    
    # Subtest: Request with trust proxy and undefined socket
        1..1
        ok 1 - should be equivalent
    ok 12 - Request with trust proxy and undefined socket # time=0.736ms
    
    1..12
    # time=104.316ms
ok 61 - test/internals/request.test.js # time=104.316ms

# Subtest: test/internals/server.test.js
    # Subtest: start listening
        ok 1 - server started
        1..1
    ok 1 - start listening # time=69.69ms
    
    # Subtest: DNS errors does not stop the main server on localhost - promise interface
        ok 1 - server started
        1..1
    ok 2 - DNS errors does not stop the main server on localhost - promise interface # time=18.282ms
    
    # Subtest: DNS errors does not stop the main server on localhost - callback interface
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 3 - DNS errors does not stop the main server on localhost - callback interface # time=16.695ms
    
    # Subtest: DNS returns empty binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 4 - DNS returns empty binding # time=13.531ms
    
    # Subtest: DNS returns more than two binding
        1..2
        ok 1 - should not error
        ok 2 - server started
    ok 5 - DNS returns more than two binding # time=13.559ms
    
    1..5
    # time=139.157ms
ok 62 - test/internals/server.test.js # time=139.157ms

# Subtest: test/internals/validation.test.js
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=7.978ms
    
    # Subtest: compileSchemasForValidation schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - compileSchemasForValidation schema - missing schema # time=2.134ms
    
    # Subtest: compileSchemasForValidation schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - compileSchemasForValidation schema - missing output schema # time=1.163ms
    
    # Subtest: compileSchemasForSerialization schema - missing schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - compileSchemasForSerialization schema - missing schema # time=1.542ms
    
    # Subtest: compileSchemasForSerialization schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 5 - compileSchemasForSerialization schema - missing output schema # time=0.751ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - build schema - output schema # time=58.575ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 7 - build schema - payload schema # time=1.877ms
    
    # Subtest: build schema - avoid repeated normalize schema
        1..3
        ok 1 - should not be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 8 - build schema - avoid repeated normalize schema # time=1.565ms
    
    # Subtest: build schema - query schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 9 - build schema - query schema # time=21.29ms
    
    # Subtest: build schema - query schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 10 - build schema - query schema abbreviated # time=2.682ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 11 - build schema - querystring schema # time=2.207ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 12 - build schema - querystring schema abbreviated # time=2.038ms
    
    # Subtest: build schema - must throw if querystring and query schema exist
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - build schema - must throw if querystring and query schema exist # time=1.209ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 14 - build schema - params schema # time=1.841ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 15 - build schema - headers schema # time=2.151ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 16 - build schema - headers are lowercase # time=1.015ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 17 - build schema - headers are not lowercased in case of custom object # time=0.877ms
    
    # Subtest: build schema - uppercased headers are not included
        1..1
        ok 1 - uppercase does not exist
    ok 18 - build schema - uppercased headers are not included # time=0.883ms
    
    1..18
    # time=176.54ms
ok 63 - test/internals/validation.test.js # time=176.54ms

# Subtest: test/keepAliveTimeout.test.js
    # Subtest: keepAliveTimeout
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - should be equal
    ok 1 - keepAliveTimeout # time=40.187ms
    
    1..1
    # time=48.443ms
ok 64 - test/keepAliveTimeout.test.js # time=48.443ms

# Subtest: test/listen.deprecated.test.js
    # Subtest: listen accepts a port and a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 1 - listen accepts a port and a callback # time=31.837ms
    
    # Subtest: listen accepts a port and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 2 - listen accepts a port and a callback with (err, address) # time=5.003ms
    
    # Subtest: listen accepts a port, address, and callback
        1..1
        ok 1 - should not error
    ok 3 - listen accepts a port, address, and callback # time=14.738ms
    
    # Subtest: listen accepts options, backlog and a callback
        1..1
        ok 1 - should not error
    ok 4 - listen accepts options, backlog and a callback # time=10.62ms
    
    # Subtest: listen accepts options (no port), backlog and a callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts options (no port), backlog and a callback # time=3.974ms
    
    # Subtest: listen accepts options (no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 6 - listen accepts options (no host), backlog and a callback # time=3.656ms
    
    # Subtest: listen accepts options (no port, no host), backlog and a callback
        1..1
        ok 1 - should not error
    ok 7 - listen accepts options (no port, no host), backlog and a callback # time=6.889ms
    
    # Subtest: listen accepts a port, address and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 8 - listen accepts a port, address and a callback with (err, address) # time=3.487ms
    
    # Subtest: listen accepts a port, address, backlog and callback
        1..1
        ok 1 - should not error
    ok 9 - listen accepts a port, address, backlog and callback # time=4.561ms
    
    # Subtest: listen accepts a port, address, backlog and callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 10 - listen accepts a port, address, backlog and callback with (err, address) # time=7.894ms
    
    # Subtest: listen without callback (port zero)
        1..1
        ok 1 - should be equal
    ok 11 - listen without callback (port zero) # time=7.538ms
    
    # Subtest: listen without callback (port not given)
        1..1
        ok 1 - should be equal
    ok 12 - listen without callback (port not given) # time=8.612ms
    
    # Subtest: listen null without callback with (address)
        1..1
        ok 1 - should be equal
    ok 13 - listen null without callback with (address) # time=16.82ms
    
    # Subtest: listen without port without callback with (address)
        1..1
        ok 1 - should be equal
    ok 14 - listen without port without callback with (address) # time=7.924ms
    
    # Subtest: listen with undefined without callback with (address)
        1..1
        ok 1 - should be equal
    ok 15 - listen with undefined without callback with (address) # time=6.955ms
    
    # Subtest: listen when firstArg is string(pipe) and without backlog
        1..1
        ok 1 - should be equal
    ok 16 - listen when firstArg is string(pipe) and without backlog # time=10.962ms
    
    # Subtest: listen when firstArg is string(pipe) and with backlog
        1..1
        ok 1 - should be equal
    ok 17 - listen when firstArg is string(pipe) and with backlog # time=19.598ms
    
    # Subtest: listen when firstArg is { path: string(pipe) } and with backlog and callback
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 18 - listen when firstArg is { path: string(pipe) } and with backlog and callback # time=3.452ms
    
    1..18
    # time=260.79ms
ok 65 - test/listen.deprecated.test.js # time=260.79ms

# Subtest: test/listen.test.js
    # Subtest: listen works without arguments
        ok 1 - should be equal
        ok 2 - expect truthy value
        1..2
    ok 1 - listen works without arguments # time=30.352ms
    
    # Subtest: Async/await listen with arguments
        1..1
        ok 1 - should be equal
    ok 2 - Async/await listen with arguments # time=4.632ms
    
    # Subtest: Promise listen with arguments
        1..1
        ok 1 - should be equal
    ok 3 - Promise listen with arguments # time=16.611ms
    
    # Subtest: listen accepts a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 4 - listen accepts a callback # time=9.942ms
    
    # Subtest: listen accepts options and a callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts options and a callback # time=10.982ms
    
    # Subtest: listen after Promise.resolve()
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 6 - listen after Promise.resolve() # time=8.317ms
    
    # Subtest: register after listen using Promise.resolve()
        1..1
        ok 1 - resolved
    ok 7 - register after listen using Promise.resolve() # time=15.922ms
    
    # Subtest: double listen errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
    ok 8 - double listen errors # time=4.505ms
    
    # Subtest: double listen errors callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 9 - double listen errors callback with (err, address) # time=5.19ms
    
    # Subtest: listen twice on the same port
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 10 - listen twice on the same port # time=24.384ms
    
    # Subtest: listen twice on the same port callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 11 - listen twice on the same port callback with (err, address) # time=11.197ms
    
    # Subtest: listen on socket
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should be equal
    ok 12 - listen on socket # time=7.413ms
    
    # Subtest: listen without callback with (address)
        1..1
        ok 1 - should be equal
    ok 13 - listen without callback with (address) # time=17.925ms
    
    # Subtest: double listen without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 14 - double listen without callback rejects # time=20.96ms
    
    # Subtest: double listen without callback with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 15 - double listen without callback with (address) # time=4.76ms
    
    # Subtest: listen twice on the same port without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 16 - listen twice on the same port without callback rejects # time=22.729ms
    
    # Subtest: listen twice on the same port without callback rejects with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - listen twice on the same port without callback rejects with (address) # time=7.391ms
    
    # Subtest: listen on invalid port without callback rejects
        ok 1 - expect truthy value
        1..1
    ok 18 - listen on invalid port without callback rejects # time=3.553ms
    
    # Subtest: listen logs the port as info
        1..1
        ok 1 - expect truthy value
    ok 19 - listen logs the port as info # time=20.622ms
    
    # Subtest: listen on localhost binds IPv4 and IPv6 - promise interface
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 20 - listen on localhost binds IPv4 and IPv6 - promise interface # time=28.595ms
    
    # Subtest: listen on localhost binds to all interfaces (both IPv4 and IPv6 if present) - callback interface
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 21 - listen on localhost binds to all interfaces (both IPv4 and IPv6 if present) - callback interface # time=9.111ms
    
    # Subtest: addresses getter
        1..4
        ok 1 - before ready
        ok 2 - after ready
        ok 3 - after listen
        ok 4 - after close
    ok 22 - addresses getter # time=7.619ms
    
    1..22
    # time=397.034ms
ok 66 - test/listen.test.js # time=397.034ms

# Subtest: test/logger.test.js
    # Subtest: defaults to info level
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
        1..13
    ok 1 - defaults to info level # time=64.541ms
    
    # Subtest: test log stream
        1..12
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
    ok 2 - test log stream # time=14.102ms
    
    # Subtest: test error log stream
        1..11
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - reqId is defined
        ok 9 - res is defined
        ok 10 - message is set
        ok 11 - statusCode is 500
    ok 3 - test error log stream # time=65.053ms
    
    # Subtest: can use external logger instance
        1..6
        ok 1 - "Server listening at http://127.0.0.1:45595" dont match "/^Server listening at /"
        ok 2 - should not error
        ok 3 - "incoming request" dont match "/^incoming request$/"
        ok 4 - expect truthy value
        ok 5 - "log success" dont match "/^log success$/"
        ok 6 - "request completed" dont match "/^request completed$/"
    ok 4 - can use external logger instance # time=34.213ms
    
    # Subtest: can use external logger instance with custom serializer
        1..6
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - expect truthy value
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 5 - can use external logger instance with custom serializer # time=16.054ms
    
    # Subtest: expose the logger
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equivalent
    ok 6 - expose the logger # time=2.64ms
    
    # Subtest: The request id header key can be customized
        1..9
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - message is set
        ok 6 - should be equal
        ok 7 - message is set
        ok 8 - should be equal
        ok 9 - message is set
    ok 7 - The request id header key can be customized # time=34.063ms
    
    # Subtest: The request id header key can be customized along with a custom id generator
        1..12
        ok 1 - should match pattern provided
        ok 2 - should be equal
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should be equal
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
    ok 8 - The request id header key can be customized along with a custom id generator # time=18.168ms
    
    # Subtest: The request id log label can be changed
        1..6
        ok 1 - should match pattern provided
        ok 2 - should be equal
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should not error
        ok 6 - should be equal
    ok 9 - The request id log label can be changed # time=9.717ms
    
    # Subtest: The logger should accept custom serializer
        1..9
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - req is defined
        ok 4 - message is set
        ok 5 - custom req serializer is use
        ok 6 - expect truthy value
        ok 7 - res is defined
        ok 8 - message is set
        ok 9 - default res serializer is use
    ok 10 - The logger should accept custom serializer # time=19.322ms
    
    # Subtest: reply.send logs an error if called twice in a row
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 11 - reply.send logs an error if called twice in a row # time=60.952ms
    
    # Subtest: logger can be silented
        1..17
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should be equivalent
    ok 12 - logger can be silented # time=4.623ms
    
    # Subtest: Should set a custom logLevel for a plugin
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 13 - Should set a custom logLevel for a plugin # time=12.439ms
    
    # Subtest: Should set a custom logSerializers for a plugin
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 14 - Should set a custom logSerializers for a plugin # time=10.635ms
    
    # Subtest: Should set a custom logLevel for every plugin
        1..18
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equivalent
        ok 15 - should not error
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equivalent
    ok 15 - Should set a custom logLevel for every plugin # time=14.957ms
    
    # Subtest: Should set a custom logSerializers for every plugin
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 16 - Should set a custom logSerializers for every plugin # time=23.342ms
    
    # Subtest: Should override serializers from route
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 17 - Should override serializers from route # time=7.069ms
    
    # Subtest: Should override serializers from plugin
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 18 - Should override serializers from plugin # time=20.165ms
    
    # Subtest: Should use serializers from plugin and route
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 19 - Should use serializers from plugin and route # time=20.643ms
    
    # Subtest: Should use serializers from instance fastify and route
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 20 - Should use serializers from instance fastify and route # time=13.856ms
    
    # Subtest: Should use serializers inherit from contexts
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 21 - Should use serializers inherit from contexts # time=9.83ms
    
    # Subtest: Should increase the log level for a specific plugin
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 22 - Should increase the log level for a specific plugin # time=5.695ms
    
    # Subtest: Should set the log level for the customized 404 handler
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 23 - Should set the log level for the customized 404 handler # time=5.851ms
    
    # Subtest: Should set the log level for the customized 500 handler
        1..4
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - Should set the log level for the customized 500 handler # time=6.092ms
    
    # Subtest: Should set a custom log level for a specific route
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 25 - Should set a custom log level for a specific route # time=7.741ms
    
    # Subtest: The default 404 handler logs the incoming request
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
    ok 26 - The default 404 handler logs the incoming request # time=5.636ms
    
    # Subtest: should serialize request and response
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 27 - should serialize request and response # time=5.264ms
    
    # Subtest: Wrap IPv6 address in listening log message
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 28 - Wrap IPv6 address in listening log message # time=3.144ms
    
    # Subtest: Do not wrap IPv4 address
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 29 - Do not wrap IPv4 address # time=3.263ms
    
    # Subtest: file option
        1..13
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - listen at log message is ok
        ok 4 - reqId is defined
        ok 5 - req is defined
        ok 6 - message is set
        ok 7 - method is get
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
    ok 30 - file option # time=14.681ms
    
    # Subtest: should log the error if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 31 - should log the error if no error handler is defined # time=9.282ms
    
    # Subtest: should log as info if error status code >= 400 and < 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 32 - should log as info if error status code >= 400 and < 500 if no error handler is defined # time=9.348ms
    
    # Subtest: should log as error if error status code >= 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 33 - should log as error if error status code >= 500 if no error handler is defined # time=22.469ms
    
    # Subtest: should not log the error if error handler is defined and it does not error
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - level is correct
        ok 7 - message is set
        ok 8 - status code is set
    ok 34 - should not log the error if error handler is defined and it does not error # time=7.273ms
    
    # Subtest: should not rely on raw request to log errors
        1..7
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - status code is set
    ok 35 - should not rely on raw request to log errors # time=7.402ms
    
    # Subtest: should redact the authorization header if so specified
        1..7
        ok 1 - listen at log message is ok
        ok 2 - should not error
        ok 3 - authorization is redacted
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 36 - should redact the authorization header if so specified # time=17.244ms
    
    # Subtest: should not log incoming request and outgoing response when disabled
        1..3
        ok 1 - should be equivalent
        ok 2 - expect truthy value
        ok 3 - should be equivalent
    ok 37 - should not log incoming request and outgoing response when disabled # time=5.183ms
    
    # Subtest: should not log incoming request and outgoing response for 404 onBadUrl when disabled
        1..1
        ok 1 - should be equivalent
    ok 38 - should not log incoming request and outgoing response for 404 onBadUrl when disabled # time=3.436ms
    
    # Subtest: should pass when using unWritable props in the logger option
        1..1
        ok 1 - (unnamed test)
    ok 39 - should pass when using unWritable props in the logger option # time=6.073ms
    
    # Subtest: should be able to use a custom logger
        1..1
        ok 1 - (unnamed test)
    ok 40 - should be able to use a custom logger # time=2.755ms
    
    # Subtest: should create a default logger if provided one is invalid
        1..1
        ok 1 - (unnamed test)
    ok 41 - should create a default logger if provided one is invalid # time=1.719ms
    
    # Subtest: should not throw error when serializing custom req
        1..1
        ok 1 - should be equivalent
    ok 42 - should not throw error when serializing custom req # time=1.395ms
    
    1..42
    # time=756.25ms
ok 67 - test/logger.test.js # time=756.25ms

# Subtest: test/maxRequestsPerSocket.test.js
    # Subtest: maxRequestsPerSocket on node version >= 16.10.0
        1..8
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should match pattern provided
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
    ok 1 - maxRequestsPerSocket on node version >= 16.10.0 # time=86.056ms
    
    # Subtest: maxRequestsPerSocket zero should behave same as null
        1..10
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
        ok 5 - should match pattern provided
        ok 6 - should match pattern provided
        ok 7 - should match pattern provided
        ok 8 - should match pattern provided
        ok 9 - should match pattern provided
        ok 10 - should match pattern provided
    ok 2 - maxRequestsPerSocket zero should behave same as null # time=16.307ms
    
    # Subtest: maxRequestsPerSocket should be set
        1..1
        ok 1 - should be equivalent
    ok 3 - maxRequestsPerSocket should be set # time=2.001ms
    
    # Subtest: maxRequestsPerSocket should 0
        1..1
        ok 1 - should be equivalent
    ok 4 - maxRequestsPerSocket should 0 # time=1.306ms
    
    # Subtest: requestTimeout passed to server
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - requestTimeout passed to server # time=14.122ms
    
    1..5
    # time=129.892ms
ok 68 - test/maxRequestsPerSocket.test.js # time=129.892ms

# Subtest: test/middleware.test.js
    # Subtest: Should be able to override the default use API
        1..1
        ok 1 - should be equal
    ok 1 - Should be able to override the default use API # time=24.438ms
    
    # Subtest: Cannot decorate use twice
        1..1
        ok 1 - expect truthy value
    ok 2 - Cannot decorate use twice # time=3.806ms
    
    # Subtest: Encapsulation works
        1..1
        ok 1 - should be equal
    ok 3 - Encapsulation works # time=14.457ms
    
    1..3
    # time=64.121ms
ok 69 - test/middleware.test.js # time=64.121ms

# Subtest: test/noop-set.test.js
    # Subtest: does a lot of nothing
        ok 1 - type is object
        ok 2 - should be equal
        1..2
    ok 1 - does a lot of nothing # time=6.763ms
    
    1..1
    # time=11.935ms
ok 70 - test/noop-set.test.js # time=11.935ms

# Subtest: test/nullable-validation.test.js
    # Subtest: nullable string
        1..3
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 1 - nullable string # time=152.478ms
    
    # Subtest: object or null body
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 2 - object or null body # time=60.678ms
    
    # Subtest: nullable body
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - nullable body # time=69.998ms
    
    # Subtest: Nullable body with 204
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 4 - Nullable body with 204 # time=37.513ms
    
    1..4
    # time=328.02ms
ok 71 - test/nullable-validation.test.js # time=328.02ms

# Subtest: test/options.error-handler.test.js
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=9.378ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=2.096ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=1.668ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.835ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=2.731ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=70.821ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=8.781ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=5.164ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=4.804ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=5.434ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=25.498ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=3.803ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=5.274ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=7.15ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=6.357ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 16 - OPTIONS should fail with empty body and application/json content-type # time=0.564ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - correctly replies # time=4.162ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - 400 on bad parameters # time=4.921ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation coerce # time=3.966ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation custom schema compiler # time=4.095ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ok # time=5.853ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation joi schema compiler ko # time=5.961ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation yup schema compiler ok # time=5.965ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - OPTIONS - input-validation yup schema compiler ko # time=5.142ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=3.587ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - OPTIONS - input-validation custom schema compiler encapsulated # time=3.474ms
    
    ok 27 - type is object
    ok 28 - type is Request
    ok 29 - type is object
    ok 30 - type is Request
    ok 31 - type is object
    ok 32 - type is Request
    ok 33 - type is object
    ok 34 - type is Request
    ok 35 - type is object
    ok 36 - type is Request
    1..36
    # time=904.593ms
ok 72 - test/options.error-handler.test.js # time=904.593ms

# Subtest: test/options.test.js
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=8.871ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=1.831ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=1.438ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.619ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=2.444ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=63.57ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=8.538ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=5.066ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=4.799ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=5.455ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=25.242ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=3.468ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=4.649ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=6.83ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=5.941ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 16 - OPTIONS should fail with empty body and application/json content-type # time=0.456ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - correctly replies # time=3.998ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - 400 on bad parameters # time=4.436ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation coerce # time=4.04ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation custom schema compiler # time=4.093ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ok # time=5.587ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation joi schema compiler ko # time=5.581ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation yup schema compiler ok # time=5.926ms
    
    # Subtest: OPTIONS - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - OPTIONS - input-validation yup schema compiler ko # time=5.027ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=3.519ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - OPTIONS - input-validation custom schema compiler encapsulated # time=3.748ms
    
    1..26
    # time=848.867ms
ok 73 - test/options.test.js # time=848.867ms

# Subtest: test/output-validation.test.js
    # Subtest: shorthand - output string
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - output string # time=11.856ms
    
    # Subtest: shorthand - output number
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - output number # time=2.391ms
    
    # Subtest: wrong object for schema - output
        1..1
        ok 1 - (unnamed test)
    ok 3 - wrong object for schema - output # time=2.274ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 4 - empty response # time=2.249ms
    
    # Subtest: unlisted response code
        1..1
        ok 1 - (unnamed test)
    ok 5 - unlisted response code # time=2.09ms
    
    ok 6 - should not error
    # Subtest: shorthand - string get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - string get ok # time=40.782ms
    
    # Subtest: shorthand - number get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - shorthand - number get ok # time=6.627ms
    
    # Subtest: shorthand - wrong-object-for-schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - wrong-object-for-schema # time=6.706ms
    
    # Subtest: shorthand - empty
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - empty # time=4.151ms
    
    # Subtest: shorthand - 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - 400 # time=5.126ms
    
    1..11
    # time=203.524ms
ok 74 - test/output-validation.test.js # time=203.524ms

# Subtest: test/patch.error-handler.test.js
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=8.97ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=1.833ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=1.418ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=1.609ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=2.538ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=62.481ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=8.717ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=5.233ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=4.876ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=5.352ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=25.04ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=5.679ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=6.889ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=12.786ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PATCH should fail with empty body and application/json content-type # time=19.26ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=4.472ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=4.179ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=3.693ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=3.883ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=6.074ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=5.047ms
    
    # Subtest: PATCH - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation yup schema compiler ok # time=4.891ms
    
    # Subtest: PATCH - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation yup schema compiler ko # time=4.79ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PATCH - input-validation instance custom schema compiler encapsulated # time=3.353ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PATCH - input-validation custom schema compiler encapsulated # time=3.721ms
    
    ok 26 - type is object
    ok 27 - type is Request
    ok 28 - type is object
    ok 29 - type is Request
    ok 30 - type is object
    ok 31 - type is Request
    ok 32 - type is object
    ok 33 - type is Request
    ok 34 - type is object
    ok 35 - type is Request
    ok 36 - type is object
    ok 37 - type is Request
    ok 38 - type is object
    ok 39 - type is Request
    ok 40 - type is object
    ok 41 - type is Request
    ok 42 - type is object
    ok 43 - type is Request
    ok 44 - type is object
    ok 45 - type is Request
    ok 46 - type is object
    ok 47 - type is Request
    ok 48 - type is object
    ok 49 - type is Request
    1..49
    # time=875.505ms
ok 75 - test/patch.error-handler.test.js # time=875.505ms

# Subtest: test/patch.test.js
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=9.42ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=2.125ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=1.741ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=1.876ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=2.814ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=71.358ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=8.586ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=4.994ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=4.866ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=5.325ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=25.022ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=5.09ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=6.86ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=12.18ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PATCH should fail with empty body and application/json content-type # time=17.628ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=4.286ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=4.204ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=3.651ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=3.863ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=7.103ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=5.44ms
    
    # Subtest: PATCH - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation yup schema compiler ok # time=5.266ms
    
    # Subtest: PATCH - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation yup schema compiler ko # time=5.179ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PATCH - input-validation instance custom schema compiler encapsulated # time=3.644ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PATCH - input-validation custom schema compiler encapsulated # time=3.652ms
    
    1..25
    # time=870.358ms
ok 76 - test/patch.test.js # time=870.358ms

# Subtest: test/plugin.test.js
    # Subtest: require a plugin
        1..1
        ok 1 - expect truthy value
    ok 1 - require a plugin # time=101.235ms
    
    # Subtest: plugin metadata - ignore prefix
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 2 - plugin metadata - ignore prefix # time=36.945ms
    
    # Subtest: plugin metadata - naming plugins
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - plugin metadata - naming plugins # time=8.137ms
    
    # Subtest: fastify.register with fastify-plugin should not encapsulate his code
        1..10
        ok 1 - expect falsey value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 4 - fastify.register with fastify-plugin should not encapsulate his code # time=53.18ms
    
    # Subtest: fastify.register with fastify-plugin should provide access to external fastify instance if opts argument is a function
        1..22
        ok 1 - expect falsey value
        ok 2 - expect falsey value
        ok 3 - expect falsey value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect falsey value
        ok 10 - expect truthy value
        ok 11 - expect falsey value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - should be equal
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - should not error
        ok 18 - expect truthy value
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equivalent
    ok 5 - fastify.register with fastify-plugin should provide access to external fastify instance if opts argument is a function # time=31.258ms
    
    # Subtest: fastify.register with fastify-plugin registers fastify level plugins
        1..15
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 6 - fastify.register with fastify-plugin registers fastify level plugins # time=17.288ms
    
    # Subtest: check dependencies - should not throw
        1..12
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 7 - check dependencies - should not throw # time=12.016ms
    
    # Subtest: check dependencies - should throw
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect falsey value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 8 - check dependencies - should throw # time=42.079ms
    
    # Subtest: set the plugin name based on the plugin displayName symbol
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
    ok 9 - set the plugin name based on the plugin displayName symbol # time=7.328ms
    
    # Subtest: plugin name will change when using no encapsulation
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
    ok 10 - plugin name will change when using no encapsulation # time=6.571ms
    
    # Subtest: plugin name is undefined when accessing in no plugin context
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 11 - plugin name is undefined when accessing in no plugin context # time=16.58ms
    
    # Subtest: set the plugin name based on the plugin function name
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 12 - set the plugin name based on the plugin function name # time=14.052ms
    
    # Subtest: approximate a plugin name when no meta data is available
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
    ok 13 - approximate a plugin name when no meta data is available # time=15.211ms
    
    # Subtest: approximate a plugin name also when fastify-plugin has no meta data
        1..4
        ok 1 - should match pattern provided
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should not error
    ok 14 - approximate a plugin name also when fastify-plugin has no meta data # time=10.499ms
    
    # Subtest: plugin encapsulation
        1..10
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 15 - plugin encapsulation # time=34.83ms
    
    # Subtest: if a plugin raises an error and there is not a callback to handle it, the server must not start
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 16 - if a plugin raises an error and there is not a callback to handle it, the server must not start # time=4.489ms
    
    # Subtest: add hooks after route declaration
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 17 - add hooks after route declaration # time=11.598ms
    
    # Subtest: nested plugins
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 18 - nested plugins # time=14.31ms
    
    # Subtest: nested plugins awaited
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 19 - nested plugins awaited # time=14.538ms
    
    # Subtest: plugin metadata - decorators
        1..1
        ok 1 - expect truthy value
    ok 20 - plugin metadata - decorators # time=7.088ms
    
    # Subtest: plugin metadata - decorators - should throw
        1..1
        ok 1 - should be equal
    ok 21 - plugin metadata - decorators - should throw # time=2.933ms
    
    # Subtest: plugin metadata - decorators - should throw with plugin name
        1..1
        ok 1 - should be equal
    ok 22 - plugin metadata - decorators - should throw with plugin name # time=2.902ms
    
    # Subtest: plugin metadata - dependencies
        1..1
        ok 1 - everything right
    ok 23 - plugin metadata - dependencies # time=3.155ms
    
    # Subtest: plugin metadata - dependencies (nested)
        1..1
        ok 1 - everything right
    ok 24 - plugin metadata - dependencies (nested) # time=3.953ms
    
    # Subtest: pluginTimeout
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 25 - pluginTimeout # time=14.89ms
    
    # "pluginTimeout - named function" has `only` set but all tests run
    # Subtest: pluginTimeout - named function
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 26 - pluginTimeout - named function # time=14.661ms
    
    # Subtest: pluginTimeout default
        1..5
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 27 - pluginTimeout default # time=-169202253.594ms
    
    # Subtest: plugin metadata - version
        1..1
        ok 1 - everything right
    ok 28 - plugin metadata - version # time=7.833ms
    
    # Subtest: plugin metadata - version range
        1..1
        ok 1 - everything right
    ok 29 - plugin metadata - version range # time=3.986ms
    
    # Subtest: plugin metadata - version not matching requirement
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 30 - plugin metadata - version not matching requirement # time=3.158ms
    
    # Subtest: plugin metadata - version not matching requirement 2
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 31 - plugin metadata - version not matching requirement 2 # time=3.01ms
    
    # Subtest: plugin metadata - version not matching requirement 3
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 32 - plugin metadata - version not matching requirement 3 # time=2.994ms
    
    # Subtest: plugin metadata - release candidate
        1..2
        ok 1 - should not error
        ok 2 - everything right
    ok 33 - plugin metadata - release candidate # time=4.442ms
    
    # Subtest: fastify-rc loads prior version plugins
        1..2
        ok 1 - should not error
        ok 2 - everything right
    ok 34 - fastify-rc loads prior version plugins # time=3.537ms
    
    # Subtest: hasPlugin method exists as a function
        1..1
        ok 1 - should be equal
    ok 35 - hasPlugin method exists as a function # time=1.25ms
    
    # Subtest: hasPlugin returns true if the specified plugin has been registered
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 36 - hasPlugin returns true if the specified plugin has been registered # time=5.412ms
    
    # Subtest: hasPlugin returns false if the specified plugin has not been registered
        1..1
        ok 1 - expect falsey value
    ok 37 - hasPlugin returns false if the specified plugin has not been registered # time=1.193ms
    
    # Subtest: hasPlugin returns false when using encapsulation
        1..25
        ok 1 - expect truthy value
        ok 2 - expect falsey value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect truthy value
        ok 8 - expect falsey value
        ok 9 - expect falsey value
        ok 10 - expect falsey value
        ok 11 - expect falsey value
        ok 12 - expect falsey value
        ok 13 - expect truthy value
        ok 14 - expect falsey value
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - expect falsey value
        ok 18 - expect falsey value
        ok 19 - expect truthy value
        ok 20 - expect falsey value
        ok 21 - expect falsey value
        ok 22 - expect falsey value
        ok 23 - expect falsey value
        ok 24 - expect falsey value
        ok 25 - expect truthy value
    ok 38 - hasPlugin returns false when using encapsulation # time=12.433ms
    
    # Subtest: hasPlugin returns true when using no encapsulation
        1..26
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect falsey value
        ok 10 - expect falsey value
        ok 11 - expect falsey value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - expect truthy value
        ok 15 - expect falsey value
        ok 16 - expect falsey value
        ok 17 - expect truthy value
        ok 18 - expect truthy value
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect falsey value
        ok 22 - expect truthy value
        ok 23 - expect truthy value
        ok 24 - expect truthy value
        ok 25 - expect truthy value
        ok 26 - expect truthy value
    ok 39 - hasPlugin returns true when using no encapsulation # time=9.1ms
    
    1..39
    # time=601.42ms
ok 77 - test/plugin.test.js # time=601.42ms

# Subtest: test/pretty-print.test.js
    # Subtest: pretty print - static routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - pretty print - static routes # time=45.322ms
    
    # Subtest: pretty print - parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - pretty print - parametric routes # time=8.063ms
    
    # Subtest: pretty print - mixed parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - pretty print - mixed parametric routes # time=8.284ms
    
    # Subtest: pretty print - wildcard routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - pretty print - wildcard routes # time=17.041ms
    
    # Subtest: pretty print - empty plugins
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 5 - pretty print - empty plugins # time=16.839ms
    
    # Subtest: pretty print - nested plugins
        1..4
        ok 1 - should be equal
        ok 2 - should match pattern provided
        ok 3 - should match pattern provided
        ok 4 - should match pattern provided
    ok 6 - pretty print - nested plugins # time=19.595ms
    
    # Subtest: pretty print - commonPrefix
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - pretty print - commonPrefix # time=26.483ms
    
    # Subtest: pretty print - includeMeta, includeHooks
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - pretty print - includeMeta, includeHooks # time=25.381ms
    
    1..8
    # time=190.444ms
ok 78 - test/pretty-print.test.js # time=190.444ms

# Subtest: test/promises.test.js
    ok 1 - should not error
    # Subtest: shorthand - sget return promise es6 get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - shorthand - sget return promise es6 get # time=45.972ms
    
    # Subtest: shorthand - sget promise es6 get return error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - shorthand - sget promise es6 get return error # time=8.24ms
    
    # Subtest: sget promise double send
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - sget promise double send # time=5.95ms
    
    # Subtest: thenable
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - thenable # time=6.421ms
    
    # Subtest: thenable (error)
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - thenable (error) # time=4.281ms
    
    # Subtest: return-reply
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - return-reply # time=5.169ms
    
    1..7
    # time=134.144ms
ok 79 - test/promises.test.js # time=134.144ms

# Subtest: test/proto-poisoning.test.js
    # Subtest: proto-poisoning error
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 1 - proto-poisoning error # time=65.677ms
    
    # Subtest: proto-poisoning remove
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - proto-poisoning remove # time=12.068ms
    
    # Subtest: proto-poisoning ignore
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 3 - proto-poisoning ignore # time=25.503ms
    
    # Subtest: constructor-poisoning error (default in v3)
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 4 - constructor-poisoning error (default in v3) # time=11.92ms
    
    # Subtest: constructor-poisoning error
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 5 - constructor-poisoning error # time=8.365ms
    
    # Subtest: constructor-poisoning remove
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 6 - constructor-poisoning remove # time=12.588ms
    
    1..6
    # time=146.204ms
ok 80 - test/proto-poisoning.test.js # time=146.204ms

# Subtest: test/put.error-handler.test.js
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=7.821ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=1.817ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=1.418ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=1.585ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=2.875ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=54.116ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=9.102ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=7.108ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=5.43ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=5.835ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=26.117ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=6.122ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=7.814ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=17.614ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PUT should fail with empty body and application/json content-type # time=20.348ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=4.928ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=4.662ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=4.221ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=4.375ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=5.767ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=5.266ms
    
    # Subtest: PUT - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation yup schema compiler ok # time=5.437ms
    
    # Subtest: PUT - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation yup schema compiler ko # time=5.39ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PUT - input-validation instance custom schema compiler encapsulated # time=3.685ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PUT - input-validation custom schema compiler encapsulated # time=3.926ms
    
    ok 26 - type is object
    ok 27 - type is Request
    ok 28 - type is object
    ok 29 - type is Request
    ok 30 - type is object
    ok 31 - type is Request
    ok 32 - type is object
    ok 33 - type is Request
    ok 34 - type is object
    ok 35 - type is Request
    ok 36 - type is object
    ok 37 - type is Request
    ok 38 - type is object
    ok 39 - type is Request
    ok 40 - type is object
    ok 41 - type is Request
    ok 42 - type is object
    ok 43 - type is Request
    ok 44 - type is object
    ok 45 - type is Request
    ok 46 - type is object
    ok 47 - type is Request
    ok 48 - type is object
    ok 49 - type is Request
    1..49
    # time=921.808ms
ok 81 - test/put.error-handler.test.js # time=921.808ms

# Subtest: test/put.test.js
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=9.18ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=1.828ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=1.425ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=1.655ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=3.688ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=61.418ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=8.532ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=4.892ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=4.743ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=5.467ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=25.318ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=5.484ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=6.956ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=12.633ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
    ok 15 - PUT should fail with empty body and application/json content-type # time=18.515ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=4.578ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=4.388ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=3.771ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=3.877ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=5.279ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=5.176ms
    
    # Subtest: PUT - input-validation yup schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation yup schema compiler ok # time=5.042ms
    
    # Subtest: PUT - input-validation yup schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation yup schema compiler ko # time=4.804ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - PUT - input-validation instance custom schema compiler encapsulated # time=3.26ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 25 - PUT - input-validation custom schema compiler encapsulated # time=3.399ms
    
    1..25
    # time=875.36ms
ok 82 - test/put.test.js # time=875.36ms

# Subtest: test/register.test.js
    # Subtest: register
        1..17
        ok 1 - should not be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - expect truthy value
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 1 - register # time=90.124ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the done handler / 1
        1..1
        ok 1 - should be equal
    ok 2 - internal route declaration should pass the error generated by the register to the done handler / 1 # time=6.824ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the done handler / 2
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 3 - internal route declaration should pass the error generated by the register to the done handler / 2 # time=27.43ms
    
    # Subtest: awaitable register and after
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 4 - awaitable register and after # time=8.58ms
    
    # Subtest: awaitable register error handling
        ok 1 - expect rejected Promise: Error kaboom
        ok 2 - expect rejected Promise: Error kaboom
        ok 3 - expect rejected Promise: Error kaboom
        1..3
    ok 5 - awaitable register error handling # time=9.189ms
    
    # Subtest: awaitable after error handling
        ok 1 - expect rejected Promise: Error kaboom
        ok 2 - expect rejected Promise
        1..2
    ok 6 - awaitable after error handling # time=5.315ms
    
    # Subtest: chainable register
        1..3
        ok 1 - first loaded
        ok 2 - second loaded
        ok 3 - third loaded
    ok 7 - chainable register # time=17.509ms
    
    1..7
    # time=183.504ms
ok 83 - test/register.test.js # time=183.504ms

# Subtest: test/reply-error.test.js
    # Subtest: Reply error handling - code: 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Reply error handling - code: 400 # time=203.941ms
    
    # Subtest: Reply error handling - code: 401
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - Reply error handling - code: 401 # time=8.804ms
    
    # Subtest: Reply error handling - code: 402
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - Reply error handling - code: 402 # time=35.894ms
    
    # Subtest: Reply error handling - code: 403
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - Reply error handling - code: 403 # time=14.668ms
    
    # Subtest: Reply error handling - code: 404
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - Reply error handling - code: 404 # time=6.509ms
    
    # Subtest: Reply error handling - code: 405
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - Reply error handling - code: 405 # time=5.432ms
    
    # Subtest: Reply error handling - code: 406
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - Reply error handling - code: 406 # time=26.351ms
    
    # Subtest: Reply error handling - code: 407
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - Reply error handling - code: 407 # time=5.94ms
    
    # Subtest: Reply error handling - code: 408
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - Reply error handling - code: 408 # time=7.842ms
    
    # Subtest: Reply error handling - code: 409
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - Reply error handling - code: 409 # time=7.172ms
    
    # Subtest: Reply error handling - code: 410
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - Reply error handling - code: 410 # time=6.44ms
    
    # Subtest: Reply error handling - code: 411
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - Reply error handling - code: 411 # time=22.358ms
    
    # Subtest: Reply error handling - code: 412
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - Reply error handling - code: 412 # time=11.554ms
    
    # Subtest: Reply error handling - code: 413
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Reply error handling - code: 413 # time=5.878ms
    
    # Subtest: Reply error handling - code: 414
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - Reply error handling - code: 414 # time=5.476ms
    
    # Subtest: Reply error handling - code: 415
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - Reply error handling - code: 415 # time=15.459ms
    
    # Subtest: Reply error handling - code: 416
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - Reply error handling - code: 416 # time=5.554ms
    
    # Subtest: Reply error handling - code: 417
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - Reply error handling - code: 417 # time=7.508ms
    
    # Subtest: Reply error handling - code: 418
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - Reply error handling - code: 418 # time=8.356ms
    
    # Subtest: Reply error handling - code: 421
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - Reply error handling - code: 421 # time=8.984ms
    
    # Subtest: Reply error handling - code: 422
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - Reply error handling - code: 422 # time=4.783ms
    
    # Subtest: Reply error handling - code: 423
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - Reply error handling - code: 423 # time=4.522ms
    
    # Subtest: Reply error handling - code: 424
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - Reply error handling - code: 424 # time=4.379ms
    
    # Subtest: Reply error handling - code: 425
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 24 - Reply error handling - code: 425 # time=4.439ms
    
    # Subtest: Reply error handling - code: 426
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 25 - Reply error handling - code: 426 # time=4.322ms
    
    # Subtest: Reply error handling - code: 428
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 26 - Reply error handling - code: 428 # time=3.924ms
    
    # Subtest: Reply error handling - code: 429
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - Reply error handling - code: 429 # time=3.728ms
    
    # Subtest: Reply error handling - code: 431
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 28 - Reply error handling - code: 431 # time=3.696ms
    
    # Subtest: Reply error handling - code: 451
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 29 - Reply error handling - code: 451 # time=17.522ms
    
    # Subtest: Reply error handling - code: 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 30 - Reply error handling - code: 500 # time=4.204ms
    
    # Subtest: Reply error handling - code: 501
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 31 - Reply error handling - code: 501 # time=6.949ms
    
    # Subtest: Reply error handling - code: 502
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 32 - Reply error handling - code: 502 # time=3.762ms
    
    # Subtest: Reply error handling - code: 503
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 33 - Reply error handling - code: 503 # time=7.98ms
    
    # Subtest: Reply error handling - code: 504
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - Reply error handling - code: 504 # time=3.779ms
    
    # Subtest: Reply error handling - code: 505
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 35 - Reply error handling - code: 505 # time=12.461ms
    
    # Subtest: Reply error handling - code: 506
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 36 - Reply error handling - code: 506 # time=4.018ms
    
    # Subtest: Reply error handling - code: 507
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 37 - Reply error handling - code: 507 # time=3.698ms
    
    # Subtest: Reply error handling - code: 508
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 38 - Reply error handling - code: 508 # time=4.039ms
    
    # Subtest: Reply error handling - code: 509
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 39 - Reply error handling - code: 509 # time=3.853ms
    
    # Subtest: Reply error handling - code: 510
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 40 - Reply error handling - code: 510 # time=3.653ms
    
    # Subtest: Reply error handling - code: 511
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - Reply error handling - code: 511 # time=3.996ms
    
    # Subtest: preHandler hook error handling with external code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preHandler hook error handling with external code # time=4.798ms
    
    # Subtest: onRequest hook error handling with external done
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - onRequest hook error handling with external done # time=3.937ms
    
    # Subtest: Should reply 400 on client error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 44 - Should reply 400 on client error # time=19.773ms
    
    # Subtest: Should set the response from client error handler
        1..5
        ok 1 - should not error
        ok 2 - type is Error
        ok 3 - should be equal
        ok 4 - Log level is not warn
        ok 5 - should be equal
    ok 45 - Should set the response from client error handler # time=30.035ms
    
    # Subtest: Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 46 - Error instance sets HTTP status code # time=5.644ms
    
    # Subtest: Error status code below 400 defaults to 500
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - Error status code below 400 defaults to 500 # time=9.977ms
    
    # Subtest: Error.status property support
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 48 - Error.status property support # time=5.755ms
    
    # Subtest: Support rejection with values that are not Error instances
        1..11
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Type: number # time=44.563ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Type: string # time=3.516ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 3 - Type: object # time=3.671ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 4 - Type: object # time=3.499ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 5 - Type: object # time=3.347ms
        
        # Subtest: Type: undefined
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 6 - Type: undefined # time=4.26ms
        
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 7 - Type: number # time=3.328ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 8 - Type: string # time=3.309ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 9 - Type: object # time=3.463ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 10 - Type: object # time=3.676ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 11 - Type: object # time=3.649ms
        
    ok 49 - Support rejection with values that are not Error instances # time=87.779ms
    
    # Subtest: invalid schema - ajv
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 50 - invalid schema - ajv # time=66.893ms
    
    # Subtest: should set the status code and the headers from the error object (from route handler) (no custom error handler)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 51 - should set the status code and the headers from the error object (from route handler) (no custom error handler) # time=4.836ms
    
    # Subtest: should set the status code and the headers from the error object (from custom error handler)
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 52 - should set the status code and the headers from the error object (from custom error handler) # time=4.809ms
    
    # Subtest: '*' should throw an error due to serializer can not handle the payload type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 53 - '*' should throw an error due to serializer can not handle the payload type # time=3.925ms
    
    # Subtest: should throw an error if the custom serializer does not serialize the payload to a valid type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 54 - should throw an error if the custom serializer does not serialize the payload to a valid type # time=4.215ms
    
    # Subtest: should not set headers or status code for custom error handler
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 55 - should not set headers or status code for custom error handler # time=5.096ms
    
    # Subtest: error thrown by custom error handler routes to default error handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 56 - error thrown by custom error handler routes to default error handler # time=5.414ms
    
    # Subtest: should throw error if error code is undefined
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 57 - should throw error if error code is undefined # time=3.238ms
    
    # Subtest: should throw error if error code is null
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 58 - should throw error if error code is null # time=2.965ms
    
    # Subtest: should throw error if error code is error_code
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 59 - should throw error if error code is error_code # time=2.928ms
    
    # Subtest: should throw error if error code is 0
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 60 - should throw error if error code is 0 # time=3.778ms
    
    # Subtest: should throw error if error code is 1
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 61 - should throw error if error code is 1 # time=3.566ms
    
    # Subtest: should throw error if error code is 99
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 62 - should throw error if error code is 99 # time=3.867ms
    
    # Subtest: should throw error if error code is 600
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 63 - should throw error if error code is 600 # time=2.911ms
    
    # Subtest: should throw error if error code is 700
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 64 - should throw error if error code is 700 # time=4.26ms
    
    # Subtest: error handler is triggered when a string is thrown from sync handler
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 65 - error handler is triggered when a string is thrown from sync handler # time=3.643ms
    
    # Subtest: status code should be set to 500 and return an error json payload if route handler throws any non Error object expression
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 66 - status code should be set to 500 and return an error json payload if route handler throws any non Error object expression # time=4.295ms
    
    # Subtest: should preserve the status code set by the user if an expression is thrown in a sync route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 67 - should preserve the status code set by the user if an expression is thrown in a sync route # time=3.368ms
    
    # Subtest: should trigger error handlers if a sync route throws any non-error object
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 68 - should trigger error handlers if a sync route throws any non-error object # time=3.467ms
    
    # Subtest: should trigger error handlers if a sync route throws undefined
        1..1
        ok 1 - should be equal
    ok 69 - should trigger error handlers if a sync route throws undefined # time=3.182ms
    
    # Subtest: setting content-type on reply object should not hang the server case 1
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 70 - setting content-type on reply object should not hang the server case 1 # time=3.199ms
    
    # Subtest: setting content-type on reply object should not hang the server case 2
        1..1
        ok 1 - should be equivalent
    ok 71 - setting content-type on reply object should not hang the server case 2 # time=10.039ms
    
    # Subtest: setting content-type on reply object should not hang the server case 3
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 72 - setting content-type on reply object should not hang the server case 3 # time=2.784ms
    
    # Subtest: pipe stream inside error handler should not cause error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 73 - pipe stream inside error handler should not cause error # time=23.031ms
    
    1..73
    # time=937.679ms
ok 84 - test/reply-error.test.js # time=937.679ms

# Subtest: test/reply-trailers.test.js
    # Subtest: send trailers when payload is empty string
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 1 - send trailers when payload is empty string # time=80.805ms
    
    # Subtest: send trailers when payload is empty buffer
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 2 - send trailers when payload is empty buffer # time=11.683ms
    
    # Subtest: send trailers when payload is undefined
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not contain all provided fields
    ok 3 - send trailers when payload is undefined # time=21.139ms
    
    # Subtest: send trailers when payload is json
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not contain all provided fields
    ok 4 - send trailers when payload is json # time=16.861ms
    
    # Subtest: send trailers when payload is stream
        1..7
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not contain all provided fields
    ok 5 - send trailers when payload is stream # time=20.819ms
    
    # Subtest: removeTrailer
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - should not contain all provided fields
    ok 6 - removeTrailer # time=9.135ms
    
    # Subtest: hasTrailer
        1..10
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - expect falsey value
        ok 10 - should not contain all provided fields
    ok 7 - hasTrailer # time=9.394ms
    
    # Subtest: throw error when trailer header name is not allowed
        1..14
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
    ok 8 - throw error when trailer header name is not allowed # time=6.885ms
    
    # Subtest: throw error when trailer header value is not function
        1..10
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
    ok 9 - throw error when trailer header value is not function # time=7.142ms
    
    1..9
    # time=204.84ms
ok 85 - test/reply-trailers.test.js # time=204.84ms

# Subtest: test/request-error.test.js
    # Subtest: default 400 on request error
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 400 on request error # time=84.061ms
    
    # Subtest: default 400 on request error with custom error handler
        1..6
        ok 1 - type is object
        ok 2 - type is Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - default 400 on request error with custom error handler # time=10.583ms
    
    # Subtest: default clientError handler ignores ECONNRESET
        1..3
        ok 1 - should not error
        ok 2 - should match pattern provided
        ok 3 - should not match pattern provided
    ok 3 - default clientError handler ignores ECONNRESET # time=47.93ms
    
    # Subtest: default clientError handler ignores sockets in destroyed state
        1..1
        ok 1 - (unnamed test)
    ok 4 - default clientError handler ignores sockets in destroyed state # time=1.827ms
    
    # Subtest: default clientError handler destroys sockets in writable state
        1..2
        ok 1 - should match pattern provided
        ok 2 - destroy should be called
    ok 5 - default clientError handler destroys sockets in writable state # time=2.666ms
    
    # Subtest: default clientError handler destroys http sockets in non-writable state
        1..1
        ok 1 - destroy should be called
    ok 6 - default clientError handler destroys http sockets in non-writable state # time=1.558ms
    
    # Subtest: error handler binding
        1..5
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 7 - error handler binding # time=8.091ms
    
    # Subtest: encapsulated error handler binding
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should be equal
    ok 8 - encapsulated error handler binding # time=10.351ms
    
    # Subtest: default clientError replies with bad request on reused keep-alive connection
        1..2
        ok 1 - should not error
        ok 2 - should match pattern provided
    ok 9 - default clientError replies with bad request on reused keep-alive connection # time=27.955ms
    
    1..9
    # time=209.338ms
ok 86 - test/request-error.test.js # time=209.338ms

# Subtest: test/requestTimeout.test.js
    # Subtest: requestTimeout passed to server
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - requestTimeout passed to server # time=32.606ms
    
    # Subtest: requestTimeout should be set
        1..1
        ok 1 - should be equivalent
    ok 2 - requestTimeout should be set # time=4.047ms
    
    # Subtest: requestTimeout should 0
        1..1
        ok 1 - should be equivalent
    ok 3 - requestTimeout should 0 # time=1.685ms
    
    1..3
    # time=50.979ms
ok 87 - test/requestTimeout.test.js # time=50.979ms

# Subtest: test/route-hooks.test.js
    # Subtest: preHandler
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 1 - preHandler # time=183.661ms
    
    # Subtest: preHandler option should be called after preHandler hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 2 - preHandler option should be called after preHandler hook # time=9.301ms
    
    # Subtest: preHandler option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 3 - preHandler option could accept an array of functions # time=30.92ms
    
    # Subtest: preHandler option does not interfere with preHandler hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 4 - preHandler option does not interfere with preHandler hook # time=8.289ms
    
    # Subtest: onSend
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 5 - onSend # time=6.389ms
    
    # Subtest: onSend option should be called after onSend hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 6 - onSend option should be called after onSend hook # time=17.859ms
    
    # Subtest: onSend option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 7 - onSend option could accept an array of functions # time=12.863ms
    
    # Subtest: onSend option does not interfere with onSend hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - onSend option does not interfere with onSend hook # time=6.745ms
    
    # Subtest: onRequest
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 9 - onRequest # time=22.771ms
    
    # Subtest: onRequest option should be called after onRequest hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 10 - onRequest option should be called after onRequest hook # time=14.489ms
    
    # Subtest: onRequest option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 11 - onRequest option could accept an array of functions # time=8.968ms
    
    # Subtest: onRequest option does not interfere with onRequest hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 12 - onRequest option does not interfere with onRequest hook # time=7.116ms
    
    # Subtest: onResponse
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 13 - onResponse # time=20.174ms
    
    # Subtest: onResponse option should be called after onResponse hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 14 - onResponse option should be called after onResponse hook # time=12.886ms
    
    # Subtest: onResponse option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 15 - onResponse option could accept an array of functions # time=5.072ms
    
    # Subtest: onResponse option does not interfere with onResponse hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 16 - onResponse option does not interfere with onResponse hook # time=13.111ms
    
    # Subtest: preValidation
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 17 - preValidation # time=16.519ms
    
    # Subtest: preValidation option should be called after preValidation hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 18 - preValidation option should be called after preValidation hook # time=13.231ms
    
    # Subtest: preValidation option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 19 - preValidation option could accept an array of functions # time=4.833ms
    
    # Subtest: preValidation option does not interfere with preValidation hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 20 - preValidation option does not interfere with preValidation hook # time=7.328ms
    
    # Subtest: preParsing
        1..3
        ok 1 - hook called
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 21 - preParsing # time=4.5ms
    
    # Subtest: preParsing option should be called after preParsing hook
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 22 - preParsing option should be called after preParsing hook # time=3.787ms
    
    # Subtest: preParsing option could accept an array of functions
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
    ok 23 - preParsing option could accept an array of functions # time=3.526ms
    
    # Subtest: preParsing option does not interfere with preParsing hook
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 24 - preParsing option does not interfere with preParsing hook # time=4.652ms
    
    # Subtest: preHandler option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 25 - preHandler option should be unique per route # time=5.869ms
    
    # Subtest: preHandler option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 26 - preHandler option should handle errors # time=12.733ms
    
    # Subtest: preHandler option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - preHandler option should handle throwing objects # time=6.79ms
    
    # Subtest: preHandler option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 28 - preHandler option should handle throwing objects by default # time=5ms
    
    # Subtest: preHandler option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 29 - preHandler option should handle errors with custom status code # time=7.789ms
    
    # Subtest: preHandler option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 30 - preHandler option should keep the context # time=4.87ms
    
    # Subtest: preHandler option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 31 - preHandler option should keep the context (array) # time=4.567ms
    
    # Subtest: onRequest option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 32 - onRequest option should be unique per route # time=5.583ms
    
    # Subtest: onRequest option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 33 - onRequest option should handle errors # time=6.146ms
    
    # Subtest: onRequest option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - onRequest option should handle throwing objects # time=4.603ms
    
    # Subtest: onRequest option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 35 - onRequest option should handle throwing objects by default # time=10.499ms
    
    # Subtest: onRequest option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 36 - onRequest option should handle errors with custom status code # time=3.516ms
    
    # Subtest: onRequest option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 37 - onRequest option should keep the context # time=3.608ms
    
    # Subtest: onRequest option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 38 - onRequest option should keep the context (array) # time=3.773ms
    
    # Subtest: preValidation option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 39 - preValidation option should be unique per route # time=5.943ms
    
    # Subtest: preValidation option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 40 - preValidation option should handle errors # time=3.914ms
    
    # Subtest: preValidation option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - preValidation option should handle throwing objects # time=7.891ms
    
    # Subtest: preValidation option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preValidation option should handle throwing objects by default # time=3.831ms
    
    # Subtest: preValidation option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - preValidation option should handle errors with custom status code # time=4.101ms
    
    # Subtest: preValidation option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 44 - preValidation option should keep the context # time=3.623ms
    
    # Subtest: preValidation option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 45 - preValidation option should keep the context (array) # time=4.502ms
    
    # Subtest: preParsing option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 46 - preParsing option should be unique per route # time=10.292ms
    
    # Subtest: preParsing option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - preParsing option should handle errors # time=4.936ms
    
    # Subtest: preParsing option should handle throwing objects
        1..4
        ok 1 - the error object throws by the user
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 48 - preParsing option should handle throwing objects # time=4.36ms
    
    # Subtest: preParsing option should handle throwing objects by default
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 49 - preParsing option should handle throwing objects by default # time=3.639ms
    
    # Subtest: preParsing option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 50 - preParsing option should handle errors with custom status code # time=7.834ms
    
    # Subtest: preParsing option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 51 - preParsing option should keep the context # time=11.439ms
    
    # Subtest: preParsing option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 52 - preParsing option should keep the context (array) # time=3.411ms
    
    # Subtest: preValidation option should be called before preHandler hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 53 - preValidation option should be called before preHandler hook # time=3.587ms
    
    # Subtest: preSerialization option should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 54 - preSerialization option should be able to modify the payload # time=3.564ms
    
    # Subtest: preParsing option should be called before preValidation hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 55 - preParsing option should be called before preValidation hook # time=3.342ms
    
    # Subtest: preParsing option should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 56 - preParsing option should be able to modify the payload # time=4.06ms
    
    # Subtest: onRequest option should be called before preParsing
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 57 - onRequest option should be called before preParsing # time=3.72ms
    
    # Subtest: onTimeout on route
        1..4
        ok 1 - should not error
        ok 2 - onTimeout called
        ok 3 - type is Error
        ok 4 - should be equal
    ok 58 - onTimeout on route # time=522.366ms
    
    # Subtest: onError on route
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 59 - onError on route # time=8.368ms
    
    1..59
    # time=1195.322ms
ok 88 - test/route-hooks.test.js # time=1195.322ms

# Subtest: test/route-prefix.test.js
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 1
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 1 - Prefix options should add a prefix for all the routes inside a register / 1 # time=125.992ms
    
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 2
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 2 - Prefix options should add a prefix for all the routes inside a register / 2 # time=8.007ms
    
    # Subtest: Prefix options should add a prefix for all the chained routes inside a register / 3
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 3 - Prefix options should add a prefix for all the chained routes inside a register / 3 # time=9.16ms
    
    # Subtest: Prefix should support parameters as well
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 4 - Prefix should support parameters as well # time=6.618ms
    
    # Subtest: Prefix should support /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 5 - Prefix should support / # time=6.495ms
    
    # Subtest: Prefix without /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 6 - Prefix without / # time=4.896ms
    
    # Subtest: Prefix with trailing /
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 7 - Prefix with trailing / # time=10.537ms
    
    # Subtest: Prefix works multiple levels deep
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - Prefix works multiple levels deep # time=9.247ms
    
    # Subtest: Different register - encapsulation check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 9 - Different register - encapsulation check # time=12.216ms
    
    # Subtest: Can retrieve prefix within encapsulated instances
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Can retrieve prefix within encapsulated instances # time=8.834ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 11 - matches both /prefix and /prefix/ with a / route # time=7.014ms
    
    # Subtest: prefix "/prefix/" does not match "/prefix" with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 12 - prefix "/prefix/" does not match "/prefix" with a / route # time=5.812ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 13 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true # time=4.408ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 14 - matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true # time=4.55ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 15 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false # time=8.846ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 16 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false # time=5.879ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 17 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=11.311ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 18 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false # time=5.507ms
    
    # Subtest: returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 19 - returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true # time=5.084ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 20 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=4.089ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 21 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=6.221ms
    
    # Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 22 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=4.184ms
    
    # Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 23 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false # time=5.391ms
    
    # Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 24 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false # time=5.559ms
    
    # Subtest: matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
    ok 25 - matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false # time=5.333ms
    
    # Subtest: calls onRoute only once when prefixing
        1..1
        ok 1 - should be equivalent
    ok 26 - calls onRoute only once when prefixing # time=4.528ms
    
    1..26
    # time=308.981ms
ok 89 - test/route-prefix.test.js # time=308.981ms

# Subtest: test/route.test.js
    # Subtest: route
        1..9
        # Subtest: route - get
            1..1
            ok 1 - (unnamed test)
        ok 1 - route - get # time=11.288ms
        
        # Subtest: missing schema - route
            1..1
            ok 1 - (unnamed test)
        ok 2 - missing schema - route # time=3.068ms
        
        # Subtest: invalid handler attribute - route
            1..1
            ok 1 - (unnamed test)
        ok 3 - invalid handler attribute - route # time=1.387ms
        
        # Subtest: Multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 4 - Multiple methods # time=2.008ms
        
        # Subtest: Add multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 5 - Add multiple methods # time=4.459ms
        
        # Subtest: cannot add another route after binding
            1..1
            ok 1 - (unnamed test)
        ok 6 - cannot add another route after binding # time=1.041ms
        
        # Subtest: route - get
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - route - get # time=26.113ms
        
        # Subtest: route - missing schema
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 8 - route - missing schema # time=6.096ms
        
        # Subtest: route - multiple methods
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equivalent
        ok 9 - route - multiple methods # time=8.94ms
        
    ok 1 - route # time=247.18ms
    
    # Subtest: invalid schema - route
        1..3
        ok 1 - the error is throw on preReady
        ok 2 - should be equal
        ok 3 - should match pattern provided
    ok 2 - invalid schema - route # time=80.864ms
    
    # Subtest: same route definition object on multiple prefixes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - same route definition object on multiple prefixes # time=8.81ms
    
    # Subtest: path can be specified in place of uri
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - path can be specified in place of uri # time=39.461ms
    
    # Subtest: invalid bodyLimit option - route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - invalid bodyLimit option - route # time=1.807ms
    
    # Subtest: handler function in options of shorthand route should works correctly
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - handler function in options of shorthand route should works correctly # time=5.924ms
    
    # Subtest: does not mutate joi schemas
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - does not mutate joi schemas # time=11.645ms
    
    # Subtest: multiple routes with one schema
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - multiple routes with one schema # time=50.57ms
    
    # Subtest: route error handler overrides default error handler
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - route error handler overrides default error handler # time=7.719ms
    
    # Subtest: route error handler does not affect other routes
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - route error handler does not affect other routes # time=10.456ms
    
    # Subtest: async error handler for a route
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - async error handler for a route # time=14.486ms
    
    # Subtest: route error handler overrides global custom error handler
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - route error handler overrides global custom error handler # time=11.294ms
    
    # Subtest: throws when route with empty url
        1..1
        ok 1 - should be equal
    ok 13 - throws when route with empty url # time=50.765ms
    
    # Subtest: throws when route with empty url in shorthand declaration
        1..1
        ok 1 - should be equal
    ok 14 - throws when route with empty url in shorthand declaration # time=2.088ms
    
    # Subtest: throws when route-level error handler is not a function
        1..1
        ok 1 - should be equal
    ok 15 - throws when route-level error handler is not a function # time=1.432ms
    
    # Subtest: Creates a HEAD route for each GET one (default)
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 16 - Creates a HEAD route for each GET one (default) # time=28.59ms
    
    # Subtest: Do not create a HEAD route for each GET one (exposeHeadRoutes: false)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 17 - Do not create a HEAD route for each GET one (exposeHeadRoutes: false) # time=13.326ms
    
    # Subtest: Creates a HEAD route for each GET one
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 18 - Creates a HEAD route for each GET one # time=10.326ms
    
    # Subtest: Creates a HEAD route for a GET one with prefixTrailingSlash
        1..1
        ok 1 - expect truthy value
    ok 19 - Creates a HEAD route for a GET one with prefixTrailingSlash # time=13.982ms
    
    # Subtest: Will not create a HEAD route that is not GET
        1..11
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 20 - Will not create a HEAD route that is not GET # time=43.857ms
    
    # Subtest: HEAD route should handle properly each response type
        1..25
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should not error
        ok 22 - should be equal
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equal
    ok 21 - HEAD route should handle properly each response type # time=30.102ms
    
    # Subtest: HEAD route should respect custom onSend handlers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 22 - HEAD route should respect custom onSend handlers # time=5.215ms
    
    # Subtest: route onSend can be function or array of functions
        1..12
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
    ok 23 - route onSend can be function or array of functions # time=6.971ms
    
    # Subtest: no warning for exposeHeadRoute
        1..0
    ok 24 - no warning for exposeHeadRoute # time=42.175ms
    
    # Subtest: HEAD route should handle stream.on('error')
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 25 - HEAD route should handle stream.on('error') # time=11.517ms
    
    # Subtest: HEAD route should be exposed by default
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 26 - HEAD route should be exposed by default # time=5.713ms
    
    # Subtest: HEAD route should be exposed if route exposeHeadRoute is set
        1..7
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 27 - HEAD route should be exposed if route exposeHeadRoute is set # time=4.838ms
    
    # Subtest: Set a custom HEAD route before GET one without disabling exposeHeadRoutes (global)
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Set a custom HEAD route before GET one without disabling exposeHeadRoutes (global) # time=3.43ms
    
    # Subtest: Set a custom HEAD route before GET one without disabling exposeHeadRoutes (route)
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 29 - Set a custom HEAD route before GET one without disabling exposeHeadRoutes (route) # time=37.226ms
    
    # Subtest: HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'no-slash'
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 30 - HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'no-slash' # time=4.567ms
    
    # Subtest: HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'both'
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 31 - HEAD routes properly auto created for GET routes when prefixTrailingSlash: 'both' # time=6.135ms
    
    # Subtest: Request and Reply share the route config
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - there are url and method additional properties
    ok 32 - Request and Reply share the route config # time=8.628ms
    
    # Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true
        1..1
        ok 1 - expect truthy value
    ok 33 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true # time=3.782ms
    
    # Subtest: GET route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for GET:/get route is not supported!
    ok 34 - GET route with body schema should throw # time=2.075ms
    
    # Subtest: HEAD route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrow route is not supported!
    ok 35 - HEAD route with body schema should throw # time=1.308ms
    
    # Subtest: [HEAD, GET] route with body schema should throw
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrowHead route is not supported!
    ok 36 - [HEAD, GET] route with body schema should throw # time=1.39ms
    
    # Subtest: GET route with body schema should throw - shorthand
        1..1
        ok 1 - expected to throw: Error Body validation schema for GET:/shouldThrow route is not supported!
    ok 37 - GET route with body schema should throw - shorthand # time=1.327ms
    
    # Subtest: HEAD route with body schema should throw - shorthand
        1..1
        ok 1 - expected to throw: Error Body validation schema for HEAD:/shouldThrow2 route is not supported!
    ok 38 - HEAD route with body schema should throw - shorthand # time=1.308ms
    
    # Subtest: route with non-english characters
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 39 - route with non-english characters # time=7.363ms
    
    # Subtest: invalid url attribute - non string URL
        1..1
        ok 1 - should be equal
    ok 40 - invalid url attribute - non string URL # time=1.03ms
    
    1..40
    # time=862.034ms
ok 90 - test/route.test.js # time=862.034ms

# Subtest: test/router-options.test.js
    # Subtest: Should honor ignoreTrailingSlash option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - Should honor ignoreTrailingSlash option # time=72.634ms
    
    # Subtest: Should honor ignoreDuplicateSlashes option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - Should honor ignoreDuplicateSlashes option # time=14.815ms
    
    # Subtest: Should honor ignoreTrailingSlash and ignoreDuplicateSlashes options
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - Should honor ignoreTrailingSlash and ignoreDuplicateSlashes options # time=13.923ms
    
    # Subtest: Should honor maxParamLength option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 4 - Should honor maxParamLength option # time=34.96ms
    
    # Subtest: Should expose router options via getters on request and reply
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 5 - Should expose router options via getters on request and reply # time=6.699ms
    
    # Subtest: Should set is404 flag for unmatched paths
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - Should set is404 flag for unmatched paths # time=4.411ms
    
    # Subtest: Should honor frameworkErrors option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
    ok 7 - Should honor frameworkErrors option # time=20.962ms
    
    1..7
    # time=191.039ms
ok 91 - test/router-options.test.js # time=191.039ms

# Subtest: test/same-shape.test.js
    # Subtest: same shape on Request
        1..1
        ok 1 - should be equal
    ok 1 - same shape on Request # time=67.338ms
    
    # Subtest: same shape on Request when object
        1..1
        ok 1 - should be equal
    ok 2 - same shape on Request when object # time=7.16ms
    
    # Subtest: same shape on Reply
        1..1
        ok 1 - should be equal
    ok 3 - same shape on Reply # time=9.657ms
    
    # Subtest: same shape on Reply when object
        1..1
        ok 1 - should be equal
    ok 4 - same shape on Reply when object # time=9.555ms
    
    1..4
    # time=114.031ms
ok 92 - test/same-shape.test.js # time=114.031ms

# Subtest: test/schema-examples.test.js
    # Subtest: Example - URI $id
        1..1
        ok 1 - should not error
    ok 1 - Example - URI $id # time=133.03ms
    
    # Subtest: Example - string $id
        1..1
        ok 1 - should not error
    ok 2 - Example - string $id # time=37.312ms
    
    # Subtest: Example - get schema
        1..1
        ok 1 - should be equivalent
    ok 3 - Example - get schema # time=5.897ms
    
    # Subtest: Example - get schema encapsulated
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        1..3
    ok 4 - Example - get schema encapsulated # time=82.95ms
    
    # Subtest: Example - validation
        1..1
        ok 1 - should not error
    ok 5 - Example - validation # time=52.682ms
    
    # Subtest: Example - ajv config
        1..1
        ok 1 - should not error
    ok 6 - Example - ajv config # time=83.093ms
    
    # Subtest: Example Joi
        1..1
        ok 1 - should not error
    ok 7 - Example Joi # time=172.921ms
    
    # Subtest: Example yup
        1..1
        ok 1 - should not error
    ok 8 - Example yup # time=270.58ms
    
    # Subtest: Example - serialization
        1..1
        ok 1 - should not error
    ok 9 - Example - serialization # time=13.127ms
    
    # Subtest: Example - serialization 2
        1..1
        ok 1 - should not error
    ok 10 - Example - serialization 2 # time=6.923ms
    
    # Subtest: Example - serializator
        1..1
        ok 1 - should not error
    ok 11 - Example - serializator # time=5.062ms
    
    # Subtest: Example - schemas examples
        1..1
        ok 1 - should not error
    ok 12 - Example - schemas examples # time=69.891ms
    
    # Subtest: should return custom error messages with ajv-errors
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 13 - should return custom error messages with ajv-errors # time=60.04ms
    
    # Subtest: should return localized error messages with ajv-i18n
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 14 - should return localized error messages with ajv-i18n # time=31.929ms
    
    1..14
    # time=1039.268ms
ok 93 - test/schema-examples.test.js # time=1039.268ms

# Subtest: test/schema-feature.test.js
    # Subtest: Should expose addSchema function
        1..1
        ok 1 - should be equal
    ok 1 - Should expose addSchema function # time=15.199ms
    
    # Subtest: Should expose getSchema function
        1..1
        ok 1 - should be equal
    ok 2 - Should expose getSchema function # time=2.112ms
    
    # Subtest: Should expose getSchemas function
        1..1
        ok 1 - should be equal
    ok 3 - Should expose getSchemas function # time=1.866ms
    
    # Subtest: Should expose setValidatorCompiler function
        1..1
        ok 1 - should be equal
    ok 4 - Should expose setValidatorCompiler function # time=1.543ms
    
    # Subtest: Should expose setSerializerCompiler function
        1..1
        ok 1 - should be equal
    ok 5 - Should expose setSerializerCompiler function # time=1.582ms
    
    # Subtest: cannot call setValidatorCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 6 - cannot call setValidatorCompiler after binding # time=119.933ms
    
    # Subtest: cannot call setSerializerCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 7 - cannot call setSerializerCompiler after binding # time=4.298ms
    
    # Subtest: The schemas should be added to an internal storage
        1..1
        ok 1 - should be equivalent
    ok 8 - The schemas should be added to an internal storage # time=5.896ms
    
    # Subtest: The schemas should be accessible via getSchemas
        1..1
        ok 1 - should be equivalent
    ok 9 - The schemas should be accessible via getSchemas # time=4.1ms
    
    # Subtest: The schema should be accessible by id via getSchema
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should not error
    ok 10 - The schema should be accessible by id via getSchema # time=22.681ms
    
    # Subtest: Get validatorCompiler after setValidatorCompiler
        1..2
        ok 1 - expect truthy value
        ok 2 - should not error
    ok 11 - Get validatorCompiler after setValidatorCompiler # time=9.415ms
    
    # Subtest: Get serializerCompiler after setSerializerCompiler
        1..2
        ok 1 - expect truthy value
        ok 2 - should not error
    ok 12 - Get serializerCompiler after setSerializerCompiler # time=3.992ms
    
    # Subtest: Get compilers is empty when settle on routes
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - Get compilers is empty when settle on routes # time=39.138ms
    
    # Subtest: Should throw if the $id property is missing
        1..1
        ok 1 - should be equal
    ok 14 - Should throw if the $id property is missing # time=1.561ms
    
    # Subtest: Cannot add multiple times the same id
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 15 - Cannot add multiple times the same id # time=1.998ms
    
    # Subtest: Cannot add schema for query and querystring
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 16 - Cannot add schema for query and querystring # time=15.019ms
    
    # Subtest: Should throw of the schema does not exists in input
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 17 - Should throw of the schema does not exists in input # time=84.108ms
    
    # Subtest: Should throw of the schema does not exists in output
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 18 - Should throw of the schema does not exists in output # time=15.675ms
    
    # Subtest: Should not change the input schemas
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - the $id is not removed
        ok 4 - should be equivalent
    ok 19 - Should not change the input schemas # time=45.165ms
    
    # Subtest: First level $ref
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 20 - First level $ref # time=70.063ms
    
    # Subtest: Customize validator compiler in instance and route
        1..28
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - headers evaluated
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - body evaluated
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - querystring evaluated
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - params evaluated
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equivalent
        ok 22 - should be equivalent
        ok 23 - should be equivalent
        ok 24 - should be equivalent
        ok 25 - should match pattern provided
        ok 26 - should not error
        ok 27 - should be equal
        ok 28 - should be equivalent
    ok 21 - Customize validator compiler in instance and route # time=18.826ms
    
    # Subtest: Use the same schema across multiple routes
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 22 - Use the same schema across multiple routes # time=58.971ms
    
    # Subtest: Encapsulation should intervene
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 23 - Encapsulation should intervene # time=34.737ms
    
    # Subtest: Encapsulation isolation
        1..1
        ok 1 - should not error
    ok 24 - Encapsulation isolation # time=4.293ms
    
    # Subtest: Add schema after register
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 25 - Add schema after register # time=73.752ms
    
    # Subtest: Encapsulation isolation for getSchemas
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
    ok 26 - Encapsulation isolation for getSchemas # time=14.945ms
    
    # Subtest: Use the same schema id in different places
        1..1
        ok 1 - should not error
    ok 27 - Use the same schema id in different places # time=71.281ms
    
    # Subtest: Get schema anyway should not add `properties` if allOf is present
        1..1
        ok 1 - should not error
    ok 28 - Get schema anyway should not add `properties` if allOf is present # time=65.621ms
    
    # Subtest: Get schema anyway should not add `properties` if oneOf is present
        1..1
        ok 1 - should not error
    ok 29 - Get schema anyway should not add `properties` if oneOf is present # time=45.599ms
    
    # Subtest: Get schema anyway should not add `properties` if anyOf is present
        1..1
        ok 1 - should not error
    ok 30 - Get schema anyway should not add `properties` if anyOf is present # time=31.408ms
    
    # Subtest: Shared schema should be ignored in string enum
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 31 - Shared schema should be ignored in string enum # time=33.193ms
    
    # Subtest: Shared schema should NOT be ignored in != string enum
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 32 - Shared schema should NOT be ignored in != string enum # time=46.129ms
    
    # Subtest: Case insensitive header validation
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 33 - Case insensitive header validation # time=55.461ms
    
    # Subtest: Not evaluate json-schema $schema keyword
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 34 - Not evaluate json-schema $schema keyword # time=23.26ms
    
    # Subtest: Validation context in validation result
        1..5
        ok 1 - should be equal
        ok 2 - detailed errors
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 35 - Validation context in validation result # time=45.408ms
    
    # Subtest: The schema build should not modify the input
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
    ok 36 - The schema build should not modify the input # time=30.026ms
    
    # Subtest: Cross schema reference with encapsulation references
        1..1
        ok 1 - should not error
    ok 37 - Cross schema reference with encapsulation references # time=113.416ms
    
    # Subtest: Check how many AJV instances are built \#1
        1..12
        ok 1 - validator not initialized
        ok 2 - validator not initialized
        ok 3 - validator not initialized
        ok 4 - validator not initialized
        ok 5 - should not error
        ok 6 - validator initialized on preReady
        ok 7 - validator initialized on preReady
        ok 8 - validator is only one for all the instances
        ok 9 - validator initialized on preReady
        ok 10 - validator is only one for all the instances
        ok 11 - validator initialized on preReady
        ok 12 - validator is only one for all the instances
    ok 38 - Check how many AJV instances are built \#1 # time=58.342ms
    
    # Subtest: onReady hook has the compilers ready
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - it is called once
    ok 39 - onReady hook has the compilers ready # time=64.219ms
    
    # Subtest: Check how many AJV instances are built \#2 - verify validatorPool
        1..13
        ok 1 - validator not initialized
        ok 2 - validator not initialized
        ok 3 - validator not initialized
        ok 4 - validator not initialized
        ok 5 - validator not initialized
        ok 6 - validator not initialized
        ok 7 - validator not initialized
        ok 8 - validator is initialized
        ok 9 - this context must share the validator with the same schemas
        ok 10 - this context must share the validator of the parent
        ok 11 - validator is initialized
        ok 12 - this context has its own compiler
        ok 13 - should not error
    ok 40 - Check how many AJV instances are built \#2 - verify validatorPool # time=60.316ms
    
    # Subtest: Add schema order should not break the startup
        1..1
        ok 1 - should not error
    ok 41 - Add schema order should not break the startup # time=25.693ms
    
    # Subtest: The schema compiler recreate itself if needed
        1..1
        ok 1 - should not error
    ok 42 - The schema compiler recreate itself if needed # time=39.911ms
    
    # Subtest: Schema controller setter
        1..2
        ok 1 - allow empty object
        ok 2 - should be equal
    ok 43 - Schema controller setter # time=1.484ms
    
    # Subtest: Schema controller bucket
        1..10
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - three schema added
        ok 10 - one bucket built for every register call + 1 for the root instance
    ok 44 - Schema controller bucket # time=9.358ms
    
    # Subtest: setSchemaController per instance
        1..7
        ok 1 - instance1 has created the bucket
        ok 2 - instance2 has created the bucket
        ok 3 - add is called
        ok 4 - getSchemas is called
        ok 5 - getSchema is called
        ok 6 - the schema are loaded
        ok 7 - should not error
    ok 45 - setSchemaController per instance # time=5.37ms
    
    # Subtest: setSchemaController: Inherits correctly parent schemas with a customized validator instance
        1..5
        ok 1 - Contains same number of schemas
        ok 2 - Contains expected schemas
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - Should not coearce the string into array
    ok 46 - setSchemaController: Inherits correctly parent schemas with a customized validator instance # time=103.931ms
    
    # Subtest: setSchemaController: Inherits buildSerializer from parent if not present within the instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - Should be called from the child
        ok 4 - Should not be called from the child
        ok 5 - Should be called from the child
        ok 6 - Should not coerce the string into array
    ok 47 - setSchemaController: Inherits buildSerializer from parent if not present within the instance # time=48.368ms
    
    # Subtest: setSchemaController: Inherits buildValidator from parent if not present within the instance
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - Should be called from the child
        ok 4 - Should not be called from the child
        ok 5 - Should be called from the child
        ok 6 - Should not coearce the string into array
    ok 48 - setSchemaController: Inherits buildValidator from parent if not present within the instance # time=23.607ms
    
    # Subtest: Should throw if not default validator passed
        1..4
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - Should not coearce the string into array
    ok 49 - Should throw if not default validator passed # time=29.606ms
    
    # Subtest: Should coerce the array if the default validator is used
        1..2
        ok 1 - should be equal
        ok 2 - Should coearce the string into array
    ok 50 - Should coerce the array if the default validator is used # time=52.478ms
    
    # Subtest: Should return a human-friendly error if response status codes are not specified
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 51 - Should return a human-friendly error if response status codes are not specified # time=3.675ms
    
    1..51
    # time=1815.637ms
ok 94 - test/schema-feature.test.js # time=1815.637ms

# Subtest: test/schema-serialization.test.js
    # Subtest: basic test
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 1 - basic test # time=178.01ms
    
    # Subtest: custom serializer options
        1..3
        ok 1 - should not error
        ok 2 - it must use the ceil rouding
        ok 3 - should be equal
    ok 2 - custom serializer options # time=10.631ms
    
    # Subtest: Use the same schema id in different places
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 3 - Use the same schema id in different places # time=49.123ms
    
    # Subtest: Use shared schema and $ref with $id in response ($ref to $id)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - Use shared schema and $ref with $id in response ($ref to $id) # time=108.993ms
    
    # Subtest: Shared schema should be pass to serializer and validator ($ref to shared schema /definitions)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 5 - Shared schema should be pass to serializer and validator ($ref to shared schema /definitions) # time=81.556ms
    
    # Subtest: Custom setSerializerCompiler
        1..7
        ok 1 - the serializer is set by the parent
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
    ok 6 - Custom setSerializerCompiler # time=9.537ms
    
    # Subtest: Custom setSerializerCompiler returns bad serialized output
        1..4
        ok 1 - returning an invalid serialization
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
    ok 7 - Custom setSerializerCompiler returns bad serialized output # time=7.962ms
    
    # Subtest: Custom serializer per route
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - the custom and route serializer has been called
        1..4
    ok 8 - Custom serializer per route # time=30.112ms
    
    # Subtest: Reply serializer win over serializer 
        1..6
        ok 1 - the custom compiler has been created
        ok 2 - the custom compiler has been created
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 9 - Reply serializer win over serializer # time=14.827ms
    
    # Subtest: Reply serializer win over serializer 
        1..6
        ok 1 - the custom compiler has been created
        ok 2 - the custom compiler has been created
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 10 - Reply serializer win over serializer # time=10.173ms
    
    # Subtest: The schema compiler recreate itself if needed
        1..1
        ok 1 - should not error
    ok 11 - The schema compiler recreate itself if needed # time=10.289ms
    
    # Subtest: The schema changes the default error handler output
        1..4
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - The schema changes the default error handler output # time=20.657ms
    
    # Subtest: do not crash if status code serializer errors
        ok 1 - should be equal
        ok 2 - should be equivalent
        1..2
    ok 13 - do not crash if status code serializer errors # time=88.719ms
    
    # Subtest: custom schema serializer error, empty message
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 14 - custom schema serializer error, empty message # time=8.606ms
    
    # Subtest: error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 15 - error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error # time=4.097ms
    
    # Subtest: Errors in searilizer sended to errorHandler
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - error presents
        ok 4 - Serialization sign presents
        1..4
    ok 16 - Errors in searilizer sended to errorHandler # time=17.15ms
    
    # Subtest: capital X
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 17 - capital X # time=6.495ms
    
    # Subtest: allow default as status code and used as last fallback
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 18 - allow default as status code and used as last fallback # time=7.891ms
    
    1..18
    # time=692.973ms
ok 95 - test/schema-serialization.test.js # time=692.973ms

# Subtest: test/schema-special-usage.test.js
    # Subtest: Ajv plugins array parameter
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 1 - Ajv plugins array parameter # time=189.299ms
    
    # Subtest: Should handle root $merge keywords in header
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - Should handle root $merge keywords in header # time=99.806ms
    
    # Subtest: Should handle root $patch keywords in header
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - Should handle root $patch keywords in header # time=73.486ms
    
    # Subtest: Should handle $merge keywords in body
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 4 - Should handle $merge keywords in body # time=60.897ms
    
    # Subtest: Should handle $patch keywords in body
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 5 - Should handle $patch keywords in body # time=66.491ms
    
    # Subtest: serializer read validator's schemas
        1..4
        ok 1 - is always empty because fastify.addSchema is not called
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - serializer read validator's schemas # time=128.07ms
    
    # Subtest: setSchemaController in a plugin
        1..5
        ok 1 - the bucket is created
        ok 2 - the querystring schema is compiled
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 7 - setSchemaController in a plugin # time=60.398ms
    
    # Subtest: side effect on schema let the server crash
        1..0
    ok 8 - side effect on schema let the server crash # time=42.231ms
    
    # Subtest: only response schema trigger AJV pollution
        1..0
    ok 9 - only response schema trigger AJV pollution # time=48.698ms
    
    # Subtest: only response schema trigger AJV pollution \#2
        1..0
    ok 10 - only response schema trigger AJV pollution \#2 # time=53.246ms
    
    # Subtest: setSchemaController in a plugin with head routes
        1..6
        ok 1 - the bucket is created
        ok 2 - the schema is reused
        ok 3 - the schema is reused
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 11 - setSchemaController in a plugin with head routes # time=68.447ms
    
    # Subtest: multiple refs with the same ids
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 12 - multiple refs with the same ids # time=51.286ms
    
    # Subtest: JOI validation overwrite request headers
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - JOI validation overwrite request headers # time=11.034ms
    
    1..13
    # time=973.985ms
ok 96 - test/schema-special-usage.test.js # time=973.985ms

# Subtest: test/schema-validation.test.js
    # Subtest: Basic validation test
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 1 - Basic validation test # time=166.497ms
    
    # Subtest: External AJV instance
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - External AJV instance # time=137.461ms
    
    # Subtest: Encapsulation
        1..19
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - the route validator does not change the instance one
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - should be equal
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equivalent
    ok 3 - Encapsulation # time=79.111ms
    
    # Subtest: Triple $ref with a simple $id
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 4 - Triple $ref with a simple $id # time=85.975ms
    
    # Subtest: Extending schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 5 - Extending schema # time=41.642ms
    
    # Subtest: Should work with nested ids
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 6 - Should work with nested ids # time=76.67ms
    
    # Subtest: Use the same schema across multiple routes
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 7 - Use the same schema across multiple routes # time=62.974ms
    
    # Subtest: JSON Schema validation keywords
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 8 - JSON Schema validation keywords # time=51.279ms
    
    # Subtest: Nested id calls
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 9 - Nested id calls # time=78.757ms
    
    # Subtest: Use the same schema id in different places
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 10 - Use the same schema id in different places # time=56.567ms
    
    # Subtest: Use shared schema and $ref with $id ($ref to $id)
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 11 - Use shared schema and $ref with $id ($ref to $id) # time=36.64ms
    
    # Subtest: Use items with $ref
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 12 - Use items with $ref # time=55.955ms
    
    # Subtest: Use $ref to /definitions
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 13 - Use $ref to /definitions # time=46.196ms
    
    # Subtest: Custom AJV settings - pt1
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Custom AJV settings - pt1 # time=55.055ms
    
    # Subtest: Custom AJV settings - pt2
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - Custom AJV settings - pt2 # time=32.441ms
    
    # Subtest: Custom AJV settings on different parameters - pt1
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 16 - Custom AJV settings on different parameters - pt1 # time=63.478ms
    
    # Subtest: Custom AJV settings on different parameters - pt2
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 17 - Custom AJV settings on different parameters - pt2 # time=50.422ms
    
    # Subtest: The same $id in route's schema must not overwrite others
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 18 - The same $id in route's schema must not overwrite others # time=31.184ms
    
    1..18
    # time=1219.86ms
ok 97 - test/schema-validation.test.js # time=1219.86ms

# Subtest: test/skip-reply-send.test.js
    # Subtest: skip automatic reply.send() with reply.sent = true and a body
        ok 1 - should not be equal
        ok 2 - should not be equal
        ok 3 - should not be equal
        ok 4 - should not be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 1 - skip automatic reply.send() with reply.sent = true and a body # time=107.811ms
    
    # Subtest: skip automatic reply.send() with reply.sent = true and no body
        ok 1 - should not be equal
        ok 2 - should not be equal
        ok 3 - should not be equal
        ok 4 - should not be equal
        ok 5 - should be equal
        ok 6 - should be equal
        1..6
    ok 2 - skip automatic reply.send() with reply.sent = true and no body # time=9.238ms
    
    # Subtest: skip automatic reply.send() with reply.sent = true and an error
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        1..5
    ok 3 - skip automatic reply.send() with reply.sent = true and an error # time=115.17ms
    
    # Subtest: Hijacking inside onRequest skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onResponse should be called
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - should be equal
            ok 7 - should be equal
            1..7
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=17.616ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - should match pattern provided
            1..6
        ok 2 - Sending a response using req.socket => onResponse not called # time=27.419ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            1..3
        ok 3 - Throwing an error doesnt trigger any hooks # time=1003.542ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            1..3
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1004.462ms
        
    ok 4 - Hijacking inside onRequest skips all the following hooks and handler execution # time=2062.133ms
    
    # Subtest: Hijacking inside preParsing skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - onResponse should be called
            ok 5 - should not be equal
            ok 6 - should not be equal
            ok 7 - should be equal
            ok 8 - should be equal
            1..8
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=34.291ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - should match pattern provided
            1..7
        ok 2 - Sending a response using req.socket => onResponse not called # time=16.781ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - should not error
            1..4
        ok 3 - Throwing an error doesnt trigger any hooks # time=1004.181ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - should be equal
            ok 3 - should not error
            ok 4 - should be equal
            1..4
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1003.467ms
        
    ok 5 - Hijacking inside preParsing skips all the following hooks and handler execution # time=2065.814ms
    
    # Subtest: Hijacking inside preValidation skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - onResponse should be called
            ok 6 - should not be equal
            ok 7 - should not be equal
            ok 8 - should be equal
            ok 9 - should be equal
            1..9
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=28.419ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - should match pattern provided
            1..8
        ok 2 - Sending a response using req.socket => onResponse not called # time=22.415ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - should not error
            1..5
        ok 3 - Throwing an error doesnt trigger any hooks # time=1003.136ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - should be equal
            ok 4 - should not error
            ok 5 - should be equal
            1..5
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1003.336ms
        
    ok 6 - Hijacking inside preValidation skips all the following hooks and handler execution # time=2067.306ms
    
    # Subtest: Hijacking inside preHandler skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - onResponse should be called
            ok 7 - should not be equal
            ok 8 - should not be equal
            ok 9 - should be equal
            ok 10 - should be equal
            1..10
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=25.797ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - preValidation should be called
            ok 9 - should match pattern provided
            1..9
        ok 2 - Sending a response using req.socket => onResponse not called # time=21.5ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - should not error
            1..6
        ok 3 - Throwing an error doesnt trigger any hooks # time=1002.942ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1001.842ms
        
    ok 7 - Hijacking inside preHandler skips all the following hooks and handler execution # time=2060.13ms
    
    # Subtest: Hijacking inside handler skips all the following hooks and handler execution
        1..4
        # Subtest: Sending a response using reply.raw => onResponse hook is called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - onRequest should be called
            ok 4 - preParsing should be called
            ok 5 - preValidation should be called
            ok 6 - onResponse should be called
            ok 7 - should not be equal
            ok 8 - should not be equal
            ok 9 - should be equal
            ok 10 - should be equal
            1..10
        ok 1 - Sending a response using reply.raw => onResponse hook is called # time=48.143ms
        
        # Subtest: Sending a response using req.socket => onResponse not called
            ok 1 - should not be equal
            ok 2 - should not be equal
            ok 3 - should not error
            ok 4 - should not be equal
            ok 5 - should not be equal
            ok 6 - onRequest should be called
            ok 7 - preParsing should be called
            ok 8 - preValidation should be called
            ok 9 - should match pattern provided
            1..9
        ok 2 - Sending a response using req.socket => onResponse not called # time=28.19ms
        
        # Subtest: Throwing an error doesnt trigger any hooks
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 3 - Throwing an error doesnt trigger any hooks # time=1002.402ms
        
        # Subtest: Calling reply.send() after hijacking logs a warning
            ok 1 - onRequest should be called
            ok 2 - preParsing should be called
            ok 3 - preValidation should be called
            ok 4 - should be equal
            ok 5 - should not error
            ok 6 - should be equal
            1..6
        ok 4 - Calling reply.send() after hijacking logs a warning # time=1003.213ms
        
    ok 8 - Hijacking inside handler skips all the following hooks and handler execution # time=2088.273ms
    
    1..8
    # time=10582.982ms
ok 98 - test/skip-reply-send.test.js # time=10582.982ms

# Subtest: test/stream.test.js
    # Subtest: should respond with a stream
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 1 - should respond with a stream # time=65.721ms
    
    # Subtest: should respond with a stream (error)
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 2 - should respond with a stream (error) # time=9.296ms
    
    # Subtest: should trigger the onSend hook
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - should trigger the onSend hook # time=23.937ms
    
    # Subtest: should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 4 - should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error # time=9.618ms
    
    # Subtest: onSend hook stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - onSend hook stream # time=8.498ms
    
    # Subtest: onSend hook stream should work even if payload is not a proper stream
        1..1
        ok 1 - should be equal
    ok 6 - onSend hook stream should work even if payload is not a proper stream # time=25.239ms
    
    # Subtest: onSend hook stream should work on payload with "close" ending function
        1..1
        ok 1 - (unnamed test)
    ok 7 - onSend hook stream should work on payload with "close" ending function # time=25.861ms
    
    # Subtest: Destroying streams prematurely
        1..6
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - Destroying streams prematurely # time=15.463ms
    
    # Subtest: Destroying streams prematurely should call close method
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 9 - Destroying streams prematurely should call close method # time=8.356ms
    
    # Subtest: Destroying streams prematurely should call close method when destroy is not a function
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 10 - Destroying streams prematurely should call close method when destroy is not a function # time=7.165ms
    
    # Subtest: Destroying streams prematurely should call abort method
        1..7
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - Response closed
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 11 - Destroying streams prematurely should call abort method # time=16.341ms
    
    # Subtest: Destroying streams prematurely, log is disabled
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - Response closed
        ok 4 - expect truthy value
    ok 12 - Destroying streams prematurely, log is disabled # time=12.054ms
    
    # Subtest: should respond with a stream1
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 13 - should respond with a stream1 # time=18.87ms
    
    # Subtest: return a 404 if the stream emits a 404 error
        1..5
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 14 - return a 404 if the stream emits a 404 error # time=6.044ms
    
    # Subtest: should support send module 200 and 404
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 15 - should support send module 200 and 404 # time=10.589ms
    
    # Subtest: should destroy stream when response is ended
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - should destroy stream when response is ended # time=7.509ms
    
    # Subtest: should mark reply as sent before pumping the payload stream into response for async route handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 17 - should mark reply as sent before pumping the payload stream into response for async route handler # time=25.295ms
    
    # Subtest: reply.send handles aborted requests
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 18 - reply.send handles aborted requests # time=5.401ms
    
    # Subtest: request terminated should not crash fastify
        1..10
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should end properly
    ok 19 - request terminated should not crash fastify # time=109.834ms
    
    1..19
    # time=422.625ms
ok 99 - test/stream.test.js # time=422.625ms

# Subtest: test/sync-routes.test.js
    # Subtest: sync route
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 1 - sync route # time=38.842ms
    
    # Subtest: sync route return null
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 2 - sync route return null # time=4.711ms
    
    # Subtest: sync route, error
        ok 1 - should be equal
        1..1
    ok 3 - sync route, error # time=7.56ms
    
    1..3
    # time=66.998ms
ok 100 - test/sync-routes.test.js # time=66.998ms

# Subtest: test/throw.test.js
    # Subtest: Fastify should throw on wrong options
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 1 - Fastify should throw on wrong options # time=7.193ms
    
    # Subtest: Fastify should throw on multiple assignment to the same route
        1..1
        ok 1 - should be equal
    ok 2 - Fastify should throw on multiple assignment to the same route # time=9.382ms
    
    # Subtest: Fastify should throw for an invalid schema, printing the error route - headers
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 3 - Fastify should throw for an invalid schema, printing the error route - headers # time=69.814ms
    
    # Subtest: Fastify should throw for an invalid schema, printing the error route - body
        1..2
        ok 1 - should be equal
        ok 2 - should match pattern provided
    ok 4 - Fastify should throw for an invalid schema, printing the error route - body # time=26.615ms
    
    # Subtest: Fastify should throw for an invalid shorthand option type
        1..3
        ok 1 - should be equal
        ok 2 - should match pattern provided
        ok 3 - (unnamed test)
    ok 5 - Fastify should throw for an invalid shorthand option type # time=1.175ms
    
    # Subtest: Should throw on unsupported method
        1..1
        ok 1 - (unnamed test)
    ok 6 - Should throw on unsupported method # time=1.059ms
    
    # Subtest: Should throw on missing handler
        1..1
        ok 1 - (unnamed test)
    ok 7 - Should throw on missing handler # time=0.932ms
    
    # Subtest: Should throw if one method is unsupported
        1..1
        ok 1 - (unnamed test)
    ok 8 - Should throw if one method is unsupported # time=0.965ms
    
    # Subtest: Should throw on duplicate content type parser
        1..1
        ok 1 - (unnamed test)
    ok 9 - Should throw on duplicate content type parser # time=1.263ms
    
    # Subtest: Should throw on duplicate decorator
        1..1
        ok 1 - (unnamed test)
    ok 10 - Should throw on duplicate decorator # time=1.303ms
    
    # Subtest: Should not throw on duplicate decorator encapsulation
        1..1
        ok 1 - expected to not throw
    ok 11 - Should not throw on duplicate decorator encapsulation # time=3.336ms
    
    # Subtest: Should throw on duplicate request decorator
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 12 - Should throw on duplicate request decorator # time=1.765ms
    
    # Subtest: Should throw if request decorator dependencies are not met
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 13 - Should throw if request decorator dependencies are not met # time=1.327ms
    
    # Subtest: Should throw on duplicate reply decorator
        1..1
        ok 1 - expect truthy value
    ok 14 - Should throw on duplicate reply decorator # time=1.022ms
    
    # Subtest: Should throw if reply decorator dependencies are not met
        1..1
        ok 1 - expect truthy value
    ok 15 - Should throw if reply decorator dependencies are not met # time=0.999ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 16 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=1.506ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 17 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=1.452ms
    
    # Subtest: Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 18 - Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object # time=1.253ms
    
    # Subtest: Should throw if found duplicate handler as the third parameter to the shortcut method and in options
        1..1
        ok 1 - (unnamed test)
    ok 19 - Should throw if found duplicate handler as the third parameter to the shortcut method and in options # time=0.8ms
    
    1..19
    # time=147.721ms
ok 101 - test/throw.test.js # time=147.721ms

# Subtest: test/trust-proxy.test.js
    # Subtest: trust proxy, not add properties to node req
        1..8
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - hostname is defined
        ok 5 - gets hostname from x-forwarded-host
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarded-for
        ok 8 - gets ips from x-forwarded-for
    ok 1 - trust proxy, not add properties to node req # time=39.739ms
    
    # Subtest: trust proxy chain
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
    ok 2 - trust proxy chain # time=9.441ms
    
    # Subtest: trust proxy function
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
    ok 3 - trust proxy function # time=9.449ms
    
    # Subtest: trust proxy number
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - gets ips from x-forwarded-for
    ok 4 - trust proxy number # time=8.263ms
    
    # Subtest: trust proxy IP addresses
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - gets ips from x-forwarded-for
    ok 5 - trust proxy IP addresses # time=6.045ms
    
    # Subtest: trust proxy protocol
        1..13
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarded-for
        ok 4 - protocol is defined
        ok 5 - gets protocol from x-forwarded-proto
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarded-for
        ok 8 - protocol is defined
        ok 9 - gets protocol from x-forwarded-proto
        ok 10 - ip is defined
        ok 11 - gets ip from x-forwarded-for
        ok 12 - protocol is defined
        ok 13 - gets protocol from x-forwarded-proto
    ok 6 - trust proxy protocol # time=10.469ms
    
    1..6
    # time=118.638ms
ok 102 - test/trust-proxy.test.js # time=118.638ms

# Subtest: test/type-provider.test.js
    # Subtest: Should export withTypeProvider function
        1..1
        ok 1 - (unnamed test)
    ok 1 - Should export withTypeProvider function # time=9.669ms
    
    # Subtest: Should return same instance
        1..1
        ok 1 - should be equal
    ok 2 - Should return same instance # time=1.589ms
    
    1..2
    # time=17.256ms
ok 103 - test/type-provider.test.js # time=17.256ms

# Subtest: test/unsupported-httpversion.test.js
    # Subtest: Will return 505 HTTP error if HTTP version (default) is not supported
        ok 1 - should not error
        ok 2 - should match pattern provided
        1..2
    ok 1 - Will return 505 HTTP error if HTTP version (default) is not supported # time=35.437ms
    
    # Subtest: Will return 505 HTTP error if HTTP version (2.0 when server is 1.1) is not supported
        ok 1 - should not error
        ok 2 - should match pattern provided
        1..2
    ok 2 - Will return 505 HTTP error if HTTP version (2.0 when server is 1.1) is not supported # time=6.982ms
    
    1..2
    # time=47.876ms
ok 104 - test/unsupported-httpversion.test.js # time=47.876ms

# Subtest: test/url-rewriting.test.js
    # Subtest: Should rewrite url
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should be equal
    ok 1 - Should rewrite url # time=41.625ms
    
    # Subtest: Should not rewrite if the url is the same
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - Should not rewrite if the url is the same # time=8.175ms
    
    # Subtest: Should throw an error
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - Should throw an error # time=52.891ms
    
    1..3
    # time=108.338ms
ok 105 - test/url-rewriting.test.js # time=108.338ms

# Subtest: test/validation-error-handling.test.js
    # Subtest: should work with valid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 1 - should work with valid payload # time=108.439ms
    
    # Subtest: should fail immediately with invalid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 2 - should fail immediately with invalid payload # time=30.736ms
    
    # Subtest: should be able to use setErrorHandler specify custom validation error
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 3 - should be able to use setErrorHandler specify custom validation error # time=31.634ms
    
    # Subtest: validation error has 400 statusCode set
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 4 - validation error has 400 statusCode set # time=19.202ms
    
    # Subtest: error inside custom error handler should have validationContext
        1..1
        ok 1 - should be equal
    ok 5 - error inside custom error handler should have validationContext # time=3.819ms
    
    # Subtest: error inside custom error handler should have validationContext if specified by custom error handler
        1..1
        ok 1 - should be equal
    ok 6 - error inside custom error handler should have validationContext if specified by custom error handler # time=6.655ms
    
    # Subtest: should be able to attach validation to request
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 7 - should be able to attach validation to request # time=30.187ms
    
    # Subtest: should respect when attachValidation is explicitly set to false
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 8 - should respect when attachValidation is explicitly set to false # time=22.405ms
    
    # Subtest: Attached validation error should take precedence over setErrorHandler
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 9 - Attached validation error should take precedence over setErrorHandler # time=23.493ms
    
    # Subtest: should handle response validation error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - should handle response validation error # time=30.366ms
    
    # Subtest: should handle response validation error with promises
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - should handle response validation error with promises # time=11.6ms
    
    # Subtest: should return a defined output message parsing AJV errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - should return a defined output message parsing AJV errors # time=49.676ms
    
    # Subtest: should return a defined output message parsing JOI errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - should return a defined output message parsing JOI errors # time=12.536ms
    
    # Subtest: should return a defined output message parsing JOI error details
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - should return a defined output message parsing JOI error details # time=3.544ms
    
    # Subtest: the custom error formatter context must be the server instance
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 15 - the custom error formatter context must be the server instance # time=40.456ms
    
    # Subtest: the custom error formatter context must be the server instance in options
        1..4
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 16 - the custom error formatter context must be the server instance in options # time=33.739ms
    
    # Subtest: should call custom error formatter
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
    ok 17 - should call custom error formatter # time=18.842ms
    
    # Subtest: should catch error inside formatter and return message
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 18 - should catch error inside formatter and return message # time=30.93ms
    
    # Subtest: cannot create a fastify instance with wrong type of errorFormatter
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - cannot create a fastify instance with wrong type of errorFormatter # time=2.461ms
    
    # Subtest: should register a route based schema error formatter
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 20 - should register a route based schema error formatter # time=25.405ms
    
    # Subtest: prefer route based error formatter over global one
        1..9
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
    ok 21 - prefer route based error formatter over global one # time=19.005ms
    
    # Subtest: adding schemaErrorFormatter
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 22 - adding schemaErrorFormatter # time=15.695ms
    
    # Subtest: plugin override
        1..15
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equivalent
        ok 15 - should be equal
    ok 23 - plugin override # time=28.295ms
    
    1..23
    # time=610.442ms
ok 106 - test/validation-error-handling.test.js # time=610.442ms

# Subtest: test/versioned-routes.test.js
    # Subtest: Should register a versioned route
        1..11
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 1 - Should register a versioned route # time=41.64ms
    
    # Subtest: Should register a versioned route via route constraints
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
    ok 2 - Should register a versioned route via route constraints # time=6.084ms
    
    # Subtest: Should register the same route with different versions
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - Should register the same route with different versions # time=6.905ms
    
    # Subtest: The versioned route should take precedence
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 4 - The versioned route should take precedence # time=7.449ms
    
    # Subtest: Versioned route but not version header should return a 404
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 5 - Versioned route but not version header should return a 404 # time=5.17ms
    
    # Subtest: Should register a versioned route
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
    ok 6 - Should register a versioned route # time=24.401ms
    
    # Subtest: Shorthand route declaration
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 7 - Shorthand route declaration # time=5.101ms
    
    # Subtest: The not found handler should not erase the Accept-Version header
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 8 - The not found handler should not erase the Accept-Version header # time=10.177ms
    
    # Subtest: Bad accept version (inject)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 9 - Bad accept version (inject) # time=6.524ms
    
    # Subtest: Bas accept version (server)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 10 - Bas accept version (server) # time=17.144ms
    
    # Subtest: test log stream
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - test log stream # time=43.029ms
    
    # Subtest: Should register a versioned route with custom versioning strategy
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 12 - Should register a versioned route with custom versioning strategy # time=11.589ms
    
    # Subtest: Should get error using an invalid a versioned route, using default validation (deprecated versioning option)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
    ok 13 - Should get error using an invalid a versioned route, using default validation (deprecated versioning option) # time=6.356ms
    
    # Subtest: Vary header check (for documentation example)
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should be equal
        ok 8 - should be equal
    ok 14 - Vary header check (for documentation example) # time=7.476ms
    
    # Subtest: Should trigger a warning when a versioned route is registered via version option
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 15 - Should trigger a warning when a versioned route is registered via version option # time=26.488ms
    
    1..15
    # time=267.164ms
ok 107 - test/versioned-routes.test.js # time=267.164ms

# Subtest: test/wrapThenable.test.js
    # Subtest: should resolve immediately when reply[kReplyHijacked] is true
        1..0
    ok 1 - should resolve immediately when reply[kReplyHijacked] is true # time=2.797ms
    
    # Subtest: should reject immediately when reply[kReplyHijacked] is true
        1..1
        ok 1 - should be equal
    ok 2 - should reject immediately when reply[kReplyHijacked] is true # time=2.199ms
    
    1..2
    # time=23.028ms
ok 108 - test/wrapThenable.test.js # time=23.028ms

1..108
# time=99914.618ms

> fastify@4.3.0 test:typescript
> tsc test/types/import.ts && tsd

-----------------------------|---------|----------|---------|---------|-------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------------|---------|----------|---------|---------|-------------------
All files                    |     100 |      100 |     100 |     100 |                   
 fastify                     |     100 |      100 |     100 |     100 |                   
  fastify.js                 |     100 |      100 |     100 |     100 |                   
 fastify/lib                 |     100 |      100 |     100 |     100 |                   
  contentTypeParser.js       |     100 |      100 |     100 |     100 |                   
  context.js                 |     100 |      100 |     100 |     100 |                   
  decorate.js                |     100 |      100 |     100 |     100 |                   
  error-handler.js           |     100 |      100 |     100 |     100 |                   
  errors.js                  |     100 |      100 |     100 |     100 |                   
  fourOhFour.js              |     100 |      100 |     100 |     100 |                   
  handleRequest.js           |     100 |      100 |     100 |     100 |                   
  headRoute.js               |     100 |      100 |     100 |     100 |                   
  hooks.js                   |     100 |      100 |     100 |     100 |                   
  initialConfigValidation.js |     100 |      100 |     100 |     100 |                   
  logger.js                  |     100 |      100 |     100 |     100 |                   
  noop-set.js                |     100 |      100 |     100 |     100 |                   
  pluginOverride.js          |     100 |      100 |     100 |     100 |                   
  pluginUtils.js             |     100 |      100 |     100 |     100 |                   
  reply.js                   |     100 |      100 |     100 |     100 |                   
  reqIdGenFactory.js         |     100 |      100 |     100 |     100 |                   
  request.js                 |     100 |      100 |     100 |     100 |                   
  route.js                   |     100 |      100 |     100 |     100 |                   
  schema-controller.js       |     100 |      100 |     100 |     100 |                   
  schemas.js                 |     100 |      100 |     100 |     100 |                   
  server.js                  |     100 |      100 |     100 |     100 |                   
  symbols.js                 |     100 |      100 |     100 |     100 |                   
  validation.js              |     100 |      100 |     100 |     100 |                   
  warnings.js                |     100 |      100 |     100 |     100 |                   
  wrapThenable.js            |     100 |      100 |     100 |     100 |                   
-----------------------------|---------|----------|---------|---------|-------------------
https://github.com/yeoman/generator.git
generator
8c3e594be57fb866bbccfcc5756475a5b0f853e7

added 1113 packages, and audited 1114 packages in 8s

146 packages are looking for funding
  run `npm fund` for details

13 vulnerabilities (4 moderate, 9 high)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Start Generating test coverage report...

> yeoman-generator@5.6.1 pretest
> xo


  lib/index.js:140:14
  ⚠  140:14  Constructor has a complexity of 30. Maximum allowed is 20.  complexity

  1 warning

> yeoman-generator@5.6.1 test
> nyc mocha --forbid-only



  Base
    constructor
      ✔ uses the destinationRoot passed at options
      ✔ use the environment options
      ✔ set generator.options from constructor options
      ✔ set options based on nopt arguments
      ✔ set arguments based on nopt arguments
      ✔ set options with false values (159ms)
      ✔ setup fs editor
      ✔ setup required fields for a working generator for help
      ✔ should not fail without an env for help
    prototype
      ✔ methods doesn't conflict with Env#runQueue
    #appname
      ✔ is set to the `determineAppname()` return value
    #determineAppname()
      ✔ returns appname from bower.json
      ✔ returns appname from package.json
      ✔ returns appname from the current directory
    #run()
      ✔ run all methods in the given generator
      ✔ turn on _running flag
      ✔ should call _beforeQueue
      ✔ run prototype methods (not instances one)
      ✔ don't try running prototype attributes
      ✔ pass instance .args property to the called methods
      ✔ can emit error from async methods
      ✔ can emit error from sync methods
      ✔ stop queue processing once an error is thrown
      ✔ handle function returning promises as asynchronous
      ✔ handle failing promises as errors
      ✔ run methods in series
      ✔ throws if no method is available
      ✔ will run non-enumerable methods
      ✔ ignore underscore prefixed method
      ✔ ignore hashtag prefixed method
      ✔ run methods in a queue hash
      ✔ ignore underscore prefixed method in a queue hash
      ✔ run named queued methods in order
      ✔ run queued methods in order even if not in order in prototype
      ✔ commit mem-fs to disk
      ✔ allow skipping file writes to disk
      ✔ allows file writes in any priorities
      ✔ can cancel cancellable tasks
      ✔ can start over the generator
      ✔ can queue a method again
    #run() with task prefix
      ✔ should run hashtag prefixed method
      ✔ should call beforeQueue
    #argument()
      ✔ add a new argument to the generator instance
      ✔ create the property specified with value from positional args
      ✔ allows specifying default argument values
      ✔ allows specifying default argument values
      ✔ properly uses arguments values passed from constructor
      ✔ slice positional arguments when config.type is Array
      ✔ raise an error if required arguments are not provided
      ✔ doesn't raise an error if required arguments are not provided, but the help option has been specified
      ✔ can be called before #option()
    #option()
      ✔ add a new option to the set of generator expected options
      ✔ allow aliasing options
      ✔ allows Boolean options to be undefined
      ✔ disallows Boolean options starting with no-
    #registerConfigPrompts()
      ✔ adds an prompt with common definitions
      ✔ should export option
      ✔ allows to customize option config
    #registerPriorities()
      ✔ adds a new priority
      ✔ edits a existing priority
    #parseOptions()
      ✔ set generator options
      ✔ set generator alias options
      ✔ set args to what remains
      ✔ gracefully handle no args
    #composeWith()
      ✔ returns the composed generator
      ✔ should add to _composedWith
      ✔ should not add to _composedWith when immediately is true
      ✔ runs the composed generators (104ms)
      ✔ runs the composed Generator class in the passed path
      ✔ run the composed generator even if main generator is already running.
      ✔ pass options and arguments to the composed generators
      object as first argument
        ✔ fails for missing Generator property
        ✔ fails for missing path property
      when passing a local path to a generator
        ✔ runs the composed generator
        ✔ pass options and arguments to the composed generators
        ✔ sets correct metadata on the Generator constructor
    #desc()
      ✔ update the internal description
    #help()
      ✔ return the expected help output
    #usage()
      ✔ returns the expected usage output with arguments
      ✔ returns the expected usage output without arguments
      ✔ returns the expected usage output without options
    #config
      ✔ provide a storage instance
      ✔ is updated when destinationRoot change
    #templatePath()
      ✔ joins path to the source root
    #destinationPath()
      ✔ joins path to the source root
    #registerTransformStream()
      ✔ add the transform stream to the commit stream
      ✔ add multiple transform streams to the commit stream
    Events
      ✔ emits the series of event on a specific generator
      ✔ only call the end event once (bug #402)
      ✔ triggers end event after all generators methods are ran (#709)
    #rootGeneratorName
      ✔ returns the default name
      ✔ returns generator name
    #rootGeneratorVersion
      ✔ returns the default version
      ✔ returns generator version
    #queueMethod()
      ✔ queued method is executed
      ✔ queued method is executed by derived generator
      ✔ queued method with function, methodName and reject
      ✔ queued method with object, queueName and reject
    #queueTask()
      ✔ queued method with function and options
      ✔ queued method with function and options with reject
    Custom priorities
      ✔ generates correct _queues and runLoop queueNames
      ✔ run custom priorities in correct order
      ✔ correctly run custom priority with once option
    Custom priorities errors
      ✔ error is thrown with duplicate custom queue
    #prompt
      ✔ passes config value as answer to adapter
      ✔ passes config values as answers to adapter
      ✔ passes config values as the question default
      ✔ saves answers to config
      ✔ saves answers to config when specified as a property name
      ✔ saves answers to specific storage
      ✔ passes correct askAnswered option to adapter
    #getFeatures
      ✔ should return namespace as uniqueBy when unique is true
      ✔ should return namespace as uniqueBy when unique is 'namespace'
      ✔ should return namespace with first argument as uniqueBy when unique is 'namespace'
    getTaskNames
      ✔ should return any public member when tasksMatchingPriority is undefined
      ✔ should return any public member when tasksMatchingPriority is true

  deprecate()
(!) foo
    ✔ log a message
    .object()
(!) func is deprecated
      ✔ wrap an object and log a message
    .property()
(!) foo is deprecated
      ✔ wrap a property getter and log a message

  Generator with environment version
    mocked 3.0.0
      #checkEnvironmentVersion
        without args
          ✔ returns true
        with required environment
          ✔ returns true
          with ignoreVersionCheck
            ✔ returns true
        with greater than required environment
          ✔ returns true
        with less than required environment
          ✔ should throw
          with warning
            ✔ should return false
          with ignoreVersionCheck
            ✔ returns false
        with required inquirer
          ✔ returns true
        with greater than required inquirer
          ✔ returns true
        with less than required inquirer
          ✔ throws exception
          with warning
            ✔ returns false
          with ignoreVersionCheck
            ✔ returns false
      #prompt with storage
        ✔ with incompatible inquirer
        ✔ with compatible environment
    mocked 2.8.1
      #checkEnvironmentVersion
        without args
          ✔ throws exception
        with ignoreVersionCheck
          without args
            ✔ returns false
          without less then 3.0.0
            ✔ returns undefined

  generators.Base (actions/fs)
    #readTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #readDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #writeDestinationJSON
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #deleteDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #copyDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #moveDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #existsDestination
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplateAsync
      ✔ exists on the generator
      ✔ returns the correct value
      ✔ handles the first parameter
      ✔ handles the second parameter
      ✔ calls fs with correct arguments
    #renderTemplate
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplateAsync
      ✔ gets default data from config
      ✔ gets data with path from config
      ✔ concatenates source and destination
    #renderTemplates
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback
    #renderTemplatesAsync
      ✔ handles 1 template
      ✔ handles more than 1 template
      ✔ skips templates based on when callback
      ✔ passes the data to when callback

  Multiples generators
    ✔ #composeWith() inside contructor
    #composeWith() with multiples generators
      ✔ runs multiple composed generators (109ms)
      ✔ runs multiple composed generators (reverse) (107ms)
      ✔ runs 3 composed generators (109ms)
      ✔ runs multiple composed generators inside a running generator (108ms)
      ✔ runs multiple composed generators inside a running generator (110ms)

  Generators module
    ✔ without localConfigOnly option
    ✔ with localConfigOnly option
    ✔ running standalone
    ✔ running with an empty env
    Base
      ✔ is an EventEmitter
      ✔ emits done event
    #run
      ✔ forwards error to environment
    #createStorage
      ✔ with path and name
      ✔ with path

  Base (actions/install mixin)
    #scheduleInstallTask()
      ✔ takes a config object and passes it to the spawned process
      without --force-install
        ✔ should not fail on bad exit code without forceInstall
        ✔ should not fail on exit signal without forceInstall
        ✔ should not fail on error without forceInstall
      with --force-install
        ✔ fails on bad exit code with forceInstall
        ✔ fails on exit signal with forceInstall
        ✔ fails on error with forceInstall
      with --skip-install
        ✔ does not spawn anything with skipInstall
        ✔ does not spawn anything with skipInstall
        ✔ logs the skipped install command
    #bowerInstall()
      ✔ spawn a bower process once per commands
      ✔ spawn a bower process with formatted options
    #npmInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #yarnInstall()
      ✔ spawn an install process once per commands
      ✔ run with options
      ✔ spawn separate install processes if spawnOptions differs
    #installDependencies()
      ✔ spawn npm and bower
      ✔ spawn yarn
      ✔ spawn yarn and bower with options

  Integration
    ✔ writes prompt value to foo-template.js
    ✔ writes option value foo-template.js

  Base#package-json
    _resolvePackageJsonDependencies()
      ✔ should accept empty version and resolve (83ms)
      ✔ should accept semver version
      ✔ should accept github repository (892ms)
      ✔ should accept github repository version (655ms)
      ✔ should accept object and return it
      ✔ should resolve object with empty version and resolve
      ✔ should accept arrays (52ms)
    addDependencies()
      ✔ should generate dependencies inside package.json (206ms)
      ✔ should accept object and merge inside package.json
    addDependencies()
      ✔ should generate dependencies inside package.json (62ms)
      ✔ should accept object and merge devDependencies inside package.json

  PromptSuggestion
    .prefillQuestions()
      ✔ require a store parameter
      ✔ require a questions parameter
      ✔ take a questions parameter
      ✔ take a question object
      ✔ take a question array
      ✔ don't override default when store is set to false
      ✔ override default when store is set to true
      ✔ keep inquirer objects
      take a checkbox
        ✔ override default from an array with objects
        ✔ override default from an array with strings
        with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a checkbox with choices from a function
        ✔ does not override default from an array with objects
        ✔ does not override default from an array with strings
        does not override even with multiple defaults
          ✔ from an array with objects
          ✔ from an array with strings
      take a rawlist / expand
        ✔ override default arrayWithObjects
        ✔ override default arrayWithObjects
    .storeAnswers()
      ✔ require a store parameter
      ✔ require a question parameter
      ✔ require a answer parameter
      ✔ take a answer parameter
      ✔ take a storeAll parameter
      ✔ store answer in global store
      ✔ don't store default answer in global store
      ✔ force store default answer in global store
      ✔ don't store answer in global store
      ✔ store answer from rawlist type
      ✔ store falsy answer (but not undefined) in global store
      empty store
        ✔ don't store default answer from rawlist type
        ✔ force store default answer from rawlist type

  generators.Base (actions/spawn-command)
    #spawnCommand()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options
    #spawnCommandSync()
      ✔ provide default options
      ✔ pass arguments
      ✔ pass options
      ✔ allow overriding default options

  Storage
    ✔ a config path is required
    .constructor()
      ✔ require a parameter
      ✔ require at least 2 parameter
      ✔ take a path parameter
      ✔ take a fs and path parameter without name
    #get()
      ✔ namespace each store sharing the same store file
      ✔ get values
    #set()
      ✔ set values
      ✔ set multiple values at once
      ✔ throws when invalid JSON values are passed
      ✔ save on each changes
      @return
        ✔ the saved value (with key)
        ✔ the saved value (without key)
        ✔ the saved value (update values)
      when multiples instances share the same file
        ✔ only update modified namespace
      when multiples instances share the same namespace
        ✔ only update modified namespace
    #getAll()
      ✔ get all values
      ✔ does not return a reference to the inner store
    #delete()
      ✔ delete value
    #defaults()
      ✔ set defaults values if not predefined
      ✔ require an Object as argument
      @return
        ✔ the saved value when passed an empty object
        ✔ the saved value when passed the same key
        ✔ the saved value when passed new key
    #merge()
      ✔ should merge values if not predefined
      ✔ should require an Object as argument
      @return
        ✔ should return the original object
        ✔ should return an object with replaced values
        ✔ should return an object with new values
    with namespace
      ✔ stores sharing the same store file with and without namespace
    #getPath() & #setPath()
      ✔ #getPath() & #setPath()
    #getStorage()
      with a path safe string
        ✔ should get and set value
      with a path unsafe string
        ✔ should get and set value
    .constructor() with lodashPath
      ✔ get and set value
    #createProxy()
      ✔ sets values
      ✔ sets multiple values at once
      ✔ gets values
      ✔ works with spread operator
      ✔ works with in operator
      ✔ works with deepEquals
    caching
      ✔ should load
      ✔ should not load when disabled
      ✔ cleanups when the file changes
      ✔ doesn't cleanup when another file changes
      ✔ cleanups when per file cache is disabled and another file changes
      ✔ cleanups when change event argument is undefined
    non sorted store
      ✔ should write non sorted file
    sorted store
      ✔ should write sorted file

  Base#user
    ✔ is exposed on the Base generator
    .git
      .name()
        ✔ is the name used by git (379ms)
        ✔ cache the value (380ms)
        ✔ cache is linked to the CWD (794ms)
      .email()
        ✔ is the email used by git (389ms)
        ✔ handle cache (407ms)
        ✔ cache is linked to the CWD (766ms)
    .github
      .username()
        ✔ is the username used by GitHub (398ms)


  354 passing (17s)

-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
-----------------------|---------|----------|---------|---------|-----------------------------------
File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                 
-----------------------|---------|----------|---------|---------|-----------------------------------
All files              |   94.43 |    88.38 |   92.89 |    94.8 |                                   
 lib                   |   92.11 |     88.7 |   89.02 |   92.74 |                                   
  index.js             |   92.11 |     88.7 |   89.02 |   92.74 | ...-1366,1407-1408,1410,1426-1427 
 lib/actions           |   96.81 |     82.4 |      98 |   96.78 |                                   
  fs.js                |   93.15 |    79.41 |      95 |   93.15 | 98,276,304,329,333                
  help.js              |   97.72 |       70 |     100 |   97.67 | 37                                
  install.js           |     100 |    93.02 |     100 |     100 | 140,165-175                       
  package-json.js      |      95 |       90 |     100 |      95 | 20                                
  spawn-command.js     |     100 |      100 |     100 |     100 |                                   
  user.js              |     100 |       75 |     100 |     100 | 29,51                             
 lib/util              |   98.24 |    96.25 |   94.59 |   98.24 |                                   
  deprecate.js         |     100 |      100 |     100 |     100 |                                   
  prompt-suggestion.js |   98.55 |    97.72 |     100 |   98.55 | 58                                
  storage.js           |   97.43 |    94.11 |   90.47 |   97.43 | 25,143                            
-----------------------|---------|----------|---------|---------|-----------------------------------
https://github.com/inspect-js/node-deep-equal.git
node-deep-equal
9e64ec93a8c5cbe87315d30dd62a8fe6dcf842b4

> deep-equal@2.0.5 prepublish
> not-in-publish || npm run prepublishOnly


added 312 packages, and audited 495 packages in 23s

76 packages are looking for funding
  run `npm fund` for details

25 vulnerabilities (5 low, 12 moderate, 5 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
Start Generating test coverage report...

> deep-equal@2.0.5 pretest
> npm run lint


> deep-equal@2.0.5 lint
> eslint --ext=js,mjs .


/data/js-variants/multee/Original/node-deep-equal/test/cmp.js
  12:61  warning  new Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead  no-buffer-constructor

✖ 1 problem (0 errors, 1 warning)


> deep-equal@2.0.5 test
> npm run tests-only


> deep-equal@2.0.5 tests-only
> nyc tape 'test/**/*.js'

TAP version 13
# equal
ok 1 two equal objects are equal
ok 2 two equal objects are equal (reversed)
ok 3 strict: two equal objects are equal
ok 4 strict: two equal objects are equal (reversed)
ok 5 two loosely equal, strictly inequal objects are equal
ok 6 two loosely equal, strictly inequal objects are equal (reversed)
ok 7 strict: two loosely equal, strictly inequal objects are not equal
ok 8 strict: two loosely equal, strictly inequal objects are not equal (reversed)
ok 9 two inequal objects are not equal
ok 10 two inequal objects are not equal (reversed)
ok 11 strict: two inequal objects are not equal
ok 12 strict: two inequal objects are not equal (reversed)
ok 13 `false` and `"-000"` are equal
ok 14 `false` and `"-000"` are equal (reversed)
ok 15 strict: `false` and `"-000"` are not equal
ok 16 strict: `false` and `"-000"` are not equal (reversed)
# Maps
ok 17 two equal Maps are equal
ok 18 two equal Maps are equal (reversed)
ok 19 strict: two equal Maps are equal
ok 20 strict: two equal Maps are equal (reversed)
ok 21 two Maps with inequal values on the same key are not equal
ok 22 two Maps with inequal values on the same key are not equal (reversed)
ok 23 strict: two Maps with inequal values on the same key are not equal
ok 24 strict: two Maps with inequal values on the same key are not equal (reversed)
ok 25 two inequal Maps are not equal
ok 26 two inequal Maps are not equal (reversed)
ok 27 strict: two inequal Maps are not equal
ok 28 strict: two inequal Maps are not equal (reversed)
ok 29 two equal Maps in different orders with object keys are equal
ok 30 two equal Maps in different orders with object keys are equal (reversed)
ok 31 strict: two equal Maps in different orders with object keys are equal
ok 32 strict: two equal Maps in different orders with object keys are equal (reversed)
ok 33 undefined keys, nullish values, loosely equal, strictly inequal are equal
ok 34 undefined keys, nullish values, loosely equal, strictly inequal are equal (reversed)
ok 35 strict: undefined keys, nullish values, loosely equal, strictly inequal are not equal
ok 36 strict: undefined keys, nullish values, loosely equal, strictly inequal are not equal (reversed)
ok 37 two equal Maps in different orders with primitive keys are equal
ok 38 two equal Maps in different orders with primitive keys are equal (reversed)
ok 39 strict: two equal Maps in different orders with primitive keys are equal
ok 40 strict: two equal Maps in different orders with primitive keys are equal (reversed)
ok 41 two equal Maps in different orders with a mix of keys are equal
ok 42 two equal Maps in different orders with a mix of keys are equal (reversed)
ok 43 strict: two equal Maps in different orders with a mix of keys are equal
ok 44 strict: two equal Maps in different orders with a mix of keys are equal (reversed)
ok 45 null keys, nullish values, loosely equal, strictly inequal are equal
ok 46 null keys, nullish values, loosely equal, strictly inequal are equal (reversed)
ok 47 strict: null keys, nullish values, loosely equal, strictly inequal are not equal
ok 48 strict: null keys, nullish values, loosely equal, strictly inequal are not equal (reversed)
ok 49 nullish keys, loosely equal, strictly inequal are equal
ok 50 nullish keys, loosely equal, strictly inequal are equal (reversed)
ok 51 strict: nullish keys, loosely equal, strictly inequal are not equal
ok 52 strict: nullish keys, loosely equal, strictly inequal are not equal (reversed)
ok 53 two equal Maps in different orders with primitive keys are equal
ok 54 two equal Maps in different orders with primitive keys are equal (reversed)
ok 55 strict: two equal Maps in different orders with primitive keys are equal
ok 56 strict: two equal Maps in different orders with primitive keys are equal (reversed)
ok 57 two equal Maps in different orders with a mix of keys are equal
ok 58 two equal Maps in different orders with a mix of keys are equal (reversed)
ok 59 strict: two equal Maps in different orders with a mix of keys are equal
ok 60 strict: two equal Maps in different orders with a mix of keys are equal (reversed)
ok 61 two inequal Maps are not equal
ok 62 two inequal Maps are not equal (reversed)
ok 63 strict: two inequal Maps are not equal
ok 64 strict: two inequal Maps are not equal (reversed)
ok 65 two inequal maps, same size, primitive key, start with object key are not equal
ok 66 two inequal maps, same size, primitive key, start with object key are not equal (reversed)
ok 67 strict: two inequal maps, same size, primitive key, start with object key are not equal
ok 68 strict: two inequal maps, same size, primitive key, start with object key are not equal (reversed)
ok 69 two inequal maps, same size, primitive key, start with primitive key are not equal
ok 70 two inequal maps, same size, primitive key, start with primitive key are not equal (reversed)
ok 71 strict: two inequal maps, same size, primitive key, start with primitive key are not equal
ok 72 strict: two inequal maps, same size, primitive key, start with primitive key are not equal (reversed)
ok 73 primitive comparisons are equal
ok 74 primitive comparisons are equal (reversed)
ok 75 strict: primitive comparisons are not equal
ok 76 strict: primitive comparisons are not equal (reversed)
# WeakMaps
ok 77 two equal WeakMaps are equal
ok 78 two equal WeakMaps are equal (reversed)
ok 79 strict: two equal WeakMaps are equal
ok 80 strict: two equal WeakMaps are equal (reversed)
ok 81 two WeakMaps with inequal values on the same key are equal
ok 82 two WeakMaps with inequal values on the same key are equal (reversed)
ok 83 strict: two WeakMaps with inequal values on the same key are equal
ok 84 strict: two WeakMaps with inequal values on the same key are equal (reversed)
ok 85 two inequal WeakMaps are equal
ok 86 two inequal WeakMaps are equal (reversed)
ok 87 strict: two inequal WeakMaps are equal
ok 88 strict: two inequal WeakMaps are equal (reversed)
# Sets
ok 89 two equal Sets are equal
ok 90 two equal Sets are equal (reversed)
ok 91 strict: two equal Sets are equal
ok 92 strict: two equal Sets are equal (reversed)
ok 93 two inequal Sets are not equal
ok 94 two inequal Sets are not equal (reversed)
ok 95 strict: two inequal Sets are not equal
ok 96 strict: two inequal Sets are not equal (reversed)
ok 97 two equal Sets in different orders are equal
ok 98 two equal Sets in different orders are equal (reversed)
ok 99 strict: two equal Sets in different orders are equal
ok 100 strict: two equal Sets in different orders are equal (reversed)
ok 101 two inequally sized Sets are not equal
ok 102 two inequally sized Sets are not equal (reversed)
ok 103 strict: two inequally sized Sets are not equal
ok 104 strict: two inequally sized Sets are not equal (reversed)
ok 105 two loosely equal, strictly inequal Sets are equal
ok 106 two loosely equal, strictly inequal Sets are equal (reversed)
ok 107 strict: two loosely equal, strictly inequal Sets are not equal
ok 108 strict: two loosely equal, strictly inequal Sets are not equal (reversed)
ok 109 two inequal Sets are not equal
ok 110 two inequal Sets are not equal (reversed)
ok 111 strict: two inequal Sets are not equal
ok 112 strict: two inequal Sets are not equal (reversed)
ok 113 more primitive comparisons are equal
ok 114 more primitive comparisons are equal (reversed)
ok 115 strict: more primitive comparisons are not equal
ok 116 strict: more primitive comparisons are not equal (reversed)
# Set and Map
ok 117 Map and Set are not equal
ok 118 Map and Set are not equal (reversed)
ok 119 strict: Map and Set are not equal
ok 120 strict: Map and Set are not equal (reversed)
ok 121 Map-like Set, and Map are not equal
ok 122 Map-like Set, and Map are not equal (reversed)
ok 123 strict: Map-like Set, and Map are not equal
ok 124 strict: Map-like Set, and Map are not equal (reversed)
# WeakSets
ok 125 two equal WeakSets are equal
ok 126 two equal WeakSets are equal (reversed)
ok 127 strict: two equal WeakSets are equal
ok 128 strict: two equal WeakSets are equal (reversed)
ok 129 two inequal WeakSets are equal
ok 130 two inequal WeakSets are equal (reversed)
ok 131 strict: two inequal WeakSets are equal
ok 132 strict: two inequal WeakSets are equal (reversed)
# not equal
ok 133 two inequal objects are are not equal
ok 134 two inequal objects are are not equal (reversed)
ok 135 strict: two inequal objects are are not equal
ok 136 strict: two inequal objects are are not equal (reversed)
# nested nulls
ok 137 same-length arrays of nulls are equal
ok 138 strict: same-length arrays of nulls are equal
# objects with strings vs numbers
ok 139 objects with equivalent string/number values are equal
ok 140 objects with equivalent string/number values are equal (reversed)
ok 141 strict: objects with equivalent string/number values are not equal
ok 142 strict: objects with equivalent string/number values are not equal (reversed)
# non-objects
ok 143 same numbers are equal
ok 144 strict: same numbers are equal
ok 145 same strings are equal
ok 146 strict: same strings are equal
ok 147 numeric string and number are equal
ok 148 numeric string and number are equal (reversed)
ok 149 strict: numeric string and number are not equal
ok 150 strict: numeric string and number are not equal (reversed)
ok 151 numeric string and array containing number are not equal
ok 152 numeric string and array containing number are not equal (reversed)
ok 153 strict: numeric string and array containing number are not equal
ok 154 strict: numeric string and array containing number are not equal (reversed)
ok 155 number and array containing number are not equal
ok 156 number and array containing number are not equal (reversed)
ok 157 strict: number and array containing number are not equal
ok 158 strict: number and array containing number are not equal (reversed)
# infinities
ok 159 ∞ and ∞ are equal
ok 160 strict: ∞ and ∞ are equal
ok 161 -∞ and -∞ are equal
ok 162 strict: -∞ and -∞ are equal
ok 163 ∞ and -∞ are not equal
ok 164 ∞ and -∞ are not equal (reversed)
ok 165 strict: ∞ and -∞ are not equal
ok 166 strict: ∞ and -∞ are not equal (reversed)
# arguments class
ok 167 equivalent arguments objects are equal are equal
ok 168 strict: equivalent arguments objects are equal are equal
ok 169 array and arguments with same contents are not equal
ok 170 array and arguments with same contents are not equal (reversed)
ok 171 strict: array and arguments with same contents are not equal
ok 172 strict: array and arguments with same contents are not equal (reversed)
ok 173 args and similar arraylike object are not equal
ok 174 args and similar arraylike object are not equal (reversed)
ok 175 strict: args and similar arraylike object are not equal
ok 176 strict: args and similar arraylike object are not equal (reversed)
# Dates
ok 177 two Dates with the same timestamp are equal
ok 178 two Dates with the same timestamp are equal (reversed)
ok 179 strict: two Dates with the same timestamp are equal
ok 180 strict: two Dates with the same timestamp are equal (reversed)
ok 181 two Dates with the same timestamp but different own properties are not equal
ok 182 two Dates with the same timestamp but different own properties are not equal (reversed)
ok 183 strict: two Dates with the same timestamp but different own properties are not equal
ok 184 strict: two Dates with the same timestamp but different own properties are not equal (reversed)
ok 185 two identical Dates, one with an extra property are not equal
ok 186 two identical Dates, one with an extra property are not equal (reversed)
ok 187 strict: two identical Dates, one with an extra property are not equal
ok 188 strict: two identical Dates, one with an extra property are not equal (reversed)
ok 189 two inequal Dates are not equal
ok 190 two inequal Dates are not equal (reversed)
ok 191 strict: two inequal Dates are not equal
ok 192 strict: two inequal Dates are not equal (reversed)
# overriding `getTime`
ok 193 two Dates with the same timestamp but one has overridden `getTime` are equal
ok 194 two Dates with the same timestamp but one has overridden `getTime` are equal (reversed)
ok 195 strict: two Dates with the same timestamp but one has overridden `getTime` are equal
ok 196 strict: two Dates with the same timestamp but one has overridden `getTime` are equal (reversed)
# fake Date
ok 197 Date, and fake Date are not equal
ok 198 Date, and fake Date are not equal (reversed)
ok 199 strict: Date, and fake Date are not equal
ok 200 strict: Date, and fake Date are not equal (reversed)
# buffers
ok 201 buffers with same contents are equal are equal
ok 202 buffers with same contents are equal are equal (reversed)
ok 203 strict: buffers with same contents are equal are equal
ok 204 strict: buffers with same contents are equal are equal (reversed)
ok 205 buffers with same length and different contents are inequal are not equal
ok 206 buffers with same length and different contents are inequal are not equal (reversed)
ok 207 strict: buffers with same length and different contents are inequal are not equal
ok 208 strict: buffers with same length and different contents are inequal are not equal (reversed)
ok 209 buffers with different length are inequal are not equal
ok 210 buffers with different length are inequal are not equal (reversed)
ok 211 strict: buffers with different length are inequal are not equal
ok 212 strict: buffers with different length are inequal are not equal (reversed)
ok 213 buffers with different contents are not equal
ok 214 buffers with different contents are not equal (reversed)
ok 215 strict: buffers with different contents are not equal
ok 216 strict: buffers with different contents are not equal (reversed)
ok 217 empty buffer and empty array are not equal
ok 218 empty buffer and empty array are not equal (reversed)
ok 219 strict: empty buffer and empty array are not equal
ok 220 strict: empty buffer and empty array are not equal (reversed)
# bufferlikes
ok 221 real buffer, and mildly fake buffer are not equal
ok 222 real buffer, and mildly fake buffer are not equal (reversed)
ok 223 strict: real buffer, and mildly fake buffer are not equal
ok 224 strict: real buffer, and mildly fake buffer are not equal (reversed)
# bufferlike
ok 225 empty buffer and empty bufferlike are equal
ok 226 empty buffer and empty bufferlike are equal (reversed)
ok 227 strict: empty buffer and empty bufferlike are equal
ok 228 strict: empty buffer and empty bufferlike are equal (reversed)
# Arrays
ok 229 two identical arrays, one with an extra property are not equal
ok 230 two identical arrays, one with an extra property are not equal (reversed)
ok 231 strict: two identical arrays, one with an extra property are not equal
ok 232 strict: two identical arrays, one with an extra property are not equal (reversed)
# booleans
ok 233 trues are equal
ok 234 trues are equal (reversed)
ok 235 strict: trues are equal
ok 236 strict: trues are equal (reversed)
ok 237 falses are equal
ok 238 falses are equal (reversed)
ok 239 strict: falses are equal
ok 240 strict: falses are equal (reversed)
ok 241 true and false are not equal
ok 242 true and false are not equal (reversed)
ok 243 strict: true and false are not equal
ok 244 strict: true and false are not equal (reversed)
# booleans and arrays
ok 245 true and an empty array are not equal
ok 246 true and an empty array are not equal (reversed)
ok 247 strict: true and an empty array are not equal
ok 248 strict: true and an empty array are not equal (reversed)
ok 249 false and an empty array are not equal
ok 250 false and an empty array are not equal (reversed)
ok 251 strict: false and an empty array are not equal
ok 252 strict: false and an empty array are not equal (reversed)
# arrays initiated
ok 253 arrays with equal contents are equal are equal
ok 254 strict: arrays with equal contents are equal are equal
# arrays assigned
ok 255 a literal array and an assigned array are equal
ok 256 a literal array and an assigned array are equal (reversed)
ok 257 strict: a literal array and an assigned array are equal
ok 258 strict: a literal array and an assigned array are equal (reversed)
# arrays push
ok 259 a literal array and a pushed array are equal
ok 260 a literal array and a pushed array are equal (reversed)
ok 261 strict: a literal array and a pushed array are equal
ok 262 strict: a literal array and a pushed array are equal (reversed)
# null == undefined
ok 263 null and undefined are equal
ok 264 null and undefined are equal (reversed)
ok 265 strict: null and undefined are not equal
ok 266 strict: null and undefined are not equal (reversed)
ok 267 [null] and [undefined] are equal
ok 268 [null] and [undefined] are equal (reversed)
ok 269 strict: [null] and [undefined] are not equal
ok 270 strict: [null] and [undefined] are not equal (reversed)
# NaNs
ok 271 two NaNs are not equal
ok 272 strict: two NaNs are equal
ok 273 two equiv objects with a NaN value are not equal
ok 274 two equiv objects with a NaN value are not equal (reversed)
ok 275 strict: two equiv objects with a NaN value are equal
ok 276 strict: two equiv objects with a NaN value are equal (reversed)
ok 277 NaN and 1 are not equal
ok 278 NaN and 1 are not equal (reversed)
ok 279 strict: NaN and 1 are not equal
ok 280 strict: NaN and 1 are not equal (reversed)
# zeroes
ok 281 0 and -0 are equal
ok 282 0 and -0 are equal (reversed)
ok 283 strict: 0 and -0 are not equal
ok 284 strict: 0 and -0 are not equal (reversed)
ok 285 two objects with a same-keyed 0/-0 value are equal
ok 286 two objects with a same-keyed 0/-0 value are equal (reversed)
ok 287 strict: two objects with a same-keyed 0/-0 value are not equal
ok 288 strict: two objects with a same-keyed 0/-0 value are not equal (reversed)
# Object.create
ok 289 two objects with the same [[Prototype]] but a different own property are not equal
ok 290 two objects with the same [[Prototype]] but a different own property are not equal (reversed)
ok 291 strict: two objects with the same [[Prototype]] but a different own property are not equal
ok 292 strict: two objects with the same [[Prototype]] but a different own property are not equal (reversed)
# Object.create(null)
ok 293 two empty null objects are equal
ok 294 strict: two empty null objects are equal
ok 295 two null objects with the same property pair are equal
ok 296 strict: two null objects with the same property pair are equal
# regexes vs dates
ok 297 Date and RegExp are not equal
ok 298 Date and RegExp are not equal (reversed)
ok 299 strict: Date and RegExp are not equal
ok 300 strict: Date and RegExp are not equal (reversed)
# regexen
ok 301 two different regexes are not equal
ok 302 two different regexes are not equal (reversed)
ok 303 strict: two different regexes are not equal
ok 304 strict: two different regexes are not equal (reversed)
ok 305 two abc regexes are equal
ok 306 two abc regexes are equal (reversed)
ok 307 strict: two abc regexes are equal
ok 308 strict: two abc regexes are equal (reversed)
ok 309 two xyz regexes are equal
ok 310 two xyz regexes are equal (reversed)
ok 311 strict: two xyz regexes are equal
ok 312 strict: two xyz regexes are equal (reversed)
ok 313 two identical regexes, one with an extra property are not equal
ok 314 two identical regexes, one with an extra property are not equal (reversed)
ok 315 strict: two identical regexes, one with an extra property are not equal
ok 316 strict: two identical regexes, one with an extra property are not equal (reversed)
ok 317 two regexes with the same source but different flags are not equal
ok 318 two regexes with the same source but different flags are not equal (reversed)
ok 319 strict: two regexes with the same source but different flags are not equal
ok 320 strict: two regexes with the same source but different flags are not equal (reversed)
# fake RegExp
ok 321 regex and fake regex are not equal
ok 322 regex and fake regex are not equal (reversed)
ok 323 strict: regex and fake regex are not equal
ok 324 strict: regex and fake regex are not equal (reversed)
# object literals
ok 325 two loosely equal, strictly inequal prototype properties are equal
ok 326 two loosely equal, strictly inequal prototype properties are equal (reversed)
ok 327 strict: two loosely equal, strictly inequal prototype properties are not equal
ok 328 strict: two loosely equal, strictly inequal prototype properties are not equal (reversed)
# arrays and objects
ok 329 empty array and empty object are not equal
ok 330 empty array and empty object are not equal (reversed)
ok 331 strict: empty array and empty object are not equal
ok 332 strict: empty array and empty object are not equal (reversed)
ok 333 empty array and empty arraylike object are not equal
ok 334 empty array and empty arraylike object are not equal (reversed)
ok 335 strict: empty array and empty arraylike object are not equal
ok 336 strict: empty array and empty arraylike object are not equal (reversed)
ok 337 array and similar object are not equal
ok 338 array and similar object are not equal (reversed)
ok 339 strict: array and similar object are not equal
ok 340 strict: array and similar object are not equal (reversed)
# functions
ok 341 a function and itself are equal
ok 342 strict: a function and itself are equal
ok 343 a function and itself in an array are equal
ok 344 strict: a function and itself in an array are equal
ok 345 two distinct functions are not equal
ok 346 strict: two distinct functions are not equal
ok 347 two distinct functions in an array are not equal
ok 348 strict: two distinct functions in an array are not equal
ok 349 function and object are not equal
ok 350 strict: function and object are not equal
ok 351 function and object in an array are not equal
ok 352 strict: function and object in an array are not equal
# Errors
ok 353 two errors of the same type with the same message are equal
ok 354 two errors of the same type with the same message are equal (reversed)
ok 355 strict: two errors of the same type with the same message are equal
ok 356 strict: two errors of the same type with the same message are equal (reversed)
ok 357 two errors of different types with the same message are not equal
ok 358 two errors of different types with the same message are not equal (reversed)
ok 359 strict: two errors of different types with the same message are not equal
ok 360 strict: two errors of different types with the same message are not equal (reversed)
ok 361 two errors of the same type with a different message are not equal
ok 362 two errors of the same type with a different message are not equal (reversed)
ok 363 strict: two errors of the same type with a different message are not equal
ok 364 strict: two errors of the same type with a different message are not equal (reversed)
ok 365 two otherwise equal errors with different own properties are not equal
ok 366 two otherwise equal errors with different own properties are not equal (reversed)
ok 367 strict: two otherwise equal errors with different own properties are not equal
ok 368 strict: two otherwise equal errors with different own properties are not equal (reversed)
# errorlike
ok 369 should be falsy
ok 370 should be truthy
ok 371 error, and errorlike object are not equal
ok 372 error, and errorlike object are not equal (reversed)
ok 373 strict: error, and errorlike object are not equal
ok 374 strict: error, and errorlike object are not equal (reversed)
# SKIP fake error
# object and null
ok 375 null and an object are not equal
ok 376 null and an object are not equal (reversed)
ok 377 strict: null and an object are not equal
ok 378 strict: null and an object are not equal (reversed)
# errors
# error = Object
ok 379 false are not equal
ok 380 false are not equal (reversed)
ok 381 strict: false are not equal
ok 382 strict: false are not equal (reversed)
# [[Prototypes]]
ok 383 two identical objects with different [[Prototypes]] are equal
ok 384 two identical objects with different [[Prototypes]] are equal (reversed)
ok 385 strict: two identical objects with different [[Prototypes]] are not equal
ok 386 strict: two identical objects with different [[Prototypes]] are not equal (reversed)
# Dates with different prototypes
ok 387 two dates with the same timestamp are equal
ok 388 two dates with the same timestamp are equal (reversed)
ok 389 strict: two dates with the same timestamp are equal
ok 390 strict: two dates with the same timestamp are equal (reversed)
ok 391 d2 is still a Date instance after tweaking [[Prototype]]
ok 392 two dates with the same timestamp and different [[Prototype]] are equal
ok 393 two dates with the same timestamp and different [[Prototype]] are equal (reversed)
ok 394 strict: two dates with the same timestamp and different [[Prototype]] are not equal
ok 395 strict: two dates with the same timestamp and different [[Prototype]] are not equal (reversed)
# toStringTag
ok 396 o1: Symbol.toStringTag works
ok 397 o2: original Symbol.toStringTag works
ok 398 two normal empty objects are equal
ok 399 two normal empty objects are equal (reversed)
ok 400 strict: two normal empty objects are equal
ok 401 strict: two normal empty objects are equal (reversed)
ok 402 o2: modified Symbol.toStringTag works
ok 403 two normal empty objects with different toStringTags are not equal
ok 404 two normal empty objects with different toStringTags are not equal (reversed)
ok 405 strict: two normal empty objects with different toStringTags are not equal
ok 406 strict: two normal empty objects with different toStringTags are not equal (reversed)
# boxed primitives
ok 407 boxed and primitive `false` are not equal
ok 408 boxed and primitive `false` are not equal (reversed)
ok 409 strict: boxed and primitive `false` are not equal
ok 410 strict: boxed and primitive `false` are not equal (reversed)
ok 411 boxed and primitive `true` are not equal
ok 412 boxed and primitive `true` are not equal (reversed)
ok 413 strict: boxed and primitive `true` are not equal
ok 414 strict: boxed and primitive `true` are not equal (reversed)
ok 415 boxed and primitive `3` are not equal
ok 416 boxed and primitive `3` are not equal (reversed)
ok 417 strict: boxed and primitive `3` are not equal
ok 418 strict: boxed and primitive `3` are not equal (reversed)
ok 419 boxed and primitive `NaN` are not equal
ok 420 boxed and primitive `NaN` are not equal (reversed)
ok 421 strict: boxed and primitive `NaN` are not equal
ok 422 strict: boxed and primitive `NaN` are not equal (reversed)
ok 423 boxed and primitive `""` are not equal
ok 424 boxed and primitive `""` are not equal (reversed)
ok 425 strict: boxed and primitive `""` are not equal
ok 426 strict: boxed and primitive `""` are not equal (reversed)
ok 427 boxed and primitive `"str"` are not equal
ok 428 boxed and primitive `"str"` are not equal (reversed)
ok 429 strict: boxed and primitive `"str"` are not equal
ok 430 strict: boxed and primitive `"str"` are not equal (reversed)
# symbol
ok 431 boxed and primitive `Symbol()` are not equal
ok 432 boxed and primitive `Symbol()` are not equal (reversed)
ok 433 strict: boxed and primitive `Symbol()` are not equal
ok 434 strict: boxed and primitive `Symbol()` are not equal (reversed)
# bigint
ok 435 boxed and primitive `BigInt(42)` are not equal
ok 436 boxed and primitive `BigInt(42)` are not equal (reversed)
ok 437 strict: boxed and primitive `BigInt(42)` are not equal
ok 438 strict: boxed and primitive `BigInt(42)` are not equal (reversed)
# `valueOf` is called for boxed primitives
ok 439 two boxed numbers with a thrower valueOf are not equal
ok 440 two boxed numbers with a thrower valueOf are not equal (reversed)
ok 441 strict: two boxed numbers with a thrower valueOf are not equal
ok 442 strict: two boxed numbers with a thrower valueOf are not equal (reversed)
# getters
ok 443 two objects with the same getter but producing different values are not equal
ok 444 two objects with the same getter but producing different values are not equal (reversed)
ok 445 strict: two objects with the same getter but producing different values are not equal
ok 446 strict: two objects with the same getter but producing different values are not equal (reversed)
# fake arrays: extra keys will be tested
ok 447 fake and real array with same contents and [[Prototype]] are not equal
ok 448 fake and real array with same contents and [[Prototype]] are not equal (reversed)
ok 449 strict: fake and real array with same contents and [[Prototype]] are not equal
ok 450 strict: fake and real array with same contents and [[Prototype]] are not equal (reversed)
ok 451 regex faking as array, and array are not equal
ok 452 regex faking as array, and array are not equal (reversed)
ok 453 strict: regex faking as array, and array are not equal
ok 454 strict: regex faking as array, and array are not equal (reversed)
# circular references
ok 455 two self-referencing objects are equal
ok 456 two self-referencing objects are equal (reversed)
ok 457 strict: two self-referencing objects are equal
ok 458 strict: two self-referencing objects are equal (reversed)
ok 459 two deeply self-referencing objects are not equal
ok 460 two deeply self-referencing objects are not equal (reversed)
ok 461 strict: two deeply self-referencing objects are not equal
ok 462 strict: two deeply self-referencing objects are not equal (reversed)
# TypedArrays
# Buffer faked as Uint8Array
ok 463 Buffer and Uint8Array are not equal
ok 464 Buffer and Uint8Array are not equal (reversed)
ok 465 strict: Buffer and Uint8Array are not equal
ok 466 strict: Buffer and Uint8Array are not equal (reversed)
# one TypedArray faking as another
ok 467 Uint8Array, and Int8Array pretending to be a Uint8Array are not equal
ok 468 Uint8Array, and Int8Array pretending to be a Uint8Array are not equal (reversed)
ok 469 strict: Uint8Array, and Int8Array pretending to be a Uint8Array are not equal
ok 470 strict: Uint8Array, and Int8Array pretending to be a Uint8Array are not equal (reversed)
# ArrayBuffers
ok 471 Int8Arrays of similar ArrayBuffers are equal
ok 472 Int8Arrays of similar ArrayBuffers are equal (reversed)
ok 473 strict: Int8Arrays of similar ArrayBuffers are equal
ok 474 strict: Int8Arrays of similar ArrayBuffers are equal (reversed)
ok 475 similar ArrayBuffers are equal
ok 476 similar ArrayBuffers are equal (reversed)
ok 477 strict: similar ArrayBuffers are equal
ok 478 strict: similar ArrayBuffers are equal (reversed)
ok 479 Int8Arrays of different ArrayBuffers are not equal
ok 480 Int8Arrays of different ArrayBuffers are not equal (reversed)
ok 481 strict: Int8Arrays of different ArrayBuffers are not equal
ok 482 strict: Int8Arrays of different ArrayBuffers are not equal (reversed)
ok 483 different ArrayBuffers are not equal
ok 484 different ArrayBuffers are not equal (reversed)
ok 485 strict: different ArrayBuffers are not equal
ok 486 strict: different ArrayBuffers are not equal (reversed)
# lies about byteLength
ok 487 different-length ArrayBuffers, one lying are not equal
ok 488 different-length ArrayBuffers, one lying are not equal (reversed)
ok 489 strict: different-length ArrayBuffers, one lying are not equal
ok 490 strict: different-length ArrayBuffers, one lying are not equal (reversed)

1..490
# tests 490
# pass  490

# ok


=============================== Coverage summary ===============================
Statements   : 95.71% ( 223/233 )
Branches     : 95.67% ( 221/231 )
Functions    : 100% ( 12/12 )
Lines        : 97.09% ( 200/206 )
================================================================================
-----------|----------|----------|----------|----------|----------------|
File       |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
-----------|----------|----------|----------|----------|----------------|
All files  |    95.71 |    95.67 |      100 |    97.09 |                |
 assert.js |      100 |      100 |      100 |      100 |                |
 index.js  |    95.69 |    95.67 |      100 |    97.07 |... 183,223,270 |
-----------|----------|----------|----------|----------|----------------|

> deep-equal@2.0.5 posttest
> aud --production

found 0 vulnerabilities

=============================== Coverage summary ===============================
Statements   : 95.7% ( 223/233 )
Branches     : 95.67% ( 221/231 )
Functions    : 100% ( 12/12 )
Lines        : 97.08% ( 200/206 )
================================================================================
-----------|---------|----------|---------|---------|----------------------
File       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s    
-----------|---------|----------|---------|---------|----------------------
All files  |    95.7 |    95.67 |     100 |   97.08 |                      
 assert.js |     100 |      100 |     100 |     100 |                      
 index.js  |   95.68 |    95.67 |     100 |   97.07 | 23,70,92,183,223,270 
-----------|---------|----------|---------|---------|----------------------
