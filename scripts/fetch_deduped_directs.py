# This script is to check whether a direct dependencies is dupelicated or not,
# i.e, is a direct dependency as well as an indirect dependency
# The way to check is to compare a direct dependency with the output generated by "npm list", 
# and return the number of the appearance of the dependency. 
# If a direct dependency is "deduped", then we can say that this dependency is also an indirect dependency.

import sys

project = sys.argv[1]
deps_path = f'./Playground/{project}/direct_bloated_deps.txt'
npmlist_path = f'./Playground/{project}/npm_list_output.txt'
with open(npmlist_path, 'r') as npmlist_file:
    file_contents = npmlist_file.read()

print(project + ":\n")

with open(deps_path) as f:
    lines = f.read().splitlines()

for line in lines:
    item = line.split("__")
    dep = item[0] + "@" + item[1]
    occurrences = file_contents.count(dep)
    print(dep + "," + str(occurrences))

