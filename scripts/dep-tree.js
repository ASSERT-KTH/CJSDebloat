const args = process.argv.slice(2)
const folderPath = args[0]
const entryFile = args[1]

let fs = require('fs')
let dependencyTree = require('dependency-tree')
let jsonObj = {}

// fs.writeFileSync(`./${folderPath}/dependency-tree-list.txt`, '')
const bloatedDepsData = fs.readFileSync(`./${folderPath}/indirect_bloated_deps.txt`, 'utf-8')
const bloatedDeps = bloatedDepsData.split('\n')
let tree = dependencyTree({
    filename: `${folderPath}/${entryFile}`,
    directory: `./${folderPath}`
})

// console.log(tree)

function convertDepTree(dataObj) {
    let wrappedTree = {}
    for (let key in dataObj) {
        wrappedTree['path'] = key
        wrappedTree['children'] = []
        const value = dataObj[key]
        wrappedTree['children'] = turnValueToChildren(value, key)
    }
    return wrappedTree
}

function turnValueToChildren(value, parent) {
    let children = []

    for (let key in value) {
        const child = {
            'path': key,
            'parent': parent,
            'children': turnValueToChildren(value[key], key)
        }
        children.push(child)

        // record parents for each json node. 
        // The reason for only recording json is that only json files can not be
        // recognized by unused-files list which is generated by stubbifier, since
        // stubbifier only records js files.
    }
    return children
}

// const result = convertDepTree(tree)

let arr = []
function identifyParentFile(dataObj, depName) {
    if (Object.keys(dataObj).length === 0) return
    for (key in dataObj) {
        // console.log(key)
        children = dataObj[key]
        for (let child in children) {
            // console.log(child)
            if (child.includes(`/node_modules/${depName}/`) && arr.indexOf(key) == -1) {
                arr.push(key)
            }
            identifyParentFile(children, depName)
        }
    }
}

bloatedDeps.forEach(dep => {
    arr = []
    if (dep == "") return
    depName = dep.split('__')[0]
    console.log(depName)

    identifyParentFile(tree, depName)
    console.log(arr)
    jsonObj[depName] = arr
})



let data = JSON.stringify(jsonObj, null, 2)
fs.writeFileSync(`./${folderPath}/dependent-files.json`, data)

// list.forEach(function (file) {
//     file += '\n'
//     fs.appendFileSync(`./${folderPath}/dependency-tree-list.txt`, file)
// })
